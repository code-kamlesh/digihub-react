{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\FundManger.js\";\nimport React, { Component } from 'react';\nimport { Checkbox, InputLabel, Input, Grid, Button } from '@material-ui/core';\nimport { fetchAllStateDetails, fetchCenterByStateName, fetchEmployerDetails, fetchBatchDetails, fetchEnrollmentDetailsByBatchId, getBatchDetailsByBatchIdandFunderId, saveBatchFunderDetails, updateBatchFunderDetails } from './../util/api';\nimport UserContext from '../components/GolbalContext';\nimport { SingleSelect } from \"react-select-material-ui\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport Box from '@material-ui/core/Box';\nimport { data } from 'jquery';\nimport Radio from '@material-ui/core/Radio';\nlet today = new Date();\nlet dd = String(today.getDate()).padStart(2, '0');\nlet mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n\nlet yyyy = today.getFullYear();\nlet hours = String(today.getHours()).padStart(2, '0');\nlet minutes = String(today.getMinutes()).padStart(2, '0');\nlet seconds = String(today.getSeconds()).padStart(2, '0');\ntoday = yyyy + '-' + mm + '-' + dd + ' ' + hours + ':' + minutes + ':' + seconds;\nexport default class FundManger extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      regions: [{\n        value: '1',\n        label: 'All'\n      }, {\n        value: '2',\n        label: 'East'\n      }, {\n        value: '3',\n        label: 'West'\n      }, {\n        value: '4',\n        label: 'North'\n      }, {\n        value: '5',\n        label: 'South'\n      }],\n      statelist: [],\n      centerlist: [],\n      centerId: \"\",\n      funderId: \"\",\n      funderType: \"\",\n      accountStatus: \"Active Partner\",\n      typeOfRelationship: \"%Funding partner%\",\n      funderlist: [],\n      errors: {},\n      tableData: [],\n      centerName: ''\n    };\n    this.arrayTableData = this.arrayTableData.bind(this);\n  } // Module drop down for regions\n\n\n  handleRegionsChange(selectname, event) {\n    console.log(selectname);\n    console.log(event);\n    this.setState({\n      [selectname]: event,\n      errors: { ...this.state.errors,\n        regions: {\n          'label': '',\n          'value': false\n        },\n        statelist: {\n          'label': 'Please select some option',\n          'value': true\n        },\n        centerId: {\n          'label': 'Please select some option',\n          'value': true\n        },\n        funderId: {\n          'label': 'Please select some option',\n          'value': true\n        }\n      }\n    });\n    fetchAllStateDetails().then(jsondata => {\n      let result = JSON.parse(jsondata.data);\n      console.log(result);\n      result.forEach(element => {\n        // console.log(element.name)\n        console.log(element);\n        this.state.statelist.push({\n          \"value\": element.name,\n          \"label\": element.name\n        });\n      });\n    });\n  } // drop down for state\n\n\n  handleStateChange(selectname, event) {\n    console.log(selectname);\n    console.log(event);\n    this.setState({\n      [selectname]: event\n    });\n    fetchCenterByStateName(event).then(jsondata => {\n      let result = JSON.parse(jsondata.data);\n      result.forEach(element => {\n        this.state.centerlist.push({\n          \"value\": element.id,\n          \"label\": element.name\n        });\n      }); // console.log(result)\n    });\n  } // drop down for center name\n\n\n  handleCenterChange(selectname, event) {\n    console.log(selectname);\n    console.log(event);\n    this.setState({\n      [selectname]: event\n    });\n    console.log(this.state.centerlist.label); // Employer api calling to fetch funderlist\n\n    fetchEmployerDetails(this.state.accountStatus, this.state.typeOfRelationship).then(jsondata => {\n      let result = JSON.parse(jsondata.data);\n      console.log(result);\n      result.forEach(element => {\n        this.state.funderlist.push({\n          \"value\": element.id,\n          \"label\": element.accountName\n        });\n      });\n    });\n  } // drop down for funder list\n\n\n  handleFunderChange(selectname, event) {\n    // console.log(selectname)\n    // console.log(event)\n    let funderId = event;\n    this.setState({\n      [selectname]: event\n    });\n    this.arrayTableData(funderId); //  \n  } // Center id is statis i.e 20 for a time being\n\n\n  arrayTableData(funderId) {\n    var tableData = [];\n    fetchBatchDetails(\"20\").then(jsondata => {\n      let result = JSON.parse(jsondata.data); // console.log(result)\n\n      var arrData = {};\n      result.map((element, id) => {\n        // console.log(element)\n        // let date1 = new Date(element.endDate)\n        // let year = date1.getFullYear();\n        // let month = date1.getMonth()\n        // let day = date1.getDay()\n        // console.log(yyyy)\n        // console.log(mm)\n        // console.log(dd)\n        // if((year>= yyyy) && (month >= mm) && (day >= dd) ){\n        arrData = element;\n        tableData = [...tableData, {\n          \"BatchName\": arrData.batchName,\n          \"batchId\": arrData.batchId,\n          \"startDate\": arrData.startDate,\n          \"endDate\": arrData.endDate,\n          \"mapped\": false,\n          \"funderId\": funderId,\n          \"funderName\": \"\",\n          \"creationDate\": \"\",\n          \"createdBy\": \"\",\n          \"trainees\": 0\n        }]; // console.log(tableData)\n        // console.log(arrData.batchId)\n        // }\n        //to get the student Strength present based on the enrollment ID's \n\n        fetchEnrollmentDetailsByBatchId(arrData.batchId).then(jsondata => {\n          let res = JSON.parse(jsondata.data); //console.log(res.length)\n\n          tableData[id].trainees = res.length; //  console.log(tableData[id])\n        }); //for checking if the tableData is mapped \n\n        getBatchDetailsByBatchIdandFunderId(arrData.batchId, funderId, \"Y\", \"P\").then(jsondata => {\n          let res = JSON.parse(jsondata.data);\n          console.log(res);\n        });\n      });\n      this.setState({\n        tableData\n      });\n    });\n    console.log(this.state);\n  } //save batch funder mapping \n\n\n  saveFunderMappingDetails(batchId, funderId, isActive, fundingType, createdBy, createdOn, remarks) {\n    saveBatchFunderDetails(batchId, funderId, isActive, fundingType, createdBy, createdOn, remarks).then(jsondata => {\n      let res = JSON.parse(jsondata.data);\n      console.log(res);\n    });\n  } //update batch funder mapping \n\n\n  updateFunderMappingDetails(id, batchId, funderId, isActive, remarks, updatedOn, updatedBy, fundingType) {\n    updateBatchFunderDetails(id, batchId, funderId, isActive, remarks, updatedOn, updatedBy, fundingType).then(jsondata => {\n      let res = JSON.parse(jsondata.data);\n      console.log(res);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 19\n      }\n    }, \"Regions\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"Selectedregion\",\n      id: \"Selectedregion\",\n      options: this.state.regions,\n      value: this.state.Selectedregion || '',\n      key: this.state.Selectedregion || '',\n      onChange: this.handleRegionsChange.bind(this, 'Selectedregion') // helperText={this.state.errors.centerId != undefined ? this.state.errors.centerId.label : ''}\n      ,\n      error: this.state.errors.Selectedregion != undefined ? this.state.errors.centerId.value : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 19\n      }\n    }, \"State\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"Selectedstate\",\n      id: \"Selectedstate\",\n      key: this.state.Selectedstate || '',\n      options: this.state.statelist,\n      value: this.state.Selectedstate || '',\n      onChange: this.handleStateChange.bind(this, 'Selectedstate') // helperText={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.label : ''}\n      ,\n      error: this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.value : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 13\n      }\n    }, \"Center Name\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"selectedcenter\",\n      id: \"centerId\",\n      options: this.state.centerlist,\n      value: this.state.centerId || '',\n      onChange: this.handleCenterChange.bind(this, 'centerId') // helperText={this.state.errors.centerId != undefined ? this.state.errors.batchId.centerId : ''}\n      ,\n      error: this.state.errors.centerId != undefined ? this.state.errors.centerId.value : '',\n      key: this.state.centerId || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 13\n      }\n    }, \"Funding Partner\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"selectedfunder\",\n      id: \"funderId\",\n      options: this.state.funderlist,\n      value: this.state.funderId || '',\n      onChange: this.handleFunderChange.bind(this, 'funderId') // helperText={this.state.errors.funderId != undefined ? this.state.errors.funderId.label : ''}\n      ,\n      error: this.state.errors.funderId != undefined ? this.state.errors.funderId.value : '' // key={this.state.funderId || ''}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 13\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 13\n      }\n    }, \"Unmapped\"), /*#__PURE__*/React.createElement(Table, {\n      \"aria-label\": \"simple table\",\n      style: {\n        borderBlock: \"10.5px\",\n        borderWidth: \"10px\",\n        marginRight: \"300px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 15\n      }\n    }, \"Center Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 17\n      }\n    }, \"Batch Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }\n    }, \"Start Date\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 17\n      }\n    }, \"End Date\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }\n    }, \"Trainees\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 13\n      }\n    }, this.state.tableData.map((dataValue, id) => /*#__PURE__*/React.createElement(TableRow, {\n      id: \"tablerow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 19\n      }\n    }, \"\\\"Center Name\\\"\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 19\n      }\n    }, dataValue.BatchName), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 19\n      }\n    }, dataValue.startDate), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 19\n      }\n    }, dataValue.endDate), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 19\n      }\n    }, dataValue.trainees), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      disabled: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 32\n      }\n    }, \"Map\"))))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 15\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      disabled: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 15\n      }\n    }, \"Map All\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      disabled: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 15\n      }\n    }, \"Unmap All\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 14\n      }\n    }, \"Mapped\"), /*#__PURE__*/React.createElement(Table, {\n      \"aria-label\": \"simple table\",\n      style: {\n        border: \"2px\",\n        marginRight: \"200px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 15\n      }\n    }, \"Center Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 17\n      }\n    }, \"Batch Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 17\n      }\n    }, \"Start Date\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 17\n      }\n    }, \"End Date\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 17\n      }\n    }, \"Trainees\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 13\n      }\n    }, this.state.tableData.map((dataValue, id) => /*#__PURE__*/React.createElement(TableRow, {\n      id: \"tablerow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 19\n      }\n    }, \"\\\"Center Name\\\"\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 19\n      }\n    }, dataValue.BatchName), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 19\n      }\n    }, dataValue.startDate), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 19\n      }\n    }, dataValue.endDate), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 19\n      }\n    }, dataValue.trainees), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      disabled: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 32\n      }\n    }, \"UnMap\"))))))));\n  }\n\n}","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/FundManger.js"],"names":["React","Component","Checkbox","InputLabel","Input","Grid","Button","fetchAllStateDetails","fetchCenterByStateName","fetchEmployerDetails","fetchBatchDetails","fetchEnrollmentDetailsByBatchId","getBatchDetailsByBatchIdandFunderId","saveBatchFunderDetails","updateBatchFunderDetails","UserContext","SingleSelect","Table","TableBody","TableCell","TableHead","TableRow","Typography","Card","Box","data","Radio","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","FundManger","constructor","props","state","regions","value","label","statelist","centerlist","centerId","funderId","funderType","accountStatus","typeOfRelationship","funderlist","errors","tableData","centerName","arrayTableData","bind","handleRegionsChange","selectname","event","console","log","setState","then","jsondata","result","JSON","parse","forEach","element","push","name","handleStateChange","id","handleCenterChange","accountName","handleFunderChange","arrData","map","batchName","batchId","startDate","endDate","res","trainees","length","saveFunderMappingDetails","isActive","fundingType","createdBy","createdOn","remarks","updateFunderMappingDetails","updatedOn","updatedBy","render","width","Selectedregion","undefined","Selectedstate","borderBlock","borderWidth","marginRight","dataValue","BatchName","border"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport { Checkbox, InputLabel, Input, Grid, Button}  from '@material-ui/core';\r\nimport {fetchAllStateDetails, fetchCenterByStateName, fetchEmployerDetails, fetchBatchDetails, fetchEnrollmentDetailsByBatchId, getBatchDetailsByBatchIdandFunderId, saveBatchFunderDetails, updateBatchFunderDetails} from './../util/api';\r\nimport UserContext from '../components/GolbalContext'\r\nimport { SingleSelect } from \"react-select-material-ui\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport Box from '@material-ui/core/Box';\r\nimport { data } from 'jquery';\r\nimport Radio from '@material-ui/core/Radio';\r\n\r\n\r\nlet today = new Date();\r\nlet dd = String(today.getDate()).padStart(2, '0');\r\nlet mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\nlet yyyy = today.getFullYear();\r\nlet hours = String(today.getHours()).padStart(2, '0');\r\nlet minutes = String(today.getMinutes()).padStart(2, '0');\r\nlet seconds = String(today.getSeconds()).padStart(2, '0');\r\ntoday = yyyy + '-' + mm + '-' + dd + ' ' + hours + ':' + minutes + ':' + seconds;\r\n\r\nexport default class FundManger extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      regions : [{ value: '1', label: 'All' },\r\n      { value: '2', label: 'East' },\r\n      { value: '3', label: 'West' },\r\n      { value: '4', label: 'North' },\r\n      { value: '5', label: 'South' }],\r\n      statelist :[],\r\n      centerlist:[],\r\n      centerId:\"\",\r\n      funderId:\"\",\r\n      funderType: \"\",\r\n      accountStatus:\"Active Partner\",\r\n      typeOfRelationship:\"%Funding partner%\",\r\n      funderlist:[],\r\n      errors: {},\r\n      tableData:[],\r\n      centerName:'',\r\n    };\r\n    this.arrayTableData = this.arrayTableData.bind(this);\r\n  }\r\n\r\n  // Module drop down for regions\r\n\r\n  handleRegionsChange(selectname,event){\r\n    console.log(selectname)\r\n    console.log(event)\r\n    this.setState({\r\n      [selectname]:event,\r\n      errors:{\r\n        ...this.state.errors,\r\n        regions:{\r\n          'label': '',\r\n            'value': false\r\n        },\r\n        statelist:{\r\n          'label': 'Please select some option',\r\n            'value': true\r\n        },\r\n        centerId:{\r\n          'label': 'Please select some option',\r\n            'value': true\r\n        },\r\n        funderId:{\r\n          'label': 'Please select some option',\r\n            'value': true\r\n        }\r\n      }\r\n    })\r\n    fetchAllStateDetails().then(jsondata =>{\r\n      let result = JSON.parse(jsondata.data)\r\n      console.log(result)\r\n      result.forEach(element => {\r\n        // console.log(element.name)\r\n        console.log(element)\r\n        this.state.statelist.push({\r\n          \"value\": element.name,\r\n          \"label\": element.name \r\n        })\r\n      });\r\n    })\r\n  }\r\n\r\n\r\n\r\n// drop down for state\r\nhandleStateChange(selectname,event){\r\n  console.log(selectname)\r\n  console.log(event)\r\n  this.setState({\r\n    [selectname]:event,\r\n  })\r\n  fetchCenterByStateName(event).then(jsondata =>{\r\n    let result = JSON.parse(jsondata.data)\r\n    result.forEach(element =>{\r\n      this.state.centerlist.push({\r\n        \"value\" : element.id,\r\n        \"label\": element.name,\r\n      })\r\n    })\r\n    // console.log(result)\r\n    \r\n  })\r\n}\r\n\r\n// drop down for center name\r\nhandleCenterChange(selectname,event){\r\n  console.log(selectname)\r\n  console.log(event)\r\n  this.setState({\r\n    [selectname]:event,\r\n  })\r\n  console.log( this.state.centerlist.label)\r\n  // Employer api calling to fetch funderlist\r\n  fetchEmployerDetails(this.state.accountStatus,this.state.typeOfRelationship).then(jsondata =>{\r\n    let result = JSON.parse(jsondata.data)\r\n    console.log(result)\r\n    result.forEach(element =>{\r\n      this.state.funderlist.push({\r\n        \"value\": element.id,\r\n        \"label\" : element.accountName\r\n      })\r\n    })\r\n  })\r\n\r\n}\r\n\r\n// drop down for funder list\r\nhandleFunderChange(selectname,event){\r\n  // console.log(selectname)\r\n  // console.log(event)\r\n  let funderId = event;\r\n  this.setState({\r\n    [selectname]:event,\r\n  })\r\n  this.arrayTableData(funderId) //  \r\n}\r\n\r\n  // Center id is statis i.e 20 for a time being\r\n  arrayTableData(funderId){\r\n    var tableData=[]\r\n    fetchBatchDetails(\"20\").then(jsondata =>{\r\n      let result = JSON.parse(jsondata.data)\r\n      // console.log(result)\r\n      var arrData = {}\r\n      result.map((element,id)=>{\r\n        // console.log(element)\r\n        // let date1 = new Date(element.endDate)\r\n        // let year = date1.getFullYear();\r\n        // let month = date1.getMonth()\r\n        // let day = date1.getDay()\r\n        // console.log(yyyy)\r\n        // console.log(mm)\r\n        // console.log(dd)\r\n        // if((year>= yyyy) && (month >= mm) && (day >= dd) ){\r\n          arrData = element\r\n          tableData=[\r\n            ...tableData,\r\n            {\r\n              \"BatchName\":arrData.batchName,\r\n              \"batchId\":arrData.batchId,\r\n              \"startDate\":arrData.startDate,\r\n              \"endDate\": arrData.endDate,\r\n              \"mapped\": false,\r\n              \"funderId\": funderId,\r\n              \"funderName\" : \"\",\r\n              \"creationDate\" : \"\",\r\n              \"createdBy\" : \"\",\r\n              \"trainees\" : 0,\r\n            }]\r\n            // console.log(tableData)\r\n            // console.log(arrData.batchId)\r\n        // }\r\n        //to get the student Strength present based on the enrollment ID's \r\n        fetchEnrollmentDetailsByBatchId(arrData.batchId).then((jsondata)  =>{\r\n           let res = JSON.parse(jsondata.data)\r\n           //console.log(res.length)\r\n           tableData[id].trainees = res.length\r\n          //  console.log(tableData[id])\r\n        })\r\n        //for checking if the tableData is mapped \r\n        getBatchDetailsByBatchIdandFunderId(arrData.batchId, funderId, \"Y\", \"P\").then((jsondata)=>{\r\n          let res = JSON.parse(jsondata.data)\r\n          console.log(res)  \r\n        })\r\n\r\n      })\r\n      this.setState({tableData});\r\n    })\r\n    console.log(this.state)\r\n  }\r\n\r\n\r\n//save batch funder mapping \r\nsaveFunderMappingDetails(batchId, funderId, isActive, fundingType, createdBy, createdOn, remarks){\r\n    saveBatchFunderDetails(batchId, funderId, isActive, fundingType, createdBy, createdOn, remarks).then((jsondata)=>{\r\n      let res = JSON.parse(jsondata.data)\r\n      console.log(res)\r\n    })\r\n}\r\n\r\n//update batch funder mapping \r\nupdateFunderMappingDetails(id, batchId, funderId, isActive, remarks, updatedOn, updatedBy, fundingType){\r\n  updateBatchFunderDetails(id, batchId, funderId, isActive, remarks, updatedOn, updatedBy, fundingType).then((jsondata)=>{\r\n    let res = JSON.parse(jsondata.data)\r\n    console.log(res)\r\n  })\r\n}\r\n\r\n  render(){\r\n    return(\r\n      <div style = {{ width : '100%' }}>\r\n         <Grid container>\r\n        <Grid item xs={12}> </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n                  <InputLabel shrink={true} >Regions</InputLabel>\r\n                  <SingleSelect \r\n                    name=\"Selectedregion\" id=\"Selectedregion\"\r\n                    options={this.state.regions}\r\n                    value={this.state.Selectedregion || '' }\r\n                    key={this.state.Selectedregion || ''}\r\n                    onChange={this.handleRegionsChange.bind(this, 'Selectedregion')}\r\n                    // helperText={this.state.errors.centerId != undefined ? this.state.errors.centerId.label : ''}\r\n                    error={this.state.errors.Selectedregion != undefined ? this.state.errors.centerId.value : ''}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={2}></Grid>\r\n\r\n\r\n             <Grid item xs={12} sm={4}>\r\n                  <InputLabel shrink={true} >State</InputLabel>\r\n                  <SingleSelect \r\n                    name=\"Selectedstate\" id=\"Selectedstate\"\r\n                    key={this.state.Selectedstate || ''}\r\n                    options={this.state.statelist}\r\n                    value={this.state.Selectedstate || '' }\r\n                    onChange={this.handleStateChange.bind(this, 'Selectedstate')}\r\n                    // helperText={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.label : ''}\r\n                    error={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.value : ''}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <br />\r\n         <Grid container>\r\n        <Grid item xs={12}> </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} >Center Name</InputLabel>\r\n              <SingleSelect \r\n                    name=\"selectedcenter\" id=\"centerId\"\r\n                    options={this.state.centerlist}\r\n                    value={this.state.centerId || '' }\r\n                    onChange={this.handleCenterChange.bind(this, 'centerId')}\r\n                    // helperText={this.state.errors.centerId != undefined ? this.state.errors.batchId.centerId : ''}\r\n                    error={this.state.errors.centerId != undefined ? this.state.errors.centerId.value : ''}\r\n                    key={this.state.centerId || ''}\r\n                    />\r\n            </Grid> \r\n\r\n                <Grid item xs={12} sm={2}></Grid>\r\n                <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} >Funding Partner</InputLabel>\r\n              <SingleSelect \r\n                    name=\"selectedfunder\" id=\"funderId\"\r\n                    options={this.state.funderlist}\r\n                    value={this.state.funderId || '' }\r\n                    onChange={this.handleFunderChange.bind(this, 'funderId')}\r\n                    // helperText={this.state.errors.funderId != undefined ? this.state.errors.funderId.label : ''}\r\n                    error={this.state.errors.funderId != undefined ? this.state.errors.funderId.value : ''}\r\n                    // key={this.state.funderId || ''}\r\n                    />\r\n            </Grid>\r\n            \r\n            </Grid>\r\n            <br /> \r\n            <br />\r\n            {/* <Radio\r\n                checked={this.state.funderType === 'P'}\r\n                onChange={handleChange}\r\n                value=\"P\"\r\n                name=\"radio-button-demo\"\r\n                inputProps={{ 'aria-label': 'A' }}\r\n            />\r\n\r\n        <Radio\r\n            checked={selectedValue === 'a'}\r\n            onChange={handleChange}\r\n            value=\"a\"\r\n            name=\"radio-button-demo\"\r\n            inputProps={{ 'aria-label': 'A' }}\r\n        /> */}\r\n            \r\n            <Grid container>\r\n            <Grid item xs={12}> </Grid>\r\n            \r\n            {/* <Card style={{width:\"300px\"}}>\r\n              <Box border={1} borderRadius=\"1.75%\"> */}\r\n            {/* <Grid item xs={12} sm={3}> */}\r\n            <h6>Unmapped</h6>\r\n            <Table aria-label=\"simple table\" style={{borderBlock:\"10.5px\",borderWidth:\"10px\", marginRight:\"300px\"}}>\r\n            <TableHead>\r\n              \r\n              <TableRow>\r\n              <TableCell>Center Name</TableCell>\r\n                <TableCell>Batch Name</TableCell>\r\n                <TableCell>Start Date</TableCell>\r\n                <TableCell>End Date</TableCell>\r\n                <TableCell>Trainees</TableCell>\r\n                \r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n            {this.state.tableData.map((dataValue, id) => (\r\n                <TableRow id=\"tablerow\">\r\n                  <TableCell>\"Center Name\"</TableCell>\r\n                  <TableCell>{dataValue.BatchName}</TableCell>\r\n                  <TableCell>{dataValue.startDate}</TableCell>\r\n                  <TableCell>{dataValue.endDate}</TableCell>\r\n                  <TableCell>{dataValue.trainees}</TableCell>\r\n                  <TableCell>{ <Button variant=\"contained\" color=\"primary\" disabled={false} >Map</Button> }</TableCell>\r\n            </TableRow>))}\r\n            </TableBody>\r\n              </ Table>\r\n              </Grid>\r\n              <br /> <br />\r\n              <Grid container>\r\n              <Grid item xs={4}>\r\n              <Button variant=\"contained\" color=\"primary\" disabled={false}>Map All</Button>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n              <Button variant=\"contained\" color=\"primary\" disabled={false}>Unmap All</Button>\r\n                </Grid>\r\n              </Grid>\r\n              <br /><br />\r\n              {/* </Box>\r\n              </Card> */}\r\n            <Grid container>\r\n            <Grid item xs={12}></Grid>\r\n{/*              \r\n            <Card style={{width:\"300px\" ,marginLeft:\"10px\"}} >\r\n            <Box border={1} borderRadius=\"1.75%\"> */}\r\n             {/* <Grid item xs={12} sm={3}> */}\r\n             <h6>Mapped</h6>\r\n            {/* <Typography  variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          Mapped Batches\r\n        </Typography> */}\r\n            <Table aria-label=\"simple table\"style={{border:\"2px\", marginRight:\"200px\"}}>\r\n            <TableHead>\r\n              <TableRow>\r\n              <TableCell>Center Name</TableCell>\r\n                <TableCell>Batch Name</TableCell>\r\n                <TableCell>Start Date</TableCell>\r\n                <TableCell>End Date</TableCell>\r\n                <TableCell>Trainees</TableCell>\r\n                \r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n            {this.state.tableData.map((dataValue, id) => (\r\n                <TableRow id=\"tablerow\">\r\n                  <TableCell>\"Center Name\"</TableCell>\r\n                  <TableCell>{dataValue.BatchName}</TableCell>\r\n                  <TableCell>{dataValue.startDate}</TableCell>\r\n                  <TableCell>{dataValue.endDate}</TableCell>\r\n                  <TableCell>{dataValue.trainees}</TableCell>\r\n                  <TableCell>{ <Button variant=\"contained\" color=\"primary\" disabled={false} >UnMap</Button> }</TableCell>\r\n            </TableRow>))}\r\n            </TableBody>\r\n              </ Table>\r\n             {/* </Grid> */}\r\n             {/* </Box>  \r\n              </Card> */}\r\n            </Grid>\r\n            \r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}