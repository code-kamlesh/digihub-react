{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\FundManger.js\";\nimport React, { Component } from 'react';\nimport { Checkbox, InputLabel, Input, Grid, Button } from '@material-ui/core';\nimport { fetchAllStateDetails, fetchCenterByStateName, fetchEmployerDetails, fetchBatchDetails, fetchEnrollmentDetailsByBatchId, getBatchDetailsByBatchIdandFunderId, saveBatchFunderDetails, updateBatchFunderDetails } from './../util/api';\nimport UserContext from '../components/GolbalContext';\nimport { SingleSelect } from \"react-select-material-ui\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport Box from '@material-ui/core/Box';\nimport { data } from 'jquery';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nlet today = new Date();\nlet dd = String(today.getDate()).padStart(2, '0');\nlet mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n\nlet yyyy = today.getFullYear();\nlet hours = String(today.getHours()).padStart(2, '0');\nlet minutes = String(today.getMinutes()).padStart(2, '0');\nlet seconds = String(today.getSeconds()).padStart(2, '0');\ntoday = yyyy + '-' + mm + '-' + dd + ' ' + hours + ':' + minutes + ':' + seconds;\nexport default class FundManeger extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      regions: [{\n        value: '1',\n        label: 'All'\n      }, {\n        value: '2',\n        label: 'East'\n      }, {\n        value: '3',\n        label: 'West'\n      }, {\n        value: '4',\n        label: 'North'\n      }, {\n        value: '5',\n        label: 'South'\n      }],\n      statelist: [],\n      centerlist: [],\n      centerId: \"\",\n      funderId: \"\",\n      funderType: \"P\",\n      funderName: \"\",\n      accountStatus: \"Active Partner\",\n      typeOfRelationship: \"%Funding partner%\",\n      funderlist: [],\n      errors: {},\n      tableData: [],\n      centerName: ''\n    };\n    this.arrayTableData = this.arrayTableData.bind(this); // this.mapAllFunction = this.mapAllFunction.bind(this);\n    // this.unMapAllFunction = this.unMapAllFunction.bind(this);\n    //  this.handleRadioChange = this.handleRadioChange.bind(this);\n  } // Module drop down for regions\n\n\n  handleRegionsChange(selectname, event) {\n    console.log(selectname);\n    console.log(event);\n    this.setState({\n      [selectname]: event,\n      errors: { ...this.state.errors,\n        regions: {\n          'label': '',\n          'value': false\n        },\n        statelist: {\n          'label': 'Please select some option',\n          'value': true\n        },\n        centerId: {\n          'label': 'Please select some option',\n          'value': true\n        },\n        funderId: {\n          'label': 'Please select some option',\n          'value': true\n        }\n      }\n    });\n    fetchAllStateDetails().then(jsondata => {\n      let result = JSON.parse(jsondata.data);\n      console.log(result);\n      result.forEach(element => {\n        // console.log(element.name)\n        console.log(element);\n        this.state.statelist.push({\n          \"value\": element.name,\n          \"label\": element.name\n        });\n      });\n    });\n  } // drop down for state\n\n\n  handleStateChange(selectname, event) {\n    console.log(selectname);\n    console.log(event);\n    this.setState({\n      [selectname]: event\n    });\n    fetchCenterByStateName(event).then(jsondata => {\n      let result = JSON.parse(jsondata.data);\n      result.forEach(element => {\n        this.state.centerlist.push({\n          \"value\": element.id,\n          \"label\": element.name\n        });\n      }); // console.log(result)\n    });\n  } // drop down for center name\n\n\n  handleCenterChange(selectname, event) {\n    console.log(selectname);\n    console.log(event);\n    this.setState({\n      [selectname]: event\n    });\n    console.log(this.state.centerlist.label); // Employer api calling to fetch funderlist\n\n    fetchEmployerDetails(this.state.accountStatus, this.state.typeOfRelationship).then(jsondata => {\n      let result = JSON.parse(jsondata.data);\n      console.log(result);\n      result.forEach(element => {\n        this.state.funderlist.push({\n          \"value\": element.id,\n          \"label\": element.accountName\n        });\n      });\n    });\n  } // drop down for funder list\n\n\n  handleFunderChange(selectname, event) {\n    console.log(selectname);\n    console.log(event);\n    let funderId = event;\n    let index = this.state.funderlist.findIndex(object => object.value == funderId);\n    let funderName = this.state.funderlist[index].label; // console.log(this.state.funderlist[index].label)\n\n    this.setState({\n      [selectname]: event,\n      funderName\n    });\n    this.arrayTableData(funderId, funderName);\n  }\n\n  handleRadioChange(event) {\n    let value = event.target.value;\n    this.setState({\n      funderType: value\n    });\n  } // Center id is statis i.e 20 for a time being\n\n\n  arrayTableData(funderId, funderName) {\n    var tableData = [];\n    fetchBatchDetails(\"20\").then(jsondata => {\n      let result = JSON.parse(jsondata.data); // console.log(result)\n\n      var arrData = {};\n      result.map((element, id) => {\n        arrData = element;\n        tableData = [...tableData, {\n          \"BatchName\": arrData.batchName,\n          \"batchId\": arrData.batchId,\n          \"funderName\": funderName,\n          \"startDate\": arrData.startDate,\n          \"endDate\": arrData.endDate,\n          \"mapped\": false,\n          \"funderId\": funderId,\n          \"trainees\": 0,\n          \"id\": \"\",\n          \"isActive\": \"\",\n          \"fundingType\": \"\",\n          \"remarks\": \"\"\n        }]; //to get the student Strength present based on the enrollment ID's \n\n        fetchEnrollmentDetailsByBatchId(arrData.batchId).then(jsondata => {\n          let res = JSON.parse(jsondata.data);\n          tableData[id].trainees = res.length;\n        });\n        this.setState({\n          tableData\n        }); //for checking if the tableData is mapped\n\n        getBatchDetailsByBatchIdandFunderId(arrData.batchId, funderId, \"Y\", \"P\").then(jsondata => {\n          let res = JSON.parse(jsondata.data);\n\n          if (res[0].length > 0) {\n            tableData[id].id = res[0][0].id;\n            tableData[id].isActive = res[0][0].isActive;\n            tableData[id].fundingType = res[0][0].fundingType;\n            tableData[id].remarks = res[0][0].remarks;\n            tableData[id].mapped = true;\n          }\n        });\n        console.log(tableData);\n      });\n      this.setState({\n        tableData\n      });\n    });\n    console.log(this.state);\n  }\n\n  mapAllFunction() {\n    this.state.tableData.map((data, id) => {\n      console.log(data);\n      console.log(id);\n    });\n  }\n\n  unMapAllFunction() {\n    this.state.tableData.map((data, id) => {\n      console.log(data);\n      console.log(id);\n    });\n  } //save batch funder mapping \n\n\n  saveFunderMappingDetails(batchId, funderId, isActive, fundingType, createdBy, createdOn, remarks) {\n    saveBatchFunderDetails(batchId, funderId, isActive, fundingType, createdBy, createdOn, remarks).then(jsondata => {\n      let res = JSON.parse(jsondata.data);\n      console.log(res);\n    });\n  } //update batch funder mapping \n\n\n  updateFunderMappingDetails(id, batchId, funderId, isActive, remarks, updatedOn, updatedBy, fundingType) {\n    updateBatchFunderDetails(id, batchId, funderId, isActive, remarks, updatedOn, updatedBy, fundingType).then(jsondata => {\n      let res = JSON.parse(jsondata.data);\n      console.log(res);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 13\n      }\n    }, \"Regions\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"Selectedregion\",\n      id: \"Selectedregion\",\n      options: this.state.regions,\n      value: this.state.Selectedregion || '',\n      key: this.state.Selectedregion || '',\n      onChange: this.handleRegionsChange.bind(this, 'Selectedregion') // helperText={this.state.errors.centerId != undefined ? this.state.errors.centerId.label : ''}\n      ,\n      error: this.state.errors.Selectedregion != undefined ? this.state.errors.centerId.value : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 13\n      }\n    }, \"State\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"Selectedstate\",\n      id: \"Selectedstate\",\n      key: this.state.Selectedstate || '',\n      options: this.state.statelist,\n      value: this.state.Selectedstate || '',\n      onChange: this.handleStateChange.bind(this, 'Selectedstate') // helperText={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.label : ''}\n      ,\n      error: this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.value : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 13\n      }\n    }, \"Center Name\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"selectedcenter\",\n      id: \"centerId\",\n      options: this.state.centerlist,\n      value: this.state.centerId || '',\n      onChange: this.handleCenterChange.bind(this, 'centerId') // helperText={this.state.errors.centerId != undefined ? this.state.errors.batchId.centerId : ''}\n      ,\n      error: this.state.errors.centerId != undefined ? this.state.errors.centerId.value : '',\n      key: this.state.centerId || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 13\n      }\n    }, \"Funding Partner\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"selectedfunder\",\n      id: \"funderId\",\n      options: this.state.funderlist,\n      value: this.state.funderId || '',\n      onChange: this.handleFunderChange.bind(this, 'funderId') // helperText={this.state.errors.funderId != undefined ? this.state.errors.funderId.label : ''}\n      ,\n      error: this.state.errors.funderId != undefined ? this.state.errors.funderId.value : '' // key={this.state.funderId || ''}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(InputLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }\n    }, \"Funding Type\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      onChange: this.handleRadioChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      value: \"P\",\n      name: \"funderType\",\n      checked: this.state.funderType === \"P\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }\n    }), \" Primary \\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      value: \"S\",\n      name: \"funderType\",\n      checked: this.state.funderType === \"S\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }\n    }), \" Secondary\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }\n    }, \"Unmapped\"), /*#__PURE__*/React.createElement(Table, {\n      \"aria-label\": \"simple table\",\n      style: {\n        borderBlock: \"10.5px\",\n        borderWidth: \"10px\",\n        marginRight: \"300px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 17\n      }\n    }, \"Center Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 17\n      }\n    }, \"Batch Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }\n    }, \"Start Date\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 17\n      }\n    }, \"End Date\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 17\n      }\n    }, \"Trainees\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 13\n      }\n    }, this.state.tableData.map((dataValue, id) => /*#__PURE__*/React.createElement(TableRow, {\n      id: \"tablerow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 19\n      }\n    }, dataValue.mapped ? this.state.funderName : ''), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 19\n      }\n    }, dataValue.mapped ? dataValue.BatchName : ''), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 19\n      }\n    }, dataValue.mapped ? dataValue.startDate : ''), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 19\n      }\n    }, dataValue.mapped ? dataValue.endDate : ''), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 19\n      }\n    }, dataValue.mapped ? dataValue.trainees : ''), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      disabled: dataValue.mapped ? false : true,\n      onClick: this.saveFunderMappingDetails(dataValue.batchId, dataValue.funderId, \"Y\", this.state.funderType, UserContext.userid, today, ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 32\n      }\n    }, \" unmap \"))))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      disabled: false,\n      onClick: this,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 13\n      }\n    }, \"Map All\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      disabled: false,\n      onClick: this,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 13\n      }\n    }, \"Unmap All\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 11\n      }\n    }, \"Mapped\"), /*#__PURE__*/React.createElement(Table, {\n      \"aria-label\": \"simple table\",\n      style: {\n        border: \"2px\",\n        marginRight: \"200px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 17\n      }\n    }, \"Center Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 17\n      }\n    }, \"Batch Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 17\n      }\n    }, \"Start Date\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 17\n      }\n    }, \"End Date\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 17\n      }\n    }, \"Trainees\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 13\n      }\n    }, this.state.tableData.map((dataValue, id) => /*#__PURE__*/React.createElement(TableRow, {\n      id: \"tablerow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 19\n      }\n    }, dataValue.mapped ? '' : this.state.funderName), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 19\n      }\n    }, dataValue.mapped ? '' : dataValue.BatchName), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 19\n      }\n    }, dataValue.mapped ? '' : dataValue.startDate), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 19\n      }\n    }, dataValue.mapped ? '' : dataValue.endDate), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 19\n      }\n    }, dataValue.mapped ? '' : dataValue.trainees), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      disabled: dataValue.mapped ? true : false,\n      onClick: this.updateFunderMappingDetails(dataValue.id, dataValue.batchId, dataValue.funderId, \"N\", '', today, UserContext.userid, this.state.funderType),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 32\n      }\n    }, \" map \"))))))));\n  }\n\n}","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/FundManger.js"],"names":["React","Component","Checkbox","InputLabel","Input","Grid","Button","fetchAllStateDetails","fetchCenterByStateName","fetchEmployerDetails","fetchBatchDetails","fetchEnrollmentDetailsByBatchId","getBatchDetailsByBatchIdandFunderId","saveBatchFunderDetails","updateBatchFunderDetails","UserContext","SingleSelect","Table","TableBody","TableCell","TableHead","TableRow","Typography","Card","Box","data","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","FundManeger","constructor","props","state","regions","value","label","statelist","centerlist","centerId","funderId","funderType","funderName","accountStatus","typeOfRelationship","funderlist","errors","tableData","centerName","arrayTableData","bind","handleRegionsChange","selectname","event","console","log","setState","then","jsondata","result","JSON","parse","forEach","element","push","name","handleStateChange","id","handleCenterChange","accountName","handleFunderChange","index","findIndex","object","handleRadioChange","target","arrData","map","batchName","batchId","startDate","endDate","res","trainees","length","isActive","fundingType","remarks","mapped","mapAllFunction","unMapAllFunction","saveFunderMappingDetails","createdBy","createdOn","updateFunderMappingDetails","updatedOn","updatedBy","render","width","Selectedregion","undefined","Selectedstate","borderBlock","borderWidth","marginRight","dataValue","BatchName","userid","border"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Checkbox, InputLabel, Input, Grid, Button } from '@material-ui/core';\r\nimport { fetchAllStateDetails, fetchCenterByStateName, fetchEmployerDetails, fetchBatchDetails, fetchEnrollmentDetailsByBatchId, getBatchDetailsByBatchIdandFunderId, saveBatchFunderDetails, updateBatchFunderDetails } from './../util/api';\r\nimport UserContext from '../components/GolbalContext'\r\nimport { SingleSelect } from \"react-select-material-ui\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport Box from '@material-ui/core/Box';\r\nimport { data } from 'jquery';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nlet today = new Date();\r\nlet dd = String(today.getDate()).padStart(2, '0');\r\nlet mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\nlet yyyy = today.getFullYear();\r\nlet hours = String(today.getHours()).padStart(2, '0');\r\nlet minutes = String(today.getMinutes()).padStart(2, '0');\r\nlet seconds = String(today.getSeconds()).padStart(2, '0');\r\ntoday = yyyy + '-' + mm + '-' + dd + ' ' + hours + ':' + minutes + ':' + seconds;\r\n\r\nexport default class FundManeger extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      regions: [{ value: '1', label: 'All' },\r\n      { value: '2', label: 'East' },\r\n      { value: '3', label: 'West' },\r\n      { value: '4', label: 'North' },\r\n      { value: '5', label: 'South' }],\r\n      statelist: [],\r\n      centerlist: [],\r\n      centerId: \"\",\r\n      funderId: \"\",\r\n      funderType: \"P\",\r\n      funderName: \"\",\r\n      accountStatus: \"Active Partner\",\r\n      typeOfRelationship: \"%Funding partner%\",\r\n      funderlist: [],\r\n      errors: {},\r\n      tableData: [],\r\n      centerName: '',\r\n    };\r\n    this.arrayTableData = this.arrayTableData.bind(this);\r\n    // this.mapAllFunction = this.mapAllFunction.bind(this);\r\n    // this.unMapAllFunction = this.unMapAllFunction.bind(this);\r\n    //  this.handleRadioChange = this.handleRadioChange.bind(this);\r\n  }\r\n\r\n  // Module drop down for regions\r\n\r\n  handleRegionsChange(selectname, event) {\r\n    console.log(selectname)\r\n    console.log(event)\r\n    this.setState({\r\n      [selectname]: event,\r\n      errors: {\r\n        ...this.state.errors,\r\n        regions: {\r\n          'label': '',\r\n          'value': false\r\n        },\r\n        statelist: {\r\n          'label': 'Please select some option',\r\n          'value': true\r\n        },\r\n        centerId: {\r\n          'label': 'Please select some option',\r\n          'value': true\r\n        },\r\n        funderId: {\r\n          'label': 'Please select some option',\r\n          'value': true\r\n        }\r\n      }\r\n    })\r\n    fetchAllStateDetails().then(jsondata => {\r\n      let result = JSON.parse(jsondata.data)\r\n      console.log(result)\r\n      result.forEach(element => {\r\n        // console.log(element.name)\r\n        console.log(element)\r\n        this.state.statelist.push({\r\n          \"value\": element.name,\r\n          \"label\": element.name\r\n        })\r\n      });\r\n    })\r\n  }\r\n\r\n\r\n\r\n  // drop down for state\r\n  handleStateChange(selectname, event) {\r\n    console.log(selectname)\r\n    console.log(event)\r\n    this.setState({\r\n      [selectname]: event,\r\n    })\r\n    fetchCenterByStateName(event).then(jsondata => {\r\n      let result = JSON.parse(jsondata.data)\r\n      result.forEach(element => {\r\n        this.state.centerlist.push({\r\n          \"value\": element.id,\r\n          \"label\": element.name,\r\n        })\r\n      })\r\n      // console.log(result)\r\n\r\n    })\r\n  }\r\n\r\n  // drop down for center name\r\n  handleCenterChange(selectname, event) {\r\n    console.log(selectname)\r\n    console.log(event)\r\n    this.setState({\r\n      [selectname]: event,\r\n    })\r\n    console.log(this.state.centerlist.label)\r\n    // Employer api calling to fetch funderlist\r\n    fetchEmployerDetails(this.state.accountStatus, this.state.typeOfRelationship).then(jsondata => {\r\n      let result = JSON.parse(jsondata.data)\r\n      console.log(result)\r\n      result.forEach(element => {\r\n        this.state.funderlist.push({\r\n          \"value\": element.id,\r\n          \"label\": element.accountName\r\n        })\r\n      })\r\n    })\r\n\r\n  }\r\n\r\n  // drop down for funder list\r\n  handleFunderChange(selectname, event) {\r\n    console.log(selectname)\r\n    console.log(event)\r\n    let funderId = event;\r\n    let index = this.state.funderlist.findIndex((object)=> object.value == funderId)\r\n    let funderName = this.state.funderlist[index].label\r\n    // console.log(this.state.funderlist[index].label)\r\n    this.setState({\r\n      [selectname]: event,\r\n      funderName\r\n    })\r\n    this.arrayTableData(funderId, funderName)   \r\n  }\r\n\r\n  handleRadioChange(event){\r\n    let value = event.target.value\r\n       this.setState({ funderType : value });\r\n  }\r\n\r\n  // Center id is statis i.e 20 for a time being\r\n  arrayTableData(funderId, funderName) {\r\n    var tableData = []\r\n    fetchBatchDetails(\"20\").then(jsondata => {\r\n      let result = JSON.parse(jsondata.data)\r\n      // console.log(result)\r\n      var arrData = {}\r\n      result.map((element, id) => {\r\n        arrData = element\r\n        tableData = [\r\n          ...tableData,\r\n          {\r\n            \"BatchName\": arrData.batchName,\r\n            \"batchId\": arrData.batchId,\r\n            \"funderName\": funderName,\r\n            \"startDate\": arrData.startDate,\r\n            \"endDate\": arrData.endDate,\r\n            \"mapped\": false,\r\n            \"funderId\": funderId,\r\n            \"trainees\": 0,\r\n            \"id\": \"\",\r\n            \"isActive\": \"\",\r\n            \"fundingType\": \"\",\r\n            \"remarks\": \"\",\r\n          }]\r\n          \r\n        //to get the student Strength present based on the enrollment ID's \r\n        fetchEnrollmentDetailsByBatchId(arrData.batchId).then((jsondata) => {\r\n          let res = JSON.parse(jsondata.data)\r\n          tableData[id].trainees = res.length\r\n        })\r\n        this.setState({tableData})\r\n        //for checking if the tableData is mapped\r\n        getBatchDetailsByBatchIdandFunderId(arrData.batchId, funderId, \"Y\", \"P\").then((jsondata) => {\r\n          let res = JSON.parse(jsondata.data)\r\n          if (res[0].length > 0) {\r\n            tableData[id].id = res[0][0].id\r\n            tableData[id].isActive = res[0][0].isActive\r\n            tableData[id].fundingType = res[0][0].fundingType\r\n            tableData[id].remarks = res[0][0].remarks\r\n            tableData[id].mapped = true\r\n          }\r\n        })\r\n        console.log(tableData)\r\n      })\r\n      this.setState({ tableData });\r\n    })\r\n    console.log(this.state)\r\n  }\r\n\r\n  mapAllFunction(){\r\n      this.state.tableData.map((data, id)=>{\r\n        console.log(data)\r\n        console.log(id)\r\n      })\r\n  }\r\n\r\n  unMapAllFunction(){\r\n       this.state.tableData.map((data, id)=>{\r\n        console.log(data)\r\n        console.log(id)\r\n      })\r\n  }\r\n\r\n  //save batch funder mapping \r\n  saveFunderMappingDetails(batchId, funderId, isActive, fundingType, createdBy, createdOn, remarks) {\r\n    saveBatchFunderDetails(batchId, funderId, isActive, fundingType, createdBy, createdOn, remarks).then((jsondata) => {\r\n      let res = JSON.parse(jsondata.data)\r\n      console.log(res)\r\n    })\r\n  }\r\n\r\n  //update batch funder mapping \r\n  updateFunderMappingDetails(id, batchId, funderId, isActive, remarks, updatedOn, updatedBy, fundingType) {\r\n    updateBatchFunderDetails(id, batchId, funderId, isActive, remarks, updatedOn, updatedBy, fundingType).then((jsondata) => {\r\n      let res = JSON.parse(jsondata.data)\r\n      console.log(res)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ width: '100%' }}>\r\n        <Grid container>\r\n          <Grid item xs={12}> </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} >Regions</InputLabel>\r\n            <SingleSelect\r\n              name=\"Selectedregion\" id=\"Selectedregion\"\r\n              options={this.state.regions}\r\n              value={this.state.Selectedregion || ''}\r\n              key={this.state.Selectedregion || ''}\r\n              onChange={this.handleRegionsChange.bind(this, 'Selectedregion')}\r\n              // helperText={this.state.errors.centerId != undefined ? this.state.errors.centerId.label : ''}\r\n              error={this.state.errors.Selectedregion != undefined ? this.state.errors.centerId.value : ''}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={2}></Grid>\r\n\r\n\r\n          <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} >State</InputLabel>\r\n            <SingleSelect\r\n              name=\"Selectedstate\" id=\"Selectedstate\"\r\n              key={this.state.Selectedstate || ''}\r\n              options={this.state.statelist}\r\n              value={this.state.Selectedstate || ''}\r\n              onChange={this.handleStateChange.bind(this, 'Selectedstate')}\r\n              // helperText={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.label : ''}\r\n              error={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.value : ''}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <br />\r\n        <Grid container>\r\n          <Grid item xs={12}> </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} >Center Name</InputLabel>\r\n            <SingleSelect\r\n              name=\"selectedcenter\" id=\"centerId\"\r\n              options={this.state.centerlist}\r\n              value={this.state.centerId || ''}\r\n              onChange={this.handleCenterChange.bind(this, 'centerId')}\r\n              // helperText={this.state.errors.centerId != undefined ? this.state.errors.batchId.centerId : ''}\r\n              error={this.state.errors.centerId != undefined ? this.state.errors.centerId.value : ''}\r\n              key={this.state.centerId || ''}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={2}></Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} >Funding Partner</InputLabel>\r\n            <SingleSelect\r\n              name=\"selectedfunder\" id=\"funderId\"\r\n              options={this.state.funderlist}\r\n              value={this.state.funderId || ''}\r\n              onChange={this.handleFunderChange.bind(this, 'funderId')}\r\n              // helperText={this.state.errors.funderId != undefined ? this.state.errors.funderId.label : ''}\r\n              error={this.state.errors.funderId != undefined ? this.state.errors.funderId.value : ''}\r\n            // key={this.state.funderId || ''}\r\n            />\r\n          </Grid>\r\n\r\n        </Grid>\r\n        <br />\r\n        <br />\r\n        <InputLabel>Funding Type</InputLabel>\r\n        <br />\r\n        <div onChange={this.handleRadioChange.bind(this)}>\r\n          <input type=\"radio\" value=\"P\" name=\"funderType\" checked={this.state.funderType === \"P\"}/> Primary\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <input type=\"radio\" value=\"S\" name=\"funderType\" checked={this.state.funderType === \"S\"}/> Secondary\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <Grid container>\r\n          <Grid item xs={12}> </Grid>\r\n\r\n          {/* <Card style={{width:\"300px\"}}>\r\n              <Box border={1} borderRadius=\"1.75%\"> */}\r\n          {/* <Grid item xs={12} sm={3}> */}\r\n          <h6>Unmapped</h6>\r\n          <Table aria-label=\"simple table\" style={{ borderBlock: \"10.5px\", borderWidth: \"10px\", marginRight: \"300px\" }}>\r\n            <TableHead>\r\n\r\n              <TableRow>\r\n                <TableCell>Center Name</TableCell>\r\n                <TableCell>Batch Name</TableCell>\r\n                <TableCell>Start Date</TableCell>\r\n                <TableCell>End Date</TableCell>\r\n                <TableCell>Trainees</TableCell>\r\n\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.state.tableData.map((dataValue, id) => (\r\n                <TableRow id=\"tablerow\">\r\n                  <TableCell>{dataValue.mapped ? this.state.funderName : ''}</TableCell>\r\n                  <TableCell>{dataValue.mapped ? dataValue.BatchName : ''}</TableCell>\r\n                  <TableCell>{dataValue.mapped ? dataValue.startDate : ''}</TableCell>\r\n                  <TableCell>{dataValue.mapped ? dataValue.endDate : ''}</TableCell>\r\n                  <TableCell>{dataValue.mapped ? dataValue.trainees : ''}</TableCell>\r\n                  <TableCell>{ <Button variant=\"contained\" color=\"primary\" disabled={dataValue.mapped ? false : true} onClick={this.saveFunderMappingDetails(dataValue.batchId, dataValue.funderId, \"Y\", this.state.funderType, UserContext.userid, today, '')} > unmap </Button> }</TableCell>\r\n                </TableRow>))}\r\n            </TableBody>\r\n          </ Table>\r\n        </Grid>\r\n        <br /> <br />\r\n        <Grid container>\r\n          <Grid item xs={4}>\r\n            <Button variant=\"contained\" color=\"primary\" disabled={false} onClick={this}>Map All</Button>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Button variant=\"contained\" color=\"primary\" disabled={false} onClick={this}>Unmap All</Button>\r\n          </Grid>\r\n        </Grid>\r\n        <br /><br />\r\n        {/* </Box>\r\n              </Card> */}\r\n        <Grid container>\r\n          <Grid item xs={12}></Grid>\r\n          {/*              \r\n            <Card style={{width:\"300px\" ,marginLeft:\"10px\"}} >\r\n            <Box border={1} borderRadius=\"1.75%\"> */}\r\n          {/* <Grid item xs={12} sm={3}> */}\r\n          <h6>Mapped</h6>\r\n          {/* <Typography  variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          Mapped Batches\r\n        </Typography> */}\r\n          <Table aria-label=\"simple table\" style={{ border: \"2px\", marginRight: \"200px\" }}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Center Name</TableCell>\r\n                <TableCell>Batch Name</TableCell>\r\n                <TableCell>Start Date</TableCell>\r\n                <TableCell>End Date</TableCell>\r\n                <TableCell>Trainees</TableCell>\r\n\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.state.tableData.map((dataValue, id) => (\r\n                <TableRow id=\"tablerow\">\r\n                  <TableCell>{dataValue.mapped ? '' : this.state.funderName}</TableCell>\r\n                  <TableCell>{dataValue.mapped ? '' : dataValue.BatchName}</TableCell>\r\n                  <TableCell>{dataValue.mapped ? '' : dataValue.startDate}</TableCell>\r\n                  <TableCell>{dataValue.mapped ? '' : dataValue.endDate}</TableCell>\r\n                  <TableCell>{dataValue.mapped ? '' : dataValue.trainees}</TableCell>\r\n                  <TableCell>{ <Button variant=\"contained\" color=\"primary\" disabled={dataValue.mapped ? true : false} onClick={this.updateFunderMappingDetails(dataValue.id, dataValue.batchId, dataValue.funderId, \"N\", '', today, UserContext.userid, this.state.funderType)} > map </Button> }</TableCell>\r\n                </TableRow>))}\r\n            </TableBody>\r\n          </ Table>\r\n          {/* </Grid> */}\r\n          {/* </Box>  \r\n              </Card> */}\r\n        </Grid>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}