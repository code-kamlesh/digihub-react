{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\DashboardPagePrincipal.js\";\nimport React, { Component, useEffect, useState } from 'react'; //import ChartistGraph from \"react-chartist\";\n// @material-ui/core\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { Link } from \"react-router-dom\"; // @material-ui/icons\n\nimport Store from \"@material-ui/icons/Store\";\nimport Warning from \"@material-ui/icons/Warning\";\nimport DateRange from \"@material-ui/icons/DateRange\";\nimport LocalOffer from \"@material-ui/icons/LocalOffer\";\nimport Update from \"@material-ui/icons/Update\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport AccessTime from \"@material-ui/icons/AccessTime\";\nimport Accessibility from \"@material-ui/icons/Accessibility\";\nimport BugReport from \"@material-ui/icons/BugReport\";\nimport Code from \"@material-ui/icons/Code\";\nimport Cloud from \"@material-ui/icons/Cloud\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Button from '@material-ui/core/Button';\nimport styles from \"./dashboardStyle.js\";\nimport GridItem from \"../components/Grid/GridItem.js\";\nimport GridContainer from \"../components/Grid/GridContainer.js\";\nimport Card from \"../components/Card/Card.js\";\nimport CardHeader from \"../components/Card/CardHeader.js\";\nimport CardIcon from \"../components/Card/CardIcon.js\";\nimport CardBody from \"../components/Card/CardBody.js\";\nimport CardFooter from \"../components/Card/CardFooter.js\";\nimport Table from \"../components/Table/Table.js\";\nimport UserContext from '../components/GolbalContext';\nimport { mergeClasses } from '@material-ui/styles';\nimport { fetchBatchDetailsForBatchOwner, findNumberOfBeneficiaryInCenterByStatus } from './../util/api';\nconst useStyles = makeStyles(styles);\nconst courseDetails = [];\nconst appError = '';\nexport default function DashboardPage() {\n  const [totalstudents, setStudentCount] = useState(0);\n  const [shortlistedstudents, setShortlistedStudentCount] = useState(0);\n  const [tobereviewdstudents, settobereviewedStudentCount] = useState(0);\n  const [recommondedstudents, setrecommondedStudentCount] = useState(0);\n  const [enrolledstudents, setenrolledStudentCount] = useState(0);\n  const [studentInfo, setStudentInfo] = useState(0);\n  const [refreshDate, setRefreshDate] = useState(\"\");\n  useEffect(() => {\n    //   let studentInfo=[];\n    //   let requestFormData = new FormData();  \n    //   requestFormData.append('data', '{\"token\" : \"\", \"action\" : \"viewAllByCenter\", \"data\" : [{\"centerId\":'+UserContext.centerId+'}]}');\n    //   fetch(\"http://playground.tatastrive.com/sservices-v1/engagement\",{\n    //   method: \"POST\",\n    //   body: requestFormData,\n    //   })\n    //     .then(response => response.json()).then((jsondata)=>{   \n    //         let  studentDetails = JSON.parse(jsondata.data);       \n    //         setenrolledStudentCount(studentDetails.length);  \n    //         setStudentInfo(studentDetails)  \n    //         });\n    //   requestFormData = new FormData();  \n    //   requestFormData.append('data', '{\"token\" : \"\", \"action\" : \"countByCenterAndStatus\", \"data\" : [{\"centerId\":'+UserContext.centerId+',\"status\":\"enrolled\"}]}');\n    //   fetch(\"http://playground.tatastrive.com/sservices-v1/engagement\",{\n    //   method: \"POST\",\n    //   body: requestFormData,\n    //   })\n    //     .then(response => response.json()).then((jsondata)=>{   \n    //         let  studentDetails = jsondata.data;       \n    //         setStudentCount(studentDetails);    \n    //         });\n    //   requestFormData = new FormData();  \n    //   requestFormData.append('data', '{\"token\" : \"\", \"action\" : \"countByCenterAndStatus\", \"data\" : [{\"centerId\":'+UserContext.centerId+',\"status\":\"mobilised\"}]}');\n    //   fetch(\"http://playground.tatastrive.com/sservices-v1/engagement\",{\n    //   method: \"POST\",\n    //   body: requestFormData,\n    //   })\n    //     .then(response => response.json()).then((jsondata)=>{   \n    //         let  studentDetails = jsondata.data;       \n    //         setInterestedStudentCount(studentDetails);\n    //         });\n    //   requestFormData = new FormData();  \n    //   requestFormData.append('data', '{\"token\" : \"\", \"action\" : \"countByCenterAndStatus\", \"data\" : [{\"centerId\":'+UserContext.centerId+',\"status\":\"recommend\"}]}');\n    //   fetch(\"http://playground.tatastrive.com/sservices-v1/engagement\",{\n    //   method: \"POST\",\n    //   body: requestFormData,\n    //   })\n    //     .then(response => response.json()).then((jsondata)=>{   \n    //         let  studentDetails = jsondata.data;       \n    //         setrecommondedStudentCount(studentDetails);\n    //         });\n    //   requestFormData = new FormData();  \n    //   requestFormData.append('data', '{\"token\" : \"\", \"action\" : \"countByCenterAndStatus\", \"data\" : [{\"centerId\":'+UserContext.centerId+',\"status\":\"shortlisted\"}]}');\n    //   fetch(\"http://playground.tatastrive.com/sservices-v1/engagement\",{\n    //   method: \"POST\",\n    //   body: requestFormData,\n    //   })\n    //     .then(response => response.json()).then((jsondata)=>{   \n    //         let  studentDetails = jsondata.data;       \n    //         settobereviewedStudentCount(studentDetails);\n    //         });         \n    // },\n    fetchBatchDetailsForBatchOwner(UserContext.userid, UserContext.centerId).then(jsondata => {\n      let activeBatches = JSON.parse(jsondata.data); // setTotalBatches(activeBatches.length);\n    });\n    findNumberOfBeneficiaryInCenterByStatus(UserContext.centerId, 'Mobilised').then(jsondata => {\n      //  alert(JSON.stringify(jsondata));\n      let beneficiaryDetails = JSON.parse(jsondata.data);\n\n      if (beneficiaryDetails.length > 0) {\n        var date = beneficiaryDetails[0].refreshDate.date;\n        var time = beneficiaryDetails[0].refreshDate.time;\n        setRefreshDate(date.day + \"-\" + date.month + \"-\" + date.year + \"   \" + time.hour + \":\" + time.minute + \":\" + time.second);\n      }\n\n      setStudentCount(beneficiaryDetails.length);\n    });\n    findNumberOfBeneficiaryInCenterByStatus(UserContext.centerId, 'Shortlisted').then(jsondata => {\n      let beneficiaryDetails = JSON.parse(jsondata.data); //alert(JSON.stringify(jsondata));\n\n      if (beneficiaryDetails.length > 0) {\n        var date = beneficiaryDetails[0].refreshDate.date;\n        var time = beneficiaryDetails[0].refreshDate.time;\n        setRefreshDate(date.day + \"-\" + date.month + \"-\" + date.year + \"   \" + time.hour + \":\" + time.minute + \":\" + time.second);\n      }\n\n      setShortlistedStudentCount(beneficiaryDetails.length);\n    });\n    findNumberOfBeneficiaryInCenterByStatus(UserContext.centerId, 'Recommended').then(jsondata => {\n      let beneficiaryDetails = JSON.parse(jsondata.data); // alert(JSON.stringify(jsondata));\n\n      if (beneficiaryDetails.length > 0) {\n        var date = beneficiaryDetails[0].refreshDate.date;\n        var time = beneficiaryDetails[0].refreshDate.time;\n        setRefreshDate(date.day + \"-\" + date.month + \"-\" + date.year + \"   \" + time.hour + \":\" + time.minute + \":\" + time.second);\n      }\n\n      setrecommondedStudentCount(beneficiaryDetails.length);\n    });\n    findNumberOfBeneficiaryInCenterByStatus(UserContext.centerId, 'Enrolled').then(jsondata => {\n      let beneficiaryDetails = JSON.parse(jsondata.data);\n\n      if (beneficiaryDetails.length > 0) {\n        var date = beneficiaryDetails[0].refreshDate.date;\n        var time = beneficiaryDetails[0].refreshDate.time;\n        setRefreshDate(date.day + \"-\" + date.month + \"-\" + date.year + \"   \" + time.hour + \":\" + time.minute + \":\" + time.second);\n      }\n\n      setenrolledStudentCount(beneficiaryDetails.length);\n    });\n  }, []);\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"warning\",\n    stats: true,\n    icon: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CardIcon, {\n    color: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Cloud, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.cardCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, \"Total Number of students\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.cardTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, totalstudents)), /*#__PURE__*/React.createElement(CardFooter, {\n    stats: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 16\n    }\n  }))), /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"danger\",\n    stats: true,\n    icon: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardIcon, {\n    color: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Store, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.cardCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 15\n    }\n  }, \"Shortlisted Students\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.cardTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 15\n    }\n  }, shortlistedstudents, \" \")), /*#__PURE__*/React.createElement(CardFooter, {\n    stats: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"success\",\n    stats: true,\n    icon: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardIcon, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Code, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.cardCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 15\n    }\n  }, \"Enrolled Students\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.cardTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 15\n    }\n  }, enrolledstudents)), /*#__PURE__*/React.createElement(CardFooter, {\n    stats: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"info\",\n    stats: true,\n    icon: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardIcon, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Accessibility, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.cardCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 15\n    }\n  }, \"Recommonded Students\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.cardTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 15\n    }\n  }, recommondedstudents)), /*#__PURE__*/React.createElement(CardFooter, {\n    stats: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    style: {\n      color: 'white'\n    },\n    to: \"/dashboard/managebeneficiary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 15\n    }\n  }, \"  Manage Beneficiary  \")))), /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    style: {\n      color: 'white'\n    },\n    to: \"/dashboard/recommend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 15\n    }\n  }, \"  Recommendation \"))))), /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }\n  }));\n} //export default DashboardPage;","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/DashboardPagePrincipal.js"],"names":["React","Component","useEffect","useState","makeStyles","Icon","Link","Store","Warning","DateRange","LocalOffer","Update","ArrowUpward","AccessTime","Accessibility","BugReport","Code","Cloud","List","ListItem","ListItemText","Button","styles","GridItem","GridContainer","Card","CardHeader","CardIcon","CardBody","CardFooter","Table","UserContext","mergeClasses","fetchBatchDetailsForBatchOwner","findNumberOfBeneficiaryInCenterByStatus","useStyles","courseDetails","appError","DashboardPage","totalstudents","setStudentCount","shortlistedstudents","setShortlistedStudentCount","tobereviewdstudents","settobereviewedStudentCount","recommondedstudents","setrecommondedStudentCount","enrolledstudents","setenrolledStudentCount","studentInfo","setStudentInfo","refreshDate","setRefreshDate","userid","centerId","then","jsondata","activeBatches","JSON","parse","data","beneficiaryDetails","length","date","time","day","month","year","hour","minute","second","classes","cardCategory","cardTitle","color"],"mappings":"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","sourcesContent":["import React, { Component,useEffect,useState } from 'react';\r\n\r\n\r\n//import ChartistGraph from \"react-chartist\";\r\n// @material-ui/core\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport { Link } from \"react-router-dom\";\r\n// @material-ui/icons\r\n\r\nimport Store from \"@material-ui/icons/Store\";\r\nimport Warning from \"@material-ui/icons/Warning\";\r\nimport DateRange from \"@material-ui/icons/DateRange\";\r\nimport LocalOffer from \"@material-ui/icons/LocalOffer\";\r\nimport Update from \"@material-ui/icons/Update\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport AccessTime from \"@material-ui/icons/AccessTime\";\r\nimport Accessibility from \"@material-ui/icons/Accessibility\";\r\nimport BugReport from \"@material-ui/icons/BugReport\";\r\nimport Code from \"@material-ui/icons/Code\";\r\nimport Cloud from \"@material-ui/icons/Cloud\";\r\n\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport styles from \"./dashboardStyle.js\";\r\nimport GridItem from \"../components/Grid/GridItem.js\";\r\nimport GridContainer from \"../components/Grid/GridContainer.js\";\r\nimport Card from \"../components/Card/Card.js\";\r\nimport CardHeader from \"../components/Card/CardHeader.js\";\r\nimport CardIcon from \"../components/Card/CardIcon.js\";\r\nimport CardBody from \"../components/Card/CardBody.js\";\r\nimport CardFooter from \"../components/Card/CardFooter.js\";\r\nimport Table from \"../components/Table/Table.js\";\r\nimport UserContext from '../components/GolbalContext'\r\nimport { mergeClasses } from '@material-ui/styles';\r\nimport { fetchBatchDetailsForBatchOwner,findNumberOfBeneficiaryInCenterByStatus} from './../util/api';\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst courseDetails = [];\r\nconst appError = '';\r\n\r\n\r\n\r\n\r\nexport default function DashboardPage()    {\r\n\r\n  const [totalstudents, setStudentCount] = useState(0);\r\n  const [shortlistedstudents, setShortlistedStudentCount] = useState(0);\r\n  const [tobereviewdstudents, settobereviewedStudentCount] = useState(0);\r\n  const [recommondedstudents, setrecommondedStudentCount] = useState(0);\r\n  const [enrolledstudents, setenrolledStudentCount] = useState(0);\r\n  const [studentInfo, setStudentInfo] = useState(0);\r\n  const [refreshDate, setRefreshDate] = useState(\"\");\r\n\r\n  \r\n  useEffect(() => {\r\n  //   let studentInfo=[];\r\n  //   let requestFormData = new FormData();  \r\n  //   requestFormData.append('data', '{\"token\" : \"\", \"action\" : \"viewAllByCenter\", \"data\" : [{\"centerId\":'+UserContext.centerId+'}]}');\r\n  //   fetch(\"http://playground.tatastrive.com/sservices-v1/engagement\",{\r\n  //   method: \"POST\",\r\n  //   body: requestFormData,\r\n  //   })\r\n  //     .then(response => response.json()).then((jsondata)=>{   \r\n  //         let  studentDetails = JSON.parse(jsondata.data);       \r\n          \r\n  //         setenrolledStudentCount(studentDetails.length);  \r\n  //         setStudentInfo(studentDetails)  \r\n  //         });\r\n\r\n    \r\n  //   requestFormData = new FormData();  \r\n  //   requestFormData.append('data', '{\"token\" : \"\", \"action\" : \"countByCenterAndStatus\", \"data\" : [{\"centerId\":'+UserContext.centerId+',\"status\":\"enrolled\"}]}');\r\n  //   fetch(\"http://playground.tatastrive.com/sservices-v1/engagement\",{\r\n  //   method: \"POST\",\r\n  //   body: requestFormData,\r\n  //   })\r\n  //     .then(response => response.json()).then((jsondata)=>{   \r\n  //         let  studentDetails = jsondata.data;       \r\n          \r\n  //         setStudentCount(studentDetails);    \r\n  //         });\r\n\r\n  //   requestFormData = new FormData();  \r\n  //   requestFormData.append('data', '{\"token\" : \"\", \"action\" : \"countByCenterAndStatus\", \"data\" : [{\"centerId\":'+UserContext.centerId+',\"status\":\"mobilised\"}]}');\r\n  //   fetch(\"http://playground.tatastrive.com/sservices-v1/engagement\",{\r\n  //   method: \"POST\",\r\n  //   body: requestFormData,\r\n  //   })\r\n  //     .then(response => response.json()).then((jsondata)=>{   \r\n  //         let  studentDetails = jsondata.data;       \r\n  //         setInterestedStudentCount(studentDetails);\r\n              \r\n  //         });\r\n    \r\n  //   requestFormData = new FormData();  \r\n  //   requestFormData.append('data', '{\"token\" : \"\", \"action\" : \"countByCenterAndStatus\", \"data\" : [{\"centerId\":'+UserContext.centerId+',\"status\":\"recommend\"}]}');\r\n  //   fetch(\"http://playground.tatastrive.com/sservices-v1/engagement\",{\r\n  //   method: \"POST\",\r\n  //   body: requestFormData,\r\n  //   })\r\n  //     .then(response => response.json()).then((jsondata)=>{   \r\n  //         let  studentDetails = jsondata.data;       \r\n  //         setrecommondedStudentCount(studentDetails);\r\n              \r\n  //         });\r\n\r\n  //   requestFormData = new FormData();  \r\n  //   requestFormData.append('data', '{\"token\" : \"\", \"action\" : \"countByCenterAndStatus\", \"data\" : [{\"centerId\":'+UserContext.centerId+',\"status\":\"shortlisted\"}]}');\r\n  //   fetch(\"http://playground.tatastrive.com/sservices-v1/engagement\",{\r\n  //   method: \"POST\",\r\n  //   body: requestFormData,\r\n  //   })\r\n  //     .then(response => response.json()).then((jsondata)=>{   \r\n  //         let  studentDetails = jsondata.data;       \r\n  //         settobereviewedStudentCount(studentDetails);\r\n              \r\n  //         });         \r\n\r\n  // },\r\n\r\n\r\n  fetchBatchDetailsForBatchOwner(UserContext.userid,UserContext.centerId).then((jsondata) => {     \r\n    let activeBatches = JSON.parse(jsondata.data);\r\n  // setTotalBatches(activeBatches.length);\r\n  });\r\n\r\n  findNumberOfBeneficiaryInCenterByStatus(UserContext.centerId,'Mobilised').then((jsondata) => {     \r\n  //  alert(JSON.stringify(jsondata));\r\n    let beneficiaryDetails = JSON.parse(jsondata.data);\r\n    if(beneficiaryDetails.length>0){\r\n    var date = beneficiaryDetails[0].refreshDate.date;\r\n    var time = beneficiaryDetails[0].refreshDate.time;\r\n    setRefreshDate(date.day+\"-\"+date.month+\"-\"+date.year +\"   \"+time.hour+\":\"+time.minute+\":\"+time.second);\r\n  }\r\n  setStudentCount(beneficiaryDetails.length);\r\n  });\r\n\r\n  findNumberOfBeneficiaryInCenterByStatus(UserContext.centerId,'Shortlisted').then((jsondata) => {     \r\n    let beneficiaryDetails = JSON.parse(jsondata.data);\r\n    //alert(JSON.stringify(jsondata));\r\n    if(beneficiaryDetails.length>0){\r\n      var date = beneficiaryDetails[0].refreshDate.date;\r\n      var time = beneficiaryDetails[0].refreshDate.time;\r\n      setRefreshDate(date.day+\"-\"+date.month+\"-\"+date.year +\"   \"+time.hour+\":\"+time.minute+\":\"+time.second);\r\n    }\r\n\r\n    setShortlistedStudentCount(beneficiaryDetails.length);\r\n  });\r\n\r\n\r\n  findNumberOfBeneficiaryInCenterByStatus(UserContext.centerId,'Recommended').then((jsondata) => {     \r\n    let beneficiaryDetails = JSON.parse(jsondata.data);\r\n   // alert(JSON.stringify(jsondata));\r\n    if(beneficiaryDetails.length>0 ){\r\n      var date = beneficiaryDetails[0].refreshDate.date;\r\n      var time = beneficiaryDetails[0].refreshDate.time;\r\n      setRefreshDate(date.day+\"-\"+date.month+\"-\"+date.year +\"   \"+time.hour+\":\"+time.minute+\":\"+time.second);\r\n    }\r\n    \r\n    setrecommondedStudentCount(beneficiaryDetails.length);\r\n  });\r\n\r\n  \r\n  findNumberOfBeneficiaryInCenterByStatus(UserContext.centerId,'Enrolled').then((jsondata) => {     \r\n    let beneficiaryDetails = JSON.parse(jsondata.data);\r\n    \r\n    if(beneficiaryDetails.length>0){\r\n      var date = beneficiaryDetails[0].refreshDate.date;\r\n      var time = beneficiaryDetails[0].refreshDate.time;\r\n      setRefreshDate(date.day+\"-\"+date.month+\"-\"+date.year +\"   \"+time.hour+\":\"+time.minute+\":\"+time.second);\r\n    }\r\n    \r\n    setenrolledStudentCount(beneficiaryDetails.length);\r\n  });\r\n\r\n\r\n},\r\n   []);\r\n\r\n\r\n  \r\n  const classes = useStyles();\r\n  \r\n\r\n    return (  \r\n      <div>\r\n        <GridContainer>\r\n          <GridItem xs={12} sm={6} md={3}>\r\n            <Card>\r\n              <CardHeader color=\"warning\" stats icon>\r\n                <CardIcon color=\"warning\">\r\n                  <Cloud />\r\n                </CardIcon>\r\n                <p className={classes.cardCategory}>Total Number of students</p>\r\n                <h3 className={classes.cardTitle}>\r\n                  {totalstudents}\r\n                </h3>\r\n              </CardHeader>\r\n               <CardFooter stats>\r\n                {/* <div className={classes.stats}>\r\n                  <Warning />\r\n                  <a href=\"#pablo\" onClick={e => e.preventDefault()}>\r\n                      Get more space </a>\r\n                </div> */}\r\n              </CardFooter> \r\n             </Card>\r\n            </GridItem>\r\n          <GridItem xs={12} sm={6} md={3}>\r\n          <Card>\r\n            <CardHeader color=\"danger\" stats icon>\r\n              <CardIcon color=\"danger\">\r\n                <Store />\r\n              </CardIcon>\r\n              <p className={classes.cardCategory}>Shortlisted Students</p>\r\n              <h3 className={classes.cardTitle}>{shortlistedstudents} </h3>\r\n            </CardHeader>\r\n            <CardFooter stats>\r\n              {/* <div className={classes.stats}>\r\n                <DateRange />\r\n                Last 24 Hours\r\n              </div> */}\r\n            </CardFooter>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={6} md={3}>\r\n          <Card>\r\n            <CardHeader color=\"success\" stats icon>\r\n              <CardIcon color=\"success\">\r\n                <Code/>\r\n              </CardIcon>\r\n              <p className={classes.cardCategory}>Enrolled Students</p>\r\n              <h3 className={classes.cardTitle}>{enrolledstudents}</h3>\r\n            </CardHeader> \r\n            <CardFooter stats>\r\n              {/* <div className={classes.stats}>\r\n                <LocalOffer />\r\n                Tracked from Github\r\n              </div> */}\r\n            </CardFooter>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={6} md={3}>\r\n          <Card>\r\n            <CardHeader color=\"info\" stats icon>\r\n              <CardIcon color=\"info\">\r\n                <Accessibility />\r\n              </CardIcon>\r\n              <p className={classes.cardCategory}>Recommonded Students</p>\r\n              <h3 className={classes.cardTitle}>{recommondedstudents}</h3>\r\n            </CardHeader>\r\n            <CardFooter stats>\r\n              {/* <div className={classes.stats}>\r\n                <Update />\r\n                Just Updated\r\n              </div> */}\r\n            </CardFooter>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={6} md={3}>\r\n          <Card>  \r\n            <Button variant=\"contained\" color=\"primary\" size=\"small\">  \r\n              <Link style = {{color : 'white'}} to=\"/dashboard/managebeneficiary\" >  Manage Beneficiary  </Link>\r\n            </Button>\r\n          </Card>                   \r\n        </GridItem>\r\n\r\n        <GridItem xs={12} sm={6} md={3}>\r\n          <Card>  \r\n            <Button variant=\"contained\" color=\"primary\" size=\"small\">  \r\n              <Link style = {{color : 'white'}} to=\"/dashboard/recommend\" >  Recommendation </Link>\r\n            </Button>\r\n          </Card>                   \r\n        </GridItem>\r\n\r\n        {/* <GridItem xs={12} sm={6} md={3}>\r\n          <Card>  \r\n            <Button variant=\"contained\" color=\"primary\" >  \r\n              <Link to=\"/dashboard/addobeneficiary\" >  Add Beneficiary  </Link>\r\n            </Button>\r\n          </Card>                   \r\n        </GridItem>\r\n\r\n        <GridItem xs={12} sm={6} md={3}>\r\n          <Card>  \r\n            <Button variant=\"contained\" color=\"primary\" >  \r\n              <Link to=\"/dashboard/observation\" >  Manage Observations </Link>\r\n            </Button>\r\n          </Card>                   \r\n        </GridItem>\r\n\r\n        <GridItem xs={12} sm={6} md={3}>\r\n          <Card>  \r\n            <Button variant=\"contained\" color=\"primary\" >  \r\n              <Link to=\"/dashboard/managebatches\" >  Manage Batches  </Link>\r\n            </Button>\r\n          </Card>                   \r\n        </GridItem> */}\r\n\r\n        \r\n      </GridContainer>\r\n\r\n      <GridContainer>\r\n        {/* <GridItem xs={12} sm={12} md={6}>\r\n            <Card>\r\n              <CardHeader color=\"warning\">\r\n                <h4 className={classes.cardTitleWhite}>Employees Stats</h4>\r\n                <p className={classes.cardCategoryWhite}>\r\n                  New employees on 15th September, 2016\r\n                </p>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Table\r\n                  tableHeaderColor=\"warning\"\r\n                  tableHead={[\"ID\", \"Name\", \"Salary\", \"Country\"]}\r\n                  tableData={[\r\n                    [\"1\", \"Dakota Rice\", \"$36,738\", \"Niger\"],\r\n                    [\"2\", \"Minerva Hooper\", \"$23,789\", \"Curaçao\"],\r\n                    [\"3\", \"Sage Rodriguez\", \"$56,142\", \"Netherlands\"],\r\n                    [\"4\", \"Philip Chaney\", \"$38,735\", \"Korea, South\"]\r\n                  ]}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n        </GridItem> */}\r\n        {/* <GridItem xs={12} sm={12} md={6}>\r\n            <Card>\r\n              <CardHeader color=\"warning\">\r\n                <h4 className={classes.cardTitleWhite}>Employees Stats</h4>\r\n                <p className={classes.cardCategoryWhite}>\r\n                  New employees on 15th September, 2016\r\n                </p>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Table\r\n                  tableHeaderColor=\"warning\"\r\n                  tableHead={[\"ID\", \"Name\", \"Salary\", \"Country\"]}\r\n                  tableData={[\r\n                    [\"1\", \"Dakota Rice\", \"$36,738\", \"Niger\"],\r\n                    [\"2\", \"Minerva Hooper\", \"$23,789\", \"Curaçao\"],\r\n                    [\"3\", \"Sage Rodriguez\", \"$56,142\", \"Netherlands\"],\r\n                    [\"4\", \"Philip Chaney\", \"$38,735\", \"Korea, South\"]\r\n                  ]}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n          </GridItem> */}\r\n        </GridContainer>\r\n      </div>\r\n    );\r\n\r\n\r\n    \r\n}\r\n\r\n//export default DashboardPage;"]},"metadata":{},"sourceType":"module"}