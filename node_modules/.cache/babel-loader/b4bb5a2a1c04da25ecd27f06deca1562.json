{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\ExistingBusiness.js\";\nimport React, { Component } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { fetchMasterExistingBusiness, fetchAddressDetailsBasedOnPincode, saveExistingBusiness, fetchExistingBusinessDetails, submitAddressData, fetchAddressData } from './../util/api';\nimport { FormControlLabel, Grid, RadioGroup, Radio, TextField, Button, FormControl, InputLabel } from '@material-ui/core';\nimport { SingleSelect } from \"react-select-material-ui\";\nimport Address from \"./Address\";\nimport UserContext from '../components/GolbalContext';\nimport underscore from 'underscore';\nimport AlertDialog from './../util/AlertDialog';\nconst alertDialogOptions = {\n  message: ''\n};\n\nclass ExistingBusiness extends Component {\n  constructor(props) {\n    super(props);\n\n    this.saveExistingBusiness = event => {\n      event.preventDefault();\n      this.state.address = { ...this.state.address,\n        'entityId': this.state.engagementId,\n        \"entityType\": \"S\"\n      };\n      this.validateMainQuestions();\n      this.validateSubQuestions();\n\n      if (this.validateMainQuestions() && this.validateSubQuestions()) {\n        saveExistingBusiness(JSON.stringify(this.state.answers)).then(jsondata => {\n          this.setState({\n            alertDialogFlag: false\n          });\n          var jsonObjects = JSON.parse(jsondata.data);\n          alertDialogOptions.message = /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: \"green\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 34\n            }\n          }, \"Data Saved Sucessfully\");\n          this.setState({\n            alertDialogFlag: true\n          });\n        });\n        submitAddressData(\"updateAddress\", this.state.address).then(jsondata => {});\n        this.props.history.push({\n          pathname: '/dashboard/updatebeneficiary',\n          state: {\n            dbUserId: this.state.dbUserId,\n            engagementId: this.state.engagementId,\n            status: this.state.status,\n            tab: 7\n          }\n        });\n      }\n    };\n\n    this.state = {\n      existingBusinessQuestions: [],\n      answers: [],\n      state: [],\n      district: [],\n      pincodes: [],\n      city: [],\n      village: [],\n      address: {\n        id: \"0\",\n        createdBy: UserContext.userid,\n        'isActive': 'Y',\n        'type': 'EB',\n        pincode: \"\",\n        addressLine1: \"\",\n        addressLine2: \"\",\n        district: \"\",\n        state: \"\",\n        cityName: \"\",\n        villageName: \"\"\n      },\n      engagementId: props.engagementId,\n      dbUserId: props.id,\n      radioValue1: '',\n      radioValue2: '',\n      radioValue12: '',\n      radioValue17: '',\n      radioValue21: '',\n      radioValue23: '',\n      radioValue11: '',\n      radioValue6: '',\n      mandatoryFields: [],\n      linkedEngagementId: props.linkedEngagementId\n    };\n    fetchMasterExistingBusiness().then(jsondata => {\n      var jsonObjects = JSON.parse(jsondata.data);\n      this.setState({\n        existingBusinessQuestions: jsonObjects\n      });\n    });\n    fetchExistingBusinessDetails(UserContext.defaultProgramId === 1 || UserContext.defaultProgramId === 9 ? this.state.linkedEngagementId : this.state.engagementId).then(jsondata => {\n      var jsonObjects = JSON.parse(jsondata.data);\n      this.setState({\n        answers: jsonObjects\n      });\n\n      for (var i = 0; i < jsonObjects.length; i++) {\n        var answer = jsonObjects[i];\n\n        if (answer.questionId == \"1\" || answer.questionId == \"2\" || answer.questionId == \"12\" || answer.questionId == \"17\" || answer.questionId == \"21\" || answer.questionId == \"23\" || answer.questionId == \"6\" || answer.questionId == \"11\") {\n          var radioValue = \"radioValue\" + answer.questionId;\n          this.setState({\n            [radioValue]: answer.response\n          });\n        }\n      }\n    });\n    fetchAddressData(this.state.engagementId).then(jsondata => {\n      let localThis = this;\n      let jsonobjects = JSON.parse(jsondata.data);\n\n      for (var i = 0; i < jsonobjects.length; i++) {\n        if (jsonobjects[i].type == \"EB\") {\n          Object.keys(jsonobjects[i]).forEach(function (key) {\n            localThis.setState({\n              address: { ...localThis.state.address,\n                [key]: jsonobjects[i][key].toString()\n              }\n            });\n            fetchAddressDetailsBasedOnPincode(jsonobjects[i].pincode).then(jsondata => {\n              let jsonobjects = JSON.parse(jsondata.data);\n              let taluk = [];\n              let pincode = [];\n              let cityVillage = [];\n              let states = [];\n              let district = [];\n              jsonobjects.map(item => {\n                cityVillage.push({\n                  label: item.cityVillage,\n                  value: item.cityVillage\n                });\n              });\n              cityVillage = underscore.uniq(cityVillage, true, \"label\");\n              jsonobjects.map(item => {\n                taluk.push({\n                  label: item.taluk.toString(),\n                  value: item.taluk\n                });\n              });\n              taluk = underscore.uniq(taluk, true, \"label\");\n              jsonobjects.map(item => {\n                states.push({\n                  label: item.state,\n                  value: item.state.toString()\n                });\n              });\n              states = underscore.uniq(states, true, \"label\");\n              jsonobjects.map(item => {\n                district.push({\n                  label: item.district,\n                  value: item.district.toString()\n                });\n              });\n              district = underscore.uniq(district, true, \"label\");\n              localThis.setState({\n                state: states,\n                district: district,\n                village: cityVillage,\n                city: taluk\n              });\n            });\n          });\n        }\n      }\n    });\n  }\n\n  design(row) {\n    var data = \"\";\n\n    if (row.data) {\n      data = row.data.split(\":\");\n      ;\n    }\n\n    if (row.visibility == \"\") {\n      this.state.mandatoryFields.push(row.id);\n    }\n\n    if (row.userInteraction == \"Radio\" && data.length > 2) {\n      var answers = [...this.state.answers];\n      var radioValue = \"\";\n\n      if (row.id == \"1\") {\n        radioValue = this.state.radioValue1;\n      } else if (row.id == \"6\") {\n        radioValue = this.state.radioValue6;\n      } else if (row.id == \"11\") {\n        radioValue = this.state.radioValue11;\n      } else if (row.id == \"21\") {\n        radioValue = this.state.radioValue21;\n      } else if (row.id == \"23\") {\n        radioValue = this.state.radioValue23;\n      }\n\n      var subQuestions = document.querySelectorAll('[id^=\"' + row.id + '_\"]');\n\n      for (var i = 0; i < answers.length; i++) {\n        if (answers[i].questionId == row.id && answers[i].response == radioValue && radioValue.includes(\"Yes\")) {\n          subQuestions.forEach(function (subQuestion) {\n            subQuestion.style.display = \"\";\n          });\n        }\n      } // this.displaySelectedData(data[0],row.id,\"Radio\");\n\n\n      return /*#__PURE__*/React.createElement(RadioGroup, {\n        row: true,\n        name: row.id,\n        id: row.id,\n        required: true,\n        onChange: this.onRadioGroupChange.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(FormControlLabel, {\n        value: data[0],\n        control: /*#__PURE__*/React.createElement(Radio, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 49\n          }\n        }),\n        label: data[0] //onClick={this.showSubQuestions.bind(this)} \n        ,\n        checked: data[0] == radioValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(FormControlLabel, {\n        value: data[1],\n        control: /*#__PURE__*/React.createElement(Radio, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 48\n          }\n        }),\n        label: data[1] //onClick={this.hideSubQuestions.bind(this)} \n        ,\n        checked: data[1] == radioValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(FormControlLabel, {\n        value: data[2],\n        control: /*#__PURE__*/React.createElement(Radio, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 48\n          }\n        }),\n        label: data[2] //onClick={this.hideSubQuestions.bind(this)} \n        ,\n        checked: data[2] == radioValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 5\n        }\n      }));\n    } else if (row.userInteraction == \"Radio\" && data.length > 1) {\n      var answers = [...this.state.answers];\n      var radioValue = \"\";\n\n      if (row.id == \"2\") {\n        radioValue = this.state.radioValue2;\n      } else if (row.id == \"12\") {\n        radioValue = this.state.radioValue12;\n      } else if (row.id == \"17\") {\n        radioValue = this.state.radioValue17;\n      }\n\n      var subQuestions = document.querySelectorAll('[id^=\"' + row.id + '_\"]');\n\n      for (var i = 0; i < answers.length; i++) {\n        if (answers[i].questionId == row.id && answers[i].response == radioValue && radioValue.includes(\"Yes\")) {\n          subQuestions.forEach(function (subQuestion) {\n            subQuestion.style.display = \"\";\n          });\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(RadioGroup, {\n        row: true,\n        name: row.id,\n        id: row.id,\n        required: true,\n        onChange: this.onRadioGroupChange.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(FormControlLabel, {\n        value: data[0],\n        control: /*#__PURE__*/React.createElement(Radio, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 49\n          }\n        }),\n        label: data[0] // onClick={this.showSubQuestions.bind(this)} \n        ,\n        checked: data[0] == radioValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(FormControlLabel, {\n        value: data[1],\n        control: /*#__PURE__*/React.createElement(Radio, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 48\n          }\n        }),\n        label: data[1] // onClick={this.hideSubQuestions.bind(this)} \n        ,\n        checked: data[1] == radioValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 5\n        }\n      }));\n    } else if (row.userInteraction == \"drop down\") {\n      return /*#__PURE__*/React.createElement(SingleSelect, {\n        isClearable: true,\n        name: row.id,\n        id: row.id,\n        options: data,\n        onChange: this.handleSelectChange.bind(this, row.id),\n        key: this.displaySelectedData(row.data, row.id, \"drop down\"),\n        value: this.displaySelectedData(row.data, row.id, \"drop down\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }\n      });\n    } else if (row.userInteraction == \"text box\") {\n      return /*#__PURE__*/React.createElement(TextField, {\n        inputProps: {\n          maxLength: row.maxLength\n        },\n        type: \"text\",\n        name: row.id,\n        id: row.id //  key={this.displaySelectedData('',row.id,\"text box\")}\n        ,\n        onChange: this.handleInputChange.bind(this),\n        value: this.displaySelectedData('', row.id, \"text box\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 9\n        }\n      });\n    } else if (row.userInteraction == \"Address\") {\n      return /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        type: \"text\",\n        name: \"addressLine1\",\n        id: \"addressLine1\",\n        label: \"Address Line 1\",\n        maxLength: \"20\",\n        value: this.state.address.addressLine1,\n        onChange: this.addressLine.bind(this, 'addressLine1'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        type: \"text\",\n        name: \"addressLine2\",\n        id: \"addressLine2\",\n        label: \"Address Line 2\",\n        maxLength: \"20\",\n        value: this.state.address.addressLine2,\n        onChange: this.addressLine.bind(this, 'addressLine2'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        type: \"number\",\n        label: \"Pincode\",\n        name: \"pincode\",\n        id: \"pincode\",\n        onChange: this.getPincodeData.bind(this, 'pincode'),\n        value: this.state.address.pincode || '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        shrink: true,\n        for: \"village\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }\n      }, \"Village\"), /*#__PURE__*/React.createElement(SingleSelect, {\n        name: \"villageName\",\n        id: \"villageName\",\n        options: this.state.village,\n        value: this.state.address.villageName,\n        onChange: this.handleAddressSelectChange.bind(this, 'villageName'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        shrink: true,\n        for: \"city\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }\n      }, \"City\"), /*#__PURE__*/React.createElement(SingleSelect, {\n        name: \"cityName\",\n        id: \"cityName\",\n        options: this.state.city,\n        value: this.state.address.cityName,\n        onChange: this.handleAddressSelectChange.bind(this, 'cityName'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        shrink: true,\n        for: \"District\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }\n      }, \"District\"), /*#__PURE__*/React.createElement(SingleSelect, {\n        name: \"district\",\n        id: \"district\",\n        options: this.state.district,\n        value: this.state.address.district,\n        onChange: this.handleAddressSelectChange.bind(this, 'district'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        shrink: true,\n        for: \"State\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }\n      }, \"State\"), /*#__PURE__*/React.createElement(SingleSelect, {\n        name: \"state\",\n        id: \"state\",\n        options: this.state.state,\n        value: this.state.address.state,\n        onChange: this.handleAddressSelectChange.bind(this, 'state'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }\n      })));\n    }\n  }\n\n  onRadioGroupChange(event) {\n    if (event.target.value == \"No\" || event.target.value == \"NO\" || event.target.value == \"Don’t Know\") {\n      this.hideSubQuestions(event);\n    } else {\n      this.showSubQuestions(event);\n    } //this.validateSubQuestions()\n\n  }\n\n  showSubQuestions(event) {\n    var alreadyAnswered = false;\n    const answersArray = [...this.state.answers];\n    var name = event.target.name;\n    var value = event.target.value;\n    var radioValue = \"radioValue\" + name;\n    this.setState({\n      [radioValue]: value\n    });\n\n    for (var i = 0; i < answersArray.length; i++) {\n      if (answersArray[i].questionId == name) {\n        answersArray[i].response = value;\n        this.setState({\n          answers: answersArray\n        });\n        alreadyAnswered = true;\n      }\n    }\n\n    if (!alreadyAnswered) {\n      var data = {\n        \"questionId\": name,\n        \"response\": value,\n        \"studentId\": this.state.dbUserId,\n        \"engagementId\": this.state.engagementId\n      };\n      this.setState({\n        answers: [...this.state.answers, data]\n      }, () => {\n        this.validate(name);\n      });\n    }\n\n    var subQuestions = document.querySelectorAll('[id^=\"' + name + '_\"]');\n    subQuestions.forEach(function (subQuestion) {\n      subQuestion.style.display = \"\";\n    });\n  }\n\n  hideSubQuestions(event) {\n    var alreadyAnswered = false;\n    const answersArray = [...this.state.answers];\n    var name = event.target.name;\n    var value = event.target.value;\n    var radioValue = \"radioValue\" + name;\n    this.setState({\n      [radioValue]: value\n    });\n\n    for (var i = 0; i < answersArray.length; i++) {\n      if (answersArray[i].questionId == name) {\n        answersArray[i].response = value;\n        this.setState({\n          answers: answersArray\n        });\n        console.log(this.state.answers[i].response);\n        alreadyAnswered = true;\n      }\n    }\n\n    const array = [...this.state.answers];\n\n    if (!alreadyAnswered) {\n      var data = {\n        \"questionId\": name,\n        \"response\": value,\n        \"studentId\": this.state.dbUserId,\n        \"engagementId\": this.state.engagementId\n      };\n      array.push(data); // this.setState({answers: [...this.state.answers, data]},()=>{console.log(\"lenght is\"+this.state.answers.length)});  \n      //   this.setState({ answers: array },()=>{console.log(\"lenght is:\"+this.state.answers.length)});\n    }\n\n    var subQuestions = document.querySelectorAll('[id^=\"' + name + '_\"]');\n    let localThis = this;\n    subQuestions.forEach(function (subQuestion) {\n      var id = subQuestion.className.split(\" \")[1];\n\n      for (var i = 0; i < array.length; i++) {\n        if (array[i].questionId == id) {\n          console.log(\"id value is :\" + id);\n          array.splice(i, 1);\n        }\n      }\n\n      subQuestion.style.display = \"none\";\n    });\n    this.setState({\n      answers: array\n    }, () => {\n      this.validate(name);\n    });\n  }\n\n  getPincodeData(selectname, event) {\n    let value = 0;\n    let target = null;\n\n    try {\n      target = event.target;\n      value = target.value;\n    } catch (e) {\n      value = event;\n    }\n\n    this.setState({\n      address: { ...this.state.address,\n        \"pincode\": value\n      }\n    });\n\n    if (value.length == 6) {\n      fetchAddressDetailsBasedOnPincode(value).then(jsondata => {\n        let jsonobjects = JSON.parse(jsondata.data);\n        let taluk = [];\n        let pincode = [];\n        let cityVillage = [];\n        let states = [];\n        let district = [];\n        jsonobjects.map(item => {\n          cityVillage.push({\n            label: item.cityVillage,\n            value: item.cityVillage\n          });\n        });\n        cityVillage = underscore.uniq(cityVillage, true, \"label\");\n        jsonobjects.map(item => {\n          taluk.push({\n            label: item.taluk.toString(),\n            value: item.taluk\n          });\n        });\n        taluk = underscore.uniq(taluk, true, \"label\");\n        jsonobjects.map(item => {\n          states.push({\n            label: item.state,\n            value: item.state.toString()\n          });\n        });\n        states = underscore.uniq(states, true, \"label\");\n        jsonobjects.map(item => {\n          district.push({\n            label: item.district,\n            value: item.district.toString()\n          });\n        });\n        district = underscore.uniq(district, true, \"label\");\n        this.setState({\n          state: states,\n          district: district,\n          village: cityVillage,\n          city: taluk\n        });\n      });\n    }\n  }\n\n  handleSelectChange(name, value) {\n    var alreadyAnswered = false;\n    var answersArray = [...this.state.answers];\n\n    for (var i = 0; i < answersArray.length; i++) {\n      if (answersArray[i].questionId == name) {\n        answersArray[i].response = value;\n        this.setState({\n          answers: answersArray\n        });\n        alreadyAnswered = true;\n      }\n    }\n\n    if (!alreadyAnswered) {\n      var data = {\n        \"questionId\": name,\n        \"response\": value,\n        \"studentId\": this.state.dbUserId,\n        \"engagementId\": this.state.engagementId\n      };\n      this.setState({\n        answers: [...this.state.answers, data]\n      }, () => {\n        this.validate(name);\n      });\n    }\n  }\n\n  addressLine(name, event) {\n    const target = event.target;\n    const value = target.value;\n    this.setState({\n      address: { ...this.state.address,\n        [name]: value\n      }\n    });\n  }\n\n  handleAddressSelectChange(selectname, event) {\n    this.setState({\n      address: { ...this.state.address,\n        [selectname]: event\n      }\n    });\n  }\n\n  handleInputChange(event) {\n    var alreadyAnswered = false;\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    var answersArray = [...this.state.answers];\n\n    for (var i = 0; i < answersArray.length; i++) {\n      if (answersArray[i].questionId == name) {\n        answersArray[i].response = value;\n        this.setState({\n          answers: answersArray\n        });\n        alreadyAnswered = true;\n      }\n    }\n\n    if (!alreadyAnswered) {\n      var data = {\n        \"questionId\": name,\n        \"response\": value,\n        \"studentId\": this.state.dbUserId,\n        \"engagementId\": this.state.engagementId\n      };\n      this.setState({\n        answers: [...this.state.answers, data]\n      }, () => {\n        this.validate(name);\n      });\n    }\n  }\n\n  validateMainQuestions() {\n    var isSubmit = true;\n    var mandatoryFields = this.getUniqueArray(this.state.mandatoryFields);\n    var response = this.state.answers;\n\n    for (var i = 0; i < mandatoryFields.length; i++) {\n      var error = \"error\" + mandatoryFields[i];\n      var dataPresent = false;\n\n      if (response.length > 0) {\n        for (var j = 0; j < response.length; j++) {\n          if (mandatoryFields[i] == response[j].questionId) {\n            dataPresent = true;\n            document.getElementById(error).innerHTML = \"\";\n          }\n        }\n\n        if (!dataPresent) {\n          isSubmit = false;\n          document.getElementById(error).innerHTML = \"Please provide data\";\n        }\n      } else {\n        isSubmit = false;\n        document.getElementById(error).innerHTML = \"Please provide data\";\n      }\n    }\n\n    return isSubmit;\n  }\n\n  validateSubQuestions() {\n    var isSubmit = true;\n    var localThis = this;\n    var answers = this.state.answers;\n\n    for (var i = 0; i < answers.length; i++) {\n      var answer = answers[i];\n\n      if (answer.response.includes(\"Yes\")) {\n        var subQuestions = document.querySelectorAll('[id^=\"' + answer.questionId + '_\"]');\n        subQuestions.forEach(function (subQuestion) {\n          var id = subQuestion.className.split(\" \")[1];\n          var dataPresent = false;\n          var error = \"error\" + id;\n\n          for (var j = 0; j < answers.length; j++) {\n            if (answers[j].questionId == id && id != \"3\") {\n              dataPresent = true;\n              document.getElementById(error).innerHTML = \"\";\n            } else if (id == \"3\") {\n              if (localThis.state.address.addressLine1 != \"\" && localThis.state.address.addressLine2 != \"\" && localThis.state.address.pincode != \"\" && localThis.state.address.cityName != \"\" && localThis.state.address.villageName != \"\" && localThis.state.address.district != \"\" && localThis.state.address.state != \"\") {\n                document.getElementById(\"error3\").innerHTML = \"\";\n                dataPresent = true;\n                isSubmit = true;\n              } else {\n                document.getElementById(\"error3\").innerHTML = \"Please provide data\";\n              }\n            }\n          }\n\n          if (!dataPresent) {\n            isSubmit = false;\n            document.getElementById(error).innerHTML = \"Please provide data\";\n          }\n        });\n      }\n    }\n\n    return isSubmit;\n  }\n\n  validate(id) {\n    var answers = this.state.answers;\n\n    for (let i = 0; i < answers.length; i++) {\n      if (answers[i].questionId == id) {\n        var error = \"error\" + id;\n        document.getElementById(error).innerHTML = \"\";\n      }\n    }\n  }\n\n  getUniqueArray(array) {\n    var uniqueArray = [];\n\n    for (var i = 0; i < array.length; i++) {\n      if (uniqueArray.indexOf(array[i]) === -1) {\n        uniqueArray.push(array[i]);\n      }\n    }\n\n    return uniqueArray;\n  }\n\n  displaySelectedData(fieldValue, id, fieldType) {\n    var answers = [...this.state.answers];\n    var response = '';\n    let radioValue = '';\n\n    if (fieldType == \"Radio\") {\n      var subQuestions = document.querySelectorAll('[id^=\"' + id + '_\"]');\n\n      for (var i = 0; i < answers.length; i++) {\n        if (answers[i].questionId == id && answers[i].response == fieldValue) {\n          subQuestions.forEach(function (subQuestion) {\n            subQuestion.style.display = \"\";\n          });\n          return true;\n        }\n      }\n    } else if (fieldType == \"drop down\") {\n      const value = fieldValue.toString().split(\":\");\n\n      for (var i = 0; i < answers.length; i++) {\n        if (answers[i].questionId == id) {\n          for (var j = 0; j < value.length; j++) {\n            if (answers[i].response == value[j]) {\n              return answers[i].response;\n            }\n          }\n        }\n      }\n\n      return \"\";\n    } else if (fieldType == \"text box\") {\n      for (var i = 0; i < answers.length; i++) {\n        if (answers[i].questionId == id) {\n          return answers[i].response;\n        }\n      }\n\n      return \"\";\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.saveExistingBusiness,\n      method: \"post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      \"aria-label\": \"simple table\",\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        width: \"60%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 13\n      }\n    }, \"Question\"), /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        width: \"40%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 13\n      }\n    }, \"Response\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 9\n      }\n    }, this.state.existingBusinessQuestions.map(row => /*#__PURE__*/React.createElement(TableRow, {\n      key: row.id,\n      className: row.id,\n      id: row.subQuestionId,\n      style: {\n        display: row.visibility\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 13\n      }\n    }, row.question == null ? row.subQuestion : row.question, \" \", /*#__PURE__*/React.createElement(\"sup\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 64\n      }\n    }, /*#__PURE__*/React.createElement(\"font\", {\n      color: \"red\",\n      size: \"4px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 69\n      }\n    }, \"*\"))), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 15\n      }\n    }, this.design(row), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"error\" + row.id,\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 16\n      }\n    }))))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-end\",\n      alignItems: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      type: \"submit\",\n      color: \"primary\",\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 1\n      }\n    }, \"Save\"))), this.state.alertDialogFlag && /*#__PURE__*/React.createElement(AlertDialog, {\n      message: alertDialogOptions.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 35\n      }\n    }));\n  }\n\n}\n\nexport default ExistingBusiness;","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/ExistingBusiness.js"],"names":["React","Component","Table","TableBody","TableCell","TableHead","TableRow","Paper","fetchMasterExistingBusiness","fetchAddressDetailsBasedOnPincode","saveExistingBusiness","fetchExistingBusinessDetails","submitAddressData","fetchAddressData","FormControlLabel","Grid","RadioGroup","Radio","TextField","Button","FormControl","InputLabel","SingleSelect","Address","UserContext","underscore","AlertDialog","alertDialogOptions","message","ExistingBusiness","constructor","props","event","preventDefault","state","address","engagementId","validateMainQuestions","validateSubQuestions","JSON","stringify","answers","then","jsondata","setState","alertDialogFlag","jsonObjects","parse","data","color","history","push","pathname","dbUserId","status","tab","existingBusinessQuestions","district","pincodes","city","village","id","createdBy","userid","pincode","addressLine1","addressLine2","cityName","villageName","radioValue1","radioValue2","radioValue12","radioValue17","radioValue21","radioValue23","radioValue11","radioValue6","mandatoryFields","linkedEngagementId","defaultProgramId","i","length","answer","questionId","radioValue","response","localThis","jsonobjects","type","Object","keys","forEach","key","toString","taluk","cityVillage","states","map","item","label","value","uniq","design","row","split","visibility","userInteraction","subQuestions","document","querySelectorAll","includes","subQuestion","style","display","onRadioGroupChange","bind","handleSelectChange","displaySelectedData","maxLength","handleInputChange","addressLine","getPincodeData","handleAddressSelectChange","target","hideSubQuestions","showSubQuestions","alreadyAnswered","answersArray","name","validate","console","log","array","className","splice","selectname","e","isSubmit","getUniqueArray","error","dataPresent","j","getElementById","innerHTML","uniqueArray","indexOf","fieldValue","fieldType","render","width","subQuestionId","question"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {fetchMasterExistingBusiness,fetchAddressDetailsBasedOnPincode,saveExistingBusiness,fetchExistingBusinessDetails,submitAddressData,fetchAddressData} from './../util/api';\r\nimport {FormControlLabel, Grid , RadioGroup, Radio,TextField,Button,FormControl,InputLabel}  from '@material-ui/core';\r\nimport { SingleSelect } from \"react-select-material-ui\";\r\nimport Address from \"./Address\";\r\nimport UserContext from '../components/GolbalContext'\r\nimport underscore from 'underscore';\r\nimport AlertDialog from './../util/AlertDialog';\r\nconst alertDialogOptions = {\r\n  message: ''\r\n}\r\n\r\n\r\nclass ExistingBusiness extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {existingBusinessQuestions:[],answers:[],\r\n            state : [],\r\n            district : [],\r\n            pincodes:[],   \r\n            city:[],\r\n            village:[],\r\n            address : {id:\"0\",createdBy : UserContext.userid,'isActive' : 'Y','type' : 'EB' , pincode : \"\" , addressLine1 : \"\" , addressLine2 : \"\" , district : \"\" , state : \"\" , cityName : \"\", villageName : \"\"},\r\n            engagementId : props.engagementId,dbUserId : props.id,\r\n            radioValue1:'',radioValue2:'',radioValue12:'',radioValue17:'',radioValue21:'',radioValue23:'',radioValue11:'',radioValue6:'',\r\n            mandatoryFields :[],linkedEngagementId:props.linkedEngagementId\r\n            };\r\n        fetchMasterExistingBusiness().then((jsondata)=>{\r\n            var jsonObjects=JSON.parse(jsondata.data);\r\n            this.setState({existingBusinessQuestions:jsonObjects});\r\n         })\r\n\r\n         fetchExistingBusinessDetails((UserContext.defaultProgramId === 1 || UserContext.defaultProgramId === 9) ?this.state.linkedEngagementId:this.state.engagementId).then((jsondata)=>{\r\n          var jsonObjects=JSON.parse(jsondata.data);\r\n          this.setState({answers:jsonObjects});\r\n          for(var i=0;i<jsonObjects.length;i++)\r\n          {\r\n            var answer=jsonObjects[i];\r\n            if(answer.questionId==\"1\" || answer.questionId==\"2\" || answer.questionId==\"12\" || answer.questionId==\"17\"\r\n               || answer.questionId==\"21\" || answer.questionId==\"23\" || answer.questionId==\"6\" || answer.questionId==\"11\"){\r\n            var radioValue=\"radioValue\"+answer.questionId;\r\n            this.setState({[radioValue]:answer.response});\r\n            }           \r\n          \r\n          }\r\n        })\r\n\r\n\r\n        fetchAddressData(this.state.engagementId).then((jsondata)=>{\r\n\r\n         let localThis=this;\r\n\r\n          let jsonobjects = JSON.parse(jsondata.data);\r\n          for (var i=0;i<jsonobjects.length;i++){\r\n              if(jsonobjects[i].type==\"EB\"){\r\n                Object.keys(jsonobjects[i]).forEach(function(key) {\r\n                  localThis.setState({\r\n                      address: {\r\n                        ...localThis.state.address,\r\n                        [key]: jsonobjects[i][key].toString()\r\n                      }\r\n                    })\r\n                  \r\n\r\n                    fetchAddressDetailsBasedOnPincode(jsonobjects[i].pincode).then((jsondata)=>{    \r\n                      let jsonobjects = JSON.parse(jsondata.data);\r\n                      let taluk=[];\r\n                      let pincode=[]; \r\n                      let cityVillage=[]; \r\n                      let states=[];  \r\n                      let district=[]; \r\n               \r\n                      jsonobjects.map(item => { cityVillage.push({label: item.cityVillage, value: item.cityVillage})});\r\n                      cityVillage=underscore.uniq(cityVillage,true,\"label\");\r\n                      jsonobjects.map(item => {taluk.push({label: (item.taluk).toString(), value: item.taluk})});          \r\n                      taluk=underscore.uniq(taluk,true,\"label\");\r\n                      jsonobjects.map(item => {states.push({label: item.state, value: (item.state).toString()})});          \r\n                      states=underscore.uniq(states,true,\"label\");\r\n                      jsonobjects.map(item => {district.push({label: item.district, value: (item.district).toString()})});          \r\n                      district=underscore.uniq(district,true,\"label\");\r\n                      localThis.setState({\r\n                        state : states,\r\n                        district : district ,  \r\n                        village :  cityVillage,\r\n                        city : taluk\r\n                      })\r\n               \r\n                     })\r\n\r\n\r\n\r\n                })\r\n              }\r\n          }\r\n\r\n        });\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\ndesign(row){\r\nvar data=\"\";\r\nif(row.data){\r\n    data=row.data.split(\":\");;\r\n}\r\n\r\nif(row.visibility==\"\"){\r\n  this.state.mandatoryFields.push(row.id);\r\n}\r\n\r\n\r\nif(row.userInteraction==\"Radio\" && data.length>2){\r\n  var answers=[...this.state.answers];\r\n  var radioValue=\"\";\r\n  if(row.id==\"1\"){\r\n     radioValue=this.state.radioValue1             \r\n   }\r\n  else if (row.id==\"6\"){\r\n    radioValue=this.state.radioValue6\r\n  }\r\n\r\n  else if (row.id==\"11\"){\r\n    radioValue=this.state.radioValue11\r\n  }\r\n\r\n\r\n  else if (row.id==\"21\"){\r\n    radioValue=this.state.radioValue21\r\n  }\r\n\r\n  else if (row.id==\"23\"){\r\n    radioValue=this.state.radioValue23\r\n  }\r\n\r\n  \r\n  var subQuestions=document.querySelectorAll('[id^=\"'+row.id+'_\"]');\r\n  for(var i=0;i<answers.length;i++){ \r\n   if(answers[i].questionId==row.id && answers[i].response==radioValue && radioValue.includes(\"Yes\")){        \r\n     subQuestions.forEach(function(subQuestion) {\r\n        subQuestion.style.display=\"\"; \r\n     })      \r\n      }\r\n     }\r\n  \r\n\r\n // this.displaySelectedData(data[0],row.id,\"Radio\");\r\n    return <RadioGroup row  name={row.id} id={row.id} required  onChange={this.onRadioGroupChange.bind(this)}>\r\n    <FormControlLabel value={data[0]}  control={<Radio/>} label={data[0]}  //onClick={this.showSubQuestions.bind(this)} \r\n    checked={ data[0]==radioValue} />\r\n    <FormControlLabel value={data[1]} control={<Radio/>} label={data[1]}  //onClick={this.hideSubQuestions.bind(this)} \r\n    checked={data[1]==radioValue}\r\n    />\r\n    <FormControlLabel value={data[2]} control={<Radio/>} label={data[2]}  //onClick={this.hideSubQuestions.bind(this)} \r\n    checked={data[2]==radioValue}\r\n    /></RadioGroup> \r\n}\r\n\r\nelse if(row.userInteraction==\"Radio\" && data.length>1){\r\n  var answers=[...this.state.answers];\r\n\r\n  var radioValue=\"\";\r\n  \r\n  if(row.id==\"2\"){\r\n     radioValue=this.state.radioValue2             \r\n   }\r\n\r\nelse if(row.id==\"12\"){\r\n  radioValue=this.state.radioValue12   \r\n}\r\n\r\nelse if(row.id==\"17\"){\r\n  radioValue=this.state.radioValue17   \r\n}\r\n\r\n\r\n   var subQuestions=document.querySelectorAll('[id^=\"'+row.id+'_\"]');\r\n   for(var i=0;i<answers.length;i++){ \r\n    if(answers[i].questionId==row.id && answers[i].response==radioValue && radioValue.includes(\"Yes\")){        \r\n      subQuestions.forEach(function(subQuestion) {\r\n         subQuestion.style.display=\"\"; \r\n      })      \r\n       }\r\n      }\r\n\r\n  \r\n  return  <RadioGroup row  name={row.id} id={row.id} required  onChange={this.onRadioGroupChange.bind(this)}>\r\n    <FormControlLabel value={data[0]}  control={<Radio/>} label={data[0]}  // onClick={this.showSubQuestions.bind(this)} \r\n    checked={data[0]==radioValue}\r\n    />\r\n    <FormControlLabel value={data[1]} control={<Radio/>} label={data[1]} // onClick={this.hideSubQuestions.bind(this)} \r\n    checked={data[1]==radioValue}\r\n    />\r\n         </RadioGroup>\r\n}\r\n\r\n\r\nelse if (row.userInteraction==\"drop down\"){\r\nreturn    <SingleSelect  isClearable={true}  name={row.id} id={row.id}\r\n          options={data} onChange={this.handleSelectChange.bind(this,row.id)}   key={this.displaySelectedData(row.data,row.id,\"drop down\")}  value={this.displaySelectedData(row.data,row.id,\"drop down\")}/>\r\n}\r\n\r\nelse if (row.userInteraction==\"text box\"){\r\nreturn  <TextField inputProps={{maxLength: row.maxLength}}  type=\"text\" name = {row.id} id = {row.id} \r\n //  key={this.displaySelectedData('',row.id,\"text box\")}\r\n   onChange={this.handleInputChange.bind(this)}  value={this.displaySelectedData('',row.id,\"text box\")} />\r\n}\r\n\r\nelse if(row.userInteraction==\"Address\"){\r\n\r\n    return  <Grid container spacing={2}>\r\n      <Grid item xs={12} sm={4}>\r\n    <FormControl> \r\n            <TextField   type=\"text\" name=\"addressLine1\" id=\"addressLine1\" label = \"Address Line 1\" maxLength = \"20\"\r\n              value={this.state.address.addressLine1}  onChange={this.addressLine.bind(this, 'addressLine1')}/>\r\n            </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n            <FormControl>\r\n            <TextField   type=\"text\" name=\"addressLine2\" id=\"addressLine2\" label = \"Address Line 2\" maxLength = \"20\" \r\n              value={this.state.address.addressLine2}   onChange={this.addressLine.bind(this, 'addressLine2')}/>\r\n            </FormControl>\r\n           </Grid>  \r\n           <Grid item xs={12} sm={4}>\r\n            <FormControl>\r\n            <TextField   type=\"number\" label = \"Pincode\"   name=\"pincode\" id=\"pincode\"  \r\n             onChange={this.getPincodeData.bind(this, 'pincode')} value = {this.state.address.pincode || ''}/>\r\n            </FormControl>\r\n           </Grid>\r\n           <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} for=\"village\">Village</InputLabel>\r\n            <SingleSelect  name=\"villageName\" id=\"villageName\" options={this.state.village} \r\n          value={this.state.address.villageName}  onChange={this.handleAddressSelectChange.bind(this, 'villageName')}/> \r\n           </Grid>\r\n           <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} for=\"city\">City</InputLabel>\r\n            <SingleSelect  name=\"cityName\" id=\"cityName\" options={this.state.city} \r\n            value={this.state.address.cityName} onChange={this.handleAddressSelectChange.bind(this, 'cityName')}/> \r\n           </Grid>\r\n           <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} for=\"District\">District</InputLabel>\r\n            <SingleSelect  name=\"district\" id=\"district\" options={this.state.district}\r\n            value={this.state.address.district}  onChange={this.handleAddressSelectChange.bind(this, 'district')}/> \r\n           </Grid>\r\n           <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} for=\"State\">State</InputLabel>\r\n            <SingleSelect  name=\"state\" id=\"state\"  options={this.state.state} \r\n             value={this.state.address.state}  onChange={this.handleAddressSelectChange.bind(this, 'state')}/> \r\n           </Grid>\r\n           </Grid>\r\n\r\n}\r\n}\r\n\r\n\r\nonRadioGroupChange(event){\r\nif(event.target.value==\"No\" || event.target.value==\"NO\" || event.target.value==\"Don’t Know\"){\r\n  this.hideSubQuestions(event);\r\n}\r\nelse{\r\n  this.showSubQuestions(event);\r\n}\r\n\r\n\r\n//this.validateSubQuestions()\r\n\r\n}\r\n\r\nshowSubQuestions(event){\r\n   var alreadyAnswered=false;\r\n   const answersArray = [...this.state.answers];\r\n   var name=event.target.name\r\n   var value=event.target.value\r\n   var radioValue=\"radioValue\"+name;\r\n   this.setState({[radioValue]:value});\r\n\r\n  for( var i = 0; i < answersArray.length; i++){\r\n    if ( answersArray[i].questionId == name) { \r\n      answersArray[i].response = value;\r\n      this.setState({ answers: answersArray });\r\n      alreadyAnswered=true;\r\n    }\r\n  }\r\n\r\n\r\n   if(!alreadyAnswered){\r\n    var data= {\"questionId\":name,\"response\":value,\"studentId\":this.state.dbUserId,\"engagementId\":this.state.engagementId}\r\n    this.setState({ \r\n   answers: [...this.state.answers, data] \r\n    },()=>{this.validate(name);\r\n    })\r\n   }\r\n\r\nvar subQuestions=document.querySelectorAll('[id^=\"'+name+'_\"]');\r\nsubQuestions.forEach(function(subQuestion) {\r\n    subQuestion.style.display=\"\";\r\n});\r\n\r\n\r\n\r\n}\r\n\r\nhideSubQuestions(event){\r\n\r\n\r\n  var alreadyAnswered=false;\r\n  const answersArray = [...this.state.answers];\r\n  var name=event.target.name\r\n  var value=event.target.value\r\n\r\n  var radioValue=\"radioValue\"+name;\r\n  this.setState({[radioValue]:value});\r\n\r\n  for( var i = 0; i < answersArray.length; i++){\r\n    if (answersArray[i].questionId == name) { \r\n     answersArray[i].response = value;\r\n     this.setState({ answers: answersArray });\r\n     console.log(this.state.answers[i].response);\r\n     alreadyAnswered=true;\r\n  }\r\n  }\r\n\r\n\r\n\r\nconst array = [...this.state.answers];\r\n\r\n  if(!alreadyAnswered){\r\n    var data= {\"questionId\":name,\"response\":value,\"studentId\":this.state.dbUserId,\"engagementId\":this.state.engagementId}\r\n    array.push(data);\r\n   // this.setState({answers: [...this.state.answers, data]},()=>{console.log(\"lenght is\"+this.state.answers.length)});  \r\n\r\n//   this.setState({ answers: array },()=>{console.log(\"lenght is:\"+this.state.answers.length)});\r\n\r\n  }\r\n\r\n\r\n  var subQuestions=document.querySelectorAll('[id^=\"'+name+'_\"]');\r\n   let localThis=this;\r\n  subQuestions.forEach(function(subQuestion) {\r\n     var id =subQuestion.className.split(\" \")[1];\r\n     for( var i = 0; i < array.length; i++){\r\n        if ( array[i].questionId == id) { \r\n        console.log(\"id value is :\"+id);\r\n          array.splice(i, 1); \r\n        }\r\n      }\r\n      subQuestion.style.display=\"none\";\r\n    })\r\n    this.setState({ answers: array },()=>{this.validate(name)});\r\n  }\r\n\r\ngetPincodeData(selectname, event) {\r\n    let value = 0 ;\r\n    let target = null;\r\n    try {\r\n      target = event.target;\r\n      value =  target.value;\r\n    }\r\n   catch(e)\r\n   {\r\n    value =  event;\r\n   }\r\n\r\n      this.setState({\r\n        address: {\r\n          ...this.state.address,\r\n          \"pincode\": value\r\n        }\r\n      })\r\n\r\n   if(value.length==6){         \r\n     fetchAddressDetailsBasedOnPincode(value).then((jsondata)=>{    \r\n       let jsonobjects = JSON.parse(jsondata.data);\r\n       let taluk=[];\r\n       let pincode=[]; \r\n       let cityVillage=[]; \r\n       let states=[];  \r\n       let district=[]; \r\n\r\n       jsonobjects.map(item => { cityVillage.push({label: item.cityVillage, value: item.cityVillage})});\r\n       cityVillage=underscore.uniq(cityVillage,true,\"label\");\r\n       jsonobjects.map(item => {taluk.push({label: (item.taluk).toString(), value: item.taluk})});          \r\n       taluk=underscore.uniq(taluk,true,\"label\");\r\n       jsonobjects.map(item => {states.push({label: item.state, value: (item.state).toString()})});          \r\n       states=underscore.uniq(states,true,\"label\");\r\n       jsonobjects.map(item => {district.push({label: item.district, value: (item.district).toString()})});          \r\n       district=underscore.uniq(district,true,\"label\");\r\n       this.setState({\r\n         state : states,\r\n         district : district ,  \r\n         village :  cityVillage,\r\n         city : taluk\r\n       })\r\n\r\n      })\r\n    }\r\n      \r\n  }\r\n\r\n\r\n  handleSelectChange(name, value) {\r\n    var alreadyAnswered=false;\r\n    var answersArray=[...this.state.answers];\r\n    for(var i=0;i<answersArray.length;i++){\r\n      if(answersArray[i].questionId==name){\r\n        answersArray[i].response=value;\r\n        this.setState({ answers: answersArray });\r\n        alreadyAnswered=true;\r\n      }\r\n      \r\n    }\r\n\r\n   if(!alreadyAnswered){\r\n\r\n    var data= {\"questionId\":name,\"response\":value,\"studentId\":this.state.dbUserId,\"engagementId\":this.state.engagementId}\r\n    this.setState({ answers: [...this.state.answers, data] },()=>{\r\n      this.validate(name);\r\n    });\r\n  }\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  addressLine(name, event) {\r\n     const target = event.target;\r\n     const value =  target.value;\r\n\r\nthis.setState({address: {\r\n               ...this.state.address,\r\n               [name]: value}\r\n})\r\n}\r\n\r\n\r\nhandleAddressSelectChange(selectname, event) {\r\n  this.setState({\r\n    address: {\r\n      ...this.state.address,\r\n      [selectname]: event\r\n    }\r\n  })\r\n}\r\n\r\n  handleInputChange(event) {\r\n    var alreadyAnswered=false;\r\n    const target = event.target;\r\n    const value =  target.value;\r\n    const name = target.name;\r\n     var answersArray=[...this.state.answers];\r\n    for(var i=0;i<answersArray.length;i++){\r\n      if(answersArray[i].questionId==name){\r\n        answersArray[i].response=value;\r\n        this.setState({ answers: answersArray });\r\n        alreadyAnswered=true;\r\n      }\r\n      \r\n    }\r\n\r\n   if(!alreadyAnswered){\r\n      var data= {\"questionId\":name,\"response\":value,\"studentId\":this.state.dbUserId,\"engagementId\":this.state.engagementId}\r\n      this.setState({ answers: [...this.state.answers, data] },()=>{ this.validate(name)});\r\n   }\r\n \r\n    }\r\n\r\n\r\nvalidateMainQuestions(){\r\n  var isSubmit=true;\r\n  var mandatoryFields=this.getUniqueArray(this.state.mandatoryFields);\r\n  var  response=this.state.answers;\r\nfor(var i=0;i<mandatoryFields.length;i++){\r\n  var error=\"error\"+mandatoryFields[i];\r\n  var dataPresent=false;\r\n if(response.length>0){\r\n  for(var j=0;j<response.length;j++){\r\n   if(mandatoryFields[i]==response[j].questionId){\r\n    dataPresent=true;\r\n    document.getElementById(error).innerHTML=\"\";\r\n   }\r\n  }\r\n  if(!dataPresent){\r\n    isSubmit=false;\r\n   document.getElementById(error).innerHTML=\"Please provide data\";\r\n  }\r\n }\r\nelse {\r\n  isSubmit=false;\r\n  document.getElementById(error).innerHTML=\"Please provide data\";\r\n\r\n}\r\n}\r\nreturn isSubmit;\r\n}\r\n\r\n\r\nvalidateSubQuestions(){\r\n  var isSubmit=true;\r\n  var localThis=this;\r\n  var answers=this.state.answers;\r\n   for(var i=0;i<answers.length;i++){\r\n    var answer=answers[i];\r\n    if(answer.response.includes(\"Yes\")){\r\n      var subQuestions=document.querySelectorAll('[id^=\"'+answer.questionId+'_\"]');\r\n     subQuestions.forEach(function(subQuestion) {\r\n        var id =subQuestion.className.split(\" \")[1];\r\n        var dataPresent=false;\r\n        var error=\"error\"+id;\r\n        for(var j=0;j<answers.length;j++){\r\n          if(answers[j].questionId==id && id!=\"3\"){\r\n            dataPresent=true;\r\n            document.getElementById(error).innerHTML=\"\";\r\n          }\r\n          else if(id==\"3\"){\r\nif(localThis.state.address.addressLine1!=\"\" \r\n&& localThis.state.address.addressLine2!=\"\" && localThis.state.address.pincode!=\"\" \r\n  &&  localThis.state.address.cityName!=\"\" && localThis.state.address.villageName!=\"\" && localThis.state.address.district!=\"\"\r\n  && localThis.state.address.state!=\"\"\r\n ){\r\n   document.getElementById(\"error3\").innerHTML=\"\";\r\n   dataPresent=true;\r\n   isSubmit=true;\r\n}\r\n   else {\r\n       document.getElementById(\"error3\").innerHTML=\"Please provide data\"; \r\n       }\r\n \r\n\r\n}\r\n\r\n        }\r\n        if(!dataPresent){\r\n          isSubmit=false;\r\n         document.getElementById(error).innerHTML=\"Please provide data\";\r\n        }\r\n         })\r\n    }\r\n   }\r\nreturn isSubmit;\r\n}\r\n\r\n\r\n\r\n\r\nvalidate(id){\r\n  var answers=this.state.answers;\r\n  for(let i=0;i<answers.length;i++){\r\n   if(answers[i].questionId==id){\r\n    var error=\"error\"+id;\r\n    document.getElementById(error).innerHTML=\"\";\r\n   }\r\n  }\r\n}\r\n\r\n\r\nsaveExistingBusiness = (event) => {\r\n    event.preventDefault();\r\n\r\n    this.state.address =  {\r\n      ...this.state.address,\r\n      'entityId': this.state.engagementId,\r\n      \"entityType\" : \"S\"\r\n    }\r\n\r\n    this.validateMainQuestions();\r\n     this.validateSubQuestions()\r\n\r\n\r\nif(this.validateMainQuestions() && this.validateSubQuestions()){\r\n    saveExistingBusiness(JSON.stringify(this.state.answers)).then((jsondata)=>{\r\n      this.setState({alertDialogFlag:false});\r\n      var jsonObjects=JSON.parse(jsondata.data);\r\n      alertDialogOptions.message=<span style={{color:\"green\"}}>Data Saved Sucessfully</span>;\r\n      this.setState({alertDialogFlag:true});\r\n    })\r\n\r\n    submitAddressData(\"updateAddress\",this.state.address).then((jsondata)=>{});\r\n\r\n\r\n    this.props.history.push({\r\n      pathname: '/dashboard/updatebeneficiary',\r\n      state: { dbUserId: this.state.dbUserId,engagementId:this.state.engagementId, status : this.state.status , tab : 7 }\r\n    })\r\n\r\n  }\r\n  \r\n}\r\n\r\n  getUniqueArray(array){\r\n    var uniqueArray = [];\r\n    \r\n    for(var i=0; i < array.length; i++){\r\n        if(uniqueArray.indexOf(array[i]) === -1) {\r\n            uniqueArray.push(array[i]);\r\n        }\r\n    }\r\n    return uniqueArray;\r\n}\r\n\r\n\r\n\r\n\r\ndisplaySelectedData(fieldValue,id,fieldType){\r\n   var answers=[...this.state.answers];\r\n   var response='';\r\n   let radioValue='';\r\n   if(fieldType==\"Radio\"){\r\n    var subQuestions=document.querySelectorAll('[id^=\"'+id+'_\"]');\r\n    for(var i=0;i<answers.length;i++){ \r\n      if(answers[i].questionId==id && answers[i].response==fieldValue){        \r\n        subQuestions.forEach(function(subQuestion) {\r\n           subQuestion.style.display=\"\"; \r\n        })       \r\n       return true;\r\n         }\r\n        }\r\n   }\r\n\r\n   else if(fieldType==\"drop down\"){\r\n   const value =fieldValue.toString().split(\":\");\r\n    for(var i=0;i<answers.length;i++){\r\n     if(answers[i].questionId==id){\r\n      for(var j=0;j<value.length;j++){  \r\n        if(answers[i].response==value[j]){\r\n          return answers[i].response;\r\n        }\r\n      }\r\n     }\r\n    }\r\n    return \"\";\r\n   }  \r\n\r\n   else if(fieldType==\"text box\"){\r\n    for(var i=0;i<answers.length;i++){\r\n      if(answers[i].questionId==id){\r\n        return answers[i].response;\r\n      }\r\n    }\r\n    return \"\";\r\n    }\r\n}\r\n\r\n\r\n    render() {      \r\n        return (\r\n            <div>\r\n                <form onSubmit={this.saveExistingBusiness} method=\"post\">\r\n \r\n<Paper >\r\n      <Table  aria-label=\"simple table\" style={{ width:\"100%\"}}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell style={{ width:\"60%\"}}>Question</TableCell>\r\n            <TableCell style={{ width:\"40%\"}}>Response</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {this.state.existingBusinessQuestions.map(row => (\r\n            <TableRow key={row.id} className={row.id}   id={row.subQuestionId} style={{display:row.visibility}}>\r\n            <TableCell>\r\n             {row.question==null?row.subQuestion:row.question} <sup><font color=\"red\" size=\"4px\">*</font></sup>\r\n             </TableCell>    \r\n              <TableCell>\r\n               {this.design(row)}\r\n               <div  id={\"error\"+row.id} style={{color:\"red\"}}></div>\r\n             </TableCell>    \r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper> \r\n\r\n<br/>\r\n\r\n    <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"flex-end\">\r\n<Button variant=\"contained\" type=\"submit\"  color=\"primary\" size=\"small\" >Save</Button>\r\n</Grid>\r\n     \r\n </form>\r\n\r\n { \r\n  (this.state.alertDialogFlag) && <AlertDialog   message={alertDialogOptions.message}></AlertDialog>\r\n    }\r\n\r\n\r\n\r\n       </div>\r\n        )\r\n    }\r\n}\r\nexport default ExistingBusiness;"]},"metadata":{},"sourceType":"module"}