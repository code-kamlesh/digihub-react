{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\UserProfile.js\";\nimport React, { Component } from 'react';\nimport { FormControl, InputLabel, Input, Grid, TextField, Button } from '@material-ui/core';\nimport { SingleSelect } from \"react-select-material-ui\";\nimport { fectUserDetails, fetcRoleDetails, fectUserRoleDetails, fectAddressDetails, fetchAllStateDetails, fetchAddressDetailsBasedOnPincode, saveUserDetails, saveAddressDetails } from './../util/api';\nimport UserContext from '../components/GolbalContext';\nimport { isNotEmpty } from './../util/validation';\nimport Address from \"./Address\";\nimport underscore from 'underscore';\nimport AlertDialog from './../util/AlertDialog';\nimport { serviceEndPoint } from './../util/serviceEndPoint'; // import {DropzoneArea} from 'material-ui-dropzone';\n\nimport ErrorBoundary from './../util/ErrorBoundary';\nconst alertDialogOptions = {\n  message: ''\n};\nexport default class UserProfile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = (name, value) => {\n      let errors = this.state.errors;\n\n      switch (name) {\n        case 'firstName':\n          errors.firstName = isNotEmpty(value);\n          break;\n\n        case 'middleName':\n          errors.middleName = isNotEmpty(value);\n          break;\n\n        case 'lastName':\n          errors.lastName = isNotEmpty(value);\n          break;\n\n        case 'dob':\n          errors.dob = isNotEmpty(value);\n          break;\n\n        case 'emailAddress':\n          errors.emailAddress = isNotEmpty(value);\n          break;\n\n        case 'primaryContactNumber':\n          errors.primaryContactNumber = isNotEmpty(value);\n          break;\n\n        case 'addressLine1':\n          errors.addressLine1 = isNotEmpty(value);\n          break;\n\n        case 'addressLine2':\n          errors.addressLine2 = isNotEmpty(value);\n          break;\n\n        case 'pincode':\n          errors.pincode = isNotEmpty(value);\n          break;\n\n        case 'villageName':\n          errors.village = isNotEmpty(value);\n          break;\n\n        case 'cityName':\n          errors.cityName = isNotEmpty(value);\n          break;\n\n        case 'state':\n          errors.state = isNotEmpty(value);\n          break;\n\n        case 'district':\n          errors.district = isNotEmpty(value);\n          break;\n\n        default:\n          break;\n      } // this.setState({errors, [name]: value});\n\n\n      this.setState({\n        errors\n      });\n    };\n\n    this.saveDetails = event => {\n      event.preventDefault();\n      const dbUserId = UserContext.userid;\n      this.setState({\n        address: { ...this.state.address,\n          'id': dbUserId\n        }\n      });\n      this.setState({\n        alertDialogFlag: false\n      });\n\n      if (this.validateForm(this.state.errors)) {\n        saveUserDetails(JSON.stringify(this.state.profileData)).then(jsondata => {});\n        saveAddressDetails(JSON.stringify(this.state.address)).then(jsondata => {\n          console.log(this.state.state);\n          alertDialogOptions.message = /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: \"green\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 32\n            }\n          }, \"Data Saved Sucessfully\");\n          this.setState({\n            alertDialogFlag: true\n          });\n        });\n      }\n    };\n\n    this.validateForm = errors => {\n      const localProfileData = this.state.profileData;\n      const localAddress = this.state.address;\n      let localThis = this;\n      Object.keys(localProfileData).forEach(function (key) {\n        localThis.validate(key, localProfileData[key]);\n      });\n      Object.keys(localAddress).forEach(function (key) {\n        localThis.validate(key, localAddress[key]);\n      });\n      let valid = true;\n      Object.values(errors).forEach( // if we have an error string set valid to false\n      val => val.length > 0 && (valid = false));\n      return valid;\n    };\n\n    this.state = {\n      roleDetails: [],\n      address: {},\n      profileData: {\n        userName: '',\n        firstName: '',\n        middleName: '',\n        lastName: '',\n        emailAddress: '',\n        primaryContactNumber: '',\n        id: UserContext.userid //,documentFile:null\n\n      },\n      state: [],\n      district: [],\n      pincodes: [],\n      city: [],\n      village: [],\n      errors: {\n        firstName: '',\n        middleName: '',\n        lastName: '',\n        dob: '',\n        primaryContactNumber: '',\n        emailAddress: '',\n        addressLine1: '',\n        addressLine2: '',\n        pincode: '',\n        village: '',\n        cityName: '',\n        state: '',\n        district: ''\n      }\n    };\n    this.formData = {\n      state: [],\n      district: [],\n      pincodes: [],\n      city: [],\n      village: []\n    };\n    fectUserDetails(UserContext.userid).then(jsondata => {\n      let jsonobjects = JSON.parse(jsondata.data);\n      this.setState({\n        profileData: jsonobjects[0]\n      });\n    });\n    fectAddressDetails(UserContext.userid).then(jsondata => {\n      let jsonobjects = JSON.parse(jsondata.data);\n      fetchAddressDetailsBasedOnPincode(jsonobjects[0].pincode).then(jsondata => {\n        let jsonobjects = JSON.parse(jsondata.data);\n        let taluk = [];\n        let cityVillage = [];\n        let states = [];\n        let district = [];\n        this.formData.village.length = 0;\n        this.formData.pincodes.length = 0;\n        this.formData.city.length = 0;\n        this.formData.state.length = 0;\n        this.formData.district.length = 0;\n        jsonobjects.map(item => {\n          cityVillage.push({\n            label: item.cityVillage,\n            value: item.id\n          });\n        });\n        cityVillage = underscore.uniq(cityVillage, true, \"label\");\n        cityVillage.map(item => {\n          this.formData.village.push({\n            label: item.label,\n            value: item.label.toString()\n          });\n        });\n        this.setState({\n          village: this.formData.village\n        });\n        jsonobjects.map(item => {\n          taluk.push({\n            label: item.taluk,\n            value: item.id\n          });\n        });\n        taluk = underscore.uniq(taluk, true, \"label\");\n        taluk.map(item => {\n          this.formData.city.push({\n            label: item.label,\n            value: item.label.toString()\n          });\n        });\n        this.setState({\n          city: this.formData.city\n        });\n        jsonobjects.map(item => {\n          states.push({\n            label: item.state,\n            value: item.id\n          });\n        });\n        states = underscore.uniq(states, true, \"label\");\n        states.map(item => {\n          this.formData.state.push({\n            label: item.label.toString(),\n            value: item.label.toString()\n          });\n        });\n        this.setState({\n          state: this.formData.state\n        }, () => {\n          console.log(this.state.state);\n        });\n        jsonobjects.map(item => {\n          district.push({\n            label: item.district,\n            value: item.id\n          });\n        });\n        district = underscore.uniq(district, true, \"label\");\n        district.map(item => {\n          this.formData.district.push({\n            label: item.label,\n            value: item.label.toString()\n          });\n        });\n        this.setState({\n          district: this.formData.district\n        });\n      });\n      this.setState({\n        address: jsonobjects[0]\n      });\n    });\n    fetchAllStateDetails().then(jsondata => {\n      let jsonobjects = JSON.parse(jsondata.data);\n      jsonobjects.map(item => {\n        this.formData.state.push({\n          label: item.name,\n          value: item.id\n        });\n      });\n    });\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      profileData: { ...this.state.profileData,\n        [name]: value\n      }\n    });\n    this.validate(name, value);\n  }\n\n  handleAddressInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      address: { ...this.state.address,\n        [name]: value\n      }\n    });\n    this.validate(name, value);\n  }\n\n  handleAddressSelectChange(selectname, event) {\n    this.setState({\n      address: { ...this.state.address,\n        [selectname]: event\n      }\n    });\n    this.validate(selectname, event);\n  }\n\n  getPincodeData(selectname, event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      address: { ...this.state.address,\n        [name]: value\n      }\n    });\n    this.validate(name, value);\n\n    if (value.length == 6) {\n      // let requestFormData = new FormData();\n      // requestFormData.append('data', '{\"token\" : \"\", \"action\" : \"findpincode\", \"data\" : [{\"pincode\":' + value + '}]}');\n      // fetch(\"http://playground.tatastrive.com/services-v1/cityvillageservice\", {\n      //   method: \"POST\",\n      //   body: requestFormData,\n      // }).then(response => response.json())\n      fetchAddressDetailsBasedOnPincode(value).then(jsondata => {\n        let jsonobjects = JSON.parse(jsondata.data);\n        let taluk = [];\n        let pincode = [];\n        let cityVillage = [];\n        let states = [];\n        let district = [];\n        this.formData.village.length = 0;\n        this.formData.pincodes.length = 0;\n        this.formData.city.length = 0;\n        this.formData.state.length = 0;\n        this.formData.district.length = 0;\n        jsonobjects.map(item => {\n          cityVillage.push({\n            label: item.cityVillage,\n            value: item.id\n          });\n        });\n        cityVillage = underscore.uniq(cityVillage, true, \"label\");\n        cityVillage.map(item => {\n          this.formData.village.push({\n            label: item.label,\n            value: item.label.toString()\n          });\n        });\n        this.setState({\n          village: { ...this.state.village,\n            village: this.formData.village\n          }\n        });\n        jsonobjects.map(item => {\n          taluk.push({\n            label: item.taluk,\n            value: item.id\n          });\n        });\n        taluk = underscore.uniq(taluk, true, \"label\");\n        taluk.map(item => {\n          this.formData.city.push({\n            label: item.label,\n            value: item.label.toString()\n          });\n        });\n        this.setState({\n          city: { ...this.state.city,\n            city: this.formData.city\n          }\n        });\n        jsonobjects.map(item => {\n          states.push({\n            label: item.state,\n            value: item.id\n          });\n        });\n        states = underscore.uniq(states, true, \"label\");\n        states.map(item => {\n          this.formData.state.push({\n            label: item.label,\n            value: item.value.toString()\n          });\n        });\n        this.setState({\n          state: { ...this.state.state,\n            state: this.formData.state\n          }\n        });\n        jsonobjects.map(item => {\n          district.push({\n            label: item.district,\n            value: item.id\n          });\n        });\n        district = underscore.uniq(district, true, \"label\");\n        district.map(item => {\n          this.formData.district.push({\n            label: item.label,\n            value: item.value.toString()\n          });\n        });\n        this.setState({\n          district: { ...this.state.district,\n            district: this.formData.district\n          }\n        });\n      });\n    }\n  } // onFileChangeHandler = (files) => {\n  //   this.setState({\n  //    documentFile: files[0]\n  //  });\n  //  }\n\n\n  submitAddress() {\n    let action = \"\";\n    const dbUserId = UserContext.userid;\n    this.setState({\n      address: { ...this.state.address,\n        'dbUserId': dbUserId\n      }\n    });\n    let formData = new FormData();\n    formData.append('data', '{\"token\" : \"' + \"1234\" + '\", \"action\" : \"updateAddress\", \"data\" : [' + JSON.stringify(this.state.address) + ']}');\n    return fetch(serviceEndPoint.addressServiceEndPoint, {\n      method: \"POST\",\n      headers: {\n        'Authorization': 'Bearer ' + UserContext.token\n      },\n      body: formData\n    }).then(response => response.json()).then(jsondata => {\n      alert(jsondata[0]);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ErrorBoundary, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.saveDetails,\n      method: \"post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      style: {\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 17\n      }\n    }, \"User Profile\"))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      for: \"firstName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 17\n      }\n    }, \"User Name \"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"userName\",\n      id: \"userName\",\n      value: this.state.profileData.userName,\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      name: \"firstName\",\n      id: \"firstName\",\n      error: this.state.errors.firstName == '' ? false : true,\n      helperText: this.state.errors.firstName,\n      label: \"First Name\",\n      onChange: this.handleInputChange.bind(this),\n      value: this.state.profileData.firstName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      name: \"middleName\",\n      id: \"middleName\",\n      label: \"Middle Name\",\n      onChange: this.handleInputChange.bind(this),\n      value: this.state.profileData.middleName,\n      error: this.state.errors.middleName == '' ? false : true,\n      helperText: this.state.errors.middleName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      name: \"lastName\",\n      id: \"lastName\",\n      label: \"Last Name\",\n      onChange: this.handleInputChange.bind(this),\n      value: this.state.profileData.lastName,\n      error: this.state.errors.lastName == '' ? false : true,\n      helperText: this.state.errors.lastName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"date\",\n      name: \"dob\",\n      id: \"dob\",\n      label: \"Birthday\",\n      type: \"date\",\n      onChange: this.handleInputChange.bind(this),\n      InputLabelProps: {\n        shrink: true\n      },\n      error: this.state.errors.dob == '' ? false : true,\n      helperText: this.state.errors.dob,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      style: {\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 17\n      }\n    }, \"Contact Information\"))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"email\",\n      name: \"emailAddress\",\n      id: \"emailAddress\",\n      value: this.state.profileData.emailAddress,\n      onChange: this.handleInputChange.bind(this),\n      helperText: this.state.errors.emailAddress,\n      label: \"Primary Email Address\",\n      error: this.state.errors.emailAddress == '' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      name: \"primaryContactNumber\",\n      id: \"primaryContactNumber\",\n      onChange: this.handleInputChange.bind(this),\n      value: this.state.profileData.primaryContactNumber || '',\n      error: this.state.errors.primaryContactNumber == '' ? false : true,\n      helperText: this.state.errors.primaryContactNumber,\n      label: \"Primary Contact Number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      style: {\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 17\n      }\n    }, \"Address Information\"))), /*#__PURE__*/React.createElement(Address, {\n      addressLine1Name: \"addressLine1\",\n      addressLine1Id: \"addressLine1\",\n      addressLine1Data: this.handleAddressInputChange.bind(this),\n      addressLine1Value: this.state.address.addressLine1 || '',\n      addressLine1HelperText: this.state.errors.addressLine1,\n      addressLine1Error: this.state.errors.addressLine1 == '' ? false : true,\n      addressLine2Name: \"addressLine2\",\n      addressLine2Id: \"addressLine2\",\n      addressLine2Data: this.handleAddressInputChange.bind(this),\n      addressLine2Value: this.state.address.addressLine2 || '',\n      addressLine2HelperText: this.state.errors.addressLine2,\n      addressLine2Error: this.state.errors.addressLine2 == '' ? false : true,\n      pincodeName: \"pincode\",\n      pincodeId: \"pincode\",\n      pincodeOnChange: this.getPincodeData.bind(this, 'pincode'),\n      pincodeValue: this.state.address.pincode || '',\n      pincodeHelperText: this.state.errors.pincode,\n      pincodeError: this.state.errors.pincode == '' ? false : true,\n      villageName: \"villageName\",\n      villageId: \"villageName\",\n      villageInputValue: this.handleAddressSelectChange.bind(this, 'villageName'),\n      villageData: this.state.village,\n      villageValue: this.state.address.villageName || '',\n      villageHelperText: this.state.errors.village,\n      villageError: this.state.errors.village == '' ? false : true,\n      cityName: \"cityName\",\n      cityId: \"cityName\",\n      cityValue: this.state.address.cityName || '',\n      cityData: this.state.city,\n      cityInputValue: this.handleAddressSelectChange.bind(this, 'cityName'),\n      cityNameHelperText: this.state.errors.cityName,\n      cityNameError: this.state.errors.cityName == '' ? false : true,\n      stateName: \"stateName\",\n      stateId: \"stateName\",\n      stateData: this.state.state,\n      stateValue: this.state.address.state || '',\n      stateInputValue: this.handleAddressSelectChange.bind(this, 'state'),\n      stateHelperText: this.state.errors.state,\n      stateError: this.state.errors.state == '' ? false : true,\n      districtName: \"district\",\n      districtId: \"district\",\n      districtValue: this.state.address.district || '',\n      districtData: this.state.district,\n      districtInputValue: this.handleAddressSelectChange.bind(this, 'district'),\n      districtHelperText: this.state.errors.district,\n      districtError: this.state.errors.district == '' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-end\",\n      alignItems: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      type: \"submit\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 11\n      }\n    }, \"Save\"))), this.state.alertDialogFlag && /*#__PURE__*/React.createElement(AlertDialog, {\n      message: alertDialogOptions.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 35\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/UserProfile.js"],"names":["React","Component","FormControl","InputLabel","Input","Grid","TextField","Button","SingleSelect","fectUserDetails","fetcRoleDetails","fectUserRoleDetails","fectAddressDetails","fetchAllStateDetails","fetchAddressDetailsBasedOnPincode","saveUserDetails","saveAddressDetails","UserContext","isNotEmpty","Address","underscore","AlertDialog","serviceEndPoint","ErrorBoundary","alertDialogOptions","message","UserProfile","constructor","props","validate","name","value","errors","state","firstName","middleName","lastName","dob","emailAddress","primaryContactNumber","addressLine1","addressLine2","pincode","village","cityName","district","setState","saveDetails","event","preventDefault","dbUserId","userid","address","alertDialogFlag","validateForm","JSON","stringify","profileData","then","jsondata","console","log","color","localProfileData","localAddress","localThis","Object","keys","forEach","key","valid","values","val","length","roleDetails","userName","id","pincodes","city","formData","jsonobjects","parse","data","taluk","cityVillage","states","map","item","push","label","uniq","toString","handleInputChange","target","handleAddressInputChange","handleAddressSelectChange","selectname","getPincodeData","submitAddress","action","FormData","append","fetch","addressServiceEndPoint","method","headers","token","body","response","json","alert","render","width","fontWeight","bind","shrink","villageName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { FormControl, InputLabel, Input, Grid, TextField, Button } from '@material-ui/core';\r\nimport { SingleSelect } from \"react-select-material-ui\";\r\nimport { fectUserDetails, fetcRoleDetails, fectUserRoleDetails, fectAddressDetails, \r\n  fetchAllStateDetails, fetchAddressDetailsBasedOnPincode,saveUserDetails,saveAddressDetails } from './../util/api';\r\nimport UserContext from '../components/GolbalContext'\r\nimport {isNotEmpty} from './../util/validation';\r\nimport Address from \"./Address\";\r\nimport underscore from 'underscore';\r\nimport AlertDialog from './../util/AlertDialog';\r\nimport { serviceEndPoint } from './../util/serviceEndPoint';\r\n\r\n// import {DropzoneArea} from 'material-ui-dropzone';\r\nimport ErrorBoundary from  './../util/ErrorBoundary';\r\nconst alertDialogOptions = {\r\n  message: ''\r\n}\r\n\r\nexport default class UserProfile extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      roleDetails: [], address: {}, \r\n      profileData: { userName: '', firstName: '', middleName: '', lastName: '', emailAddress: '',primaryContactNumber:'',\r\n                     id:UserContext.userid //,documentFile:null\r\n                    },\r\n      state: [], district: [], pincodes: [], city: [],village: [],\r\n      errors: {firstName: '',middleName:'',lastName: '',dob:'',primaryContactNumber:'',emailAddress:'',\r\n      addressLine1:'',addressLine2:'',pincode:'',village:'',cityName:'',state:'',district:''}\r\n      \r\n    };\r\n    this.formData = { state: [], district: [], pincodes: [], city: [],village: []  };\r\n\r\n    fectUserDetails(UserContext.userid).then((jsondata) => {\r\n      let jsonobjects = JSON.parse(jsondata.data);\r\n      this.setState({ profileData: jsonobjects[0]});\r\n    });\r\n\r\n    fectAddressDetails(UserContext.userid).then((jsondata) => {\r\n      let jsonobjects = JSON.parse(jsondata.data);\r\n     \r\n      fetchAddressDetailsBasedOnPincode(jsonobjects[0].pincode).then((jsondata) => {\r\n        let jsonobjects = JSON.parse(jsondata.data);\r\n        let taluk = [];\r\n        let cityVillage = [];\r\n        let states = [];\r\n        let district = [];\r\n\r\n       this.formData.village.length = 0;\r\n       this.formData.pincodes.length = 0;\r\n       this.formData.city.length = 0;\r\n       this.formData.state.length = 0;\r\n       this.formData.district.length = 0;\r\n\r\n        jsonobjects.map(item => { cityVillage.push({ label: item.cityVillage, value: item.id }) });\r\n        cityVillage = underscore.uniq(cityVillage, true, \"label\");\r\n        cityVillage.map(item => { this.formData.village.push({ label: item.label, value: (item.label).toString() }) });\r\n        this.setState({village:this.formData.village});\r\n\r\n        jsonobjects.map(item => { taluk.push({ label: item.taluk, value: item.id }) });\r\n        taluk = underscore.uniq(taluk, true, \"label\");\r\n        taluk.map(item => { this.formData.city.push({ label: item.label, value: (item.label).toString() }) });\r\n        this.setState({city:this.formData.city});\r\n\r\n        jsonobjects.map(item => { states.push({ label: item.state, value: item.id }) });\r\n        states = underscore.uniq(states, true, \"label\");\r\n        states.map(item => { this.formData.state.push({ label: (item.label).toString(), value: (item.label).toString() }) });\r\n        this.setState({state:this.formData.state},()=>{console.log(this.state.state)});\r\n\r\n        jsonobjects.map(item => { district.push({ label: item.district, value: item.id }) });\r\n        district = underscore.uniq(district, true, \"label\");\r\n        district.map(item => { this.formData.district.push({ label: item.label, value: (item.label).toString() }) });\r\n        this.setState({district:this.formData.district});\r\n\r\n      });\r\n\r\n      this.setState({ address: jsonobjects[0] });\r\n\r\n    });\r\n\r\n    fetchAllStateDetails().then((jsondata) => {\r\n      let jsonobjects = JSON.parse(jsondata.data);\r\n      jsonobjects.map(item => { this.formData.state.push({ label: item.name, value: item.id }) })\r\n\r\n\r\n    });\r\n\r\n  }\r\n\r\n  validate = (name,value)=>{\r\n  let errors = this.state.errors;\r\n  switch (name) {\r\n    case 'firstName': errors.firstName =isNotEmpty(value);\r\n      break;\r\n    case 'middleName': errors.middleName = isNotEmpty(value);\r\n      break;\r\n    case 'lastName': errors.lastName =  isNotEmpty(value);\r\n      break;\r\n    case 'dob': errors.dob =  isNotEmpty(value);\r\n      break;\r\n    case 'emailAddress':  errors.emailAddress =  isNotEmpty(value);\r\n    break;\r\n    case 'primaryContactNumber': errors.primaryContactNumber =  isNotEmpty(value);\r\n    break;\r\n    case 'addressLine1':  errors.addressLine1 =  isNotEmpty(value);\r\n    break;\r\n    case 'addressLine2':  errors.addressLine2 =  isNotEmpty(value);\r\n    break;\r\n    case 'pincode':  errors.pincode =  isNotEmpty(value);\r\n    break;\r\n    case 'villageName':  errors.village =  isNotEmpty(value);\r\n    break;\r\n    case 'cityName':  errors.cityName =  isNotEmpty(value);\r\n    break;\r\n    case 'state':   errors.state = isNotEmpty(value);\r\n    break;\r\n    case 'district':   errors.district = isNotEmpty(value);\r\n    break;\r\n    default:\r\n    break;\r\n}\r\n\r\n // this.setState({errors, [name]: value});\r\n this.setState({errors});\r\n}\r\n\r\n\r\n\r\n\r\n  handleInputChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    this.setState({\r\n      profileData: {\r\n        ...this.state.profileData,\r\n        [name]: value\r\n      }\r\n    })\r\n    this.validate(name,value);\r\n  }\r\n\r\n  handleAddressInputChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    this.setState({\r\n      address: {\r\n        ...this.state.address,\r\n        [name]: value\r\n      }\r\n    })\r\n    this.validate(name,value);\r\n  }\r\n\r\n  handleAddressSelectChange(selectname, event) {\r\n    this.setState({\r\n      address: {\r\n        ...this.state.address,\r\n        [selectname]: event\r\n      }\r\n    })\r\n\r\n    this.validate(selectname,event);\r\n  }\r\n\r\n  getPincodeData(selectname, event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    this.setState({\r\n      address: {\r\n        ...this.state.address,\r\n        [name]: value\r\n      }\r\n    })\r\n    this.validate(name,value);\r\n    if (value.length == 6) {\r\n      // let requestFormData = new FormData();\r\n      // requestFormData.append('data', '{\"token\" : \"\", \"action\" : \"findpincode\", \"data\" : [{\"pincode\":' + value + '}]}');\r\n      // fetch(\"http://playground.tatastrive.com/services-v1/cityvillageservice\", {\r\n      //   method: \"POST\",\r\n      //   body: requestFormData,\r\n      // }).then(response => response.json())\r\n\r\n\r\n      fetchAddressDetailsBasedOnPincode(value).then((jsondata) => {\r\n        let jsonobjects = JSON.parse(jsondata.data);\r\n        let taluk = [];\r\n        let pincode = [];\r\n        let cityVillage = [];\r\n        let states = [];\r\n        let district = [];\r\n\r\n        this.formData.village.length = 0;\r\n        this.formData.pincodes.length = 0;\r\n        this.formData.city.length = 0;\r\n        this.formData.state.length = 0;\r\n        this.formData.district.length = 0;\r\n\r\n        jsonobjects.map(item => { cityVillage.push({ label: item.cityVillage, value: item.id }) });\r\n        cityVillage = underscore.uniq(cityVillage, true, \"label\");\r\n        cityVillage.map(item => { this.formData.village.push({ label: item.label, value: (item.label).toString() }) });\r\n        this.setState({\r\n          village: {\r\n            ...this.state.village,\r\n            village: this.formData.village\r\n          }\r\n        })\r\n        \r\n        jsonobjects.map(item => { taluk.push({ label: item.taluk, value: item.id }) });\r\n        taluk = underscore.uniq(taluk, true, \"label\");\r\n        taluk.map(item => { this.formData.city.push({ label: item.label, value: (item.label).toString() }) });\r\n\r\n        this.setState({\r\n          city: {\r\n            ...this.state.city,\r\n            city: this.formData.city\r\n          }\r\n        })\r\n\r\n\r\n\r\n        jsonobjects.map(item => { states.push({ label: item.state, value: item.id }) });\r\n        states = underscore.uniq(states, true, \"label\");\r\n        states.map(item => { this.formData.state.push({ label: item.label, value: (item.value).toString() }) });\r\n\r\n        this.setState({\r\n          state: {\r\n            ...this.state.state,\r\n            state: this.formData.state\r\n          }\r\n        })\r\n\r\n        jsonobjects.map(item => { district.push({ label: item.district, value: item.id }) });\r\n        district = underscore.uniq(district, true, \"label\");\r\n        district.map(item => { this.formData.district.push({ label: item.label, value: (item.value).toString() }) });\r\n        \r\n        this.setState({\r\n          district: {\r\n            ...this.state.district,\r\n            district: this.formData.district\r\n          }\r\n        })\r\n     \r\n      })\r\n    }\r\n\r\n  }\r\n\r\n\r\n  // onFileChangeHandler = (files) => {\r\n  //   this.setState({\r\n  //    documentFile: files[0]\r\n  //  });\r\n  //  }\r\n\r\n  saveDetails = (event) => {\r\n    event.preventDefault();\r\n    const dbUserId = UserContext.userid;\r\n    this.setState({address: {...this.state.address,'id': dbUserId}});\r\n   \r\n    this.setState({alertDialogFlag:false});\r\n    if(this.validateForm(this.state.errors)){\r\n    saveUserDetails(JSON.stringify(this.state.profileData)).then((jsondata) => {     \r\n    });\r\n\r\n    saveAddressDetails(JSON.stringify(this.state.address)).then((jsondata) => {\r\n      console.log(this.state.state);\r\n    alertDialogOptions.message=<span style={{color:\"green\"}}>Data Saved Sucessfully</span>;\r\n    this.setState({alertDialogFlag:true});\r\n    });\r\n\r\n  }\r\n  }\r\n\r\n\r\n\r\n  submitAddress() {\r\n    let action = \"\";\r\n    const dbUserId = UserContext.userid;\r\n    this.setState({\r\n      address: {\r\n        ...this.state.address,\r\n        'dbUserId': dbUserId\r\n      }\r\n    })\r\n\r\n    let formData = new FormData();\r\n    formData.append('data', '{\"token\" : \"' + \"1234\" + '\", \"action\" : \"updateAddress\", \"data\" : [' + JSON.stringify(this.state.address) + ']}');\r\n    return fetch(serviceEndPoint.addressServiceEndPoint, {\r\n      method: \"POST\",\r\n      headers: {\r\n        'Authorization': 'Bearer '+UserContext.token\r\n    }, \r\n      body: formData\r\n    }).then(response => response.json()).then((jsondata) => {\r\n      alert(jsondata[0]);\r\n    })\r\n  }\r\n\r\n   validateForm = (errors) => {\r\n\r\n    const localProfileData=this.state.profileData;\r\n    const localAddress=this.state.address;\r\n    let localThis=this;\r\n    Object.keys(localProfileData).forEach(function(key) {localThis.validate(key,localProfileData[key]);});\r\n    Object.keys(localAddress).forEach(function(key) {localThis.validate(key,localAddress[key]);});\r\n    \r\n\r\n    let valid = true;\r\n    Object.values(errors).forEach(\r\n      // if we have an error string set valid to false\r\n      (val) => val.length > 0 && (valid = false)\r\n    );\r\n    return valid;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ErrorBoundary>\r\n      <div style={{ width: '100%'}}>\r\n        <form onSubmit={this.saveDetails} method=\"post\">\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <FormControl>\r\n                <h6 style={{fontWeight: 'bold'}}>User Profile</h6>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={3}>\r\n              <FormControl>\r\n                <InputLabel for=\"firstName\">User Name </InputLabel>\r\n                <Input type=\"text\" name=\"userName\" id=\"userName\"\r\n                  value={this.state.profileData.userName}\r\n                  readOnly\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} sm={3}>\r\n              <FormControl>\r\n                {/* <InputLabel for=\"firstName\">First Name</InputLabel> */}\r\n                <TextField type=\"text\" name=\"firstName\" id=\"firstName\"\r\n\r\n                  error={this.state.errors.firstName==''?false:true}\r\n                  helperText={this.state.errors.firstName}\r\n                  label =\"First Name\" onChange={this.handleInputChange.bind(this)}\r\n                  value={this.state.profileData.firstName}\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} sm={3}>\r\n              <FormControl>\r\n                <TextField type=\"text\" name=\"middleName\" id=\"middleName\"\r\n                  label=\"Middle Name\" onChange={this.handleInputChange.bind(this)}\r\n                  value={this.state.profileData.middleName}\r\n                  error={this.state.errors.middleName==''?false:true}\r\n                  helperText={this.state.errors.middleName}\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} sm={3}>\r\n              <FormControl>\r\n                <TextField type=\"text\" name=\"lastName\" id=\"lastName\"\r\n                  label=\"Last Name\" onChange={this.handleInputChange.bind(this)}\r\n                  value={this.state.profileData.lastName}\r\n                  error={this.state.errors.lastName==''?false:true}\r\n                  helperText={this.state.errors.lastName}\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={3}>\r\n              <TextField id=\"date\" name=\"dob\" id=\"dob\"\r\n                label=\"Birthday\"\r\n                type=\"date\"\r\n                onChange={this.handleInputChange.bind(this)}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }} \r\n                \r\n                error={this.state.errors.dob==''?false:true}\r\n                helperText={this.state.errors.dob}\r\n                />\r\n\r\n            </Grid>\r\n\r\n          \r\n            <Grid item xs={12}>\r\n              <FormControl>\r\n                <h6 style={{fontWeight: 'bold'}}>Contact Information</h6>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <FormControl>\r\n                <TextField type=\"email\" name=\"emailAddress\" id=\"emailAddress\"\r\n                  value={this.state.profileData.emailAddress} onChange={this.handleInputChange.bind(this)}\r\n                  helperText={this.state.errors.emailAddress}\r\n                  label=\"Primary Email Address\"\r\n                  error={this.state.errors.emailAddress==''?false:true}\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <FormControl>\r\n                <TextField type=\"text\" name=\"primaryContactNumber\" id=\"primaryContactNumber\"\r\n                  onChange={this.handleInputChange.bind(this)}\r\n                  value={this.state.profileData.primaryContactNumber || ''}\r\n                  error={this.state.errors.primaryContactNumber==''?false:true}\r\n                  helperText={this.state.errors.primaryContactNumber}\r\n                  label=\"Primary Contact Number\"\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControl>\r\n                <h6 style={{fontWeight: 'bold'}}>Address Information</h6>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            <Address\r\n              addressLine1Name=\"addressLine1\" addressLine1Id=\"addressLine1\" addressLine1Data={this.handleAddressInputChange.bind(this)} addressLine1Value={this.state.address.addressLine1 || ''} addressLine1HelperText={this.state.errors.addressLine1}  addressLine1Error={this.state.errors.addressLine1==''?false:true}\r\n              addressLine2Name=\"addressLine2\" addressLine2Id=\"addressLine2\" addressLine2Data={this.handleAddressInputChange.bind(this)} addressLine2Value={this.state.address.addressLine2 || ''} addressLine2HelperText={this.state.errors.addressLine2}  addressLine2Error={this.state.errors.addressLine2==''?false:true}\r\n              pincodeName=\"pincode\" pincodeId=\"pincode\" pincodeOnChange={this.getPincodeData.bind(this, 'pincode')} pincodeValue={this.state.address.pincode || ''} pincodeHelperText={this.state.errors.pincode}  pincodeError={this.state.errors.pincode==''?false:true}\r\n              villageName=\"villageName\" villageId=\"villageName\" villageInputValue={this.handleAddressSelectChange.bind(this, 'villageName')} villageData={this.state.village} villageValue={this.state.address.villageName || ''}  villageHelperText={this.state.errors.village}  villageError={this.state.errors.village==''?false:true}\r\n              cityName=\"cityName\" cityId=\"cityName\" cityValue={this.state.address.cityName || ''} cityData={this.state.city} cityInputValue={this.handleAddressSelectChange.bind(this, 'cityName')} cityNameHelperText={this.state.errors.cityName}  cityNameError={this.state.errors.cityName==''?false:true}\r\n              stateName=\"stateName\" stateId=\"stateName\" stateData={this.state.state} stateValue={this.state.address.state|| ''} stateInputValue={this.handleAddressSelectChange.bind(this, 'state')} stateHelperText={this.state.errors.state}  stateError={this.state.errors.state==''?false:true}\r\n              districtName=\"district\" districtId=\"district\" districtValue={this.state.address.district || ''} districtData={this.state.district} districtInputValue={this.handleAddressSelectChange.bind(this, 'district')} districtHelperText={this.state.errors.district}  districtError={this.state.errors.district==''?false:true}\r\n            />\r\n          </Grid>\r\n          <br />\r\n          <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"flex-end\">\r\n          <Button variant=\"contained\" type=\"submit\" color=\"primary\">Save</Button>\r\n          </Grid>\r\n        </form> \r\n     \r\n        {/* <br/>\r\n        <form onSubmit={this.uploadBusinessCaseDocument} method=\"post\">\r\n<DropzoneArea  \r\nname=\"businessCaseFile\" id=\"businessCaseFile\"\r\nmaxFileSize={2000000} filesLimit={1} showFileNames={true} \r\nonChange={this.onFileChangeHandler} />\r\n &nbsp;&nbsp;\r\n <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"flex-end\">\r\n<Button type=\"submit\" variant=\"contained\" color=\"primary\" size=\"small\" \r\n      disabled={this.state.documentFile==null?true:false}\r\n\r\n>Upload Documents</Button>\r\n</Grid>\r\n</form> */}\r\n\r\n\r\n\r\n\r\n        { \r\n  (this.state.alertDialogFlag) && <AlertDialog   message={alertDialogOptions.message}></AlertDialog>\r\n    }\r\n\r\n      </div>\r\n      </ErrorBoundary>   \r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}