{"ast":null,"code":"import parseCell from './parseCell';\nimport { getCells, getMergedCells } from '../xml/xlsx';\nexport default function parseCells(sheet, xml, values, styles, properties, options) {\n  var cells = getCells(sheet);\n\n  if (cells.length === 0) {\n    return [];\n  } // const mergedCells = getMergedCells(sheet)\n  // for (const mergedCell of mergedCells) {\n  //   const [from, to] = mergedCell.split(':').map(parseCellCoordinates)\n  //   console.log('Merged Cell.', 'From:', from, 'To:', to)\n  // }\n\n\n  return cells.map(function (node) {\n    return parseCell(node, sheet, xml, values, styles, properties, options);\n  });\n}","map":{"version":3,"sources":["../../source/read/parseCells.js"],"names":["cells","getCells","parseCell"],"mappings":"AAAA,OAAA,SAAA,MAAA,aAAA;AAEA,SAAA,QAAA,EAAA,cAAA,QAAA,aAAA;AAKA,eAAe,SAAA,UAAA,CAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,MAAA,EAAA,UAAA,EAAA,OAAA,EAAqE;AAClF,MAAMA,KAAK,GAAGC,QAAQ,CAAtB,KAAsB,CAAtB;;AAEA,MAAID,KAAK,CAALA,MAAAA,KAAJ,CAAA,EAAwB;AACtB,WAAA,EAAA;AAJgF,GAAA,CAOlF;AACA;AACA;AACA;AACA;;;AAEA,SAAO,KAAK,CAAL,GAAA,CAAU,UAAA,IAAA,EAAU;AACzB,WAAOE,SAAS,CAAA,IAAA,EAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,MAAA,EAAA,UAAA,EAAhB,OAAgB,CAAhB;AADF,GAAO,CAAP;AAGD","sourcesContent":["import parseCell from './parseCell'\r\n\r\nimport {\r\n  getCells,\r\n  getMergedCells\r\n} from '../xml/xlsx'\r\n\r\nexport default function parseCells(sheet, xml, values, styles, properties, options) {\r\n  const cells = getCells(sheet)\r\n\r\n  if (cells.length === 0) {\r\n    return []\r\n  }\r\n\r\n  // const mergedCells = getMergedCells(sheet)\r\n  // for (const mergedCell of mergedCells) {\r\n  //   const [from, to] = mergedCell.split(':').map(parseCellCoordinates)\r\n  //   console.log('Merged Cell.', 'From:', from, 'To:', to)\r\n  // }\r\n\r\n  return cells.map((node) => {\r\n    return parseCell(node, sheet, xml, values, styles, properties, options)\r\n  })\r\n}"]},"metadata":{},"sourceType":"module"}