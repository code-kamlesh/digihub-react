{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\Recommend.js\";\nimport React, { Component } from 'react';\nimport './../App.css';\nimport './../assets/css/login-style.css';\nimport './../assets/css/font-awesome.min.css';\nimport Card from \"./../components/Card/Card.js\";\nimport GridContainer from \"./../components/Grid/GridContainer.js\";\nimport GridItem from \"./../components/Grid/GridItem.js\";\nimport Button from '@material-ui/core/Button';\nimport { changeStudentStatus, fetchBusinessIdeaEvaluationData, FetchFinalScoreForBusinessIdea } from './../util/api';\nimport { FormControl, FormControlLabel, TextField, InputLabel, Input, Grid, RadioGroup, Radio } from '@material-ui/core';\nimport UserContext from '../components/GolbalContext';\nimport { checkButton, getBusinessCaseDocument, getExperienceDetails, getBasicDetails, getAddressData, getFamilyData, getObservationData, getBusinessCaseData, getExistingBusiness, validateInterestInventory, getSocioEconomicData, validateEducationData } from './../util/validation';\nimport MUIDataTable from \"mui-datatables\";\nimport { withStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport { serviceEndPoint } from './../util/serviceEndPoint'; //import MasterData from './../components/MasterData.js'\n\nconst customStyles = {\n  ShorlistedRow: {\n    '& td': {\n      backgroundColor: \"#B3F9A2\"\n    }\n  },\n  RejectedRow: {\n    '& td': {\n      backgroundColor: \"#F80606\"\n    }\n  },\n  NameCell: {\n    fontWeight: 900\n  }\n};\n\nclass Recommend extends Component {\n  constructor(props) {\n    super(props);\n\n    this.mySubmitHandler3 = event => {\n      event.preventDefault();\n      this.validateAll();\n      this.setState({\n        errors: this.state.errors\n      });\n\n      if (this.state.recommendData.remarks != \"\" && this.state.recommendData.action != \"\") {\n        this.submitEngagement(this.state.dbUserId, this.state.engagementId);\n      } else {\n        alert(\"Please enter remarks and valid action\");\n      }\n    };\n\n    this.mySubmitHandler = event => {\n      event.preventDefault();\n      this.submitRecomendation(this.state.rowsSelected.dbUserId, this.state.rowsSelected.engagement_id);\n    };\n\n    this.mySubmitHandler1 = event => {\n      event.preventDefault(); // this.validateAll();\n      // this.submitRecomendation(this.state.rowsSelected.dbUserId);\n\n      this.submitRejection(this.state.rowsSelected.dbUserId);\n    };\n\n    this.state = {\n      valid: true,\n      res: {},\n      selectedIndex: [],\n      rowsSelected: {\n        'dbUserId': '',\n        'engagement_id': ''\n      },\n      disabled: false,\n      flag: \"0\",\n      errors: {},\n      bieData: [],\n      info: [],\n      linkedEngagementId: props.linkedEngagementId,\n      engagementData: {},\n      engagementId: props.engagementId,\n      dbUserId: props.id,\n      recommendData: {\n        action: \"\",\n        remarks: \"\",\n        actionedBy: UserContext.userid,\n        roleid: UserContext.roleid,\n        roleName: UserContext.roleName\n      }\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n\n    if (props.id != null && props.id != undefined) {\n      this.state.engagementId = props.engagementId;\n      this.getRecommendData(this.state.engagementId);\n      this.state.linkedEngagementId = props.linkedEngagementId;\n      this.setState({\n        linkedEngagementId: { ...this.state.linkedEngagementId\n        }\n      });\n    }\n\n    this.fetchStudentDetails();\n  }\n\n  componentDidMount() {\n    if (UserContext.roleid == 4) {\n      getBasicDetails(this.state.engagementId, this.state.dbUserId).then(result => this.setState({\n        res: { ...this.state.res,\n          ['basic']: result\n        }\n      }));\n      getSocioEconomicData(this.state.engagementId, this.state.dbUserId).then(result => this.setState({\n        res: { ...this.state.res,\n          ['socio']: result\n        }\n      }));\n      validateEducationData(this.state.engagementId, this.state.dbUserId).then(result => this.setState({\n        res: { ...this.state.res,\n          ['education']: result\n        }\n      }));\n      getFamilyData(this.state.engagementId, this.state.dbUserId).then(result => this.setState({\n        res: { ...this.state.res,\n          ['family']: result\n        }\n      }));\n      getExperienceDetails(this.state.engagementId, this.state.dbUserId).then(result => this.setState({\n        res: { ...this.state.res,\n          ['experience']: result\n        }\n      })); //observation is only mandatory for existing student of TS not for outside TS\n\n      if (this.state.linkedEngagementId != 0 && this.state.linkedEngagementId != null) {\n        //  alert(this.state.linkedEngagementId)\n        getObservationData(this.state.engagementId, this.state.dbUserId).then(result => this.setState({\n          res: { ...this.state.res,\n            ['ob']: result\n          }\n        }));\n      }\n\n      ;\n      validateInterestInventory(this.state.engagementId).then(result => this.setState({\n        res: { ...this.state.res,\n          ['inventory']: result\n        }\n      }));\n      getAddressData(this.state.engagementId, this.state.dbUserId).then(result => this.setState({\n        res: { ...this.state.res,\n          ['address']: result\n        }\n      }));\n      getExistingBusiness(this.state.engagementId).then(result => this.setState({\n        res: { ...this.state.res,\n          ['existingBusiness']: result\n        }\n      }));\n      getBusinessCaseData(this.state.engagementId, this.state.dbUserId).then(result => this.setState({\n        res: { ...this.state.res,\n          ['bc']: result\n        }\n      }));\n      getBusinessCaseDocument(this.state.engagementId).then(result => this.setState({\n        res: { ...this.state.res,\n          ['document']: result\n        }\n      }));\n    }\n  }\n\n  handleInputChange(event) {\n    this.setState({\n      \"disabled\": false\n    });\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      recommendData: { ...this.state.recommendData,\n        [name]: value\n      }\n    });\n    this.setState({\n      errors: { ...this.state.errors,\n        [name]: {\n          'label': \"\",\n          'value': false\n        }\n      }\n    });\n  }\n\n  validateAll() {\n    var json = this.state.recommendData;\n    var errors = this.state.errors;\n    Object.keys(json).forEach(function (key) {\n      if (json[key] == undefined || json[key] == '') {\n        let res = \"Please fill out this field\";\n        errors[key] = {\n          'label': res,\n          'value': res == \"\" ? false : true\n        };\n      }\n    });\n    this.state.errors = errors;\n\n    if (checkButton(this.state.errors)) {\n      this.state.disabled = false;\n    } else {\n      this.state.disabled = true;\n    }\n  }\n\n  getRecommendData(eng) {\n    let formData = new FormData(); //alert(JSON.stringify(this.state));\n    //formData.append('data', '{\"token\" : \"'+this.state.token+'\", \"action\" : \"'+this.state.action+'\", \"data\" : [{\"userName\":\"'+this.state.email+'\",\"password\":\"'+this.state.password+'\"}]}');\n\n    formData.append('data', '{\"token\" : \"' + \"1234\" + '\", \"action\" : \"viewStudentEngagementById\", \"data\" : [{ \"engagementId\" : ' + eng + '}]}');\n    return fetch(serviceEndPoint.engagementServiceEndPoint, {\n      method: \"POST\",\n      headers: {\n        'Authorization': 'Bearer ' + UserContext.token\n      },\n      body: formData\n    }).then(response => response.json()).then(jsondata => {\n      console.log(jsondata);\n\n      if (jsondata.appError == null) {\n        let jsonobjects = JSON.parse(jsondata.data);\n        this.setState({\n          engagementData: jsonobjects[0]\n        });\n        console.log(jsonobjects);\n      } else {\n        console.log(\"error\");\n      }\n    });\n  }\n\n  fetchStudentDetails() {\n    this.setState({\n      info: []\n    });\n    let studentInfo = [];\n    let requestFormData = new FormData();\n    requestFormData.append('data', '{\"token\" : \"\", \"action\" : \"viewAllByCenterAndStatus\", \"data\" : [{\"centerId\":' + UserContext.centerId + ',\"status\":\"Shortlisted\"}]}');\n    fetch(serviceEndPoint.engagementServiceEndPoint, {\n      method: \"POST\",\n      headers: {\n        'Authorization': 'Bearer ' + UserContext.token\n      },\n      body: requestFormData\n    }).then(response => response.json()).then(jsondata => {\n      let score;\n      let studentDetails = JSON.parse(jsondata.data);\n\n      for (let i = 0; i < studentDetails.length; i++) {\n        FetchFinalScoreForBusinessIdea(studentDetails[i].engagementId).then(jsondata => {\n          score = jsondata.data; //  alert(score);\n\n          if (score != -1) {\n            // alert(\"alalal\");\n            var details = {\n              'engagement_id': studentDetails[i].engagementId,\n              'name': studentDetails[i].firstName + \" \" + studentDetails[i].lastName,\n              'dbUserId': studentDetails[i].dbUserId,\n              'score': score\n            };\n            studentInfo.push(details);\n            this.setState({\n              info: studentInfo\n            });\n          }\n        });\n      }\n    });\n  } // function for recomendation\n\n\n  submitRecomendation(dbUserId, linkedEngagementId) {\n    // alert(\"recomend\");\n    let formData = new FormData();\n    formData.append('data', '{\"token\" : \"' + \"1234\" + '\", \"action\" : \"' + \"captureStudentEngagement\" + '\", \"data\" : [{ \"dbUserId\"  : ' + dbUserId + ' , \"centerId\" : ' + UserContext.assessmentCenterId + ', \"createdBy\" : ' + UserContext.userid + ', \"remarks\" : \"Recommended\",\"status\" : \"Mobilised\",\"linkedEngagementId\" : ' + linkedEngagementId + '} ]}'); //alert(JSON.stringify(formData));\n\n    fetch(serviceEndPoint.engagementServiceEndPoint, {\n      method: \"POST\",\n      headers: {\n        'Authorization': 'Bearer ' + UserContext.token\n      },\n      body: formData\n    }).then(response => response.json()).then(jsondata => {\n      console.log(jsondata);\n\n      if (jsondata.appError == null) {\n        let jsonobjects = JSON.parse(jsondata.data);\n        this.setState({\n          count1: jsonobjects\n        });\n        console.log(jsonobjects);\n        this.fetchStudentDetails();\n      } else {\n        console.log(\"error\");\n      }\n    });\n    let statusChangeData = '\"engagementId\":' + this.state.rowsSelected.engagement_id + ',\"status\": \"' + \"Recommended\" + '\",\"updatedBy\":' + UserContext.userid + ', \"remarks\" : \"Recommended\"'; //alert(statusChangeData);\n\n    changeStudentStatus(statusChangeData).then(jsondata => {\n      //alert(\"changed status\"+statusChangeData);\n      console.log(jsondata.data);\n      alert(\"Status changed successfully\");\n      this.props.history.push({\n        pathname: '/dashboard/recommend'\n      });\n    });\n  } // Function for Rejection\n\n\n  submitRejection() {\n    //alert(\"reject\");\n    let statusChangeData = '\"engagementId\":' + this.state.rowsSelected.engagement_id + ',\"status\": \"' + \"Not Recommended\" + '\",\"updatedBy\":' + UserContext.userid + ', \"remarks\" : \"Rejected  \"'; //alert(statusChangeData);\n\n    changeStudentStatus(statusChangeData).then(jsondata => {\n      //alert(statusChangeData);\n      console.log(jsondata.data);\n      alert(\"Status changed successfully\");\n      this.fetchStudentDetails();\n    });\n  }\n\n  submitEngagement(dbUserId, engId) {\n    let newStatus = \"\"; //document.getElementById(\"save\").setAttribute(\"disabled\", true);\n\n    if (this.state.recommendData.action == \"Recommended\" && UserContext.roleid === 3) {\n      let formData = new FormData(); //alert(JSON.stringify(this.state));\n      //formData.append('data', '{\"token\" : \"'+this.state.token+'\", \"action\" : \"'+this.state.action+'\", \"data\" : [{\"userName\":\"'+this.state.email+'\",\"password\":\"'+this.state.password+'\"}]}');\n\n      formData.append('data', '{\"token\" : \"' + \"1234\" + '\", \"action\" : \"' + \"captureStudentEngagement\" + '\", \"data\" : [{ \"dbUserId\"  : ' + dbUserId + ' , \"centerId\" : ' + \"760\" + ', \"createdBy\" : ' + UserContext.userid + ', \"remarks\" : \" \",\"status\" : \"Mobilised\",\"linkedEngagementId\" : ' + engId + '} ]}'); // alert(formData);\n\n      fetch(serviceEndPoint.engagementServiceEndPoint, {\n        method: \"POST\",\n        headers: {\n          'Authorization': 'Bearer ' + UserContext.token\n        },\n        body: formData\n      }).then(response => response.json()).then(jsondata => {\n        console.log(jsondata);\n\n        if (jsondata.appError == null) {\n          let jsonobjects = JSON.parse(jsondata.data);\n          this.setState({\n            count1: jsonobjects\n          });\n          console.log(jsonobjects);\n        } else {\n          console.log(\"error\");\n        }\n      });\n    }\n\n    if (UserContext.roleid === 3) {\n      newStatus = this.state.recommendData.action;\n    } else {\n      //  newStatus = this.state.recommendData.action == \"Recommended\" ? \"Shortlisted\" : \"Mobilised\" ;\n      if (this.state.recommendData.action === \"Recommended\") {\n        newStatus = \"Shortlisted\";\n      } else if (this.state.recommendData.action === \"Not Recommended\") {\n        newStatus = \"Rejected\";\n      }\n    }\n\n    let statusChangeData = '\"engagementId\":' + this.state.engagementId + ',\"status\": \"' + newStatus + '\",\"updatedBy\":' + UserContext.userid + ', \"remarks\" : \"' + this.state.recommendData.remarks + '\"'; //alert(statusChangeData);\n\n    changeStudentStatus(statusChangeData).then(jsondata => {\n      //alert(statusChangeData);\n      console.log(jsondata.data);\n      alert(\"Status changed successfully\");\n      this.props.history.push({\n        pathname: '/dashboard/managebeneficiary'\n      });\n    });\n  }\n\n  render() {\n    let res = [];\n\n    if (UserContext.roleid == 4) {\n      if (this.state.res.basic) {\n        res.push(\"Basic details\");\n      }\n\n      if (this.state.res.address) {\n        res.push(\"Address details\");\n      }\n\n      if (this.state.res.family) {\n        res.push(\"Family details\");\n      }\n\n      if (this.state.res.experience) {\n        res.push(\"Experience details\");\n      }\n\n      if (this.state.res.bc) {\n        res.push(\"Business case\");\n      }\n\n      if (this.state.res.document) {\n        res.push(\"Business case document not uploaded\");\n      }\n\n      if (this.state.res.ob) {\n        res.push(\"Observations details\");\n      }\n\n      if (this.state.res.inventory) {\n        res.push(\"Interest Inventory details\");\n      }\n\n      if (this.state.res.existingBusiness) {\n        res.push(\"Existing Business details\");\n      }\n\n      if (this.state.res.socio) {\n        res.push(\"SocioEconomic details\");\n      }\n\n      if (this.state.res.education) {\n        res.push(\"Education details\");\n      }\n    }\n\n    const columns = [{\n      label: 'Engagement Id',\n      name: 'engagement_id',\n      options: {\n        sortDirection: 'desc'\n      },\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Name',\n      name: 'name',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Percent',\n      name: 'score',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }];\n    const options = {\n      filterType: \"dropdown\",\n      //  responsive: \"scroll\",\n      sortDirection: \"desc\",\n      selectableRows: 'single',\n      disableToolbarSelect: true,\n      // textLabels: {\n      //   body: {\n      //     noMatch: <span style={{color:\"blue\"}}>Please wait data is loading...</span>\n      //   }\n      // },\n      rowsSelected: this.state.selectedIndex,\n      onRowsSelect: allRows => {\n        let rows = this.state.selectedIndex;\n        rows[0] = allRows[0].dataIndex;\n        this.setState({\n          rowsSelected: this.state.info[allRows[0].dataIndex],\n          selectedIndex: rows\n        }); // this is the row in your data source       \n      },\n      setRowProps: row => {\n        for (var i = 0; i < this.state.info.length; i++) {\n          // alert(row[0]);\n          return {\n            className: classnames({\n              [this.props.classes.ShorlistedRow]: row[2] > 40,\n              [this.props.classes.RejectedRow]: row[2] < 40\n            })\n          };\n        }\n      }\n    };\n    const dbUserId = this.state.dbUserId == '' || this.state.dbUserId == null;\n    let button;\n    let displayText;\n    button = /*#__PURE__*/React.createElement(Button, {\n      id: \"save\",\n      variant: \"contained\",\n      type: \"submit\",\n      color: \"primary\",\n      disabled: this.state.disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 16\n      }\n    }, \"Save\");\n\n    if (this.state.engagementData.status == \"Recommended\" && UserContext.roleid === 3) {\n      displayText = /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 11\n        }\n      }, \"Already Recommended\"));\n      button = \"\";\n    } else if (this.state.engagementData.status == \"Shortlisted\" && UserContext.roleName == \"Change leader/Facilitator\") {\n      displayText = /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 11\n        }\n      }, \"Already Shortlisted\"));\n      button = \"\";\n    } else if (this.state.engagementData.status == \"Not Recommended\") {\n      displayText = /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 9\n        }\n      }, \"Already Rejected\"));\n      button = \"\";\n    } else {\n      displayText = /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(RadioGroup, {\n        row: true,\n        \"aria-label\": \"recommend\",\n        name: \"action\",\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(FormControlLabel, {\n        value: \"Recommended\",\n        control: /*#__PURE__*/React.createElement(Radio, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 58\n          }\n        }),\n        label: \"Approve\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(FormControlLabel, {\n        value: \"Not Recommended\",\n        control: /*#__PURE__*/React.createElement(Radio, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 62\n          }\n        }),\n        label: \"Reject\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 11\n        }\n      }))));\n    }\n\n    if (res.length != 0) {\n      button = /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 16\n        }\n      }, \" \", res.map(item => /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        style: {\n          fontWeight: \"600\",\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 13\n        }\n      }, \" \", item))));\n    }\n\n    if (UserContext.roleid === 3) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(MUIDataTable, {\n        title: \"Evaluation Completed Student list\",\n        label: \"List of Students\",\n        data: this.state.info,\n        columns: columns,\n        options: options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 5\n        }\n      }), this.state.info.length != 0 && /*#__PURE__*/React.createElement(GridContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.mySubmitHandler,\n        method: \"post\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/React.createElement(GridItem, {\n        xs: 12,\n        sm: 6,\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        type: \"submit\",\n        color: \"primary\",\n        size: \"small\",\n        disabled: this.state.rowsSelected.engagement_id == null ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 17\n        }\n      }, \"Recommend\")))), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.mySubmitHandler1,\n        method: \"post\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/React.createElement(GridItem, {\n        xs: 12,\n        sm: 6,\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        type: \"submit\",\n        color: \"primary\",\n        size: \"small\",\n        disabled: this.state.rowsSelected.engagement_id == null ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 17\n        }\n      }, \"Reject\"))))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.mySubmitHandler3,\n        method: \"post\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        type: \"text\",\n        label: \"Remarks\",\n        name: \"remarks\",\n        InputLabelProps: {\n          shrink: true\n        },\n        helperText: this.state.errors.remarks != undefined ? this.state.errors.remarks.label : '',\n        error: this.state.errors.remarks != undefined ? this.state.errors.remarks.value : '',\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 13\n        }\n      }), displayText), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 11\n        }\n      }), res.length != 0 && /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 24\n        }\n      }, \"Below details are incomplete\"), button));\n    }\n  }\n\n}\n\nexport default withStyles(customStyles, {\n  name: \"Recommend.js\"\n})(Recommend);","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/Recommend.js"],"names":["React","Component","Card","GridContainer","GridItem","Button","changeStudentStatus","fetchBusinessIdeaEvaluationData","FetchFinalScoreForBusinessIdea","FormControl","FormControlLabel","TextField","InputLabel","Input","Grid","RadioGroup","Radio","UserContext","checkButton","getBusinessCaseDocument","getExperienceDetails","getBasicDetails","getAddressData","getFamilyData","getObservationData","getBusinessCaseData","getExistingBusiness","validateInterestInventory","getSocioEconomicData","validateEducationData","MUIDataTable","withStyles","classnames","serviceEndPoint","customStyles","ShorlistedRow","backgroundColor","RejectedRow","NameCell","fontWeight","Recommend","constructor","props","mySubmitHandler3","event","preventDefault","validateAll","setState","errors","state","recommendData","remarks","action","submitEngagement","dbUserId","engagementId","alert","mySubmitHandler","submitRecomendation","rowsSelected","engagement_id","mySubmitHandler1","submitRejection","valid","res","selectedIndex","disabled","flag","bieData","info","linkedEngagementId","engagementData","id","actionedBy","userid","roleid","roleName","handleInputChange","bind","undefined","getRecommendData","fetchStudentDetails","componentDidMount","then","result","target","value","name","json","Object","keys","forEach","key","eng","formData","FormData","append","fetch","engagementServiceEndPoint","method","headers","token","body","response","jsondata","console","log","appError","jsonobjects","JSON","parse","data","studentInfo","requestFormData","centerId","score","studentDetails","i","length","details","firstName","lastName","push","assessmentCenterId","count1","statusChangeData","history","pathname","engId","newStatus","render","basic","address","family","experience","bc","document","ob","inventory","existingBusiness","socio","education","columns","label","options","sortDirection","headerStyle","color","filterType","selectableRows","disableToolbarSelect","onRowsSelect","allRows","rows","dataIndex","setRowProps","row","className","classes","button","displayText","status","map","item","width","shrink"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,cAAP;AACA,OAAO,iCAAP;AACA,OAAO,sCAAP;AAEA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,OAAOC,aAAP,MAA0B,uCAA1B;AACA,OAAOC,QAAP,MAAqB,kCAArB;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,mBAAT,EAA+BC,+BAA/B,EAAgEC,8BAAhE,QAAqG,eAArG;AACE,SAASC,WAAT,EAAuBC,gBAAvB,EAAyCC,SAAzC,EAAoDC,UAApD,EAAgEC,KAAhE,EAAuEC,IAAvE,EAA8EC,UAA9E,EAA0FC,KAA1F,QAAuG,mBAAvG;AAEF,OAAOC,WAAP,MAAwB,6BAAxB;AACA,SAAQC,WAAR,EAAqBC,uBAArB,EAA8CC,oBAA9C,EAAoEC,eAApE,EAAqFC,cAArF,EAAsGC,aAAtG,EAAqHC,kBAArH,EAAyIC,mBAAzI,EAA6JC,mBAA7J,EACEC,yBADF,EAC4BC,oBAD5B,EACiDC,qBADjD,QAC6E,sBAD7E;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,eAAT,QAAgC,2BAAhC,C,CAEA;;AAGA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE;AACb,YAAQ;AAACC,MAAAA,eAAe,EAAE;AAAlB;AADK,GADI;AAInBC,EAAAA,WAAW,EAAE;AACT,YAAQ;AAACD,MAAAA,eAAe,EAAE;AAAlB;AADC,GAJM;AAOnBE,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAE;AADJ;AAPS,CAArB;;AAWA,MAAMC,SAAN,SAAwBvC,SAAxB,CACA;AACIwC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAChB,UAAMA,KAAN;;AADgB,SA6KjBC,gBA7KiB,GA6KEC,KAAK,IAAI;AAE1BA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKC,WAAL;AACA,WAAKC,QAAL,CAAc;AACZC,QAAAA,MAAM,EAAG,KAAKC,KAAL,CAAWD;AADR,OAAd;;AAGA,UAAG,KAAKC,KAAL,CAAWC,aAAX,CAAyBC,OAAzB,IAAoC,EAApC,IAA0C,KAAKF,KAAL,CAAWC,aAAX,CAAyBE,MAAzB,IAAmC,EAAhF,EACA;AACE,aAAKC,gBAAL,CAAsB,KAAKJ,KAAL,CAAWK,QAAjC,EAA0C,KAAKL,KAAL,CAAWM,YAArD;AACD,OAHD,MAKA;AACEC,QAAAA,KAAK,CAAC,uCAAD,CAAL;AACD;AACF,KA5LgB;;AAAA,SA6LnBC,eA7LmB,GA6LAb,KAAD,IAAW;AACzBA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKa,mBAAL,CAAyB,KAAKT,KAAL,CAAWU,YAAX,CAAwBL,QAAjD,EAA0D,KAAKL,KAAL,CAAWU,YAAX,CAAwBC,aAAlF;AACH,KAhMkB;;AAAA,SAmMnBC,gBAnMmB,GAmMCjB,KAAD,IAAW;AAC5BA,MAAAA,KAAK,CAACC,cAAN,GAD4B,CAE7B;AACA;;AACA,WAAKiB,eAAL,CAAqB,KAAKb,KAAL,CAAWU,YAAX,CAAwBL,QAA7C;AAGF,KA1MoB;;AAGf,SAAKL,KAAL,GAAa;AAACc,MAAAA,KAAK,EAAG,IAAT;AAAgBC,MAAAA,GAAG,EAAG,EAAtB;AAA2BC,MAAAA,aAAa,EAAG,EAA3C;AAAgDN,MAAAA,YAAY,EAAG;AAAC,oBAAa,EAAd;AAAkB,yBAAkB;AAApC,OAA/D;AAAuGO,MAAAA,QAAQ,EAAG,KAAlH;AAA0HC,MAAAA,IAAI,EAAG,GAAjI;AAAsInB,MAAAA,MAAM,EAAG,EAA/I;AAAkJoB,MAAAA,OAAO,EAAC,EAA1J;AAA8JC,MAAAA,IAAI,EAAC,EAAnK;AAAsKC,MAAAA,kBAAkB,EAAE5B,KAAK,CAAC4B,kBAAhM;AAAoNC,MAAAA,cAAc,EAAG,EAArO;AAAwOhB,MAAAA,YAAY,EAAGb,KAAK,CAACa,YAA7P;AAA0QD,MAAAA,QAAQ,EAAGZ,KAAK,CAAC8B,EAA3R;AAA+RtB,MAAAA,aAAa,EAAG;AAACE,QAAAA,MAAM,EAAG,EAAV;AAAcD,QAAAA,OAAO,EAAG,EAAxB;AAA6BsB,QAAAA,UAAU,EAAGxD,WAAW,CAACyD,MAAtD;AAA8DC,QAAAA,MAAM,EAAC1D,WAAW,CAAC0D,MAAjF;AAAwFC,QAAAA,QAAQ,EAAC3D,WAAW,CAAC2D;AAA7G;AAA/S,KAAb;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;;AAEA,QAAGpC,KAAK,CAAC8B,EAAN,IAAY,IAAZ,IAAoB9B,KAAK,CAAC8B,EAAN,IAAYO,SAAnC,EACA;AACE,WAAK9B,KAAL,CAAWM,YAAX,GAAwBb,KAAK,CAACa,YAA9B;AACA,WAAKyB,gBAAL,CAAsB,KAAK/B,KAAL,CAAWM,YAAjC;AACA,WAAKN,KAAL,CAAWqB,kBAAX,GAA8B5B,KAAK,CAAC4B,kBAApC;AACA,WAAKvB,QAAL,CAAc;AACZuB,QAAAA,kBAAkB,EAAE,EAClB,GAAG,KAAKrB,KAAL,CAAWqB;AADI;AADR,OAAd;AAMD;;AAAC,SAAKW,mBAAL;AACL;;AAEDC,EAAAA,iBAAiB,GACjB;AACE,QAAGjE,WAAW,CAAC0D,MAAZ,IAAsB,CAAzB,EACA;AAEEtD,MAAAA,eAAe,CAAC,KAAK4B,KAAL,CAAWM,YAAZ,EAA2B,KAAKN,KAAL,CAAWK,QAAtC,CAAf,CAA+D6B,IAA/D,CAAoEC,MAAM,IAAI,KAAKrC,QAAL,CAAc;AAC1FiB,QAAAA,GAAG,EAAG,EACJ,GAAG,KAAKf,KAAL,CAAWe,GADV;AACgB,WAAC,OAAD,GAAYoB;AAD5B;AADoF,OAAd,CAA9E;AAKAxD,MAAAA,oBAAoB,CAAC,KAAKqB,KAAL,CAAWM,YAAZ,EAA2B,KAAKN,KAAL,CAAWK,QAAtC,CAApB,CAAoE6B,IAApE,CAAyEC,MAAM,IAAI,KAAKrC,QAAL,CAAc;AAC/FiB,QAAAA,GAAG,EAAG,EACJ,GAAG,KAAKf,KAAL,CAAWe,GADV;AACgB,WAAC,OAAD,GAAYoB;AAD5B;AADyF,OAAd,CAAnF;AAMAvD,MAAAA,qBAAqB,CAAC,KAAKoB,KAAL,CAAWM,YAAZ,EAA2B,KAAKN,KAAL,CAAWK,QAAtC,CAArB,CAAqE6B,IAArE,CAA0EC,MAAM,IAAI,KAAKrC,QAAL,CAAc;AAChGiB,QAAAA,GAAG,EAAG,EACJ,GAAG,KAAKf,KAAL,CAAWe,GADV;AACgB,WAAC,WAAD,GAAgBoB;AADhC;AAD0F,OAAd,CAApF;AAMA7D,MAAAA,aAAa,CAAC,KAAK0B,KAAL,CAAWM,YAAZ,EAA2B,KAAKN,KAAL,CAAWK,QAAtC,CAAb,CAA6D6B,IAA7D,CAAkEC,MAAM,IAAI,KAAKrC,QAAL,CAAc;AACxFiB,QAAAA,GAAG,EAAG,EACJ,GAAG,KAAKf,KAAL,CAAWe,GADV;AACgB,WAAC,QAAD,GAAaoB;AAD7B;AADkF,OAAd,CAA5E;AAMAhE,MAAAA,oBAAoB,CAAC,KAAK6B,KAAL,CAAWM,YAAZ,EAA2B,KAAKN,KAAL,CAAWK,QAAtC,CAApB,CAAoE6B,IAApE,CAAyEC,MAAM,IAAI,KAAKrC,QAAL,CAAc;AAC/FiB,QAAAA,GAAG,EAAG,EACJ,GAAG,KAAKf,KAAL,CAAWe,GADV;AACgB,WAAC,YAAD,GAAiBoB;AADjC;AADyF,OAAd,CAAnF,EAzBF,CA+BN;;AAEQ,UAAG,KAAKnC,KAAL,CAAWqB,kBAAX,IAAiC,CAAjC,IAAuC,KAAKrB,KAAL,CAAWqB,kBAAX,IAA+B,IAAzE,EAA+E;AAC7E;AACC9C,QAAAA,kBAAkB,CAAC,KAAKyB,KAAL,CAAWM,YAAZ,EAA2B,KAAKN,KAAL,CAAWK,QAAtC,CAAlB,CAAkE6B,IAAlE,CAAuEC,MAAM,IAAI,KAAKrC,QAAL,CAAc;AAC7FiB,UAAAA,GAAG,EAAG,EACJ,GAAG,KAAKf,KAAL,CAAWe,GADV;AACgB,aAAC,IAAD,GAASoB;AADzB;AADuF,SAAd,CAAjF;AAII;;AAAA;AAEPzD,MAAAA,yBAAyB,CAAC,KAAKsB,KAAL,CAAWM,YAAZ,CAAzB,CAAmD4B,IAAnD,CAAwDC,MAAM,IAAI,KAAKrC,QAAL,CAAc;AAC9EiB,QAAAA,GAAG,EAAG,EACJ,GAAG,KAAKf,KAAL,CAAWe,GADV;AACgB,WAAC,WAAD,GAAgBoB;AADhC;AADwE,OAAd,CAAlE;AAKA9D,MAAAA,cAAc,CAAC,KAAK2B,KAAL,CAAWM,YAAZ,EAA2B,KAAKN,KAAL,CAAWK,QAAtC,CAAd,CAA8D6B,IAA9D,CAAmEC,MAAM,IAAI,KAAKrC,QAAL,CAAc;AACzFiB,QAAAA,GAAG,EAAG,EACJ,GAAG,KAAKf,KAAL,CAAWe,GADV;AACgB,WAAC,SAAD,GAAcoB;AAD9B;AADmF,OAAd,CAA7E;AAQA1D,MAAAA,mBAAmB,CAAC,KAAKuB,KAAL,CAAWM,YAAZ,CAAnB,CAA6C4B,IAA7C,CAAkDC,MAAM,IAAI,KAAKrC,QAAL,CAAc;AACxEiB,QAAAA,GAAG,EAAG,EACJ,GAAG,KAAKf,KAAL,CAAWe,GADV;AACgB,WAAC,kBAAD,GAAuBoB;AADvC;AADkE,OAAd,CAA5D;AAKA3D,MAAAA,mBAAmB,CAAC,KAAKwB,KAAL,CAAWM,YAAZ,EAA2B,KAAKN,KAAL,CAAWK,QAAtC,CAAnB,CAAmE6B,IAAnE,CAAwEC,MAAM,IAAI,KAAKrC,QAAL,CAAc;AAC9FiB,QAAAA,GAAG,EAAG,EACJ,GAAG,KAAKf,KAAL,CAAWe,GADV;AACgB,WAAC,IAAD,GAASoB;AADzB;AADwF,OAAd,CAAlF;AAKAjE,MAAAA,uBAAuB,CAAC,KAAK8B,KAAL,CAAWM,YAAZ,CAAvB,CAAiD4B,IAAjD,CAAsDC,MAAM,IAAI,KAAKrC,QAAL,CAAc;AAC5EiB,QAAAA,GAAG,EAAG,EACJ,GAAG,KAAKf,KAAL,CAAWe,GADV;AACgB,WAAC,UAAD,GAAeoB;AAD/B;AADsE,OAAd,CAAhE;AAYD;AACF;;AAGDP,EAAAA,iBAAiB,CAACjC,KAAD,EAAQ;AACvB,SAAKG,QAAL,CAAc;AACZ,kBAAa;AADD,KAAd;AAGE,UAAMsC,MAAM,GAAGzC,KAAK,CAACyC,MAArB;AACA,UAAMC,KAAK,GAAKD,MAAM,CAACC,KAAvB;AACA,UAAMC,IAAI,GAAGF,MAAM,CAACE,IAApB;AACA,SAAKxC,QAAL,CAAc;AACZG,MAAAA,aAAa,EAAE,EACb,GAAG,KAAKD,KAAL,CAAWC,aADD;AAEb,SAACqC,IAAD,GAAQD;AAFK;AADH,KAAd;AAMA,SAAKvC,QAAL,CAAc;AACZC,MAAAA,MAAM,EAAE,EACN,GAAG,KAAKC,KAAL,CAAWD,MADR;AAEN,SAACuC,IAAD,GAAS;AACP,mBAAU,EADH;AAEP,mBAAU;AAFH;AAFH;AADI,KAAd;AASD;;AACDzC,EAAAA,WAAW,GACX;AACE,QAAI0C,IAAI,GAAG,KAAKvC,KAAL,CAAWC,aAAtB;AACA,QAAIF,MAAM,GAAG,KAAKC,KAAL,CAAWD,MAAxB;AACAyC,IAAAA,MAAM,CAACC,IAAP,CAAYF,IAAZ,EAAkBG,OAAlB,CAA0B,UAASC,GAAT,EAAc;AACpC,UAAGJ,IAAI,CAACI,GAAD,CAAJ,IAAab,SAAb,IAA0BS,IAAI,CAACI,GAAD,CAAJ,IAAa,EAA1C,EACA;AACE,YAAI5B,GAAG,GAAG,4BAAV;AACEhB,QAAAA,MAAM,CAAC4C,GAAD,CAAN,GAAc;AACV,mBAAU5B,GADA;AAEV,mBAAUA,GAAG,IAAI,EAAP,GAAY,KAAZ,GAAoB;AAFpB,SAAd;AAIJ;AACH,KATD;AAUI,SAAKf,KAAL,CAAWD,MAAX,GAAoBA,MAApB;;AACA,QAAG9B,WAAW,CAAC,KAAK+B,KAAL,CAAWD,MAAZ,CAAd,EACA;AACE,WAAKC,KAAL,CAAWiB,QAAX,GAAsB,KAAtB;AACD,KAHD,MAKA;AACE,WAAKjB,KAAL,CAAWiB,QAAX,GAAsB,IAAtB;AACH;AACJ;;AACDc,EAAAA,gBAAgB,CAACa,GAAD,EAChB;AACE,QAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf,CADF,CAEA;AACI;;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAuB,iBAAgB,MAAhB,GAAwB,0EAAxB,GAAqGH,GAArG,GAA2G,KAAlI;AACA,WAAOI,KAAK,CAAChE,eAAe,CAACiE,yBAAjB,EAA4C;AACxDC,MAAAA,MAAM,EAAE,MADgD;AAExDC,MAAAA,OAAO,EAAE;AACP,yBAAiB,YAAUnF,WAAW,CAACoF;AADhC,OAF+C;AAKxDC,MAAAA,IAAI,EAAER;AALkD,KAA5C,CAAL,CAMJX,IANI,CAMCoB,QAAQ,IAAIA,QAAQ,CAACf,IAAT,EANb,EAM8BL,IAN9B,CAMoCqB,QAAD,IAAY;AAClDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,UAAGA,QAAQ,CAACG,QAAT,IAAmB,IAAtB,EAA2B;AACvB,YAAIC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWN,QAAQ,CAACO,IAApB,CAAlB;AACA,aAAKhE,QAAL,CAAc;AAACwB,UAAAA,cAAc,EAAEqC,WAAW,CAAC,CAAD;AAA5B,SAAd;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYE,WAAZ;AACH,OAJD,MAIO;AACHH,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;AACH,KAfK,CAAP;AAgBH;;AA+BHzB,EAAAA,mBAAmB,GAAG;AACpB,SAAKlC,QAAL,CAAc;AAACsB,MAAAA,IAAI,EAAE;AAAP,KAAd;AACA,QAAI2C,WAAW,GAAC,EAAhB;AACA,QAAIC,eAAe,GAAG,IAAIlB,QAAJ,EAAtB;AACEkB,IAAAA,eAAe,CAACjB,MAAhB,CAAuB,MAAvB,EAA+B,iFAA+E/E,WAAW,CAACiG,QAA3F,GAAoG,4BAAnI;AACFjB,IAAAA,KAAK,CAAChE,eAAe,CAACiE,yBAAjB,EAA2C;AAChDC,MAAAA,MAAM,EAAE,MADwC;AAEhDC,MAAAA,OAAO,EAAE;AACP,yBAAiB,YAAUnF,WAAW,CAACoF;AADhC,OAFuC;AAKhDC,MAAAA,IAAI,EAAEW;AAL0C,KAA3C,CAAL,CAMG9B,IANH,CAMQoB,QAAQ,IAAIA,QAAQ,CAACf,IAAT,EANpB,EAMqCL,IANrC,CAM2CqB,QAAD,IAAY;AACpD,UAAIW,KAAJ;AACA,UAAKC,cAAc,GAAGP,IAAI,CAACC,KAAL,CAAWN,QAAQ,CAACO,IAApB,CAAtB;;AACM,WAAI,IAAIM,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACD,cAAc,CAACE,MAA7B,EAAoCD,CAAC,EAArC,EAAwC;AACvC7G,QAAAA,8BAA8B,CAAC4G,cAAc,CAACC,CAAD,CAAd,CAAkB9D,YAAnB,CAA9B,CAA+D4B,IAA/D,CAAqEqB,QAAD,IAAY;AAE/EW,UAAAA,KAAK,GAAGX,QAAQ,CAACO,IAAjB,CAF+E,CAGjF;;AACE,cAAGI,KAAK,IAAI,CAAC,CAAb,EACA;AACC;AACI,gBAAKI,OAAO,GACV;AAAE,+BAAgBH,cAAc,CAACC,CAAD,CAAd,CAAkB9D,YAApC;AACI,sBAAQ6D,cAAc,CAACC,CAAD,CAAd,CAAkBG,SAAlB,GAA4B,GAA5B,GAAgCJ,cAAc,CAACC,CAAD,CAAd,CAAkBI,QAD9D;AAEI,0BAAWL,cAAc,CAACC,CAAD,CAAd,CAAkB/D,QAFjC;AAGI,uBAAQ6D;AAHZ,aADF;AAMHH,YAAAA,WAAW,CAACU,IAAZ,CAAiBH,OAAjB;AAEA,iBAAKxE,QAAL,CAAc;AACbsB,cAAAA,IAAI,EAAE2C;AADO,aAAd;AAID;AACD,SApBD;AAqBJ;AACH,KAhCF;AAiCH,GAlPH,CAoPG;;;AAEAtD,EAAAA,mBAAmB,CAACJ,QAAD,EAAUgB,kBAAV,EAA6B;AAC/C;AACA,QAAIwB,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AAEID,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAuB,iBAAgB,MAAhB,GAAwB,iBAAxB,GAA4C,0BAA5C,GAAwE,+BAAxE,GAA0G1C,QAA1G,GAAqH,kBAArH,GAA0IrC,WAAW,CAAC0G,kBAAtJ,GAA2K,kBAA3K,GAAgM1G,WAAW,CAACyD,MAA5M,GAAqN,4EAArN,GAAkSJ,kBAAlS,GAAqT,MAA5U,EAJ2C,CAK3C;;AACE2B,IAAAA,KAAK,CAAChE,eAAe,CAACiE,yBAAjB,EAA4C;AACnDC,MAAAA,MAAM,EAAE,MAD2C;AAEnDC,MAAAA,OAAO,EAAE;AACP,yBAAiB,YAAUnF,WAAW,CAACoF;AADhC,OAF0C;AAKnDC,MAAAA,IAAI,EAAER;AAL6C,KAA5C,CAAL,CAMCX,IAND,CAMMoB,QAAQ,IAAIA,QAAQ,CAACf,IAAT,EANlB,EAMmCL,IANnC,CAMyCqB,QAAD,IAAY;AAClDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AAEA,UAAGA,QAAQ,CAACG,QAAT,IAAmB,IAAtB,EAA2B;AACvB,YAAIC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWN,QAAQ,CAACO,IAApB,CAAlB;AACA,aAAKhE,QAAL,CAAc;AAAC6E,UAAAA,MAAM,EAAEhB;AAAT,SAAd;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYE,WAAZ;AACA,aAAK3B,mBAAL;AACH,OALD,MAKO;AACHwB,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;AACH,KAjBA;AAoBN,QAAImB,gBAAgB,GAAC,oBAAkB,KAAK5E,KAAL,CAAWU,YAAX,CAAwBC,aAA1C,GAAwD,cAAxD,GAAwE,aAAxE,GAAyF,gBAAzF,GAA4G3C,WAAW,CAACyD,MAAxH,GAAiI,6BAAtJ,CA1B+C,CA2B/C;;AACApE,IAAAA,mBAAmB,CAACuH,gBAAD,CAAnB,CAAsC1C,IAAtC,CAA4CqB,QAAD,IAAc;AACvD;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACO,IAArB;AACIvD,MAAAA,KAAK,CAAC,6BAAD,CAAL;AACA,WAAKd,KAAL,CAAWoF,OAAX,CAAmBJ,IAAnB,CAAwB;AACtBK,QAAAA,QAAQ,EAAE;AADY,OAAxB;AAIL,KARH;AASA,GA3RJ,CA6RG;;;AAEAjE,EAAAA,eAAe,GAAE;AACpB;AACI,QAAI+D,gBAAgB,GAAC,oBAAkB,KAAK5E,KAAL,CAAWU,YAAX,CAAwBC,aAA1C,GAAwD,cAAxD,GAAwE,iBAAxE,GAA6F,gBAA7F,GAAgH3C,WAAW,CAACyD,MAA5H,GAAqI,4BAA1J,CAFgB,CAGhB;;AACApE,IAAAA,mBAAmB,CAACuH,gBAAD,CAAnB,CAAsC1C,IAAtC,CAA4CqB,QAAD,IAAc;AACvD;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACO,IAArB;AACIvD,MAAAA,KAAK,CAAC,6BAAD,CAAL;AACA,WAAKyB,mBAAL;AAEL,KANH;AAOA;;AAIJ5B,EAAAA,gBAAgB,CAACC,QAAD,EAAU0E,KAAV,EAChB;AAEE,QAAIC,SAAS,GAAG,EAAhB,CAFF,CAGE;;AACE,QAAG,KAAKhF,KAAL,CAAWC,aAAX,CAAyBE,MAAzB,IAAmC,aAAnC,IAAoDnC,WAAW,CAAC0D,MAAZ,KAAuB,CAA9E,EACA;AACE,UAAImB,QAAQ,GAAG,IAAIC,QAAJ,EAAf,CADF,CAEE;AACI;;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAuB,iBAAgB,MAAhB,GAAwB,iBAAxB,GAA4C,0BAA5C,GAAwE,+BAAxE,GAA0G1C,QAA1G,GAAqH,kBAArH,GAA0I,KAA1I,GAAkJ,kBAAlJ,GAAuKrC,WAAW,CAACyD,MAAnL,GAA4L,kEAA5L,GAA+PsD,KAA/P,GAAqQ,MAA5R,EAJN,CAKK;;AACE/B,MAAAA,KAAK,CAAChE,eAAe,CAACiE,yBAAjB,EAA4C;AAClDC,QAAAA,MAAM,EAAE,MAD0C;AAElDC,QAAAA,OAAO,EAAE;AACP,2BAAiB,YAAUnF,WAAW,CAACoF;AADhC,SAFyC;AAKlDC,QAAAA,IAAI,EAAER;AAL4C,OAA5C,CAAL,CAMEX,IANF,CAMOoB,QAAQ,IAAIA,QAAQ,CAACf,IAAT,EANnB,EAMoCL,IANpC,CAM0CqB,QAAD,IAAY;AAClDC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,YAAGA,QAAQ,CAACG,QAAT,IAAmB,IAAtB,EAA2B;AACvB,cAAIC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWN,QAAQ,CAACO,IAApB,CAAlB;AACA,eAAKhE,QAAL,CAAc;AAAC6E,YAAAA,MAAM,EAAEhB;AAAT,WAAd;AACAH,UAAAA,OAAO,CAACC,GAAR,CAAYE,WAAZ;AACH,SAJD,MAIO;AACHH,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;AACH,OAfD;AAgBN;;AACF,QAAGzF,WAAW,CAAC0D,MAAZ,KAAuB,CAA1B,EACA;AACEsD,MAAAA,SAAS,GAAG,KAAKhF,KAAL,CAAWC,aAAX,CAAyBE,MAArC;AACD,KAHD,MAKA;AACD;AAEF,UAAG,KAAKH,KAAL,CAAWC,aAAX,CAAyBE,MAAzB,KAAoC,aAAvC,EAAqD;AAAC6E,QAAAA,SAAS,GAAC,aAAV;AAAwB,OAA9E,MACK,IAAG,KAAKhF,KAAL,CAAWC,aAAX,CAAyBE,MAAzB,KAAoC,iBAAvC,EAAyD;AAAC6E,QAAAA,SAAS,GAAC,UAAV;AAAqB;AACnF;;AACG,QAAIJ,gBAAgB,GAAC,oBAAkB,KAAK5E,KAAL,CAAWM,YAA7B,GAA0C,cAA1C,GAA0D0E,SAA1D,GAAuE,gBAAvE,GAA0FhH,WAAW,CAACyD,MAAtG,GAA+G,iBAA/G,GAAmI,KAAKzB,KAAL,CAAWC,aAAX,CAAyBC,OAA5J,GAAsK,GAA3L,CAvCJ,CAwCI;;AACA7C,IAAAA,mBAAmB,CAACuH,gBAAD,CAAnB,CAAsC1C,IAAtC,CAA4CqB,QAAD,IAAc;AACvD;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACO,IAArB;AACIvD,MAAAA,KAAK,CAAC,6BAAD,CAAL;AACA,WAAKd,KAAL,CAAWoF,OAAX,CAAmBJ,IAAnB,CAAwB;AACtBK,QAAAA,QAAQ,EAAE;AADY,OAAxB;AAGL,KAPH;AASH;;AACDG,EAAAA,MAAM,GACN;AACE,QAAIlE,GAAG,GAAG,EAAV;;AACA,QAAG/C,WAAW,CAAC0D,MAAZ,IAAsB,CAAzB,EACA;AACE,UAAG,KAAK1B,KAAL,CAAWe,GAAX,CAAemE,KAAlB,EACA;AACEnE,QAAAA,GAAG,CAAC0D,IAAJ,CAAS,eAAT;AACD;;AACD,UAAG,KAAKzE,KAAL,CAAWe,GAAX,CAAeoE,OAAlB,EACA;AACEpE,QAAAA,GAAG,CAAC0D,IAAJ,CAAS,iBAAT;AACD;;AACD,UAAG,KAAKzE,KAAL,CAAWe,GAAX,CAAeqE,MAAlB,EACA;AACErE,QAAAA,GAAG,CAAC0D,IAAJ,CAAS,gBAAT;AACD;;AACD,UAAG,KAAKzE,KAAL,CAAWe,GAAX,CAAesE,UAAlB,EACA;AACEtE,QAAAA,GAAG,CAAC0D,IAAJ,CAAS,oBAAT;AACD;;AACD,UAAG,KAAKzE,KAAL,CAAWe,GAAX,CAAeuE,EAAlB,EACA;AACEvE,QAAAA,GAAG,CAAC0D,IAAJ,CAAS,eAAT;AACD;;AACD,UAAG,KAAKzE,KAAL,CAAWe,GAAX,CAAewE,QAAlB,EACA;AACExE,QAAAA,GAAG,CAAC0D,IAAJ,CAAS,qCAAT;AACD;;AACD,UAAG,KAAKzE,KAAL,CAAWe,GAAX,CAAeyE,EAAlB,EACA;AACEzE,QAAAA,GAAG,CAAC0D,IAAJ,CAAS,sBAAT;AACD;;AACD,UAAG,KAAKzE,KAAL,CAAWe,GAAX,CAAe0E,SAAlB,EACA;AACE1E,QAAAA,GAAG,CAAC0D,IAAJ,CAAS,4BAAT;AACD;;AACD,UAAG,KAAKzE,KAAL,CAAWe,GAAX,CAAe2E,gBAAlB,EACA;AACE3E,QAAAA,GAAG,CAAC0D,IAAJ,CAAS,2BAAT;AACD;;AAED,UAAG,KAAKzE,KAAL,CAAWe,GAAX,CAAe4E,KAAlB,EACA;AACE5E,QAAAA,GAAG,CAAC0D,IAAJ,CAAS,uBAAT;AACD;;AAED,UAAG,KAAKzE,KAAL,CAAWe,GAAX,CAAe6E,SAAlB,EACA;AACE7E,QAAAA,GAAG,CAAC0D,IAAJ,CAAS,mBAAT;AACD;AAGF;;AACD,UAAMoB,OAAO,GAAG,CAChB;AAACC,MAAAA,KAAK,EAAE,eAAR;AAAyBxD,MAAAA,IAAI,EAAE,eAA/B;AAA+CyD,MAAAA,OAAO,EAAG;AACvDC,QAAAA,aAAa,EAAG;AADuC,OAAzD;AAEEC,MAAAA,WAAW,EAAE;AAACC,QAAAA,KAAK,EAAC;AAAP;AAFf,KADgB,EAIhB;AAACJ,MAAAA,KAAK,EAAE,MAAR;AAAgBxD,MAAAA,IAAI,EAAE,MAAtB;AAA6B2D,MAAAA,WAAW,EAAE;AAACC,QAAAA,KAAK,EAAC;AAAP;AAA1C,KAJgB,EAKjB;AAACJ,MAAAA,KAAK,EAAE,SAAR;AAAmBxD,MAAAA,IAAI,EAAE,OAAzB;AAAiC2D,MAAAA,WAAW,EAAE;AAACC,QAAAA,KAAK,EAAC;AAAP;AAA9C,KALiB,CAAhB;AAUA,UAAMH,OAAO,GAAG;AACdI,MAAAA,UAAU,EAAE,UADE;AAEhB;AACEH,MAAAA,aAAa,EAAE,MAHD;AAIdI,MAAAA,cAAc,EAAG,QAJH;AAKdC,MAAAA,oBAAoB,EAAC,IALP;AAMd;AACA;AACA;AACA;AACA;AACA3F,MAAAA,YAAY,EAAG,KAAKV,KAAL,CAAWgB,aAXZ;AAYdsF,MAAAA,YAAY,EAAGC,OAAD,IAAa;AACvB,YAAIC,IAAI,GAAG,KAAKxG,KAAL,CAAWgB,aAAtB;AACAwF,QAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUD,OAAO,CAAC,CAAD,CAAP,CAAWE,SAArB;AACA,aAAK3G,QAAL,CAAc;AACZY,UAAAA,YAAY,EAAG,KAAKV,KAAL,CAAWoB,IAAX,CAAgBmF,OAAO,CAAC,CAAD,CAAP,CAAWE,SAA3B,CADH;AAEZzF,UAAAA,aAAa,EAAGwF;AAFJ,SAAd,EAHuB,CAMpB;AACP,OAnBc;AAsBfE,MAAAA,WAAW,EAAGC,GAAD,IAAS;AACrB,aAAI,IAAIvC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,KAAKpE,KAAL,CAAWoB,IAAX,CAAgBiD,MAA9B,EAAqCD,CAAC,EAAtC,EAAyC;AACxC;AACO,iBAAO;AACHwC,YAAAA,SAAS,EAAE7H,UAAU,CACnB;AAAC,eAAC,KAAKU,KAAL,CAAWoH,OAAX,CAAmB3H,aAApB,GAAoCyH,GAAG,CAAC,CAAD,CAAH,GAAS,EAA9C;AACA,eAAC,KAAKlH,KAAL,CAAWoH,OAAX,CAAmBzH,WAApB,GAAkCuH,GAAG,CAAC,CAAD,CAAH,GAAS;AAD3C,aADmB;AADlB,WAAP;AAMP;AACQ;AAhCK,KAAhB;AAoCA,UAAMtG,QAAQ,GAAI,KAAKL,KAAL,CAAWK,QAAX,IAAuB,EAAvB,IAA6B,KAAKL,KAAL,CAAWK,QAAX,IAAuB,IAAtE;AACA,QAAIyG,MAAJ;AACA,QAAIC,WAAJ;AACED,IAAAA,MAAM,gBAAK,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAG,MAAb;AAAoB,MAAA,OAAO,EAAC,WAA5B;AAAwC,MAAA,IAAI,EAAC,QAA7C;AAAsD,MAAA,KAAK,EAAC,SAA5D;AAAsE,MAAA,QAAQ,EAAI,KAAK9G,KAAL,CAAWiB,QAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAX;;AAIE,QAAG,KAAKjB,KAAL,CAAWsB,cAAX,CAA0B0F,MAA1B,IAAoC,aAApC,IAAqDhJ,WAAW,CAAC0D,MAAZ,KAAuB,CAA/E,EACA;AACEqF,MAAAA,WAAW,gBACX,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,CADA;AAIED,MAAAA,MAAM,GAAG,EAAT;AACH,KAPD,MAQK,IAAG,KAAK9G,KAAL,CAAWsB,cAAX,CAA0B0F,MAA1B,IAAoC,aAApC,IAAqDhJ,WAAW,CAAC2D,QAAZ,IAAwB,2BAAhF,EACL;AACEoF,MAAAA,WAAW,gBACX,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,CADA;AAIED,MAAAA,MAAM,GAAG,EAAT;AACH,KAPI,MAQA,IAAG,KAAK9G,KAAL,CAAWsB,cAAX,CAA0B0F,MAA1B,IAAoC,iBAAvC,EACL;AACED,MAAAA,WAAW,gBACX,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADA,CADA;AAIAD,MAAAA,MAAM,GAAG,EAAT;AACD,KAPI,MASD;AACFC,MAAAA,WAAW,gBACT,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,UAAD;AAAY,QAAA,GAAG,MAAf;AAAgB,sBAAW,WAA3B;AAAuC,QAAA,IAAI,EAAC,QAA5C;AAAsD,QAAA,QAAQ,EAAE,KAAKnF,iBAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAC,aAAxB;AAAsC,QAAA,OAAO,eAAE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA/C;AAA0D,QAAA,KAAK,EAAC,SAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,eAEA,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAC,iBAAxB;AAA0C,QAAA,OAAO,eAAE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAnD;AAA8D,QAAA,KAAK,EAAC,QAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CADA,CADA,CADF;AASD;;AACA,QAAGb,GAAG,CAACsD,MAAJ,IAAc,CAAjB,EACD;AAEAyC,MAAAA,MAAM,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAM/F,GAAG,CAACkG,GAAJ,CAASC,IAAD,iBACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAI;AAAI,QAAA,KAAK,EAAI;AAAC5H,UAAAA,UAAU,EAAG,KAAd;AAAsB4G,UAAAA,KAAK,EAAG;AAA9B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAqDgB,IAArD,CAAJ,CADa,CAAN,CAAT;AAIC;;AACJ,QAAIlJ,WAAW,CAAC0D,MAAZ,KAAuB,CAA3B,EAA6B;AAC5B,0BACF;AAAK,QAAA,KAAK,EAAI;AAAEyF,UAAAA,KAAK,EAAG;AAAV,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE,oBAAC,YAAD;AAAe,QAAA,KAAK,EAAE,mCAAtB;AAA2D,QAAA,KAAK,EAAE,kBAAlE;AAAsF,QAAA,IAAI,EAAE,KAAKnH,KAAL,CAAWoB,IAAvG;AAA6G,QAAA,OAAO,EAAEyE,OAAtH;AAA+H,QAAA,OAAO,EAAEE,OAAxI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAKW,KAAK/F,KAAL,CAAWoB,IAAX,CAAgBiD,MAAhB,IAAwB,CAAzB,iBACN,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEN;AAAM,QAAA,QAAQ,EAAE,KAAK7D,eAArB;AAAsC,QAAA,MAAM,EAAC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE,EAAd;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAyB,QAAA,EAAE,EAAE,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEc,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,IAAI,EAAC,QAAjC;AAA0C,QAAA,KAAK,EAAC,SAAhD;AAA2D,QAAA,IAAI,EAAC,OAAhE;AAAwE,QAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWU,YAAX,CAAwBC,aAAxB,IAAuC,IAAvC,GAA4C,IAA5C,GAAiD,KAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CAFd,CADA,CAFM,eAeN;AAAM,QAAA,QAAQ,EAAE,KAAKC,gBAArB;AAAuC,QAAA,MAAM,EAAC,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEY,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE,EAAd;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAyB,QAAA,EAAE,EAAE,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,IAAI,EAAC,QAAjC;AAA0C,QAAA,KAAK,EAAC,SAAhD;AAA2D,QAAA,IAAI,EAAC,OAAhE;AAAwE,QAAA,QAAQ,EAAE,KAAKZ,KAAL,CAAWU,YAAX,CAAwBC,aAAxB,IAAuC,IAAvC,GAA4C,IAA5C,GAAiD,KAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,CAFZ,CAfM,CANJ,CADE;AAsCG,KAvCJ,MAwCO;AACF,0BACA;AAAK,QAAA,KAAK,EAAI;AAAEwG,UAAAA,KAAK,EAAG;AAAV,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAM,QAAA,QAAQ,EAAE,KAAKzH,gBAArB;AAAuC,QAAA,MAAM,EAAC,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACD,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEK,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAG,MAAlB;AACE,QAAA,KAAK,EAAC,SADR;AAEE,QAAA,IAAI,EAAG,SAFT;AAGE,QAAA,eAAe,EAAE;AACf0H,UAAAA,MAAM,EAAE;AADO,SAHnB;AAME,QAAA,UAAU,EAAI,KAAKpH,KAAL,CAAWD,MAAX,CAAkBG,OAAlB,IAA6B4B,SAA7B,GAAyC,KAAK9B,KAAL,CAAWD,MAAX,CAAkBG,OAAlB,CAA0B4F,KAAnE,GAA2E,EAN3F;AAOA,QAAA,KAAK,EAAI,KAAK9F,KAAL,CAAWD,MAAX,CAAkBG,OAAlB,IAA6B4B,SAA7B,GAAyC,KAAK9B,KAAL,CAAWD,MAAX,CAAkBG,OAAlB,CAA0BmC,KAAnE,GAA2E,EAPpF;AAQE,QAAA,QAAQ,EAAE,KAAKT,iBARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADD,CAFL,eAgBK,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBL,EAkBOmF,WAlBP,CADC,eAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAvBF,EAyBLhG,GAAG,CAACsD,MAAJ,IAAc,CAAf,iBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAzBf,EA6BGyC,MA7BH,CADA,CADA;AAqCD;AACN;;AAxkBD;;AA2kBA,eAAehI,UAAU,CAACG,YAAD,EAAe;AAACqD,EAAAA,IAAI,EAAE;AAAP,CAAf,CAAV,CAAiD/C,SAAjD,CAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport './../App.css';\r\nimport './../assets/css/login-style.css'\r\nimport './../assets/css/font-awesome.min.css'\r\n\r\nimport Card from \"./../components/Card/Card.js\";\r\nimport GridContainer from \"./../components/Grid/GridContainer.js\";\r\nimport GridItem from \"./../components/Grid/GridItem.js\";\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { changeStudentStatus , fetchBusinessIdeaEvaluationData, FetchFinalScoreForBusinessIdea }from './../util/api';\r\n  import { FormControl , FormControlLabel ,TextField, InputLabel, Input, Grid , RadioGroup, Radio}  from '@material-ui/core';\r\n\r\nimport UserContext from '../components/GolbalContext'\r\nimport {checkButton, getBusinessCaseDocument ,getExperienceDetails, getBasicDetails, getAddressData , getFamilyData, getObservationData, getBusinessCaseData,getExistingBusiness,\r\n  validateInterestInventory,getSocioEconomicData,validateEducationData} from './../util/validation';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport classnames from 'classnames';\r\nimport { serviceEndPoint } from './../util/serviceEndPoint';\r\n\r\n//import MasterData from './../components/MasterData.js'\r\n\r\n\r\nconst customStyles = {\r\n  ShorlistedRow: {\r\n    '& td': {backgroundColor: \"#B3F9A2\"}\r\n  },\r\n  RejectedRow: {\r\n      '& td': {backgroundColor: \"#F80606\"}\r\n    },\r\n  NameCell: {\r\n    fontWeight: 900\r\n  },\r\n};\r\nclass Recommend extends Component\r\n{\r\n    constructor(props) {\r\n       super(props);\r\n     \r\n        this.state = {valid : true , res : {} , selectedIndex : [] , rowsSelected : {'dbUserId' : '', 'engagement_id' : ''},disabled : false , flag : \"0\" ,errors : {},bieData:[], info:[],linkedEngagementId: props.linkedEngagementId, engagementData : {},engagementId : props.engagementId,dbUserId : props.id, recommendData : {action : \"\" ,remarks : \"\" , actionedBy : UserContext.userid ,roleid:UserContext.roleid,roleName:UserContext.roleName}}\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n       \r\n        if(props.id != null && props.id != undefined)\r\n        {\r\n          this.state.engagementId=props.engagementId;\r\n          this.getRecommendData(this.state.engagementId);\r\n          this.state.linkedEngagementId=props.linkedEngagementId;\r\n          this.setState({\r\n            linkedEngagementId: {\r\n              ...this.state.linkedEngagementId\r\n             \r\n            }\r\n          })\r\n        } this.fetchStudentDetails();\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n      if(UserContext.roleid == 4)\r\n      {\r\n\r\n        getBasicDetails(this.state.engagementId , this.state.dbUserId).then(result => this.setState({\r\n          res : {\r\n            ...this.state.res , ['basic'] : result\r\n          }\r\n        }));\r\n        getSocioEconomicData(this.state.engagementId , this.state.dbUserId).then(result => this.setState({\r\n          res : {\r\n            ...this.state.res , ['socio'] : result\r\n          }\r\n        }));\r\n\r\n        validateEducationData(this.state.engagementId , this.state.dbUserId).then(result => this.setState({\r\n          res : {\r\n            ...this.state.res , ['education'] : result\r\n          }\r\n        }));\r\n\r\n        getFamilyData(this.state.engagementId , this.state.dbUserId).then(result => this.setState({\r\n          res : {\r\n            ...this.state.res , ['family'] : result\r\n          }\r\n        }));\r\n\r\n        getExperienceDetails(this.state.engagementId , this.state.dbUserId).then(result => this.setState({\r\n          res : {\r\n            ...this.state.res , ['experience'] : result\r\n          }\r\n        }));\r\n\r\n//observation is only mandatory for existing student of TS not for outside TS\r\n        \r\n        if(this.state.linkedEngagementId != 0 &&  this.state.linkedEngagementId!=null ){\r\n          //  alert(this.state.linkedEngagementId)\r\n           getObservationData(this.state.engagementId , this.state.dbUserId).then(result => this.setState({\r\n             res : {\r\n               ...this.state.res , ['ob'] : result\r\n           }\r\n           }))};\r\n       \r\n        validateInterestInventory(this.state.engagementId).then(result => this.setState({\r\n          res : {\r\n            ...this.state.res , ['inventory'] : result\r\n          }\r\n        }));\r\n        getAddressData(this.state.engagementId , this.state.dbUserId).then(result => this.setState({\r\n          res : {\r\n            ...this.state.res , ['address'] : result\r\n          }\r\n        }));\r\n\r\n        \r\n\r\n        getExistingBusiness(this.state.engagementId).then(result => this.setState({\r\n          res : {\r\n            ...this.state.res , ['existingBusiness'] : result\r\n          }\r\n        }));\r\n        getBusinessCaseData(this.state.engagementId , this.state.dbUserId).then(result => this.setState({\r\n          res : {\r\n            ...this.state.res , ['bc'] : result\r\n          }\r\n        }));\r\n        getBusinessCaseDocument(this.state.engagementId).then(result => this.setState({\r\n          res : {\r\n            ...this.state.res , ['document'] : result\r\n          }\r\n        }));\r\n\r\n      \r\n      \r\n\r\n      \r\n\r\n\r\n      }\r\n    }\r\n\r\n\r\n    handleInputChange(event) {\r\n      this.setState({\r\n        \"disabled\" : false\r\n      });\r\n        const target = event.target;\r\n        const value =  (target.value);\r\n        const name = target.name;\r\n        this.setState({\r\n          recommendData: {\r\n            ...this.state.recommendData,\r\n            [name]: value\r\n          }\r\n        })\r\n        this.setState({\r\n          errors: {\r\n            ...this.state.errors,\r\n            [name] : {\r\n              'label' : \"\" , \r\n              'value' : false\r\n            }\r\n          }\r\n      });\r\n      }\r\n      validateAll() \r\n      {\r\n        var json = this.state.recommendData;\r\n        var errors = this.state.errors;\r\n        Object.keys(json).forEach(function(key) {\r\n            if(json[key] == undefined || json[key] == '' )\r\n            {\r\n              let res = \"Please fill out this field\";\r\n                errors[key] = {\r\n                    'label' : res , \r\n                    'value' : res == \"\" ? false : true \r\n                  }\r\n           }\r\n        });\r\n            this.state.errors = errors;\r\n            if(checkButton(this.state.errors))\r\n            {\r\n              this.state.disabled = false;\r\n            }\r\n            else\r\n            {\r\n              this.state.disabled = true;\r\n          }\r\n      }\r\n      getRecommendData(eng)\r\n      {\r\n        let formData = new FormData();\r\n      //alert(JSON.stringify(this.state));\r\n          //formData.append('data', '{\"token\" : \"'+this.state.token+'\", \"action\" : \"'+this.state.action+'\", \"data\" : [{\"userName\":\"'+this.state.email+'\",\"password\":\"'+this.state.password+'\"}]}');\r\n          formData.append('data','{\"token\" : \"'+ \"1234\" +'\", \"action\" : \"viewStudentEngagementById\", \"data\" : [{ \"engagementId\" : ' + eng + '}]}');\r\n          return fetch(serviceEndPoint.engagementServiceEndPoint, {\r\n          method: \"POST\",\r\n          headers: {\r\n            'Authorization': 'Bearer '+UserContext.token\r\n        }, \r\n          body: formData \r\n          }).then(response => response.json()).then((jsondata)=>{\r\n              console.log(jsondata); \r\n              if(jsondata.appError==null){      \r\n                  let jsonobjects = JSON.parse(jsondata.data);\r\n                  this.setState({engagementData :jsonobjects[0]});\r\n                  console.log(jsonobjects);  \r\n              }  else{\r\n                  console.log(\"error\");\r\n              } \r\n           })\r\n      }\r\n      mySubmitHandler3 = event => {\r\n\r\n        event.preventDefault();\r\n        this.validateAll();\r\n        this.setState({\r\n          errors : this.state.errors\r\n        });\r\n        if(this.state.recommendData.remarks != \"\" && this.state.recommendData.action != \"\" )\r\n        {\r\n          this.submitEngagement(this.state.dbUserId,this.state.engagementId);\r\n        }\r\n        else\r\n        {\r\n          alert(\"Please enter remarks and valid action\");\r\n        }\r\n      }\r\n    mySubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        this.submitRecomendation(this.state.rowsSelected.dbUserId,this.state.rowsSelected.engagement_id);\r\n    }\r\n\r\n\r\n    mySubmitHandler1 = (event) => {\r\n      event.preventDefault();\r\n     // this.validateAll();\r\n     // this.submitRecomendation(this.state.rowsSelected.dbUserId);\r\n     this.submitRejection(this.state.rowsSelected.dbUserId);\r\n      \r\n      \r\n  }\r\n    fetchStudentDetails() {\r\n      this.setState({info: []});\r\n      let studentInfo=[];\r\n      let requestFormData = new FormData();  \r\n        requestFormData.append('data', '{\"token\" : \"\", \"action\" : \"viewAllByCenterAndStatus\", \"data\" : [{\"centerId\":'+UserContext.centerId+',\"status\":\"Shortlisted\"}]}');\r\n      fetch(serviceEndPoint.engagementServiceEndPoint,{\r\n      method: \"POST\",\r\n      headers: {\r\n        'Authorization': 'Bearer '+UserContext.token\r\n    }, \r\n      body: requestFormData,\r\n      }).then(response => response.json()).then((jsondata)=>{  \r\n        let score;  \r\n        let  studentDetails = JSON.parse(jsondata.data);  \r\n              for(let i=0;i<studentDetails.length;i++){\r\n               FetchFinalScoreForBusinessIdea(studentDetails[i].engagementId).then((jsondata)=>{\r\n\r\n                score = jsondata.data;\r\n              //  alert(score);\r\n                if(score != -1 )\r\n                {\r\n                 // alert(\"alalal\");\r\n                     var  details =\r\n                       { 'engagement_id':studentDetails[i].engagementId,  \r\n                           'name' :studentDetails[i].firstName+\" \"+studentDetails[i].lastName,\r\n                           'dbUserId':studentDetails[i].dbUserId,\r\n                           'score':score\r\n                       }; \r\n                  studentInfo.push(details);  \r\n                  \r\n                  this.setState({\r\n                   info: studentInfo\r\n                     \r\n                   })\r\n                }\r\n               });   \r\n          }    \r\n       })  \r\n  }\r\n  \r\n   // function for recomendation\r\n\r\n   submitRecomendation(dbUserId,linkedEngagementId){\r\n    // alert(\"recomend\");\r\n    let formData = new FormData();\r\n   \r\n        formData.append('data','{\"token\" : \"'+ \"1234\" +'\", \"action\" : \"'+  \"captureStudentEngagement\" +'\", \"data\" : [{ \"dbUserId\"  : ' + dbUserId + ' , \"centerId\" : ' + UserContext.assessmentCenterId + ', \"createdBy\" : ' + UserContext.userid + ', \"remarks\" : \"Recommended\",\"status\" : \"Mobilised\",\"linkedEngagementId\" : '+linkedEngagementId+'} ]}');\r\n        //alert(JSON.stringify(formData));\r\n          fetch(serviceEndPoint.engagementServiceEndPoint, {\r\n        method: \"POST\",\r\n        headers: {\r\n          'Authorization': 'Bearer '+UserContext.token\r\n      }, \r\n        body: formData \r\n        }).then(response => response.json()).then((jsondata)=>{\r\n            console.log(jsondata); \r\n         \r\n            if(jsondata.appError==null){      \r\n                let jsonobjects = JSON.parse(jsondata.data);\r\n                this.setState({count1 :jsonobjects});\r\n                console.log(jsonobjects);  \r\n                this.fetchStudentDetails();\r\n            }  else{\r\n                console.log(\"error\");\r\n            } \r\n         })\r\n\r\n        \r\n    let statusChangeData='\"engagementId\":'+this.state.rowsSelected.engagement_id+',\"status\": \"' +\"Recommended\" +  '\",\"updatedBy\":' + UserContext.userid + ', \"remarks\" : \"Recommended\"' ;\r\n    //alert(statusChangeData);\r\n    changeStudentStatus(statusChangeData).then((jsondata) => { \r\n      //alert(\"changed status\"+statusChangeData);\r\n        console.log(jsondata.data);\r\n            alert(\"Status changed successfully\");\r\n            this.props.history.push({\r\n              pathname: '/dashboard/recommend'\r\n            });\r\n            \r\n      });\r\n   }\r\n\r\n   // Function for Rejection\r\n\r\n   submitRejection(){\r\n//alert(\"reject\");\r\n    let statusChangeData='\"engagementId\":'+this.state.rowsSelected.engagement_id+',\"status\": \"' +\"Not Recommended\" +  '\",\"updatedBy\":' + UserContext.userid + ', \"remarks\" : \"Rejected  \"' ;\r\n    //alert(statusChangeData);\r\n    changeStudentStatus(statusChangeData).then((jsondata) => { \r\n      //alert(statusChangeData);\r\n        console.log(jsondata.data);\r\n            alert(\"Status changed successfully\");\r\n            this.fetchStudentDetails();\r\n            \r\n      });\r\n   }\r\n\r\n   \r\n\r\nsubmitEngagement(dbUserId,engId)\r\n{\r\n \r\n  let newStatus = \"\";\r\n  //document.getElementById(\"save\").setAttribute(\"disabled\", true);\r\n    if(this.state.recommendData.action == \"Recommended\" && UserContext.roleid === 3)\r\n    {\r\n      let formData = new FormData();\r\n      //alert(JSON.stringify(this.state));\r\n          //formData.append('data', '{\"token\" : \"'+this.state.token+'\", \"action\" : \"'+this.state.action+'\", \"data\" : [{\"userName\":\"'+this.state.email+'\",\"password\":\"'+this.state.password+'\"}]}');\r\n          formData.append('data','{\"token\" : \"'+ \"1234\" +'\", \"action\" : \"'+  \"captureStudentEngagement\" +'\", \"data\" : [{ \"dbUserId\"  : ' + dbUserId + ' , \"centerId\" : ' + \"760\" + ', \"createdBy\" : ' + UserContext.userid + ', \"remarks\" : \" \",\"status\" : \"Mobilised\",\"linkedEngagementId\" : '+engId+'} ]}');\r\n         // alert(formData);\r\n           fetch(serviceEndPoint.engagementServiceEndPoint, {\r\n          method: \"POST\",\r\n          headers: {\r\n            'Authorization': 'Bearer '+UserContext.token\r\n        }, \r\n          body: formData \r\n          }).then(response => response.json()).then((jsondata)=>{\r\n              console.log(jsondata); \r\n              if(jsondata.appError==null){      \r\n                  let jsonobjects = JSON.parse(jsondata.data);\r\n                  this.setState({count1 :jsonobjects});\r\n                  console.log(jsonobjects);  \r\n              }  else{\r\n                  console.log(\"error\");\r\n              } \r\n           })\r\n    }\r\n   if(UserContext.roleid === 3)\r\n   {\r\n     newStatus = this.state.recommendData.action;\r\n   }\r\n   else\r\n   {\r\n  //  newStatus = this.state.recommendData.action == \"Recommended\" ? \"Shortlisted\" : \"Mobilised\" ;\r\n   \r\nif(this.state.recommendData.action === \"Recommended\"){newStatus=\"Shortlisted\"}\r\nelse if(this.state.recommendData.action === \"Not Recommended\"){newStatus=\"Rejected\"}\r\n}\r\n    let statusChangeData='\"engagementId\":'+this.state.engagementId+',\"status\": \"' +newStatus +  '\",\"updatedBy\":' + UserContext.userid + ', \"remarks\" : \"' + this.state.recommendData.remarks + '\"' ;\r\n    //alert(statusChangeData);\r\n    changeStudentStatus(statusChangeData).then((jsondata) => { \r\n      //alert(statusChangeData);\r\n        console.log(jsondata.data);\r\n            alert(\"Status changed successfully\");\r\n            this.props.history.push({\r\n              pathname: '/dashboard/managebeneficiary'\r\n            });\r\n      });\r\n\r\n}\r\nrender()\r\n{\r\n  let res = [];\r\n  if(UserContext.roleid == 4)\r\n  {\r\n    if(this.state.res.basic)\r\n    {\r\n      res.push(\"Basic details\");\r\n    }\r\n    if(this.state.res.address)\r\n    {\r\n      res.push(\"Address details\");\r\n    }\r\n    if(this.state.res.family)\r\n    {\r\n      res.push(\"Family details\");\r\n    }\r\n    if(this.state.res.experience)\r\n    {\r\n      res.push(\"Experience details\");\r\n    }\r\n    if(this.state.res.bc)\r\n    {\r\n      res.push(\"Business case\");\r\n    }\r\n    if(this.state.res.document)\r\n    {\r\n      res.push(\"Business case document not uploaded\");\r\n    }\r\n    if(this.state.res.ob)\r\n    {\r\n      res.push(\"Observations details\");\r\n    }\r\n    if(this.state.res.inventory)\r\n    {\r\n      res.push(\"Interest Inventory details\");\r\n    }\r\n    if(this.state.res.existingBusiness)\r\n    {\r\n      res.push(\"Existing Business details\");\r\n    }\r\n\r\n    if(this.state.res.socio)\r\n    {\r\n      res.push(\"SocioEconomic details\");\r\n    }\r\n\r\n    if(this.state.res.education)\r\n    {\r\n      res.push(\"Education details\");\r\n    }\r\n\r\n\r\n  }\r\n  const columns = [\r\n  {label: 'Engagement Id', name: 'engagement_id',options : {\r\n    sortDirection : 'desc'\r\n  },headerStyle: {color:'#FF9800'}},\r\n  {label: 'Name', name: 'name',headerStyle: {color:'#FF9800'}},\r\n {label: 'Percent', name: 'score',headerStyle: {color:'#FF9800'}}\r\n  \r\n   \r\n ]\r\n \r\n  const options = {\r\n    filterType: \"dropdown\",\r\n  //  responsive: \"scroll\",\r\n    sortDirection: \"desc\",\r\n    selectableRows : 'single',\r\n    disableToolbarSelect:true,\r\n    // textLabels: {\r\n    //   body: {\r\n    //     noMatch: <span style={{color:\"blue\"}}>Please wait data is loading...</span>\r\n    //   }\r\n    // },\r\n    rowsSelected : this.state.selectedIndex,\r\n    onRowsSelect: (allRows) => {\r\n        let rows = this.state.selectedIndex;\r\n        rows[0] = allRows[0].dataIndex;\r\n        this.setState({\r\n          rowsSelected : this.state.info[allRows[0].dataIndex],\r\n          selectedIndex : rows\r\n        }) // this is the row in your data source       \r\n   },\r\n\r\n\r\n   setRowProps: (row) => {\r\n    for(var i=0;i<this.state.info.length;i++){\r\n     // alert(row[0]);\r\n            return {         \r\n                className: classnames(\r\n                  {[this.props.classes.ShorlistedRow]: row[2] > 40,\r\n                  [this.props.classes.RejectedRow]: row[2] < 40\r\n                  }),\r\n              };\r\n    }\r\n            },\r\n  };\r\n\r\n\r\n  const dbUserId = (this.state.dbUserId == '' || this.state.dbUserId == null);\r\n  let button;\r\n  let displayText;\r\n    button =   <Button id = \"save\" variant=\"contained\" type=\"submit\" color=\"primary\" disabled = {this.state.disabled}>\r\n    Save\r\n  </Button>;\r\n\r\n      if(this.state.engagementData.status == \"Recommended\" && UserContext.roleid === 3)\r\n      {\r\n        displayText = \r\n        <Grid item xs={12} sm={8}>\r\n          <h2>Already Recommended</h2>\r\n          </Grid>;\r\n          button = \"\";\r\n      }\r\n      else if(this.state.engagementData.status == \"Shortlisted\" && UserContext.roleName == \"Change leader/Facilitator\")\r\n      {\r\n        displayText = \r\n        <Grid item xs={12} sm={8}>\r\n          <h2>Already Shortlisted</h2>\r\n          </Grid>;\r\n          button = \"\";\r\n      }\r\n      else if(this.state.engagementData.status == \"Not Recommended\" )\r\n      {\r\n        displayText =\r\n        <Grid item xs={12} sm={8}>\r\n        <h2>Already Rejected</h2>\r\n        </Grid>;\r\n        button = \"\";\r\n      }\r\n      \r\n      else{\r\n        displayText =\r\n          <Grid item xs={12} sm={8}>\r\n          <FormControl>\r\n          <RadioGroup row aria-label=\"recommend\" name=\"action\"  onChange={this.handleInputChange}>\r\n          <FormControlLabel value=\"Recommended\" control={<Radio />} label=\"Approve\" />\r\n          <FormControlLabel value=\"Not Recommended\" control={<Radio />} label=\"Reject\" />\r\n        </RadioGroup>\r\n            </FormControl>\r\n      </Grid>;\r\n      }\r\n       if(res.length != 0)\r\n      {\r\n        \r\n      button = <ul> {res.map((item) => (\r\n        <li><h4 style = {{fontWeight : \"600\" , color : \"red\"}}> {item}</h4></li>\r\n    )) }\r\n  </ul>\r\n      }\r\n   if (UserContext.roleid === 3){\r\n    return (\r\n  <div style = {{ width : '100%' }}>\r\n    \r\n    <MUIDataTable  title={\"Evaluation Completed Student list\"} label={\"List of Students\"} data={this.state.info} columns={columns} options={options}\r\n      />\r\n      { \r\n            (this.state.info.length!=0) &&\r\n      <GridContainer> \r\n    \r\n<form onSubmit={this.mySubmitHandler} method=\"post\">\r\n<GridItem xs={12} sm={6} md={12}>\r\n  \r\n              <Card>  \r\n                <Button variant=\"contained\" type=\"submit\" color=\"primary\"  size=\"small\" disabled={this.state.rowsSelected.engagement_id==null?true:false} >  \r\n               \r\n                Recommend \r\n                </Button>\r\n              </Card>                   \r\n            </GridItem>\r\n            \r\n</form>\r\n\r\n<form onSubmit={this.mySubmitHandler1} method=\"post\">\r\n\r\n            <GridItem xs={12} sm={6} md={3}>\r\n              <Card>  \r\n                <Button variant=\"contained\" type=\"submit\" color=\"primary\"  size=\"small\" disabled={this.state.rowsSelected.engagement_id==null?true:false}  >  \r\n                  Reject\r\n                </Button>\r\n              </Card>                   \r\n            </GridItem>\r\n        </form>\r\n   \r\n            </GridContainer>\r\n   }\r\n   </div>\r\n\r\n    );\r\n      }\r\n      else{\r\n        return(\r\n        <div style = {{ width : '100%' }}>\r\n        <form onSubmit={this.mySubmitHandler3} method=\"post\">\r\n       <Grid container spacing={2}>\r\n        \r\n            <Grid item xs={12} sm={6}>\r\n             <FormControl>\r\n              <TextField type = \"text\"\r\n                label=\"Remarks\"\r\n                name = \"remarks\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                helperText = {this.state.errors.remarks != undefined ? this.state.errors.remarks.label : '' } \r\n              error = {this.state.errors.remarks != undefined ? this.state.errors.remarks.value : '' }\r\n                onChange={this.handleInputChange}\r\n              />\r\n          </FormControl>   \r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              </Grid>\r\n             {displayText}\r\n            \r\n          </Grid>\r\n    \r\n          <br/>\r\n          { \r\n  (res.length != 0) && <div>Below details are incomplete</div>\r\n    }\r\n\r\n          \r\n          {button}\r\n        \r\n        </form>\r\n        </div>\r\n        );\r\n\r\n      }\r\n}\r\n\r\n}\r\nexport default withStyles(customStyles, {name: \"Recommend.js\"})(Recommend) ;"]},"metadata":{},"sourceType":"module"}