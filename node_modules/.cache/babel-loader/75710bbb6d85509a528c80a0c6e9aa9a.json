{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\BulkUpload.js\";\nimport React, { Component } from 'react';\nimport * as XLSX from \"xlsx\";\nimport readXlsxFile from 'read-excel-file/web-worker';\nimport { InputLabel, Input, Grid, Button } from '@material-ui/core';\nimport { SingleSelect } from \"react-select-material-ui\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport UserContext from '../components/GolbalContext';\nimport { fetchNotCompletedBatchDetails, saveBulkMetaData, saveBulkStudentData, saveBulkMetaDataAgain } from '../util/api';\nimport Student_Template1 from \"./../assets/document/Student_Template1.xlsx\";\nlet today = new Date();\nlet dd = String(today.getDate()).padStart(2, '0');\nlet mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n\nlet yyyy = today.getFullYear();\nvar time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\ntoday = yyyy + '-' + mm + '-' + dd + ' ' + time;\nexport default class bulkUpload extends Component {\n  constructor(props) {\n    super(props);\n\n    this.readExcel = file => {\n      // \n      let file_name = file.name;\n      this.setState({\n        fileName: file_name\n      });\n      const fileReader = new FileReader();\n      fileReader.readAsArrayBuffer(file);\n\n      fileReader.onload = e => {\n        //  console.log(e)\n        const bufferArray = e.target.result;\n        const wb = XLSX.read(bufferArray, {\n          type: \"buffer\",\n          cellDates: true\n        });\n        const wsname = wb.SheetNames[0];\n        const ws = wb.Sheets[wsname]; // To get the header details of excel\n\n        const data = XLSX.utils.sheet_to_json(ws, {\n          header: 1\n        }); //  console.log(data)\n        //  console.log(\"Header file \",data[0])\n\n        let student_data = XLSX.utils.sheet_to_json(ws, {\n          header: 0,\n          raw: false,\n          dateNF: 'yyyy-mm-dd'\n        });\n        this.setState({\n          student_count: data.length - 1\n        });\n        console.log(\"DataCount : \", this.state.student_count); // Replacing all next line with space\n        // .replaceAll(/\\r?\\n|\\r/g, \"\")\n\n        for (var i = 0; i < this.state.student_count; i++) {\n          if (student_data[i].Aadhar_Number !== undefined) student_data[i].Aadhar_Number.replace(\"\\r\\n\", \"\");\n          if (student_data[i].First_Name !== undefined) student_data[i].First_Name.replaceAll(/\\r?\\n|\\r/g, \"\"); // console.log(student_data[i].First_Name)\n\n          console.log(student_data[i].Middle_Name);\n          if (student_data[i].Middle_Name !== undefined) student_data[i].Middle_Name.replaceAll(/\\r?\\n|\\r/g, \"\");\n          if (student_data[i].Last_Name !== undefined) student_data[i].Last_Name.replaceAll(/\\r?\\n|\\r/g, \"\");\n          if (student_data[i].Date_of_Birth !== undefined) student_data[i].Date_of_Birth.replaceAll(\"/\", \"-\");\n          if (student_data[i].Gender !== undefined) student_data[i].Gender.replaceAll(/\\r?\\n|\\r/g, \"\");\n          if (student_data[i].Qualification !== undefined) student_data[i].Qualification.replaceAll(/\\r?\\n|\\r/g, \"\");\n          if (student_data[i].Passing_year !== undefined) student_data[i].Passing_year.replaceAll(/\\r?\\n|\\r/g, \"\");\n          if (student_data[i].Religion !== undefined) student_data[i].Religion.replaceAll(/\\r?\\n|\\r/g, \"\");\n          if (student_data[i].Address_Line_1 !== undefined) student_data[i].Address_Line_1.replaceAll(/\\r?\\n|\\r/g, \"\");\n        }\n\n        console.log(\"data :  \", student_data);\n        this.setState({\n          studentInfo: student_data\n        });\n        const requiredHeader = ['Aadhar_Number', 'First_Name', 'Middle_Name', 'Last_Name', 'Date_of_Birth', 'Gender', 'Qualification', 'Passing_year', 'Religion', 'Address_Line_1', 'Village', 'District', 'State', 'Pincode', 'Category', 'Primary_Contact_Number', 'Primary_Mail_ID', 'College_register_no', 'Iti_grade', 'Iti_trade'];\n        let flag = true;\n        requiredHeader.map((element, id) => {\n          // console.log(\"header comparison \",element, \"data : \",data[0][id])\n          if (flag) {\n            if (element == data[0][id]) {\n              if (id + 1 == requiredHeader.length) {\n                // Activating the upload button\n                this.setState({\n                  upload_button: false\n                });\n              }\n            } else {\n              flag = false;\n              alert(\"Plese use the correct template for upload.The coloumn in the upload file and sample template does not match.\"); // Plese use the correct template for upload.\n\n              this.setState({\n                upload_button: true\n              });\n              return;\n            }\n          }\n        });\n      };\n    };\n\n    this.state = {\n      options: UserContext.modelId == 3 || UserContext.modelId === 18 || UserContext.modelId === 19 || UserContext.modelId === 20 || UserContext.modelId === 21 || UserContext.modelId === 22 || UserContext.modelId === 23 ? [{\n        value: \"Mobilization\",\n        label: \"Mobilization\"\n      }, {\n        value: \"Enrollment\",\n        label: \"Enrollment\"\n      }] : [{\n        value: \"Mobilization\",\n        label: \"Mobilization\"\n      }],\n      user_unique_id: 0,\n      batchList: [],\n      Selectedoption: \"\",\n      student_count: 0,\n      fileName: \"\",\n      studentInfo: [],\n      batchName: null,\n      batchId: 0,\n      flag: false,\n      upload_button: true,\n      errors: {},\n      register_number: 0\n    };\n    this.handleOptionsChange = this.handleOptionsChange.bind(this); // Binding the method\n  } // optind change handler\n\n\n  handleOptionsChange(selectname, event) {\n    const value = event; // console.log(value)\n\n    this.setState({\n      Selectedoption: value,\n      batchName: \"\",\n      batchId: 0,\n      errors: { ...this.state.errors,\n        SelectedBatch: {\n          'label': '',\n          'value': false\n        }\n      }\n    });\n    this.setState({\n      batchList: []\n    });\n\n    if (event === \"Enrollment\") {\n      this.setState({\n        errors: { ...this.state.errors,\n          SelectedBatch: {\n            'label': 'Please select some option',\n            'value': true\n          }\n        }\n      }); // setDisabled(false)\n\n      fetchNotCompletedBatchDetails(UserContext.centerId).then(jsondata => {\n        let result = JSON.parse(jsondata.data); // console.log(\"center : \",result)\n\n        result.forEach(element => {\n          //  console.log(\"Condition for date \" , element.freezeDate > today)\n          if (element.freezeDate > today) {\n            this.state.batchList.push({\n              \"value\": element.batchId,\n              \"label\": element.batchName\n            });\n          }\n        });\n      });\n    } else {// setDisabled(true)\n    }\n  } // Hhandle batch changes\n\n\n  handleBatchChange(selectname, event) {\n    // console.log(\"selected optins : \",this.state.Selectedoption)\n    let value = event; // console.log(event)\n\n    let index = this.state.batchList.findIndex(object => object.value == value);\n    let batchname = this.state.batchList[index].label; // console.log(this.state.batcheList)\n\n    this.setState({\n      batchId: event,\n      batchName: batchname,\n      errors: { ...this.state.errors,\n        SelectedBatch: {\n          'label': '',\n          'value': false\n        }\n      }\n    });\n  }\n\n  // Uploadinh the doumnet\n  // this.setState({metaData})\n  async uploadDocuments() {\n    let studentInfo = this.state.studentInfo;\n    let duplicateAddhar = []; // Checking the duplicate aadhar in same file\n\n    for (var i = 0; i < this.state.student_count; i++) {\n      // console.log(\">>>>>>>>>>>>\",studentInfo)\n      for (var j = i + 1; j < this.state.student_count; j++) {\n        var _studentInfo$i, _studentInfo$j, _studentInfo$i2, _studentInfo$i3, _studentInfo$i4;\n\n        if (((_studentInfo$i = studentInfo[i]) === null || _studentInfo$i === void 0 ? void 0 : _studentInfo$i.Aadhar_Number) === ((_studentInfo$j = studentInfo[j]) === null || _studentInfo$j === void 0 ? void 0 : _studentInfo$j.Aadhar_Number) && ((_studentInfo$i2 = studentInfo[i]) === null || _studentInfo$i2 === void 0 ? void 0 : _studentInfo$i2.Aadhar_Number) != null && ((_studentInfo$i3 = studentInfo[i]) === null || _studentInfo$i3 === void 0 ? void 0 : _studentInfo$i3.Aadhar_Number) != \"\" && ((_studentInfo$i4 = studentInfo[i]) === null || _studentInfo$i4 === void 0 ? void 0 : _studentInfo$i4.Aadhar_Number) != 0) {\n          var _studentInfo$i5;\n\n          duplicateAddhar[i] = (_studentInfo$i5 = studentInfo[i]) === null || _studentInfo$i5 === void 0 ? void 0 : _studentInfo$i5.Aadhar_Number;\n        }\n      }\n    }\n\n    if (duplicateAddhar.length > 0) {\n      var x = 0;\n      let data = [];\n\n      for (var i = 0; i < duplicateAddhar.length; i++) {\n        if (duplicateAddhar[i] != undefined) {\n          data[x] = duplicateAddhar[i];\n          x++;\n        }\n      }\n\n      console.log(data);\n      alert(data + \"  duplicate Addhar Number\");\n      return;\n    } else {\n      const response = await saveBulkMetaData(this.state.fileName, today, this.state.Selectedoption, this.state.batchName, this.state.batchId, this.state.student_count, \"L\", UserContext.centerName, UserContext.centerId, UserContext.modelId, UserContext.userid, \"  \").then(jsondata => {\n        let result = JSON.parse(jsondata.data); // console.log(\"Mpdel id : \",result[0].modelId) \n\n        this.state.register_number = result[0].regId; // console.log(this.state.register_number)\n\n        if (result[0].regId == 0) {\n          alert(\"Data Not saved\"); // changes\n\n          return;\n        } else {\n          this.state.user_unique_id = result[0].regId;\n          this.uploadStudentData();\n        }\n      });\n    }\n  }\n\n  async uploadStudentData() {\n    let data_flag = false;\n    let count_loop = 1; // counting the number of data saved\n    // let flag = false\n\n    let invalid_student_firstName;\n    let sequence_number = 0;\n    let studentInfo = this.state.studentInfo; // console.log(\"Bulk Student data : \",studentInfo)\n\n    for (var i = 0; i < this.state.student_count; i++) {\n      sequence_number += 1;\n      invalid_student_firstName = studentInfo[i].First_Name;\n\n      try {\n        var _studentInfo$i6, _studentInfo$i7, _studentInfo$i8, _studentInfo$i9, _studentInfo$i10, _studentInfo$i11, _studentInfo$i12, _studentInfo$i13, _studentInfo$i14, _studentInfo$i15, _studentInfo$i16, _studentInfo$i17, _studentInfo$i18, _studentInfo$i19, _studentInfo$i20, _studentInfo$i21, _studentInfo$i22, _studentInfo$i23, _studentInfo$i24, _studentInfo$i25;\n\n        const response1 = await saveBulkStudentData(this.state.user_unique_id, ((_studentInfo$i6 = studentInfo[i]) === null || _studentInfo$i6 === void 0 ? void 0 : _studentInfo$i6.First_Name.replaceAll(/\\r?\\n|\\r/g, \"\")) || '', ((_studentInfo$i7 = studentInfo[i]) === null || _studentInfo$i7 === void 0 ? void 0 : _studentInfo$i7.Last_Name.replaceAll(/\\r?\\n|\\r/g, \"\")) || '', ((_studentInfo$i8 = studentInfo[i]) === null || _studentInfo$i8 === void 0 ? void 0 : _studentInfo$i8.Middle_Name) || '', ((_studentInfo$i9 = studentInfo[i]) === null || _studentInfo$i9 === void 0 ? void 0 : _studentInfo$i9.Date_of_Birth.replaceAll(\"/\", \"-\")) || '', ((_studentInfo$i10 = studentInfo[i]) === null || _studentInfo$i10 === void 0 ? void 0 : _studentInfo$i10.Aadhar_Number) || '', // c\n        this.state.batchName || '', ((_studentInfo$i11 = studentInfo[i]) === null || _studentInfo$i11 === void 0 ? void 0 : _studentInfo$i11.Qualification.replaceAll(/\\r?\\n|\\r/g, \"\")) || '', ((_studentInfo$i12 = studentInfo[i]) === null || _studentInfo$i12 === void 0 ? void 0 : _studentInfo$i12.Passing_year) || '', ((_studentInfo$i13 = studentInfo[i]) === null || _studentInfo$i13 === void 0 ? void 0 : _studentInfo$i13.Gender.replaceAll(/\\r?\\n|\\r/g, \"\")) || '', ((_studentInfo$i14 = studentInfo[i]) === null || _studentInfo$i14 === void 0 ? void 0 : _studentInfo$i14.Religion.replaceAll(/\\r?\\n|\\r/g, \"\")) || '', ((_studentInfo$i15 = studentInfo[i]) === null || _studentInfo$i15 === void 0 ? void 0 : _studentInfo$i15.Category.replaceAll(/\\r?\\n|\\r/g, \"\")) || '', ((_studentInfo$i16 = studentInfo[i]) === null || _studentInfo$i16 === void 0 ? void 0 : _studentInfo$i16.Primary_Contact_Number) || 0, ((_studentInfo$i17 = studentInfo[i]) === null || _studentInfo$i17 === void 0 ? void 0 : _studentInfo$i17.Primary_Mail_ID) || '', ((_studentInfo$i18 = studentInfo[i]) === null || _studentInfo$i18 === void 0 ? void 0 : _studentInfo$i18.College_register_no) || '', ((_studentInfo$i19 = studentInfo[i]) === null || _studentInfo$i19 === void 0 ? void 0 : _studentInfo$i19.Iti_grade) || '', ((_studentInfo$i20 = studentInfo[i]) === null || _studentInfo$i20 === void 0 ? void 0 : _studentInfo$i20.Iti_trade) || '', // regex expresion replace all new line with space\n        ((_studentInfo$i21 = studentInfo[i]) === null || _studentInfo$i21 === void 0 ? void 0 : _studentInfo$i21.Address_Line_1.replaceAll(/\\r?\\n|\\r/g, \" \")) || '', ((_studentInfo$i22 = studentInfo[i]) === null || _studentInfo$i22 === void 0 ? void 0 : _studentInfo$i22.Village) || '', ((_studentInfo$i23 = studentInfo[i]) === null || _studentInfo$i23 === void 0 ? void 0 : _studentInfo$i23.District.replaceAll(/\\r?\\n|\\r/g, \"\")) || '', ((_studentInfo$i24 = studentInfo[i]) === null || _studentInfo$i24 === void 0 ? void 0 : _studentInfo$i24.State.replaceAll(/\\r?\\n|\\r/g, \"\")) || '', ((_studentInfo$i25 = studentInfo[i]) === null || _studentInfo$i25 === void 0 ? void 0 : _studentInfo$i25.Pincode) || 0, today, // remove every place\n        UserContext.userid, \"P\", \"::\", \"::\").then(jsondata => {\n          //  console.log(studentInfo[i]?.Address_Line_1)\n          let result = JSON.parse(jsondata.data);\n          count_loop++;\n\n          if (count_loop === this.state.student_count) {\n            data_flag = true; // change from flag to data_flag\n          }\n        });\n      } catch (error) {\n        // console.log(\">>>>>>>>>>>\"+error)\n        alert(sequence_number + \"-\" + invalid_student_firstName + \" \" + \"has a Invalid Data.\");\n        break;\n      }\n    }\n\n    if (data_flag == true) {\n      alert(\"Data Saved Successfully and Registration ID is : \" + this.state.user_unique_id); // to change the status from L to P\n      //   saveBulkMetaDataAgain(this.state.register_number,this.state.fileName,today,this.state.Selectedoption,\n      //   this.state.batchName,this.state.batchId,this.state.student_count,\"P\",UserContext.centerName,\n      //   UserContext.centerId,UserContext.modelId, UserContext.userid,\" \" ).then((jsondata)=>{\n      // let result = JSON.parse(jsondata.data)\n      // })\n    }\n  } // Download file\n\n\n  downloadFile() {\n    const url = Student_Template1;\n    window.open(url);\n  } // Routes Change\n\n\n  routeChange() {\n    this.props.history.push({\n      pathname: '/dashboard/History',\n      state: {}\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-end\",\n      alignItems: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.downloadFile.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 14\n      }\n    }, \"Download template\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 7\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 13\n      }\n    }, \"Options\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"Selectedoption\",\n      id: \"Selectedoption\",\n      options: this.state.options,\n      value: this.state.Selectedoption || '',\n      key: this.state.Selectedoption || '',\n      onChange: this.handleOptionsChange.bind(this, 'Selectedoption'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 13\n      }\n    }, \"Batches\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"SelectedBatch\",\n      id: \"SelectedBatch\",\n      key: this.state.SelectedBatch || '',\n      options: this.state.batchList,\n      value: this.state.SelectedBatch || '',\n      onChange: this.handleBatchChange.bind(this, 'SelectedBatch'),\n      disabled: this.state.Selectedoption == \"Mobilization\" ? true : false,\n      helperText: this.state.errors.SelectedBatch != undefined ? this.state.errors.SelectedBatch.label : '',\n      error: this.state.errors.SelectedBatch != undefined ? this.state.errors.SelectedBatch.value : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Table, {\n      \"aria-label\": \"simple table\",\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      name: \"upload-photo\",\n      type: \"file\",\n      accept: \".xlsx/*, .xls/*\",\n      onClick: e => {\n        e.target.value = null; // setDisabled(true)\n      },\n      onChange: e => {\n        const file = e.target.files[0];\n        var substr1 = file.name.substring(file.name.length - 4, file.name.length);\n        var substr2 = file.name.substring(file.name.length - 3, file.name.length);\n\n        if (substr1 == \"xlsx\" || substr2 == \"xls\") {\n          this.readExcel(file);\n        } else {\n          alert(\"Please Upload Excel file\");\n          return;\n        }\n      },\n      maxFileSize: 5000000,\n      filesLimit: 1,\n      showFileNames: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 15\n      }\n    }, \"Note-:Please upload Excel file\"), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 15\n      }\n    }, \"and size should not be greater than 5MB.\"))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 13\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 20\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      alignItems: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"small\",\n      onClick: this.uploadDocuments.bind(this),\n      disabled: this.state.upload_button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 15\n      }\n    }, \"Upload Document\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 14\n      }\n    }), \"  \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 22\n      }\n    }), \"  \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 30\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-end\",\n      alignItems: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.routeChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 14\n      }\n    }, \"History Details\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 16\n      }\n    }, \"Note: \"), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 16\n      }\n    }, \"Always Download the Excel Sheet form above link to upload the Student data.\"), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 16\n      }\n    }, \"Avoid Enter button During filling the Student data.\")));\n  }\n\n}","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/BulkUpload.js"],"names":["React","Component","XLSX","readXlsxFile","InputLabel","Input","Grid","Button","SingleSelect","Table","TableBody","TableCell","TableRow","UserContext","fetchNotCompletedBatchDetails","saveBulkMetaData","saveBulkStudentData","saveBulkMetaDataAgain","Student_Template1","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","time","getHours","getMinutes","getSeconds","bulkUpload","constructor","props","readExcel","file","file_name","name","setState","fileName","fileReader","FileReader","readAsArrayBuffer","onload","e","bufferArray","target","result","wb","read","type","cellDates","wsname","SheetNames","ws","Sheets","data","utils","sheet_to_json","header","student_data","raw","dateNF","student_count","length","console","log","state","i","Aadhar_Number","undefined","replace","First_Name","replaceAll","Middle_Name","Last_Name","Date_of_Birth","Gender","Qualification","Passing_year","Religion","Address_Line_1","studentInfo","requiredHeader","flag","map","element","id","upload_button","alert","options","modelId","value","label","user_unique_id","batchList","Selectedoption","batchName","batchId","errors","register_number","handleOptionsChange","bind","selectname","event","SelectedBatch","centerId","then","jsondata","JSON","parse","forEach","freezeDate","push","handleBatchChange","index","findIndex","object","batchname","uploadDocuments","duplicateAddhar","j","x","response","centerName","userid","regId","uploadStudentData","data_flag","count_loop","invalid_student_firstName","sequence_number","response1","Category","Primary_Contact_Number","Primary_Mail_ID","College_register_no","Iti_grade","Iti_trade","Village","District","State","Pincode","error","downloadFile","url","window","open","routeChange","history","pathname","render","width","files","substr1","substring","substr2","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport * as XLSX from \"xlsx\";\r\nimport readXlsxFile from 'read-excel-file/web-worker'\r\nimport {  InputLabel, Input, Grid, Button } from '@material-ui/core';\r\nimport { SingleSelect } from \"react-select-material-ui\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport UserContext from '../components/GolbalContext'\r\nimport {fetchNotCompletedBatchDetails,saveBulkMetaData,saveBulkStudentData,saveBulkMetaDataAgain} from '../util/api';\r\nimport Student_Template1 from \"./../assets/document/Student_Template1.xlsx\";\r\nlet today = new Date();\r\nlet dd = String(today.getDate()).padStart(2, '0');\r\nlet mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\nlet yyyy = today.getFullYear();\r\nvar time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\ntoday = yyyy + '-' + mm + '-' + dd+ ' '+time;\r\n\r\n\r\n\r\nexport default class bulkUpload extends Component{\r\n  \r\n  constructor(props){\r\n   \r\n    super(props)\r\n    this.state={  options: (UserContext.modelId== 3 || UserContext.modelId === 18 ||UserContext.modelId === 19||UserContext.modelId === 20||UserContext.modelId === 21||UserContext.modelId === 22||UserContext.modelId === 23)\r\n      ?[ {value:\"Mobilization\", label:\"Mobilization\"},{value:\"Enrollment\" ,label:\"Enrollment\"}]:[{value:\"Mobilization\", label:\"Mobilization\"}],\r\n    \r\n      user_unique_id:0,\r\n      batchList:[],\r\n      Selectedoption:\"\",\r\n      student_count:0,\r\n      fileName:\"\",\r\n      studentInfo:[],\r\n      batchName:null,\r\n      batchId:0,\r\n      flag : false,\r\n      upload_button:true,\r\n      errors: {},\r\n      register_number:0,\r\n    \r\n    }\r\n    this.handleOptionsChange = this.handleOptionsChange.bind(this) // Binding the method\r\n  }\r\n \r\n// optind change handler\r\n  handleOptionsChange(selectname,event){\r\n   \r\n    const value = event\r\n    // console.log(value)\r\n    this.setState({\r\n      Selectedoption: value,\r\n      batchName:\"\",\r\n      batchId:0,\r\n      errors:{\r\n        ...this.state.errors,\r\n        SelectedBatch: {\r\n          'label': '',\r\n          'value': false\r\n        },\r\n      }\r\n    })\r\n    this.setState({batchList:[]})\r\n\r\n    if(event === \"Enrollment\"){\r\n      this.setState({\r\n        errors:{\r\n          ...this.state.errors,\r\n          SelectedBatch: {\r\n            'label': 'Please select some option',\r\n            'value': true\r\n          },\r\n        }\r\n      })\r\n      // setDisabled(false)\r\n      fetchNotCompletedBatchDetails(UserContext.centerId).then((jsondata) => {\r\n        let result = JSON.parse(jsondata.data);\r\n        // console.log(\"center : \",result)\r\n       result.forEach(element => {\r\n        //  console.log(\"Condition for date \" , element.freezeDate > today)\r\n          if(element.freezeDate > today ){\r\n            this.state.batchList.push({\r\n              \"value\": element.batchId,\r\n              \"label\": element.batchName\r\n            })\r\n          }\r\n       });\r\n      })\r\n    }\r\n    else{\r\n      // setDisabled(true)\r\n    }\r\n  }\r\n   // Hhandle batch changes\r\n   handleBatchChange(selectname,event){\r\n    // console.log(\"selected optins : \",this.state.Selectedoption)\r\n    let value = event\r\n    // console.log(event)\r\n    let index = this.state.batchList.findIndex((object) => object.value == value)\r\n    let batchname = this.state.batchList[index].label\r\n    // console.log(this.state.batcheList)\r\n    this.setState({\r\n      batchId:event,\r\n      batchName: batchname,\r\n      errors:{\r\n        ...this.state.errors,\r\n        SelectedBatch: {\r\n          'label': '',\r\n          'value': false\r\n        },\r\n      }\r\n    })\r\n  }\r\n  readExcel = (file) => {\r\n    // \r\n    let file_name = file.name\r\n    this.setState({fileName :file_name })\r\n   const fileReader = new FileReader();\r\n   fileReader.readAsArrayBuffer(file);\r\n\r\n   fileReader.onload = (e) => {\r\n    //  console.log(e)\r\n     const bufferArray = e.target.result;\r\n\r\n     const wb = XLSX.read(bufferArray, { type: \"buffer\",\r\n     cellDates: true,   \r\n    });\r\n     const wsname = wb.SheetNames[0];\r\n    \r\n     const ws = wb.Sheets[wsname];\r\n    // To get the header details of excel\r\n     const data = XLSX.utils.sheet_to_json(ws,{header:1});\r\n    //  console.log(data)\r\n    //  console.log(\"Header file \",data[0])\r\n     let student_data = XLSX.utils.sheet_to_json(ws,{ header: 0, raw: false,  dateNF: 'yyyy-mm-dd'})\r\n     \r\n    this.setState({student_count :data.length-1})\r\n     console.log(\"DataCount : \",this.state.student_count )\r\n     // Replacing all next line with space\r\n     // .replaceAll(/\\r?\\n|\\r/g, \"\")\r\n     for(var i=0;i<this.state.student_count;i++){\r\n      if(student_data[i].Aadhar_Number!==undefined)\r\n        student_data[i].Aadhar_Number.replace(\"\\r\\n\", \"\")\r\n      if(student_data[i].First_Name!== undefined)\r\n        student_data[i].First_Name.replaceAll(/\\r?\\n|\\r/g, \"\")\r\n        // console.log(student_data[i].First_Name)\r\n        console.log(student_data[i].Middle_Name)\r\n      if(student_data[i].Middle_Name!== undefined)\r\n        student_data[i].Middle_Name.replaceAll(/\\r?\\n|\\r/g, \"\")\r\n      if(student_data[i].Last_Name!== undefined)\r\n      student_data[i].Last_Name.replaceAll(/\\r?\\n|\\r/g, \"\")\r\n      if(student_data[i].Date_of_Birth!== undefined)\r\n      student_data[i].Date_of_Birth.replaceAll(\"/\" ,\"-\")\r\n      if(student_data[i].Gender!==undefined)\r\n      student_data[i].Gender.replaceAll(/\\r?\\n|\\r/g, \"\")\r\n      if(student_data[i].Qualification!==undefined)\r\n      student_data[i].Qualification.replaceAll(/\\r?\\n|\\r/g, \"\")\r\n      if(student_data[i].Passing_year!==undefined)\r\n      student_data[i].Passing_year.replaceAll(/\\r?\\n|\\r/g, \"\")\r\n      if(student_data[i].Religion!==undefined)\r\n      student_data[i].Religion.replaceAll(/\\r?\\n|\\r/g, \"\")\r\n      if(student_data[i].Address_Line_1!==undefined)\r\n      student_data[i].Address_Line_1.replaceAll(/\\r?\\n|\\r/g, \"\")\r\n      \r\n            \r\n   }\r\n\r\n    console.log(\"data :  \",student_data)\r\n    this.setState({studentInfo:student_data })\r\n    const requiredHeader =['Aadhar_Number', 'First_Name', 'Middle_Name', 'Last_Name', 'Date_of_Birth', 'Gender', 'Qualification', 'Passing_year', 'Religion', 'Address_Line_1', 'Village', 'District', 'State', 'Pincode', 'Category', 'Primary_Contact_Number', 'Primary_Mail_ID', 'College_register_no', 'Iti_grade', 'Iti_trade']\r\n    let flag = true\r\n   \r\n    requiredHeader.map((element,id) =>{\r\n      // console.log(\"header comparison \",element, \"data : \",data[0][id])\r\n    \r\n      if(flag){\r\n        if(element==data[0][id]){\r\n            if(id+1 == requiredHeader.length)\r\n            {     \r\n              // Activating the upload button\r\n              this.setState({upload_button:false})      \r\n            }\r\n      }\r\n        else{\r\n          flag = false \r\n          alert(\"Plese use the correct template for upload.The coloumn in the upload file and sample template does not match.\")\r\n          // Plese use the correct template for upload.\r\n          this.setState({upload_button:true})\r\n          return;\r\n        }\r\n      }\r\n    })\r\n   }\r\n}\r\n// Uploadinh the doumnet\r\n// this.setState({metaData})\r\nasync uploadDocuments(){\r\n  let studentInfo =  this.state.studentInfo\r\n  let duplicateAddhar = []\r\n  // Checking the duplicate aadhar in same file\r\nfor(var i = 0; i <this.state.student_count; i++) { \r\n  // console.log(\">>>>>>>>>>>>\",studentInfo)\r\n  \r\nfor(var j = i + 1; j <this.state.student_count; j++) { \r\n  if(studentInfo[i]?.Aadhar_Number === studentInfo[j]?.Aadhar_Number && (studentInfo[i]?.Aadhar_Number != null && studentInfo[i]?.Aadhar_Number != \"\" && studentInfo[i]?.Aadhar_Number!= 0)){\r\n       duplicateAddhar[i]= studentInfo[i]?.Aadhar_Number\r\n     }        \r\n    }    \r\n}  \r\n\r\n if(duplicateAddhar.length>0){\r\n  var x =0\r\n   let data=[]\r\n   for(var i=0;i<duplicateAddhar.length;i++){\r\n      if(duplicateAddhar[i] != undefined){\r\n        data[x] =duplicateAddhar[i] \r\n        x++;\r\n      } \r\n   }\r\n   console.log(data)\r\n  alert( data +\"  duplicate Addhar Number\") \r\n  return; \r\n }\r\n else{\r\n  const response = await saveBulkMetaData(this.state.fileName,today,this.state.Selectedoption,\r\n    this.state.batchName,this.state.batchId,this.state.student_count,\"L\",UserContext.centerName,\r\n    UserContext.centerId,UserContext.modelId, UserContext.userid,\"  \").then((jsondata)=>{\r\n    let result = JSON.parse(jsondata.data)\r\n    // console.log(\"Mpdel id : \",result[0].modelId) \r\n  \r\n    this.state.register_number = result[0].regId\r\n    // console.log(this.state.register_number)\r\n    if(result[0].regId ==0){\r\n      alert(\"Data Not saved\")\r\n     // changes\r\n      return;\r\n    }\r\n   else{\r\n    this.state.user_unique_id = result[0].regId\r\n    this.uploadStudentData();\r\n   }\r\n  })\r\n  \r\n }  \r\n} \r\n async uploadStudentData(){\r\n  let data_flag = false\r\n  let count_loop = 1 // counting the number of data saved\r\n  // let flag = false\r\n  let invalid_student_firstName;\r\n  let sequence_number=0;\r\n  let studentInfo =  this.state.studentInfo\r\n  // console.log(\"Bulk Student data : \",studentInfo)\r\n    for(var i=0;i<this.state.student_count;i++){\r\n      sequence_number+=1; \r\n      invalid_student_firstName = studentInfo[i].First_Name\r\n      try{\r\n        const response1 = await saveBulkStudentData(this.state.user_unique_id,\r\n          studentInfo[i]?.First_Name.replaceAll(/\\r?\\n|\\r/g, \"\") || '',\r\n           studentInfo[i]?.Last_Name.replaceAll(/\\r?\\n|\\r/g, \"\")|| '',\r\n           studentInfo[i]?.Middle_Name|| '',\r\n           studentInfo[i]?.Date_of_Birth.replaceAll(\"/\" ,\"-\")|| '',\r\n          \r\n           studentInfo[i]?.Aadhar_Number || '',  // c\r\n           this.state.batchName || '',\r\n           studentInfo[i]?.Qualification.replaceAll(/\\r?\\n|\\r/g, \"\") || '',\r\n           studentInfo[i]?.Passing_year|| '', \r\n           studentInfo[i]?.Gender.replaceAll(/\\r?\\n|\\r/g, \"\")|| '',\r\n           studentInfo[i]?.Religion.replaceAll(/\\r?\\n|\\r/g, \"\") || '',\r\n           studentInfo[i]?.Category.replaceAll(/\\r?\\n|\\r/g, \"\") || '',\r\n           studentInfo[i]?.Primary_Contact_Number || 0,\r\n           studentInfo[i]?.Primary_Mail_ID || '',\r\n           \r\n           studentInfo[i]?.College_register_no|| '',\r\n           studentInfo[i]?.Iti_grade || '',\r\n           studentInfo[i]?.Iti_trade || '',\r\n          // regex expresion replace all new line with space\r\n           studentInfo[i]?.Address_Line_1.replaceAll(/\\r?\\n|\\r/g, \" \") || '', \r\n           studentInfo[i]?.Village || '',\r\n          \r\n           studentInfo[i]?.District.replaceAll(/\\r?\\n|\\r/g, \"\") || '',\r\n           studentInfo[i]?.State.replaceAll(/\\r?\\n|\\r/g, \"\") || '',\r\n           studentInfo[i]?.Pincode || 0,\r\n         \r\n          today, // remove every place\r\n           UserContext.userid,\r\n           \"P\",\r\n           \"::\",\r\n           \"::\").then((jsondata)=>{\r\n            //  console.log(studentInfo[i]?.Address_Line_1)\r\n           let result =JSON.parse(jsondata.data)\r\n           count_loop++;\r\n          if(count_loop === this.state.student_count){\r\n            data_flag = true // change from flag to data_flag\r\n          }\r\n         })\r\n      }\r\n      catch(error){\r\n        // console.log(\">>>>>>>>>>>\"+error)\r\n        alert(sequence_number+\"-\"+invalid_student_firstName+\" \"+\"has a Invalid Data.\")\r\n        break;\r\n      }\r\n        \r\n   }\r\n  if(data_flag == true){\r\n    alert(\"Data Saved Successfully and Registration ID is : \" + this.state.user_unique_id)\r\n    // to change the status from L to P\r\n  //   saveBulkMetaDataAgain(this.state.register_number,this.state.fileName,today,this.state.Selectedoption,\r\n  //   this.state.batchName,this.state.batchId,this.state.student_count,\"P\",UserContext.centerName,\r\n  //   UserContext.centerId,UserContext.modelId, UserContext.userid,\" \" ).then((jsondata)=>{\r\n  // let result = JSON.parse(jsondata.data)\r\n  // })\r\n  }\r\n}\r\n\r\n// Download file\r\ndownloadFile(){\r\n  const url = Student_Template1;\r\n  window.open(url);\r\n}\r\n\r\n// Routes Change\r\nrouteChange(){\r\n  this.props.history.push(({ pathname: '/dashboard/History',state: {} }));\r\n}\r\n\r\n\r\n  render(){\r\n    return(\r\n      <div style={{ width: '100%' }}>\r\n         <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"flex-end\">\r\n             <Button color=\"primary\"  onClick={this.downloadFile.bind(this)}>\r\n               Download template\r\n             </Button>\r\n        </Grid>\r\n        <br/>\r\n      <Grid container>\r\n      <Grid item xs={12}> </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} >Options</InputLabel>\r\n            <SingleSelect\r\n              name=\"Selectedoption\" id=\"Selectedoption\"\r\n              options={this.state.options}\r\n              value={this.state.Selectedoption || ''}\r\n              key={this.state.Selectedoption || ''}\r\n              onChange={this.handleOptionsChange.bind(this, 'Selectedoption')}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={2}></Grid>\r\n\r\n          <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} >Batches</InputLabel>\r\n            <SingleSelect\r\n              name=\"SelectedBatch\" id=\"SelectedBatch\"\r\n              key={this.state.SelectedBatch || ''}\r\n              options={this.state.batchList}\r\n              value={this.state.SelectedBatch || ''}\r\n              onChange={this.handleBatchChange.bind(this, 'SelectedBatch')}\r\n              disabled={this.state.Selectedoption==\"Mobilization\"?true:false}\r\n              helperText={this.state.errors.SelectedBatch != undefined ? this.state.errors.SelectedBatch.label : ''}\r\n              error={this.state.errors.SelectedBatch != undefined ? this.state.errors.SelectedBatch.value : ''}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <br />\r\n        <Table  aria-label=\"simple table\" style={{ width:\"100%\"}}>\r\n          <TableBody>\r\n          <TableRow>\r\n            <TableCell> \r\n            <Input \r\n               name=\"upload-photo\"\r\n               type=\"file\"\r\n               accept='.xlsx/*, .xls/*'\r\n               onClick={e => {\r\n                (e.target.value = null)\r\n                // setDisabled(true)\r\n              }\r\n               }\r\n               onChange={(e) => {\r\n                const file = e.target.files[0];\r\n                var substr1 = file.name.substring(file.name.length-4, file.name.length);\r\n                var substr2 = file.name.substring(file.name.length-3, file.name.length);\r\n                if(substr1== \"xlsx\" || substr2 == \"xls\"){\r\n                  this.readExcel(file); \r\n                }\r\n                else{\r\n                  alert(\"Please Upload Excel file\")\r\n                  return;\r\n                }\r\n               \r\n              }}\r\n              maxFileSize={5000000} filesLimit={1} showFileNames={true}\r\n              />\r\n              <p  style={{color:\"red\"}}>Note-:Please upload Excel file</p>\r\n              <p  style={{color:\"red\"}}>and size should not be greater than 5MB.</p>\r\n            </TableCell>\r\n            </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n            <br /> <br />\r\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\" size=\"small\"  onClick={this.uploadDocuments.bind(this)}\r\n                    disabled={this.state.upload_button}\r\n             >Upload Document</Button>\r\n             </Grid>\r\n             <br />  <br />  <br />\r\n             <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"flex-end\">\r\n             <Button variant=\"contained\"  color=\"primary\" onClick={this.routeChange.bind(this)}>\r\n               History Details\r\n             </Button>\r\n             </Grid>\r\n              <br />\r\n              <br />\r\n             <div>\r\n               <h2 style={{color:\"red\"}}>Note: </h2>\r\n               <p  style={{color:\"red\"}}>Always Download the Excel Sheet form above link to upload the Student data.</p>\r\n               <p  style={{color:\"red\"}}>Avoid Enter button During filling the Student data.</p>\r\n             </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}