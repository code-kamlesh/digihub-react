{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\BeneficiarySearchPage.js\";\nimport React, { Component } from 'react';\nimport MUIDataTable from \"mui-datatables\";\nimport Button from '@material-ui/core/Button';\nimport { FormControl, Grid, TextField } from '@material-ui/core';\nimport { searchByAadharNo, searchByFirstNameAndLastNameAnddobAndPrimaryContactNumberAndPrimaryEmailId, fetchAllStudentDataByEngagementId, fetchStudentDetailsByEngagementId, captureStudentEngagementDetails } from './../util/api';\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport UserContext from '../components/GolbalContext';\n\nclass BeneficiarySearchPage extends Component {\n  constructor() {\n    super();\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.mobilise = () => {\n      captureStudentEngagementDetails(this.state.dbUserId, UserContext.centerId, UserContext.userid).then(jsondata => {\n        this.setState({\n          open: false\n        });\n        this.setState({\n          dbUserId: ''\n        });\n        this.search();\n      });\n    };\n\n    this.handleInputChange = event => {\n      const target = event.target;\n      const value = target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.reset = event => {\n      this.setState({\n        aadharNo: ''\n      });\n      this.setState({\n        firstName: ''\n      });\n      this.setState({\n        lastName: ''\n      });\n      this.setState({\n        dob: ''\n      });\n      this.setState({\n        fatherName: ''\n      });\n      this.setState({\n        contactNumber: ''\n      });\n      this.setState({\n        email: ''\n      });\n    };\n\n    this.search = event => {\n      let studentInfo = [];\n      let studentDetails = [];\n\n      if (this.state.aadharNo != '') {\n        searchByAadharNo(this.state.aadharNo).then(jsondata => {\n          studentDetails = JSON.parse(jsondata.data);\n\n          for (var i = 0; i < studentDetails.length; i++) {\n            var details = {\n              'student_id': studentDetails[i].dbUserId,\n              'engagement_id': studentDetails[i].engagementId,\n              'name': studentDetails[i].firstName + \" \" + studentDetails[i].lastName,\n              'status': studentDetails[i].status,\n              'dob': studentDetails[i].dob,\n              'action': /*#__PURE__*/React.createElement(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                size: \"small\",\n                onClick: this.checkStudentAvailability.bind(this, studentDetails[i].engagementId, studentDetails[i].dbUserId),\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 13\n                }\n              }, \"View\")\n            };\n            studentInfo.push(details);\n          }\n\n          this.setState({\n            rows: studentInfo\n          });\n        });\n      } else {\n        searchByFirstNameAndLastNameAnddobAndPrimaryContactNumberAndPrimaryEmailId(this.state.firstName, this.state.lastName, this.state.dob, this.state.contactNumber, this.state.email).then(jsondata => {\n          this.validateAll();\n          let studentDetails = JSON.parse(jsondata.data);\n\n          for (var i = 0; i < studentDetails.length; i++) {\n            var details = {\n              'student_id': studentDetails[i].dbUserId,\n              'engagement_id': studentDetails[i].engagementId,\n              'name': studentDetails[i].firstName + \" \" + studentDetails[i].lastName,\n              'status': studentDetails[i].status,\n              'dob': studentDetails[i].dob,\n              'action': /*#__PURE__*/React.createElement(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                size: \"small\",\n                onClick: this.checkStudentAvailability.bind(this, studentDetails[i].engagementId, studentDetails[i].dbUserId),\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 15\n                }\n              }, \"View\")\n            };\n            studentInfo.push(details);\n          }\n\n          this.setState({\n            rows: studentInfo\n          });\n        });\n      }\n    };\n\n    this.state = {\n      rows: [],\n      aadharNo: '',\n      firstName: '',\n      lastName: '',\n      dob: '',\n      fatherName: '',\n      errors: {},\n      contactNumber: '',\n      email: '',\n      open: false,\n      dbUserId: ''\n    };\n  }\n\n  checkStudentAvailability(engagementId, dbUserId) {\n    var data = '[{\"engagementId\":' + engagementId + '}]';\n    fetchStudentDetailsByEngagementId(engagementId).then(jsondata => {\n      let enrollmentDetails = JSON.parse(jsondata.data);\n      var centerId = enrollmentDetails[0].centerId;\n\n      if (UserContext.centerId == centerId) {\n        fetchAllStudentDataByEngagementId(data).then(jsondata => {\n          let studentDetails = JSON.parse(jsondata.data);\n          this.props.history.push({\n            pathname: '/dashboard/updatebeneficiary',\n            state: {\n              dbUserId: studentDetails[0].dbUserId,\n              status: studentDetails[0].status,\n              engagementId: studentDetails[0].engagementId,\n              name: studentDetails[0].firstName + \" \" + studentDetails[0].lastName,\n              tab: 0,\n              status: studentDetails[0].status\n            }\n          });\n        });\n      } else {\n        this.setState({\n          dbUserId: dbUserId\n        });\n        this.setState({\n          open: true\n        });\n      }\n    });\n  }\n\n  validateAll() {\n    var nonMandatoryFields = [\"email\"];\n    var json = this.state.experienceData;\n    var errors = this.state.errors;\n    Object.keys(json).forEach(function (key) {\n      if (!nonMandatoryFields.includes(key) && (json[key] === undefined || json[key] === '' || json[key] === null)) {\n        let res = \"Please fill out this field\";\n        errors[key] = {\n          'label': res,\n          'value': res == \"\" ? false : true\n        };\n      }\n    }); // alert(JSON.stringify(this.state.errors));\n\n    this.state.errors = errors;\n  }\n\n  render() {\n    const columns = [{\n      label: 'Student Id',\n      name: 'student_id',\n      template: \"{common.radio()}\",\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Engagement Id',\n      name: 'engagement_id',\n      options: {\n        sortDirection: 'desc'\n      },\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Name',\n      name: 'name',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Date Of Birth',\n      name: 'dob',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Status',\n      name: 'status',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Action',\n      name: 'action',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }];\n    const options = {\n      filterType: \"dropdown\",\n      responsive: \"stacked\",\n      sortDirection: \"desc\",\n      disableToolbarSelect: true // textLabels: {\n      //   body: {\n      //     noMatch: <span style={{color:\"blue\"}}>Please wait data is loading...</span>\n      //   }\n      // }\n\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }\n    }, \"Basic Details\"))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"number\",\n      name: \"aadharNo\",\n      id: \"aadharNo\",\n      label: \"Aadhar Number\",\n      onInput: e => {\n        e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 12);\n      },\n      onChange: this.handleInputChange,\n      value: this.state.aadharNo,\n      inputProps: {\n        readOnly: (this.state.firstName || this.state.lastName || this.state.dob || this.state.contactNumber || this.state.email) == \"\" ? false : true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    })))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }\n    }), \"(OR)\", /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      name: \"firstName\",\n      id: \"firstName\",\n      label: \"First Name\",\n      onChange: this.handleInputChange,\n      value: this.state.firstName,\n      helperText: this.state.errors.firstName != undefined ? this.state.errors.firstName.label : '',\n      error: this.state.errors.firstName != undefined ? this.state.errors.firstName.value : '',\n      inputProps: {\n        readOnly: this.state.aadharNo == \"\" ? false : true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      name: \"lastName\",\n      id: \"lastName\",\n      label: \"Last Name\",\n      onChange: this.handleInputChange,\n      value: this.state.lastName,\n      helperText: this.state.errors.lastName != undefined ? this.state.errors.lastName.label : '',\n      error: this.state.errors.lastName != undefined ? this.state.errors.lastName.value : '',\n      inputProps: {\n        readOnly: this.state.aadharNo == \"\" ? false : true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"date\",\n      name: \"dob\",\n      id: \"dob\",\n      onChange: this.handleInputChange,\n      label: \"Birthday\",\n      value: this.state.dob || '',\n      type: \"date\",\n      helperText: this.state.errors.dob != undefined ? this.state.errors.dob.label : '',\n      error: this.state.errors.dob != undefined ? this.state.errors.dob.value : '',\n      inputProps: {\n        min: new Date('02/01/1985').toISOString().slice(0, 10),\n        max: new Date().toISOString().slice(0, 10)\n      },\n      InputLabelProps: {\n        shrink: true,\n        readOnly: this.state.aadharNo == \"\" ? false : true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"number\",\n      name: \"contactNumber\",\n      id: \"contactNumber\",\n      label: \"Contact Number\",\n      onChange: this.handleInputChange,\n      value: this.state.contactNumber,\n      helperText: this.state.errors.contactNumber != undefined ? this.state.errors.contactNumber.label : '',\n      error: this.state.errors.contactNumber != undefined ? this.state.errors.contactNumber.value : '',\n      onInput: e => {\n        e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 10);\n      },\n      inputProps: {\n        readOnly: this.state.aadharNo == \"\" ? false : true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      label: \"Email\",\n      onChange: this.handleInputChange,\n      value: this.state.email,\n      inputProps: {\n        readOnly: this.state.aadharNo == \"\" ? false : true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 13\n      }\n    })))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-end\",\n      alignItems: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"small\",\n      onClick: () => {\n        this.props.history.push({\n          pathname: '/dashboard/addobeneficiary'\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }\n    }, \"Add Beneficiary\"), \"\\xA0\", /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"small\",\n      onClick: this.reset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 1\n      }\n    }, \"Reset\"), \"\\xA0\", /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"small\",\n      onClick: this.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 1\n      }\n    }, \"Search\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(MUIDataTable, {\n      label: \"List of Students\",\n      data: this.state.rows,\n      columns: columns,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DialogContentText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }\n    }, \"Do you want to mobilise this beneficiary ?\")), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.mobilise,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }\n    }, \"Mobilized\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }\n    }, \"Cancel\"))));\n  }\n\n}\n\nexport default BeneficiarySearchPage;","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/BeneficiarySearchPage.js"],"names":["React","Component","MUIDataTable","Button","FormControl","Grid","TextField","searchByAadharNo","searchByFirstNameAndLastNameAnddobAndPrimaryContactNumberAndPrimaryEmailId","fetchAllStudentDataByEngagementId","fetchStudentDetailsByEngagementId","captureStudentEngagementDetails","BrowserRouter","Router","Link","EditIcon","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","UserContext","BeneficiarySearchPage","constructor","handleClose","setState","open","mobilise","state","dbUserId","centerId","userid","then","jsondata","search","handleInputChange","event","target","value","name","reset","aadharNo","firstName","lastName","dob","fatherName","contactNumber","email","studentInfo","studentDetails","JSON","parse","data","i","length","details","engagementId","status","checkStudentAvailability","bind","push","rows","validateAll","errors","enrollmentDetails","props","history","pathname","tab","nonMandatoryFields","json","experienceData","Object","keys","forEach","key","includes","undefined","res","render","columns","label","template","headerStyle","color","options","sortDirection","filterType","responsive","disableToolbarSelect","e","Math","max","parseInt","toString","slice","readOnly","min","Date","toISOString","shrink"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { FormControl,Grid , TextField}  from '@material-ui/core';\r\nimport {searchByAadharNo,searchByFirstNameAndLastNameAnddobAndPrimaryContactNumberAndPrimaryEmailId,\r\nfetchAllStudentDataByEngagementId,fetchStudentDetailsByEngagementId,captureStudentEngagementDetails} from './../util/api';\r\nimport {BrowserRouter as Router,Link} from 'react-router-dom';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport UserContext from '../components/GolbalContext'\r\nclass BeneficiarySearchPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {rows:[],aadharNo:'',firstName:'',lastName:'',dob:'',fatherName:'',errors : {},\r\n    contactNumber:'',email:'',open:false,dbUserId:''};\r\n}\r\n\r\n\r\nhandleClose = () => {\r\n  this.setState({open:false})\r\n};\r\n\r\nmobilise= () => {\r\n  captureStudentEngagementDetails(this.state.dbUserId,UserContext.centerId,UserContext.userid).then((jsondata) => {\r\n    this.setState({open:false});\r\n    this.setState({dbUserId:''});\r\n    this.search();\r\n  })\r\n};\r\n\r\nhandleInputChange=(event) =>{\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    this.setState({[name]: value})\r\n}\r\nreset = (event) => {\r\n  this.setState({aadharNo:''});\r\n  this.setState({firstName:''});\r\n  this.setState({lastName:''});\r\n  this.setState({dob:''});\r\n  this.setState({fatherName:''});\r\n  this.setState({contactNumber:''});\r\n  this.setState({email:''});\r\n  \r\n}\r\n\r\n\r\n\r\n\r\ncheckStudentAvailability(engagementId,dbUserId){\r\nvar data='[{\"engagementId\":'+engagementId+'}]';\r\nfetchStudentDetailsByEngagementId(engagementId).then((jsondata) => { \r\n  let enrollmentDetails = JSON.parse(jsondata.data);\r\n  var centerId=enrollmentDetails[0].centerId;\r\n  if(UserContext.centerId==centerId){\r\nfetchAllStudentDataByEngagementId(data).then((jsondata) => { \r\n  let studentDetails = JSON.parse(jsondata.data);\r\n  this.props.history.push({\r\n      pathname: '/dashboard/updatebeneficiary',\r\n      state: { dbUserId: studentDetails[0].dbUserId ,status : studentDetails[0].status ,  engagementId :  studentDetails[0].engagementId , name : studentDetails[0].firstName + \" \" + studentDetails[0].lastName, tab : 0, status : studentDetails[0].status}       \r\n    })\r\n  });\r\n  }\r\nelse {\r\nthis.setState({dbUserId:dbUserId});\r\nthis.setState({open:true});\r\n}\r\n});\r\n}\r\n\r\n\r\nsearch = (event) => {\r\n    let studentInfo=[];\r\n    let  studentDetails=[];\r\n    \r\n    if(this.state.aadharNo!=''){\r\n    searchByAadharNo(this.state.aadharNo).then((jsondata) => { \r\n        studentDetails = JSON.parse(jsondata.data);  \r\n        for(var i=0;i<studentDetails.length;i++){\r\n        var  details =\r\n        {    'student_id':studentDetails[i].dbUserId, \r\n            'engagement_id':studentDetails[i].engagementId,\r\n            'name' :studentDetails[i].firstName+\" \"+studentDetails[i].lastName,\r\n            'status':studentDetails[i].status,\r\n            'dob':studentDetails[i].dob,\r\n            'action':\r\n            <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick= {this.checkStudentAvailability.bind(this,studentDetails[i].engagementId,studentDetails[i].dbUserId)}>View</Button>\r\n        }; \r\n        studentInfo.push(details);    \r\n    }    \r\n    this.setState({rows: studentInfo});\r\n       });\r\n      }\r\n\r\n      else{\r\n        searchByFirstNameAndLastNameAnddobAndPrimaryContactNumberAndPrimaryEmailId(this.state.firstName,this.state.lastName,this.state.dob,this.state.contactNumber,this.state.email).then((jsondata) => { \r\n          this.validateAll();\r\n          let  studentDetails = JSON.parse(jsondata.data);  \r\n          for(var i=0;i<studentDetails.length;i++){\r\n          var  details =\r\n          {    'student_id':studentDetails[i].dbUserId, \r\n              'engagement_id':studentDetails[i].engagementId,\r\n              'name' :studentDetails[i].firstName+\" \"+studentDetails[i].lastName,\r\n              'status':studentDetails[i].status,\r\n              'dob':studentDetails[i].dob,\r\n              'action':   \r\n              <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick= {this.checkStudentAvailability.bind(this,studentDetails[i].engagementId,studentDetails[i].dbUserId)}>View</Button>\r\n          }; \r\n          studentInfo.push(details);    \r\n      }    \r\n      this.setState({rows: studentInfo});\r\n         });\r\n\r\n\r\n      }\r\n}\r\nvalidateAll() \r\n{\r\n  var nonMandatoryFields = [\"email\"];\r\n  var json = this.state.experienceData;\r\n  var errors = this.state.errors;\r\n  Object.keys(json).forEach(function(key) {\r\n      if((!nonMandatoryFields.includes(key)) && (json[key] === undefined || json[key] === '' || json[key] ===null ))\r\n      {\r\n        let res = \"Please fill out this field\";\r\n          errors[key] = {\r\n              'label' : res , \r\n              'value' : res == \"\" ? false : true \r\n            }\r\n     }\r\n  });\r\n // alert(JSON.stringify(this.state.errors));\r\n  this.state.errors = errors;\r\n\r\n}\r\n  render() {\r\n    \r\n    const columns = [{label: 'Student Id', name: 'student_id',template:\"{common.radio()}\", headerStyle: {color:'#FF9800'}},\r\n    {label: 'Engagement Id', name: 'engagement_id',options : {\r\n      sortDirection : 'desc'\r\n    },headerStyle: {color:'#FF9800'}},\r\n    {label: 'Name', name: 'name',headerStyle: {color:'#FF9800'}},\r\n    {label: 'Date Of Birth', name: 'dob',headerStyle: {color:'#FF9800'}},\r\n    {label: 'Status', name: 'status',headerStyle: {color:'#FF9800'}},\r\n    {label: 'Action', name: 'action',headerStyle: {color:'#FF9800'}}\r\n   ]\r\n \r\n    \r\n    const options = {\r\n        filterType: \"dropdown\",\r\n        responsive: \"stacked\",\r\n        sortDirection: \"desc\",\r\n        disableToolbarSelect:true,\r\n        // textLabels: {\r\n        //   body: {\r\n        //     noMatch: <span style={{color:\"blue\"}}>Please wait data is loading...</span>\r\n        //   }\r\n        // }\r\n      };\r\n      \r\n\r\n\r\n\r\n    return ( \r\n<div>\r\n<Grid container spacing={2}>\r\n    <Grid item xs={12}>\r\n          <FormControl>\r\n          <h5>Basic Details</h5>\r\n            </FormControl>  \r\n        </Grid>\r\n        <Grid item xs={12} sm={3}>\r\n          <FormControl>\r\n       \r\n            <TextField   type=\"number\" name=\"aadharNo\" id=\"aadharNo\"\r\n            label = \"Aadhar Number\" onInput = {(e) =>{e.target.value = Math.max(0, parseInt(e.target.value) ).toString().slice(0,12)}}\r\n            onChange={this.handleInputChange} value={this.state.aadharNo} \r\n            inputProps={{\r\n              readOnly: (this.state.firstName || this.state.lastName || this.state.dob || this.state.contactNumber || this.state.email) ==\"\"?false:true\r\n            }}\r\n            \r\n            />            \r\n          </FormControl>  \r\n        </Grid>\r\n        </Grid>\r\n        <br/>\r\n         (OR)\r\n         <Grid container spacing={2}>\r\n         <Grid item xs={12} sm={3}>\r\n          <FormControl>\r\n            <TextField   type=\"text\" name=\"firstName\" id=\"firstName\"\r\n            label = \"First Name\"  onChange={this.handleInputChange} value={this.state.firstName} \r\n            helperText = {this.state.errors.firstName != undefined ? this.state.errors.firstName.label : '' } \r\n            error = {this.state.errors.firstName != undefined ? this.state.errors.firstName.value : '' }\r\n            inputProps={{\r\n              readOnly: this.state.aadharNo==\"\"?false:true\r\n            }}\r\n            />            \r\n          </FormControl>  \r\n        </Grid>\r\n        <Grid item xs={12} sm={3}>\r\n          <FormControl>\r\n            <TextField   type=\"text\" name=\"lastName\" id=\"lastName\"\r\n            label = \"Last Name\"  onChange={this.handleInputChange} value={this.state.lastName} \r\n            helperText = {this.state.errors.lastName != undefined ? this.state.errors.lastName.label : '' } \r\n            error = {this.state.errors.lastName != undefined ? this.state.errors.lastName.value : '' }\r\n            inputProps={{\r\n              readOnly: this.state.aadharNo==\"\"?false:true\r\n            }}\r\n            />            \r\n          </FormControl>  \r\n        </Grid>\r\n        <Grid item xs={12} sm={3}>\r\n        <FormControl>\r\n        <TextField   id=\"date\" name = \"dob\" id = \"dob\" onChange={this.handleInputChange}\r\n            label=\"Birthday\" value={this.state.dob || ''}\r\n            type=\"date\"\r\n            helperText = {this.state.errors.dob != undefined ? this.state.errors.dob.label : '' } \r\n            error = {this.state.errors.dob != undefined ? this.state.errors.dob.value : '' }\r\n            inputProps={{  min: new Date('02/01/1985').toISOString().slice(0,10) , max: new Date().toISOString().slice(0,10)}}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n              readOnly: this.state.aadharNo==\"\"?false:true\r\n            }} />\r\n\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} sm={3}>\r\n          <FormControl>\r\n            <TextField   type=\"number\" name=\"contactNumber\" id=\"contactNumber\"\r\n            label = \"Contact Number\"  onChange={this.handleInputChange} value={this.state.contactNumber}\r\n            helperText = {this.state.errors.contactNumber != undefined ? this.state.errors.contactNumber.label : '' } \r\n            error = {this.state.errors.contactNumber != undefined ? this.state.errors.contactNumber.value : '' }\r\n            onInput = {(e) =>{\r\n              e.target.value = Math.max(0, parseInt(e.target.value) ).toString().slice(0,10)\r\n          }}\r\n            \r\n            inputProps={{\r\n              readOnly: this.state.aadharNo==\"\"?false:true\r\n            }}\r\n\r\n            />            \r\n          </FormControl>  \r\n        </Grid>\r\n        <Grid item xs={12} sm={3}>\r\n          <FormControl>\r\n            <TextField   type=\"email\" name=\"email\" id=\"email\"\r\n            label = \"Email\"  onChange={this.handleInputChange} value={this.state.email} \r\n            inputProps={{\r\n              readOnly: this.state.aadharNo==\"\"?false:true\r\n            }}\r\n            />            \r\n          </FormControl>  \r\n        </Grid>\r\n        </Grid>\r\n        <br/>\r\n        <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"flex-end\">\r\n        <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={()=>{\r\n         this.props.history.push({pathname: '/dashboard/addobeneficiary'})}}>         \r\n          Add Beneficiary\r\n       </Button>\r\n &nbsp;\r\n<Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={this.reset}>Reset</Button>\r\n&nbsp;\r\n<Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={this.search}>Search</Button>\r\n\r\n</Grid>\r\n        \r\n<br/><br/>\r\n<MUIDataTable label={\"List of Students\"} data={this.state.rows} columns={columns} options={options}>\r\n</MUIDataTable>\r\n\r\n\r\n\r\n<Dialog open={this.state.open} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\"></DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n   Do you want to mobilise this beneficiary ?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.mobilise} color=\"primary\">\r\n           Mobilized\r\n          </Button>\r\n          <Button onClick={this.handleClose} color=\"primary\">\r\n          Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n\r\n\r\n</div>       \r\n    )    \r\n}\r\n\r\n  }\r\n    \r\nexport default BeneficiarySearchPage ;\r\n"]},"metadata":{},"sourceType":"module"}