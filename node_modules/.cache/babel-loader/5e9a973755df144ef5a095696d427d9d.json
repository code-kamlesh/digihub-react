{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\FundManger.js\";\nimport React, { Component } from 'react';\nimport { Checkbox, InputLabel, Input, Grid, Button } from '@material-ui/core';\nimport { fetchAllStateDetails, fetchCenterByStateName, fetchStateByZone, getReports, fetchEmployerDetails, fetchBatchDetails, fetchEnrollmentDetailsByBatchId, getBatchDetailsByBatchIdandFunderId, saveBatchFunderDetails, updateBatchFunderDetails, getBatchDetailsByBatchId } from './../util/api';\nimport UserContext from '../components/GolbalContext';\nimport { SingleSelect } from \"react-select-material-ui\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nlet today = new Date();\nlet dd = String(today.getDate()).padStart(2, '0');\nlet mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n\nlet yyyy = today.getFullYear();\nlet hours = String(today.getHours()).padStart(2, '0');\nlet minutes = String(today.getMinutes()).padStart(2, '0');\nlet seconds = String(today.getSeconds()).padStart(2, '0');\ntoday = yyyy + '-' + mm + '-' + dd + ' ' + hours + ':' + minutes + ':' + seconds;\nexport default class FundManeger extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      regions: [{\n        value: 'All',\n        label: 'All'\n      }, {\n        value: 'East',\n        label: 'East'\n      }, {\n        value: 'west',\n        label: 'West'\n      }, {\n        value: 'North',\n        label: 'North'\n      }, {\n        value: 'South',\n        label: 'South'\n      }],\n      statelist: [],\n      centerlist: [],\n      centerId: \"\",\n      funderId: \"\",\n      funderType: \"P\",\n      funderName: \"\",\n      funderAccId: -1,\n      accountStatus: \"Active Partner\",\n      typeOfRelationship: \"%Funding partner%\",\n      funderlist: [],\n      errors: {},\n      totalTrainees: 0,\n      mappedTableData: [],\n      unmappedTableData: [],\n      centerName: ''\n    };\n    this.arrayTableData = this.arrayTableData.bind(this);\n    this.sepratingTableData = this.sepratingTableData.bind(this);\n    this.saveAll = this.saveAll.bind(this);\n    this.updateAll = this.updateAll.bind(this); // should be uncommented if needed\n    // this.unmapAllSecondaryBatchesIfPrimaryisUnmapped = this.unmapAllSecondaryBatchesIfPrimaryisUnmapped.bind(this);\n\n    this.countingNoOfStudents = this.countingNoOfStudents.bind(this);\n  }\n\n  handleRegionsChange(selectname, event) {\n    this.setState({\n      [selectname]: event,\n      errors: { ...this.state.errors,\n        regions: {\n          'label': '',\n          'value': false\n        },\n        Selectedstate: {\n          'label': 'Please select some option',\n          'value': true\n        },\n        centerId: {\n          'label': 'Please select some option',\n          'value': true\n        },\n        funderId: {\n          'label': 'Please select some option',\n          'value': true\n        }\n      },\n      Selectedstate: '',\n      statelist: [],\n      centerId: '',\n      centerlist: [],\n      funderId: '',\n      funderlist: [],\n      mappedTableData: [],\n      unmappedTableData: []\n    });\n\n    if (event === \"All\") {\n      fetchAllStateDetails().then(jsondata => {\n        let result = JSON.parse(jsondata.data);\n        result.forEach(element => {\n          this.state.statelist.push({\n            \"value\": element.name,\n            \"label\": element.name\n          });\n        });\n      });\n    } else {\n      fetchStateByZone(event).then(jsondata => {\n        let result = JSON.parse(jsondata.data);\n        result.forEach(element => {\n          this.state.statelist.push({\n            \"value\": element.name,\n            \"label\": element.name\n          });\n        });\n      });\n    }\n  } // drop down for state\n\n\n  handleStateChange(selectname, event) {\n    this.setState({\n      [selectname]: event,\n      errors: { ...this.state.errors,\n        Selectedstate: {\n          'label': '',\n          'value': false\n        },\n        centerId: {\n          'label': 'Please select some option',\n          'value': true\n        },\n        funderId: {\n          'label': 'Please select some option',\n          'value': true\n        }\n      },\n      centerId: '',\n      centerlist: [],\n      funderId: '',\n      funderlist: [],\n      mappedTableData: [],\n      unmappedTableData: []\n    });\n    fetchCenterByStateName(event).then(jsondata => {\n      let result = JSON.parse(jsondata.data);\n      result.forEach(element => {\n        this.state.centerlist.push({\n          \"value\": element.id,\n          \"label\": element.name\n        });\n      });\n    });\n  } // drop down for center name\n\n\n  handleCenterChange(selectname, event) {\n    this.setState({\n      [selectname]: event,\n      errors: { ...this.state.errors,\n        centerId: {\n          'label': '',\n          'value': false\n        },\n        funderId: {\n          'label': 'Please select some option',\n          'value': true\n        }\n      },\n      funderId: '',\n      funderlist: [],\n      mappedTableData: [],\n      unmappedTableData: []\n    }); // Employer api calling to fetch funderlist\n\n    fetchEmployerDetails(this.state.accountStatus, this.state.typeOfRelationship).then(jsondata => {\n      let result = JSON.parse(jsondata.data);\n      result.forEach(element => {\n        this.state.funderlist.push({\n          \"value\": element.id,\n          \"label\": element.accountName,\n          \"accountid\": element.accountId\n        });\n      });\n    });\n  } // drop down for funder list\n\n\n  handleFunderChange(selectname, event) {\n    let funderId = event;\n    let index = this.state.funderlist.findIndex(object => object.value == funderId);\n    let funderName = this.state.funderlist[index].label;\n    let funderAccId = this.state.funderlist[index].accountid;\n    this.setState({\n      [selectname]: event,\n      errors: { ...this.state.errors,\n        funderId: {\n          'label': '',\n          'value': false\n        }\n      },\n      funderName,\n      funderAccId,\n      mappedTableData: [],\n      unmappedTableData: []\n    });\n    this.arrayTableData(funderId, funderName, funderAccId);\n  }\n\n  handleRadioChange(event) {\n    let value = event.target.value;\n    this.setState({\n      funderType: value\n    });\n    this.arrayTableData(this.state.funderId, this.state.funderName);\n  } // Center id is static i.e 20 for a time being\n\n\n  arrayTableData(funderId, funderName, funderAccId) {\n    var tableData = [];\n    fetchBatchDetails(this.state.centerId).then(jsondata => {\n      let result = JSON.parse(jsondata.data);\n      var arrData = {};\n      result.map((element, id) => {\n        //to get the student Strength present based on the enrollment ID's\n        arrData = element;\n        tableData = [...tableData, {\n          \"BatchName\": arrData.batchName,\n          \"batchId\": arrData.batchId,\n          \"funderName\": funderName,\n          \"startDate\": arrData.startDate,\n          \"endDate\": arrData.endDate,\n          \"funderId\": funderId,\n          \"trainees\": 0,\n          \"id\": \"\",\n          \"crmFunderId\": funderAccId,\n          \"isActive\": \"Y\",\n          \"fundingType\": this.state.funderType,\n          \"remarks\": \"\",\n          \"startDate\": arrData.startDate,\n          \"endDate\": arrData.endDate\n        }];\n      });\n      this.sepratingTableData(this.countingNoOfStudents(tableData));\n    });\n  } //for getting the number of students per batchId\n\n\n  countingNoOfStudents(tableData) {\n    tableData.map((element, id) => {\n      getReports(1, 20, this.state.centerId, element.startDate, element.endDate, \"Enrolled\", element.batchId).then(jsondata => {\n        if (jsondata.data) {\n          let studentDetails = JSON.parse(jsondata.data);\n          studentDetails.map((student, id) => {\n            if (student.studentEngagementStatus === \"Enrolled\") {\n              element.trainees += 1;\n            }\n          });\n        }\n      }); // fetchEnrollmentDetailsByBatchId(element.batchId).then((jsondata) => {\n      //   let res = JSON.parse(jsondata.data)\n      //   element.trainees = res.length\n      // })\n    });\n    return tableData;\n  } //the table is then seprated to two parts mapped and unmapped table\n\n\n  sepratingTableData(tableData) {\n    this.setState({\n      mappedTableData: [],\n      unmappedTableData: [],\n      totalTrainees: 0\n    });\n    var mappedTableData = [];\n    var unmappedTableData = [];\n    var totalTrainees = 0;\n    tableData.map((element, id) => {\n      //checking for the mapped validity of the table\n      getBatchDetailsByBatchIdandFunderId(element.batchId, element.funderId, \"Y\", this.state.funderType).then(jsondata => {\n        let res = JSON.parse(jsondata.data);\n\n        if (res[0].length > 0) {\n          var _res$0$;\n\n          tableData[id].id = res[0][0].id;\n          tableData[id].isActive = res[0][0].isActive;\n          tableData[id].fundingType = res[0][0].fundingType;\n          tableData[id].crmFunderId = (_res$0$ = res[0][0]) === null || _res$0$ === void 0 ? void 0 : _res$0$.crmFunderId;\n          tableData[id].remarks = res[0][0].remarks;\n          mappedTableData = [...mappedTableData, tableData[id]];\n          totalTrainees += tableData[id].trainees;\n          this.setState({\n            mappedTableData,\n            totalTrainees\n          });\n        } else {\n          //if not mapped then checking the type before unmapping the table data\n          // if the type is primary then directly showing it in the unmapped section\n          if (this.state.funderType == \"P\") {\n            //get details by batchID if not present then add it to the unmapped table\n            getBatchDetailsByBatchId(element.batchId, \"Y\", this.state.funderType).then(jsondata => {\n              let res = JSON.parse(jsondata.data);\n\n              if (res[0][0] == undefined) {\n                unmappedTableData = [...unmappedTableData, tableData[id]];\n                this.setState({\n                  unmappedTableData\n                });\n              }\n            });\n          } //if the type is secondary check the if the batches are already primarly mapped before showing in the unmapped section\n          else if (this.state.funderType == \"S\") {\n            getBatchDetailsByBatchId(element.batchId, \"Y\", \"P\").then(jsondata => {\n              let res = JSON.parse(jsondata.data);\n\n              if (res[0][0] == undefined) {} else if (res[0][0].funderId != this.state.funderId) {\n                unmappedTableData = [...unmappedTableData, tableData[id]];\n                this.setState({\n                  unmappedTableData\n                });\n              }\n            });\n          }\n        }\n      });\n    });\n  } //save batch funder mapping \n\n\n  saveFunderMappingDetails(batchId, funderId, crmFunderId, isActive, fundingType, createdBy, createdOn, remarks, isAll) {\n    crmFunderId = crmFunderId || this.state.funderAccId;\n    saveBatchFunderDetails(batchId, funderId, crmFunderId, isActive, fundingType, createdBy, createdOn, remarks).then(jsondata => {\n      var _res$;\n\n      let res = JSON.parse(jsondata.data);\n\n      if (((_res$ = res[0]) === null || _res$ === void 0 ? void 0 : _res$.length) > 0) {// alert('Saved Batch for this funder successfully')\n      }\n    });\n\n    if (!isAll) {\n      this.arrayTableData(this.state.funderId, this.state.funderName);\n    }\n  } //this function is still not needed should be uncommented whenever needed \n  // unmapAllSecondaryBatchesIfPrimaryisUnmapped(batchId){\n  //   getBatchDetailsByBatchId(batchId, \"Y\", \"S\").then((jsondata)=>{\n  //     if(jsondata.status == \"success\"){\n  //       let data = JSON.parse(jsondata.data)\n  //       data[0].forEach((element)=>{\n  //         this.updateFunderMappingDetails(element.id, element.batchId, element.funderId, element.crmFunderId, \"N\", element.remarks, today, UserContext.userid, \"S\", true)\n  //       })\n  //     }\n  //   })  \n  // }\n  //update batch funder mapping \n\n\n  updateFunderMappingDetails(id, batchId, funderId, crmFunderId, isActive, remarks, updatedOn, updatedBy, fundingType, isAll) {\n    // if(fundingType == \"P\"){\n    //     this.unmapAllSecondaryBatchesIfPrimaryisUnmapped(batchId)\n    // }\n    crmFunderId = crmFunderId || this.state.funderAccId;\n    updateBatchFunderDetails(id, batchId, funderId, crmFunderId, isActive, remarks, updatedOn, updatedBy, fundingType).then(jsondata => {\n      var _res$2;\n\n      let res = JSON.parse(jsondata.data);\n\n      if (((_res$2 = res[0]) === null || _res$2 === void 0 ? void 0 : _res$2.length) > 0) {// alert('Data is updated successfully')\n      }\n    });\n\n    if (!isAll) {\n      this.arrayTableData(this.state.funderId, this.state.funderName);\n    }\n  }\n\n  saveAll() {\n    this.state.unmappedTableData.map((element, id) => {\n      this.saveFunderMappingDetails(element.batchId, element.funderId, element.crmFunderId, element.isActive, this.state.funderType, UserContext.userid, today, \"\", true);\n    });\n    this.arrayTableData(this.state.funderId, this.state.funderName);\n  }\n\n  updateAll() {\n    this.state.mappedTableData.map((element, id) => {\n      this.updateFunderMappingDetails(element.id, element.batchId, element.funderId, element.crmFunderId, \"N\", \"\", today, UserContext.userid, this.state.funderType, true);\n    });\n    this.arrayTableData(this.state.funderId, this.state.funderName);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 11\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 13\n      }\n    }, \"Regions\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"Selectedregion\",\n      id: \"Selectedregion\",\n      options: this.state.regions,\n      value: this.state.Selectedregion || '',\n      key: this.state.Selectedregion || '',\n      onChange: this.handleRegionsChange.bind(this, 'Selectedregion'),\n      helperText: this.state.errors.Selectedregion != undefined ? this.state.errors.Selectedregion.label : '',\n      error: this.state.errors.Selectedregion != undefined ? this.state.errors.Selectedregion.value : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 13\n      }\n    }, \"State\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"Selectedstate\",\n      id: \"Selectedstate\",\n      key: this.state.Selectedstate || '',\n      options: this.state.statelist,\n      value: this.state.Selectedstate || '',\n      onChange: this.handleStateChange.bind(this, 'Selectedstate'),\n      helperText: this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.label : '',\n      error: this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.value : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 13\n      }\n    }, \"Center Name\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"selectedcenter\",\n      id: \"centerId\",\n      options: this.state.centerlist,\n      value: this.state.centerId || '',\n      onChange: this.handleCenterChange.bind(this, 'centerId'),\n      helperText: this.state.errors.centerId != undefined ? this.state.errors.centerId.label : '',\n      error: this.state.errors.centerId != undefined ? this.state.errors.centerId.value : '',\n      key: this.state.centerId || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 13\n      }\n    }, \"Funding Partner\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"selectedfunder\",\n      id: \"funderId\",\n      options: this.state.funderlist,\n      value: this.state.funderId || '',\n      onChange: this.handleFunderChange.bind(this, 'funderId'),\n      helperText: this.state.errors.funderId != undefined ? this.state.errors.funderId.label : '',\n      error: this.state.errors.funderId != undefined ? this.state.errors.funderId.value : '',\n      key: this.state.funderId || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 13\n      }\n    }, \"Funding Type\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      onChange: this.handleRadioChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      value: \"P\",\n      name: \"funderType\",\n      checked: this.state.funderType === \"P\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 15\n      }\n    }), \" Primary \\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      value: \"S\",\n      name: \"funderType\",\n      checked: this.state.funderType === \"S\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 15\n      }\n    }), \" Supporting\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      id: \"tableTitle\",\n      component: \"div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 13\n      }\n    }, \" UnMapped Batches \"), /*#__PURE__*/React.createElement(Box, {\n      border: 1,\n      borderRadius: \"1.75%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      \"aria-label\": \"simple table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 21\n      }\n    }, \"Batch Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 21\n      }\n    }, \"Start Date\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 21\n      }\n    }, \"End Date\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 21\n      }\n    }, \"Trainees\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 17\n      }\n    }, this.state.unmappedTableData.map((dataValue, id) => /*#__PURE__*/React.createElement(TableRow, {\n      id: \"tablerow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 23\n      }\n    }, dataValue.BatchName), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 23\n      }\n    }, dataValue.startDate), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 23\n      }\n    }, dataValue.endDate), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 23\n      }\n    }, dataValue.trainees), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => this.saveFunderMappingDetails(dataValue.batchId, dataValue.funderId, dataValue.crmFunderId, \"Y\", this.state.funderType, UserContext.userid, today, '', false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 35\n      }\n    }, \" map \")))))))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      id: \"tableTitle\",\n      component: \"div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 13\n      }\n    }, \" Mapped Batches \"), /*#__PURE__*/React.createElement(Box, {\n      border: 1,\n      borderRadius: \"1.75%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      \"aria-label\": \"simple table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 21\n      }\n    }, \"Batch Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 21\n      }\n    }, \"Start Date\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 21\n      }\n    }, \"End Date\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 21\n      }\n    }, \"Trainees\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 17\n      }\n    }, this.state.mappedTableData.map((dataValue, id) => /*#__PURE__*/React.createElement(TableRow, {\n      id: \"tablerow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 23\n      }\n    }, dataValue.BatchName), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 23\n      }\n    }, dataValue.startDate), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 23\n      }\n    }, dataValue.endDate), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 23\n      }\n    }, dataValue.trainees), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => this.updateFunderMappingDetails(dataValue.id, dataValue.batchId, dataValue.funderId, dataValue.crmFunderId, \"N\", '', today, UserContext.userid, this.state.funderType, false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 35\n      }\n    }, \" unmap \"))))))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      disabled: this.state.unmappedTableData == [] || this.state.unmappedTableData == undefined || this.state.unmappedTableData == \"\" ? true : false,\n      onClick: this.saveAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 13\n      }\n    }, \"Map All\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      disabled: this.state.mappedTableData == [] || this.state.mappedTableData == undefined || this.state.mappedTableData == \"\" ? true : false,\n      onClick: this.updateAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 13\n      }\n    }, \"Unmap All\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      id: \"tableTitle\",\n      component: \"div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 13\n      }\n    }, \" Total Mapped Students : \", this.state.totalTrainees, \" \"))));\n  }\n\n}","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/FundManger.js"],"names":["React","Component","Checkbox","InputLabel","Input","Grid","Button","fetchAllStateDetails","fetchCenterByStateName","fetchStateByZone","getReports","fetchEmployerDetails","fetchBatchDetails","fetchEnrollmentDetailsByBatchId","getBatchDetailsByBatchIdandFunderId","saveBatchFunderDetails","updateBatchFunderDetails","getBatchDetailsByBatchId","UserContext","SingleSelect","Table","TableBody","TableCell","TableHead","TableRow","Typography","Box","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","FundManeger","constructor","props","state","regions","value","label","statelist","centerlist","centerId","funderId","funderType","funderName","funderAccId","accountStatus","typeOfRelationship","funderlist","errors","totalTrainees","mappedTableData","unmappedTableData","centerName","arrayTableData","bind","sepratingTableData","saveAll","updateAll","countingNoOfStudents","handleRegionsChange","selectname","event","setState","Selectedstate","then","jsondata","result","JSON","parse","data","forEach","element","push","name","handleStateChange","id","handleCenterChange","accountName","accountId","handleFunderChange","index","findIndex","object","accountid","handleRadioChange","target","tableData","arrData","map","batchName","batchId","startDate","endDate","studentDetails","student","studentEngagementStatus","trainees","res","length","isActive","fundingType","crmFunderId","remarks","undefined","saveFunderMappingDetails","createdBy","createdOn","isAll","updateFunderMappingDetails","updatedOn","updatedBy","userid","render","width","Selectedregion","dataValue","BatchName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Checkbox, InputLabel, Input, Grid, Button } from '@material-ui/core';\r\nimport { fetchAllStateDetails, fetchCenterByStateName, fetchStateByZone, getReports, fetchEmployerDetails, fetchBatchDetails, fetchEnrollmentDetailsByBatchId, getBatchDetailsByBatchIdandFunderId, saveBatchFunderDetails, updateBatchFunderDetails, getBatchDetailsByBatchId } from './../util/api';\r\nimport UserContext from '../components/GolbalContext'\r\nimport { SingleSelect } from \"react-select-material-ui\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nlet today = new Date();\r\nlet dd = String(today.getDate()).padStart(2, '0');\r\nlet mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\nlet yyyy = today.getFullYear();\r\nlet hours = String(today.getHours()).padStart(2, '0');\r\nlet minutes = String(today.getMinutes()).padStart(2, '0');\r\nlet seconds = String(today.getSeconds()).padStart(2, '0');\r\ntoday = yyyy + '-' + mm + '-' + dd + ' ' + hours + ':' + minutes + ':' + seconds;\r\n\r\nexport default class FundManeger extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      regions: [{ value: 'All', label: 'All' },\r\n      { value: 'East', label: 'East' },\r\n      { value: 'west', label: 'West' },\r\n      { value: 'North', label: 'North' },\r\n      { value: 'South', label: 'South' }],\r\n      statelist: [],\r\n      centerlist: [],\r\n      centerId: \"\",\r\n      funderId: \"\",\r\n      funderType: \"P\",\r\n      funderName: \"\",\r\n      funderAccId: -1,\r\n      accountStatus: \"Active Partner\",\r\n      typeOfRelationship: \"%Funding partner%\",\r\n      funderlist: [],\r\n      errors: {},\r\n      totalTrainees: 0,\r\n      mappedTableData: [],\r\n      unmappedTableData: [],\r\n      centerName: '',\r\n    };\r\n    this.arrayTableData = this.arrayTableData.bind(this);\r\n    this.sepratingTableData = this.sepratingTableData.bind(this);\r\n    this.saveAll = this.saveAll.bind(this);\r\n    this.updateAll = this.updateAll.bind(this);\r\n    // should be uncommented if needed\r\n    // this.unmapAllSecondaryBatchesIfPrimaryisUnmapped = this.unmapAllSecondaryBatchesIfPrimaryisUnmapped.bind(this);\r\n    this.countingNoOfStudents = this.countingNoOfStudents.bind(this);\r\n  }\r\n\r\n  handleRegionsChange(selectname, event) {\r\n    this.setState({\r\n      [selectname]: event,\r\n      errors: {\r\n        ...this.state.errors,\r\n        regions: {\r\n          'label': '',\r\n          'value': false\r\n        },\r\n        Selectedstate: {\r\n          'label': 'Please select some option',\r\n          'value': true\r\n        },\r\n        centerId: {\r\n          'label': 'Please select some option',\r\n          'value': true\r\n        },\r\n        funderId: {\r\n          'label': 'Please select some option',\r\n          'value': true\r\n        }\r\n      },\r\n      Selectedstate: '',\r\n      statelist: [],\r\n      centerId: '',\r\n      centerlist: [],\r\n      funderId: '',\r\n      funderlist: [],\r\n      mappedTableData: [],\r\n      unmappedTableData: []\r\n    })\r\n    if (event === \"All\") {\r\n      fetchAllStateDetails().then(jsondata => {\r\n        let result = JSON.parse(jsondata.data)\r\n        result.forEach(element => {\r\n          this.state.statelist.push({\r\n            \"value\": element.name,\r\n            \"label\": element.name\r\n          })\r\n        });\r\n      })\r\n    }\r\n    else {\r\n      fetchStateByZone(event).then(jsondata => {\r\n        let result = JSON.parse(jsondata.data)\r\n        result.forEach(element => {\r\n          this.state.statelist.push({\r\n            \"value\": element.name,\r\n            \"label\": element.name\r\n          })\r\n        });\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  // drop down for state\r\n  handleStateChange(selectname, event) {\r\n    this.setState({\r\n      [selectname]: event,\r\n      errors: {\r\n        ...this.state.errors,\r\n        Selectedstate: {\r\n          'label': '',\r\n          'value': false\r\n        },\r\n        centerId: {\r\n          'label': 'Please select some option',\r\n          'value': true\r\n        },\r\n        funderId: {\r\n          'label': 'Please select some option',\r\n          'value': true\r\n        }\r\n      },\r\n      centerId: '',\r\n      centerlist: [],\r\n      funderId: '',\r\n      funderlist: [],\r\n      mappedTableData: [],\r\n      unmappedTableData: []\r\n\r\n    })\r\n    fetchCenterByStateName(event).then(jsondata => {\r\n      let result = JSON.parse(jsondata.data)\r\n      result.forEach(element => {\r\n        this.state.centerlist.push({\r\n          \"value\": element.id,\r\n          \"label\": element.name,\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  // drop down for center name\r\n  handleCenterChange(selectname, event) {\r\n    this.setState({\r\n      [selectname]: event,\r\n      errors: {\r\n        ...this.state.errors,\r\n        centerId: {\r\n          'label': '',\r\n          'value': false\r\n        },\r\n        funderId: {\r\n          'label': 'Please select some option',\r\n          'value': true\r\n        }\r\n      },\r\n      funderId: '',\r\n      funderlist: [],\r\n      mappedTableData: [],\r\n      unmappedTableData: []\r\n    })\r\n    // Employer api calling to fetch funderlist\r\n    fetchEmployerDetails(this.state.accountStatus, this.state.typeOfRelationship).then(jsondata => {\r\n      let result = JSON.parse(jsondata.data)\r\n      result.forEach(element => {\r\n        this.state.funderlist.push({\r\n          \"value\": element.id,\r\n          \"label\": element.accountName,\r\n          \"accountid\":element.accountId\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  // drop down for funder list\r\n  handleFunderChange(selectname, event) {\r\n    let funderId = event;\r\n    let index = this.state.funderlist.findIndex((object) => object.value == funderId)\r\n    let funderName = this.state.funderlist[index].label\r\n    let funderAccId = this.state.funderlist[index].accountid\r\n    this.setState({\r\n      [selectname]: event,\r\n      errors: {\r\n        ...this.state.errors,\r\n        funderId: {\r\n          'label': '',\r\n          'value': false\r\n        }\r\n      },\r\n      funderName,\r\n      funderAccId,\r\n      mappedTableData: [],\r\n      unmappedTableData: []\r\n    })\r\n    this.arrayTableData(funderId, funderName, funderAccId)\r\n  }\r\n\r\n  handleRadioChange(event) {\r\n    let value = event.target.value\r\n    this.setState({ funderType: value });\r\n    this.arrayTableData(this.state.funderId, this.state.funderName)\r\n  }\r\n\r\n  // Center id is static i.e 20 for a time being\r\n  arrayTableData(funderId, funderName, funderAccId) {\r\n    var tableData = []\r\n    fetchBatchDetails(this.state.centerId).then((jsondata) => {\r\n      let result = JSON.parse(jsondata.data)\r\n      var arrData = {}\r\n      result.map((element, id) => {\r\n        //to get the student Strength present based on the enrollment ID's\r\n        arrData = element\r\n        tableData = [\r\n          ...tableData,\r\n          {\r\n            \"BatchName\": arrData.batchName,\r\n            \"batchId\": arrData.batchId,\r\n            \"funderName\": funderName,\r\n            \"startDate\": arrData.startDate,\r\n            \"endDate\": arrData.endDate,\r\n            \"funderId\": funderId,\r\n            \"trainees\": 0,\r\n            \"id\": \"\",\r\n            \"crmFunderId\": funderAccId,\r\n            \"isActive\": \"Y\",\r\n            \"fundingType\": this.state.funderType,\r\n            \"remarks\": \"\",\r\n            \"startDate\": arrData.startDate,\r\n            \"endDate\": arrData.endDate,\r\n          }]\r\n      })\r\n      this.sepratingTableData(this.countingNoOfStudents(tableData));\r\n    })\r\n  }\r\n\r\n  //for getting the number of students per batchId\r\n  countingNoOfStudents(tableData) {\r\n    tableData.map((element, id) => {\r\n      getReports(1, 20, this.state.centerId, element.startDate, element.endDate, \"Enrolled\", element.batchId).then((jsondata) => {\r\n        if (jsondata.data) {\r\n          let studentDetails = JSON.parse(jsondata.data);\r\n          studentDetails.map((student, id) => {\r\n            if (student.studentEngagementStatus === \"Enrolled\") {\r\n              element.trainees += 1;\r\n            }\r\n          })\r\n        }\r\n      })\r\n      // fetchEnrollmentDetailsByBatchId(element.batchId).then((jsondata) => {\r\n      //   let res = JSON.parse(jsondata.data)\r\n      //   element.trainees = res.length\r\n      // })\r\n    })\r\n    return tableData;\r\n  }\r\n\r\n  //the table is then seprated to two parts mapped and unmapped table\r\n  sepratingTableData(tableData) {\r\n    this.setState({ mappedTableData: [], unmappedTableData: [], totalTrainees: 0 })\r\n    var mappedTableData = [];\r\n    var unmappedTableData = [];\r\n    var totalTrainees = 0;\r\n    tableData.map((element, id) => {\r\n      //checking for the mapped validity of the table\r\n      getBatchDetailsByBatchIdandFunderId(element.batchId, element.funderId, \"Y\", this.state.funderType).then((jsondata) => {\r\n        let res = JSON.parse(jsondata.data)\r\n        if (res[0].length > 0) {\r\n          tableData[id].id = res[0][0].id\r\n          tableData[id].isActive = res[0][0].isActive\r\n          tableData[id].fundingType = res[0][0].fundingType\r\n          tableData[id].crmFunderId = res[0][0]?.crmFunderId\r\n          tableData[id].remarks = res[0][0].remarks\r\n          mappedTableData = [\r\n            ...mappedTableData,\r\n            tableData[id]\r\n          ]\r\n          totalTrainees += tableData[id].trainees\r\n          this.setState({ mappedTableData, totalTrainees })\r\n        }\r\n        else {\r\n          //if not mapped then checking the type before unmapping the table data\r\n          // if the type is primary then directly showing it in the unmapped section\r\n          if (this.state.funderType == \"P\") {\r\n            //get details by batchID if not present then add it to the unmapped table\r\n            getBatchDetailsByBatchId(element.batchId, \"Y\", this.state.funderType).then((jsondata) => {\r\n              let res = JSON.parse(jsondata.data)\r\n              if (res[0][0] == undefined) {\r\n                unmappedTableData = [\r\n                  ...unmappedTableData,\r\n                  tableData[id]\r\n                ]\r\n                this.setState({ unmappedTableData })\r\n              }\r\n            })\r\n          }\r\n          //if the type is secondary check the if the batches are already primarly mapped before showing in the unmapped section\r\n          else if (this.state.funderType == \"S\") {\r\n            getBatchDetailsByBatchId(element.batchId, \"Y\", \"P\").then((jsondata) => {\r\n              let res = JSON.parse(jsondata.data)\r\n              if (res[0][0] == undefined) {\r\n\r\n              }\r\n              else if (res[0][0].funderId != this.state.funderId) {\r\n                unmappedTableData = [\r\n                  ...unmappedTableData,\r\n                  tableData[id]\r\n                ]\r\n                this.setState({ unmappedTableData })\r\n              }\r\n            })\r\n          }\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  //save batch funder mapping \r\n  saveFunderMappingDetails(batchId, funderId, crmFunderId, isActive, fundingType, createdBy, createdOn, remarks, isAll) {\r\n    crmFunderId = crmFunderId || this.state.funderAccId\r\n    saveBatchFunderDetails(batchId, funderId, crmFunderId, isActive, fundingType, createdBy, createdOn, remarks).then((jsondata) => {\r\n      let res = JSON.parse(jsondata.data)\r\n      if (res[0]?.length > 0) {\r\n        // alert('Saved Batch for this funder successfully')\r\n      }\r\n    })\r\n    if (!isAll) {\r\n      this.arrayTableData(this.state.funderId, this.state.funderName)\r\n    }\r\n  }\r\n\r\n  //this function is still not needed should be uncommented whenever needed \r\n  // unmapAllSecondaryBatchesIfPrimaryisUnmapped(batchId){\r\n  //   getBatchDetailsByBatchId(batchId, \"Y\", \"S\").then((jsondata)=>{\r\n  //     if(jsondata.status == \"success\"){\r\n  //       let data = JSON.parse(jsondata.data)\r\n  //       data[0].forEach((element)=>{\r\n  //         this.updateFunderMappingDetails(element.id, element.batchId, element.funderId, element.crmFunderId, \"N\", element.remarks, today, UserContext.userid, \"S\", true)\r\n  //       })\r\n  //     }\r\n  //   })  \r\n  // }\r\n\r\n  //update batch funder mapping \r\n  updateFunderMappingDetails(id, batchId, funderId, crmFunderId, isActive, remarks, updatedOn, updatedBy, fundingType, isAll) {\r\n    // if(fundingType == \"P\"){\r\n    //     this.unmapAllSecondaryBatchesIfPrimaryisUnmapped(batchId)\r\n    // }\r\n    crmFunderId = crmFunderId || this.state.funderAccId\r\n    updateBatchFunderDetails(id, batchId, funderId, crmFunderId, isActive, remarks, updatedOn, updatedBy, fundingType).then((jsondata) => {\r\n      let res = JSON.parse(jsondata.data)\r\n      if (res[0]?.length > 0) {\r\n        // alert('Data is updated successfully')\r\n      }\r\n    })\r\n    if (!isAll) {\r\n      this.arrayTableData(this.state.funderId, this.state.funderName)\r\n    }\r\n  }\r\n\r\n  saveAll() {\r\n    this.state.unmappedTableData.map((element, id) => {\r\n      this.saveFunderMappingDetails(element.batchId, element.funderId, element.crmFunderId, element.isActive, this.state.funderType, UserContext.userid, today, \"\", true)\r\n    })\r\n    this.arrayTableData(this.state.funderId, this.state.funderName)\r\n  }\r\n\r\n  updateAll() {\r\n    this.state.mappedTableData.map((element, id) => {\r\n      this.updateFunderMappingDetails(element.id, element.batchId, element.funderId, element.crmFunderId, \"N\", \"\", today, UserContext.userid, this.state.funderType, true)\r\n    })\r\n    this.arrayTableData(this.state.funderId, this.state.funderName)\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div style={{ width: '100%' }}>\r\n        <Grid container>\r\n          <Grid item xs={12}> </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} >Regions</InputLabel>\r\n            <SingleSelect\r\n              name=\"Selectedregion\" id=\"Selectedregion\"\r\n              options={this.state.regions}\r\n              value={this.state.Selectedregion || ''}\r\n              key={this.state.Selectedregion || ''}\r\n              onChange={this.handleRegionsChange.bind(this, 'Selectedregion')}\r\n              helperText={this.state.errors.Selectedregion != undefined ? this.state.errors.Selectedregion.label : ''}\r\n              error={this.state.errors.Selectedregion != undefined ? this.state.errors.Selectedregion.value : ''}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={2}></Grid>\r\n\r\n          <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} >State</InputLabel>\r\n            <SingleSelect\r\n              name=\"Selectedstate\" id=\"Selectedstate\"\r\n              key={this.state.Selectedstate || ''}\r\n              options={this.state.statelist}\r\n              value={this.state.Selectedstate || ''}\r\n              onChange={this.handleStateChange.bind(this, 'Selectedstate')}\r\n              helperText={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.label : ''}\r\n              error={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.value : ''}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <br />\r\n\r\n        <Grid container>\r\n          <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} >Center Name</InputLabel>\r\n            <SingleSelect\r\n              name=\"selectedcenter\" id=\"centerId\"\r\n              options={this.state.centerlist}\r\n              value={this.state.centerId || ''}\r\n              onChange={this.handleCenterChange.bind(this, 'centerId')}\r\n              helperText={this.state.errors.centerId != undefined ? this.state.errors.centerId.label : ''}\r\n              error={this.state.errors.centerId != undefined ? this.state.errors.centerId.value : ''}\r\n              key={this.state.centerId || ''}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={2}></Grid>\r\n\r\n          <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} >Funding Partner</InputLabel>\r\n            <SingleSelect\r\n              name=\"selectedfunder\" id=\"funderId\"\r\n              options={this.state.funderlist}\r\n              value={this.state.funderId || ''}\r\n              onChange={this.handleFunderChange.bind(this, 'funderId')}\r\n              helperText={this.state.errors.funderId != undefined ? this.state.errors.funderId.label : ''}\r\n              error={this.state.errors.funderId != undefined ? this.state.errors.funderId.value : ''}\r\n              key={this.state.funderId || ''}\r\n            />\r\n          </Grid>\r\n\r\n        </Grid>\r\n        <br />\r\n        <br />\r\n        <Grid container>\r\n          <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} >Funding Type</InputLabel>\r\n            <br />\r\n            <div onChange={this.handleRadioChange.bind(this)}>\r\n              <input type=\"radio\" value=\"P\" name=\"funderType\" checked={this.state.funderType === \"P\"} /> Primary\r\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n              <input type=\"radio\" value=\"S\" name=\"funderType\" checked={this.state.funderType === \"S\"} /> Supporting\r\n            </div>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={2}></Grid>\r\n\r\n\r\n        </Grid>\r\n\r\n        <br /><br /><br /><br />\r\n        <Grid container>\r\n          <Grid item xs={12} sm={5}>\r\n            <Typography variant=\"body1\" id=\"tableTitle\" component=\"div\"> UnMapped Batches </Typography>\r\n            <Box border={1} borderRadius=\"1.75%\">\r\n              <Table aria-label=\"simple table\">\r\n\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Batch Name</TableCell>\r\n                    <TableCell>Start Date</TableCell>\r\n                    <TableCell>End Date</TableCell>\r\n                    <TableCell>Trainees</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n\r\n                <TableBody>\r\n                  {this.state.unmappedTableData.map((dataValue, id) => (\r\n                    <TableRow id=\"tablerow\">\r\n                      <TableCell>{dataValue.BatchName}</TableCell>\r\n                      <TableCell>{dataValue.startDate}</TableCell>\r\n                      <TableCell>{dataValue.endDate}</TableCell>\r\n                      <TableCell>{dataValue.trainees}</TableCell>\r\n                      <TableCell>{<Button variant=\"contained\" color=\"primary\" onClick={() => this.saveFunderMappingDetails(dataValue.batchId, dataValue.funderId, dataValue.crmFunderId, \"Y\", this.state.funderType, UserContext.userid, today, '', false)} > map </Button>}</TableCell>\r\n                    </TableRow>))}\r\n                </TableBody>\r\n\r\n              </ Table>\r\n            </Box>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={1}></Grid>\r\n\r\n          <Grid item xs={12} sm={5}>\r\n            <Typography variant=\"body1\" id=\"tableTitle\" component=\"div\"> Mapped Batches </Typography>\r\n\r\n            <Box border={1} borderRadius=\"1.75%\">\r\n              <Table aria-label=\"simple table\">\r\n\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Batch Name</TableCell>\r\n                    <TableCell>Start Date</TableCell>\r\n                    <TableCell>End Date</TableCell>\r\n                    <TableCell>Trainees</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n\r\n                <TableBody>\r\n                  {this.state.mappedTableData.map((dataValue, id) => (\r\n                    <TableRow id=\"tablerow\">\r\n                      <TableCell>{dataValue.BatchName}</TableCell>\r\n                      <TableCell>{dataValue.startDate}</TableCell>\r\n                      <TableCell>{dataValue.endDate}</TableCell>\r\n                      <TableCell>{dataValue.trainees}</TableCell>\r\n                      <TableCell>{<Button variant=\"contained\" color=\"primary\" onClick={() => this.updateFunderMappingDetails(dataValue.id, dataValue.batchId, dataValue.funderId, dataValue.crmFunderId, \"N\", '', today, UserContext.userid, this.state.funderType, false)} > unmap </Button>}</TableCell>\r\n                    </TableRow>))}\r\n                </TableBody>\r\n\r\n              </ Table>\r\n            </Box>\r\n          </Grid>\r\n\r\n        </Grid>\r\n\r\n        <br /> <br />\r\n        <Grid container>\r\n          <Grid item xs={6}>\r\n            <Button variant=\"contained\" color=\"primary\" disabled={(this.state.unmappedTableData == [] || this.state.unmappedTableData == undefined || this.state.unmappedTableData == \"\") ? true : false} onClick={this.saveAll}>Map All</Button>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <Button variant=\"contained\" color=\"primary\" disabled={(this.state.mappedTableData == [] || this.state.mappedTableData == undefined || this.state.mappedTableData == \"\") ? true : false} onClick={this.updateAll}>Unmap All</Button>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"h6\" id=\"tableTitle\" component=\"div\"> Total Mapped Students : {this.state.totalTrainees} </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}