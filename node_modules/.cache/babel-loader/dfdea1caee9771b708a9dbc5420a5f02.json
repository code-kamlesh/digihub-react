{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\PrintIDCards.js\";\nimport React from \"react\";\nimport ReactToPrint from \"react-to-print\";\nimport Box from '@material-ui/core/Box';\nimport { Button } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport blank_image from \"./../assets/images/IcardBLOCKImage.PNG\";\nimport head_image from \"./../assets/images/tatastrivelogo.png\";\nimport multiple_images_found from \"./../assets/images/error_image_sample.png\";\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { TableBody } from '@material-ui/core';\nimport { fetchBatchDetailsByBatchId, getReports, fetchCentersDetails, fetchBatchDetails, fetchUserDocuments, fetchEnrollmentDetailsByBatchId } from './../util/api';\nimport { Grid } from '@material-ui/core';\nimport UserContext from '../components/GolbalContext';\nimport { SingleSelect } from \"react-select-material-ui\";\nimport { serviceEndPoint } from './../util/serviceEndPoint';\nexport default class PrintIDCards extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      batchDetailsForBatchOwner: [],\n      selectedBatchDetails: [],\n      engagementId: [],\n      studentDetails: [],\n      centerAddress: '',\n      urlDetails: [],\n      mainArr: []\n    };\n    fetchBatchDetails(UserContext.centerId).then(jsondata => {\n      let activeBatches = JSON.parse(jsondata.data);\n      activeBatches.map(item => {\n        this.state.batchDetailsForBatchOwner.push({\n          label: item.batchName,\n          value: item.batchId\n        });\n      });\n    });\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n    this.showData = this.showData.bind(this);\n  }\n\n  handleSelectChange(selectname, batchId) {\n    //Get Enrollment Details for Batch/ Get Batch Details \n    fetchBatchDetailsByBatchId(batchId).then(batchData => {\n      let batchJsonObjects = JSON.parse(batchData.data);\n      this.setState({\n        selectedBatchDetails: batchJsonObjects\n      });\n      fetchCentersDetails(\"[{\\\"id\\\":\" + batchJsonObjects[0].centerId + \"}]\").then(jsondata => {\n        let res = JSON.parse(jsondata.data);\n        let address = res[0].addressLine1 + \" \" + res[0].addressLine2 + \" \" + res[0].city + \", \" + res[0].district + \"-\" + res[0].pincode + \", \" + res[0].state;\n        this.setState({\n          centerAddress: address\n        });\n      });\n    }).catch(error => {\n      console.log(error);\n    }); //Enrollment Details by Batch Id\n\n    fetchEnrollmentDetailsByBatchId(batchId).then(jsondata => {\n      let enrollmentDetails = JSON.parse(jsondata.data);\n      this.state.engagementId.length = 0;\n      enrollmentDetails.map(item => {\n        this.state.engagementId.push({\n          engagementId: item.engagementId\n        });\n      }); //Get Student Details \n\n      getReports(1, 20, UserContext.centerId, this.state.selectedBatchDetails[0].startDate, this.state.selectedBatchDetails[0].endDate, \"Enrolled\", batchId).then(jsondata => {\n        let studentInfo = [];\n\n        if (jsondata.data) {\n          let studentDetails = JSON.parse(jsondata.data);\n\n          for (var i = 0; i < studentDetails.length; i++) {\n            var _studentDetails$i;\n\n            if (((_studentDetails$i = studentDetails[i]) === null || _studentDetails$i === void 0 ? void 0 : _studentDetails$i.studentEngagementStatus) === \"Enrolled\") {\n              var details = {\n                'engagementId': studentDetails[i].engagementId,\n                'studentId': studentDetails[i].studentId,\n                'name': studentDetails[i].firstName + \" \" + studentDetails[i].lastName,\n                'bloodGroup': studentDetails[i].bloodGroup,\n                'contact': studentDetails[i].primaryContactNumber,\n                'url': ''\n              };\n              studentInfo.push(details);\n            }\n          }\n\n          this.setState({\n            studentDetails: []\n          }, () => {\n            this.setState({\n              studentDetails: studentInfo\n            });\n          });\n          studentInfo = null;\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  showData() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ReactToPrint, {\n      trigger: () => /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 26\n        }\n      }, \"print Id card\"),\n      content: () => this.componentRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ComponentToPrint, {\n      props: this.state,\n      ref: el => this.componentRef = el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      alignContent: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      onChange: this.handleSelectChange.bind(this, 'batchName'),\n      name: \"batchName\",\n      id: \"batchName\",\n      placeholder: \"Select Batch\",\n      options: this.state.batchDetailsForBatchOwner,\n      fullWidth: true,\n      style: {\n        \"fontSize\": 11\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }), this.state.studentDetails.length > 0 ? this.showData() : '');\n  }\n\n}\nexport class IDCard_Front extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      studentDetails: props.props,\n      url: ''\n    }; //download documents\n\n    fetchUserDocuments(this.state.studentDetails.engagementId, \"StudentPicture\", \"G\").then(jsondata => {\n      let res = JSON.parse(jsondata.data);\n\n      if ((res === null || res === void 0 ? void 0 : res.length) > 1) {\n        res.map((student, id) => {\n          if ((student === null || student === void 0 ? void 0 : student.isActive) == 'Y') {\n            let formData = new FormData();\n            formData.append('data', '{\"token\" : \"\", \"action\" : \"downloadDocument\", \"data\" : [{\"basicDocId\":' + (student === null || student === void 0 ? void 0 : student.basicDocId) + '}]}');\n            fetch(serviceEndPoint.documentServiceEndPoint, {\n              method: 'post',\n              headers: {\n                'Authorization': 'Bearer ' + UserContext.token\n              },\n              body: formData\n            }).then(response => response.json()).then(jsondata => {\n              let jsonobjects = JSON.parse(jsondata.data);\n              console.log(jsonobjects);\n              var url = serviceEndPoint.downloadDocument + jsonobjects[0].documentPath + \"\";\n              this.setState({\n                url\n              });\n              console.log(url);\n            }).catch(error => {\n              console.log(error);\n            });\n          } else {\n            (res === null || res === void 0 ? void 0 : res.length) == id ? this.setState({\n              url: multiple_images_found\n            }) : this.setState({\n              url: blank_image\n            });\n          }\n        });\n      } else {\n        var _res$;\n\n        if (((_res$ = res[0]) === null || _res$ === void 0 ? void 0 : _res$.isActive) == 'Y') {\n          var _res$2;\n\n          let formData = new FormData();\n          formData.append('data', '{\"token\" : \"\", \"action\" : \"downloadDocument\", \"data\" : [{\"basicDocId\":' + ((_res$2 = res[0]) === null || _res$2 === void 0 ? void 0 : _res$2.basicDocId) + '}]}');\n          fetch(serviceEndPoint.documentServiceEndPoint, {\n            method: 'post',\n            headers: {\n              'Authorization': 'Bearer ' + UserContext.token\n            },\n            body: formData\n          }).then(response => response.json()).then(jsondata => {\n            let jsonobjects = JSON.parse(jsondata.data);\n            console.log(jsonobjects);\n\n            if (jsonobjects.length > 1) {\n              console.log('in here');\n            }\n\n            var url = serviceEndPoint.downloadDocument + jsonobjects[0].documentPath + \"\";\n            this.setState({\n              url\n            });\n          }).catch(error => {\n            console.log(error);\n          });\n        } else {\n          this.setState({\n            url: blank_image\n          });\n        }\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: \"300px\",\n        height: \"500px\",\n        transform: 'rotate(90deg)',\n        marginLeft: '150px',\n        padding: '0px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      border: 3,\n      borderRadius: \"1.75%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: head_image,\n      style: {\n        height: \"120px\",\n        width: '80%',\n        marginLeft: '10px',\n        marginTop: '5px',\n        marginBottom: '5px',\n        paddingBottom: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.url || blank_image,\n      style: {\n        height: \"150px\",\n        width: '70%',\n        marginLeft: '40px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle2\",\n      align: \"center\",\n      color: \"textSecondary\",\n      style: {\n        fontSize: '15px',\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }\n    }, this.state.studentDetails.studentName), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle2\",\n      color: \"textSecondary\",\n      style: {\n        fontSize: '18px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }\n    }, \"Roll No : \", this.state.studentDetails.studentId), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle2\",\n      color: \"textSecondary\",\n      style: {\n        fontSize: '18px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }\n    }, \"Blood Group : \", this.state.studentDetails.bloodGroup), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle2\",\n      color: \"textSecondary\",\n      style: {\n        fontSize: '18px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }\n    }, \"Valid Upto : \", this.state.studentDetails.endDate), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle2\",\n      color: \"textSecondary\",\n      style: {\n        fontSize: '18px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }\n    }, \"Course : \", this.state.studentDetails.batchName))));\n  }\n\n}\nexport class IDCard_back extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      studentDetails: props.props\n    };\n  }\n\n  render() {\n    var _this$state, _this$state2, _this$state3;\n\n    return /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: \"300px\",\n        height: \"500px\",\n        transform: 'rotate(90deg)',\n        marginLeft: '30px',\n        padding: '0px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      border: 3,\n      borderRadius: \"1.75%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle2\",\n      color: \"primary\",\n      style: {\n        fontSize: '15px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 13\n      }\n    }, \"Contact : \", (_this$state = this.state) === null || _this$state === void 0 ? void 0 : _this$state.studentDetails.primaryContactNo), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle2\",\n      color: \"primary\",\n      style: {\n        fontSize: '15px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }\n    }, \"Card No : \", (_this$state2 = this.state) === null || _this$state2 === void 0 ? void 0 : _this$state2.studentDetails.studentId), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle2\",\n      color: \"primary\",\n      style: {\n        fontSize: '18px',\n        border: '5px solid ',\n        backgroundColor: '4px solid #194D33'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 13\n      }\n    }, \"Please Note:\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle2\",\n      color: \"primary\",\n      style: {\n        fontSize: '15px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }\n    }, \"This card is not transferable if found, please send to:  \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle2\",\n      color: \"primary\",\n      style: {\n        fontSize: '15px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }\n    }, (_this$state3 = this.state) === null || _this$state3 === void 0 ? void 0 : _this$state3.studentDetails.centerAddress), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle2\",\n      color: \"primary\",\n      style: {\n        fontSize: '18px',\n        border: '2px solid #000000'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 13\n      }\n    }, \"To join Tata Strive\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 138\n      }\n    }), \" Give a missed call on 1800 419 2112 \"))));\n  }\n\n}\nexport class ComponentToPrint extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      studentDetails: props.props.studentDetails,\n      centerAddress: props.props.centerAddress,\n      selectedBatchDetails: props.props.selectedBatchDetails,\n      IDCard_front_details: [],\n      IDCard_back_details: []\n    };\n    this.state.studentDetails.map((student, id) => {\n      this.state.IDCard_front_details[id] = {\n        \"engagementId\": student.engagementId,\n        \"batchName\": this.state.selectedBatchDetails[0].batchName,\n        \"endDate\": this.state.selectedBatchDetails[0].endDate,\n        \"studentName\": student.name,\n        \"profilePhotoPath\": student.url,\n        \"bloodGroup\": student.bloodGroup,\n        \"studentId\": student.studentId\n      };\n      this.state.IDCard_back_details[id] = {\n        \"primaryContactNo\": student.contact,\n        \"studentId\": student.studentId,\n        \"centerAddress\": this.state.centerAddress\n      };\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 15\n      }\n    }, this.state.IDCard_front_details.map((frontDetails, id) => {\n      return /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(IDCard_Front, {\n        props: frontDetails,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(IDCard_back, {\n        props: this.state.IDCard_back_details[id],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 25\n        }\n      })));\n    })));\n  }\n\n}","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/PrintIDCards.js"],"names":["React","ReactToPrint","Box","Button","Card","CardContent","Typography","blank_image","head_image","multiple_images_found","Table","TableCell","TableRow","TableBody","fetchBatchDetailsByBatchId","getReports","fetchCentersDetails","fetchBatchDetails","fetchUserDocuments","fetchEnrollmentDetailsByBatchId","Grid","UserContext","SingleSelect","serviceEndPoint","PrintIDCards","Component","constructor","props","state","batchDetailsForBatchOwner","selectedBatchDetails","engagementId","studentDetails","centerAddress","urlDetails","mainArr","centerId","then","jsondata","activeBatches","JSON","parse","data","map","item","push","label","batchName","value","batchId","handleSelectChange","bind","showData","selectname","batchData","batchJsonObjects","setState","res","address","addressLine1","addressLine2","city","district","pincode","catch","error","console","log","enrollmentDetails","length","startDate","endDate","studentInfo","i","studentEngagementStatus","details","studentId","firstName","lastName","bloodGroup","primaryContactNumber","componentRef","el","render","IDCard_Front","url","student","id","isActive","formData","FormData","append","basicDocId","fetch","documentServiceEndPoint","method","headers","token","body","response","json","jsonobjects","downloadDocument","documentPath","width","height","transform","marginLeft","padding","marginTop","marginBottom","paddingBottom","fontSize","fontWeight","studentName","IDCard_back","primaryContactNo","border","backgroundColor","ComponentToPrint","IDCard_front_details","IDCard_back_details","name","contact","frontDetails"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport Box from '@material-ui/core/Box';\r\nimport { Button } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport blank_image from \"./../assets/images/IcardBLOCKImage.PNG\";\r\nimport head_image from \"./../assets/images/tatastrivelogo.png\";\r\nimport multiple_images_found from \"./../assets/images/error_image_sample.png\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { TableBody } from '@material-ui/core';\r\nimport { fetchBatchDetailsByBatchId,  getReports, fetchCentersDetails, fetchBatchDetails, fetchUserDocuments, fetchEnrollmentDetailsByBatchId } from './../util/api';\r\nimport { Grid } from '@material-ui/core';\r\nimport UserContext from '../components/GolbalContext';\r\nimport { SingleSelect} from \"react-select-material-ui\";\r\nimport { serviceEndPoint } from './../util/serviceEndPoint';\r\n\r\n\r\n\r\nexport default class PrintIDCards extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      batchDetailsForBatchOwner: [],\r\n      selectedBatchDetails: [],\r\n      engagementId: [],\r\n      studentDetails: [],\r\n      centerAddress: '',\r\n      urlDetails: [],\r\n      mainArr: [],\r\n    }\r\n\r\n    fetchBatchDetails(UserContext.centerId).then((jsondata) => {\r\n      let activeBatches = JSON.parse(jsondata.data)\r\n      activeBatches.map(item => { this.state.batchDetailsForBatchOwner.push({ label: item.batchName, value: item.batchId }) });\r\n    })\r\n\r\n    this.handleSelectChange = this.handleSelectChange.bind(this)\r\n    this.showData = this.showData.bind(this)\r\n  }\r\n\r\n\r\n  handleSelectChange(selectname, batchId) {\r\n\r\n    //Get Enrollment Details for Batch/ Get Batch Details \r\n    fetchBatchDetailsByBatchId(batchId).then((batchData) => {\r\n      let batchJsonObjects = JSON.parse(batchData.data);\r\n      this.setState({ selectedBatchDetails: batchJsonObjects });\r\n      fetchCentersDetails(\"[{\\\"id\\\":\" + batchJsonObjects[0].centerId + \"}]\").then((jsondata) => {\r\n        let res = JSON.parse(jsondata.data)\r\n        let address = res[0].addressLine1 + \" \" + res[0].addressLine2 + \" \" + res[0].city + \", \" + res[0].district + \"-\" + res[0].pincode + \", \" + res[0].state\r\n        this.setState({ centerAddress: address })\r\n      })\r\n    }).catch((error)=>{console.log(error)});\r\n\r\n    //Enrollment Details by Batch Id\r\n    fetchEnrollmentDetailsByBatchId(batchId).then((jsondata) => {\r\n      let enrollmentDetails = JSON.parse(jsondata.data);\r\n      this.state.engagementId.length = 0;\r\n      enrollmentDetails.map(item => { this.state.engagementId.push({ engagementId: item.engagementId }) });\r\n      //Get Student Details \r\n      getReports(1 , 20, UserContext.centerId, this.state.selectedBatchDetails[0].startDate, this.state.selectedBatchDetails[0].endDate, \"Enrolled\", batchId).then((jsondata)=>{\r\n        let studentInfo = [];\r\n        if (jsondata.data) {\r\n          let studentDetails = JSON.parse(jsondata.data);\r\n          for (var i = 0; i < studentDetails.length; i++) {\r\n            if(studentDetails[i]?.studentEngagementStatus === \"Enrolled\"){\r\n              var details =\r\n              {\r\n                'engagementId': studentDetails[i].engagementId,\r\n                'studentId': studentDetails[i].studentId,\r\n                'name': studentDetails[i].firstName + \" \" + studentDetails[i].lastName,\r\n                'bloodGroup' : studentDetails[i].bloodGroup,\r\n                'contact' : studentDetails[i].primaryContactNumber,\r\n                'url' : ''\r\n              };\r\n              studentInfo.push(details);\r\n            }\r\n          }\r\n          this.setState({ studentDetails: [] }, () => { this.setState({ studentDetails: studentInfo }) });\r\n          studentInfo = null;\r\n        }\r\n      }).catch((error)=>{console.log(error)})\r\n    }).catch((error)=>{console.log(error)});\r\n\r\n  }\r\n\r\n  showData() {\r\n    \r\n    return (\r\n      <div>\r\n        <ReactToPrint\r\n          trigger={() => <Button variant=\"contained\" color=\"primary\">print Id card</Button>}\r\n          content={() => this.componentRef}\r\n        />\r\n        <ComponentToPrint props={this.state} ref={el => (this.componentRef = el)} />\r\n      </div>\r\n    );\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n\r\n      <div>\r\n        <Grid item xs={12} sm={4} alignContent=\"center\" >\r\n          <SingleSelect onChange={this.handleSelectChange.bind(this, 'batchName')} name=\"batchName\" id=\"batchName\"\r\n            placeholder=\"Select Batch\"\r\n            options={this.state.batchDetailsForBatchOwner}\r\n            fullWidth={true}\r\n            style={{ \"fontSize\": 11 }}\r\n          />\r\n        </Grid>\r\n        <br />\r\n        {\r\n          (this.state.studentDetails.length > 0 ) ? this.showData() : ''\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport class IDCard_Front extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      studentDetails: props.props,\r\n      url: '',\r\n    }\r\n       //download documents\r\n       fetchUserDocuments(this.state.studentDetails.engagementId, \"StudentPicture\", \"G\").then((jsondata) => {\r\n        let res = JSON.parse(jsondata.data)\r\n          if(res?.length>1){\r\n            res.map((student, id)=>{\r\n          \r\n              if(student?.isActive == 'Y'){\r\n                let formData = new FormData();\r\n              formData.append('data', '{\"token\" : \"\", \"action\" : \"downloadDocument\", \"data\" : [{\"basicDocId\":' + student?.basicDocId + '}]}');\r\n              fetch(serviceEndPoint.documentServiceEndPoint, {\r\n                method: 'post',\r\n                headers: {\r\n                  'Authorization': 'Bearer ' + UserContext.token\r\n                },\r\n                body: formData\r\n              }).then(response => response.json()).then((jsondata) => {\r\n                  let jsonobjects = JSON.parse(jsondata.data);\r\n                  console.log(jsonobjects);\r\n                  var url = serviceEndPoint.downloadDocument + jsonobjects[0].documentPath + \"\";\r\n                  this.setState({ url }) \r\n                  console.log(url);\r\n                }).catch((error)=>{console.log(error)})\r\n              }\r\n              else{\r\n                (res?.length == id) ? this.setState({ url : multiple_images_found }) : this.setState({ url : blank_image });\r\n              }\r\n            }) \r\n          }\r\n          else{\r\n            if(res[0]?.isActive == 'Y'){\r\n              let formData = new FormData();\r\n              formData.append('data', '{\"token\" : \"\", \"action\" : \"downloadDocument\", \"data\" : [{\"basicDocId\":' + res[0]?.basicDocId + '}]}');\r\n              fetch(serviceEndPoint.documentServiceEndPoint, {\r\n                method: 'post',\r\n                headers: {\r\n                  'Authorization': 'Bearer ' + UserContext.token\r\n                },\r\n                body: formData\r\n              }).then(response => response.json()).then((jsondata) => {\r\n                  let jsonobjects = JSON.parse(jsondata.data);\r\n                  console.log(jsonobjects);\r\n                  if(jsonobjects.length>1){\r\n                    console.log('in here');\r\n                  }\r\n                  var url = serviceEndPoint.downloadDocument + jsonobjects[0].documentPath + \"\";\r\n                  this.setState({ url }) \r\n                }).catch((error)=>{console.log(error)})\r\n            }\r\n            else{\r\n              this.setState({ url : blank_image });\r\n            }\r\n          }\r\n          }).catch((error)=>{console.log(error)});\r\n      \r\n          \r\n      \r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n     \r\n      <Card style={{ width: \"300px\", height: \"500px\", transform: 'rotate(90deg)', marginLeft: '150px', padding: '0px' }}>\r\n      <Box border={3} borderRadius=\"1.75%\" >\r\n          <img src={head_image} style={{ height: \"120px\", width: '80%', marginLeft: '10px', marginTop: '5px', marginBottom: '5px', paddingBottom: '5px' }} />\r\n          <img src={this.state.url || blank_image} style={{ height: \"150px\", width: '70%', marginLeft: '40px' }} />\r\n\r\n          <CardContent >\r\n            <Typography variant=\"subtitle2\" align=\"center\" color=\"textSecondary\" style={{ fontSize: '15px', fontWeight: 'bold'}}>{this.state.studentDetails.studentName}</Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\" style={{ fontSize: '18px' }}>Roll No : {this.state.studentDetails.studentId}</Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\" style={{ fontSize: '18px' }}>Blood Group : {this.state.studentDetails.bloodGroup}</Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\" style={{ fontSize: '18px' }}>Valid Upto : {this.state.studentDetails.endDate}</Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\" style={{ fontSize: '18px' }}>Course : {this.state.studentDetails.batchName}</Typography>\r\n          </CardContent>\r\n      </Box>  \r\n      </Card> \r\n     \r\n    );\r\n  }\r\n}\r\n\r\nexport class IDCard_back extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      studentDetails: props.props,\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (    \r\n      \r\n      <Card style={{ width: \"300px\", height: \"500px\", transform: 'rotate(90deg)', marginLeft: '30px', padding: '0px' }}>\r\n      <Box border={3} borderRadius=\"1.75%\" >\r\n          <CardContent>\r\n            <Typography variant=\"subtitle2\" color=\"primary\" style={{ fontSize: '15px'}}>Contact : {this.state?.studentDetails.primaryContactNo}</Typography>\r\n            <Typography variant=\"subtitle2\" color=\"primary\" style={{ fontSize: '15px' }}>Card No : {this.state?.studentDetails.studentId}</Typography>\r\n            <br/>\r\n            <Typography variant=\"subtitle2\" color=\"primary\" style={{ fontSize: '18px', border: '5px solid ', backgroundColor: '4px solid #194D33' }}>Please Note:</Typography>\r\n            <br/>\r\n            <Typography variant=\"subtitle2\" color=\"primary\" style={{ fontSize: '15px' }}>This card is not transferable if found, please send to:  </Typography>\r\n            <br/>\r\n            <Typography variant=\"subtitle2\" color=\"primary\" style={{ fontSize: '15px' }}>{this.state?.studentDetails.centerAddress}</Typography>\r\n            <br/>\r\n            <Typography variant=\"subtitle2\" color=\"primary\" style={{ fontSize: '18px', border: '2px solid #000000' }}>To join Tata Strive<br /> Give a missed call on 1800 419 2112 </Typography>\r\n          </CardContent>\r\n      </Box> \r\n      </Card>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport class ComponentToPrint extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      studentDetails: props.props.studentDetails,\r\n      centerAddress: props.props.centerAddress,\r\n      selectedBatchDetails: props.props.selectedBatchDetails,\r\n      IDCard_front_details: [],\r\n      IDCard_back_details: [],\r\n    }\r\n\r\n    this.state.studentDetails.map((student, id) => {\r\n      this.state.IDCard_front_details[id] = { \"engagementId\": student.engagementId ,\"batchName\": this.state.selectedBatchDetails[0].batchName, \"endDate\": this.state.selectedBatchDetails[0].endDate, \"studentName\": student.name, \"profilePhotoPath\": student.url, \"bloodGroup\": student.bloodGroup, \"studentId\": student.studentId }\r\n      this.state.IDCard_back_details[id] = { \"primaryContactNo\": student.contact, \"studentId\": student.studentId, \"centerAddress\": this.state.centerAddress}\r\n    })\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n            <Table>\r\n              <TableBody>\r\n\r\n                  {\r\n                    this.state.IDCard_front_details.map((frontDetails, id)=>{\r\n                      return(\r\n                        <TableRow>\r\n                        <TableCell>\r\n                        <IDCard_Front props={frontDetails}/>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                        <IDCard_back props={this.state.IDCard_back_details[id]}/>\r\n                        </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })\r\n                  }\r\n            \r\n              </TableBody>\r\n            </Table>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}