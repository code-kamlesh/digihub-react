{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\FundManger.js\";\nimport React, { Component } from 'react';\nimport { Checkbox, InputLabel, Input, Grid, Button } from '@material-ui/core';\nimport { fetchAllStateDetails, fetchCenterByStateName, fetchEmployerDetails, fetchBatchDetails, fetchEnrollmentDetailsByBatchId, getBatchDetailsByBatchIdandFunderId, saveBatchFunderDetails, updateBatchFunderDetails } from './../util/api';\nimport UserContext from '../components/GolbalContext';\nimport { SingleSelect } from \"react-select-material-ui\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport MUIDataTable from \"mui-datatables\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport Box from '@material-ui/core/Box';\nimport { data } from 'jquery';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\nimport RemoveCircleOutlineOutlinedIcon from '@material-ui/icons/RemoveCircleOutlineOutlined';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { TableRowColumn } from 'material-ui';\nimport { CheckBox } from '@material-ui/icons';\nlet today = new Date();\nlet dd = String(today.getDate()).padStart(2, '0');\nlet mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n\nlet yyyy = today.getFullYear();\nlet hours = String(today.getHours()).padStart(2, '0');\nlet minutes = String(today.getMinutes()).padStart(2, '0');\nlet seconds = String(today.getSeconds()).padStart(2, '0');\ntoday = yyyy + '-' + mm + '-' + dd + ' ' + hours + ':' + minutes + ':' + seconds; //columns for the table\n\nconst columns = [{\n  label: 'Funder Name',\n  name: 'funderName',\n  headerStyle: {\n    color: '#FF9800'\n  }\n}, {\n  label: 'Batch Name',\n  name: 'BatchName',\n  headerStyle: {\n    color: '#FF9800'\n  }\n}, {\n  label: 'Start Date',\n  name: 'startDate',\n  headerStyle: {\n    color: '#FF9800'\n  }\n}, {\n  label: 'End Date',\n  name: 'endDate',\n  headerStyle: {\n    color: '#FF9800'\n  }\n}, {\n  label: 'Map/ Unmap',\n  name: 'button',\n  headerStyle: {\n    color: '#FF9800'\n  }\n}, {\n  label: 'No of Trainees',\n  name: 'trainees',\n  headerStyle: {\n    color: '#FF9800'\n  }\n}]; //options for the table\n\nexport default class FundManeger extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      regions: [{\n        value: '1',\n        label: 'All'\n      }, {\n        value: '2',\n        label: 'East'\n      }, {\n        value: '3',\n        label: 'West'\n      }, {\n        value: '4',\n        label: 'North'\n      }, {\n        value: '5',\n        label: 'South'\n      }],\n      statelist: [],\n      centerlist: [],\n      centerId: \"\",\n      funderId: \"\",\n      funderType: \"P\",\n      funderName: \"\",\n      accountStatus: \"Active Partner\",\n      typeOfRelationship: \"%Funding partner%\",\n      funderlist: [],\n      errors: {},\n      tableData: [],\n      mappedTableData: [],\n      unmappedTableData: [],\n      centerName: ''\n    };\n    this.arrayTableData = this.arrayTableData.bind(this);\n    this.sepratingTableData = this.sepratingTableData.bind(this);\n    this.saveAll = this.saveAll.bind(this);\n    this.updateAll = this.updateAll.bind(this);\n  } // Module drop down for regions\n\n\n  handleRegionsChange(selectname, event) {\n    this.setState({\n      [selectname]: event,\n      errors: { ...this.state.errors,\n        regions: {\n          'label': '',\n          'value': false\n        },\n        Selectedstate: {\n          'label': 'Please select some option',\n          'value': true\n        },\n        centerId: {\n          'label': 'Please select some option',\n          'value': true\n        },\n        funderId: {\n          'label': 'Please select some option',\n          'value': true\n        }\n      },\n      Selectedstate: '',\n      statelist: [],\n      centerId: '',\n      centerlist: [],\n      funderId: '',\n      funderlist: [],\n      mappedTableData: [],\n      unmappedTableData: []\n    });\n    fetchAllStateDetails().then(jsondata => {\n      let result = JSON.parse(jsondata.data);\n      result.forEach(element => {\n        this.state.statelist.push({\n          \"value\": element.name,\n          \"label\": element.name\n        });\n      });\n    });\n  } // drop down for state\n\n\n  handleStateChange(selectname, event) {\n    this.setState({\n      [selectname]: event,\n      errors: { ...this.state.errors,\n        Selectedstate: {\n          'label': '',\n          'value': false\n        },\n        centerId: {\n          'label': 'Please select some option',\n          'value': true\n        },\n        funderId: {\n          'label': 'Please select some option',\n          'value': true\n        }\n      },\n      centerId: '',\n      centerlist: [],\n      funderId: '',\n      funderlist: [],\n      mappedTableData: [],\n      unmappedTableData: []\n    });\n    fetchCenterByStateName(event).then(jsondata => {\n      let result = JSON.parse(jsondata.data);\n      result.forEach(element => {\n        this.state.centerlist.push({\n          \"value\": element.id,\n          \"label\": element.name\n        });\n      });\n    });\n  } // drop down for center name\n\n\n  handleCenterChange(selectname, event) {\n    this.setState({\n      [selectname]: event,\n      errors: { ...this.state.errors,\n        centerId: {\n          'label': '',\n          'value': false\n        },\n        funderId: {\n          'label': 'Please select some option',\n          'value': true\n        }\n      },\n      funderId: '',\n      funderlist: [],\n      mappedTableData: [],\n      unmappedTableData: []\n    }); // Employer api calling to fetch funderlist\n\n    fetchEmployerDetails(this.state.accountStatus, this.state.typeOfRelationship).then(jsondata => {\n      let result = JSON.parse(jsondata.data);\n      console.log(result);\n      result.forEach(element => {\n        this.state.funderlist.push({\n          \"value\": element.id,\n          \"label\": element.accountName\n        });\n      });\n    });\n  } // drop down for funder list\n\n\n  handleFunderChange(selectname, event) {\n    let funderId = event;\n    let index = this.state.funderlist.findIndex(object => object.value == funderId);\n    let funderName = this.state.funderlist[index].label;\n    this.setState({\n      [selectname]: event,\n      funderName,\n      mappedTableData: [],\n      unmappedTableData: []\n    });\n    this.arrayTableData(funderId, funderName);\n  }\n\n  handleRadioChange(event) {\n    let value = event.target.value;\n    this.setState({\n      funderType: value\n    });\n  } // Center id is static i.e 20 for a time being\n\n\n  arrayTableData(funderId, funderName) {\n    var tableData = [];\n    fetchBatchDetails(UserContext.centerId).then(jsondata => {\n      let result = JSON.parse(jsondata.data);\n      var arrData = {};\n      result.map((element, id) => {\n        arrData = element;\n        tableData = [...tableData, {\n          \"BatchName\": arrData.batchName,\n          \"batchId\": arrData.batchId,\n          \"funderName\": funderName,\n          \"startDate\": arrData.startDate,\n          \"endDate\": arrData.endDate,\n          \"mapped\": false,\n          \"funderId\": funderId,\n          \"trainees\": 0,\n          \"id\": \"\",\n          \"isActive\": \"Y\",\n          \"fundingType\": this.state.funderType,\n          \"remarks\": \"\",\n          \"savedata\": false\n        }];\n      });\n      this.sepratingTableData(tableData);\n    });\n  }\n\n  sepratingTableData(tableData) {\n    console.log(\"Sperating Table Data begins\");\n    this.setState({\n      mappedTableData: [],\n      unmappedTableData: []\n    });\n    var mappedTableData = [];\n    var unmappedTableData = [];\n    tableData.map((element, id) => {\n      //to get the student Strength present based on the enrollment ID's \n      fetchEnrollmentDetailsByBatchId(element.batchId).then(jsondata => {\n        let res = JSON.parse(jsondata.data);\n        tableData[id].trainees = res.length;\n      });\n      getBatchDetailsByBatchIdandFunderId(element.batchId, this.state.funderId, \"Y\", this.state.funderType).then(jsondata => {\n        let res = JSON.parse(jsondata.data);\n\n        if (res[0].length > 0) {\n          tableData[id].id = res[0][0].id;\n          tableData[id].isActive = res[0][0].isActive;\n          tableData[id].fundingType = res[0][0].fundingType;\n          tableData[id].remarks = res[0][0].remarks;\n          tableData[id].mapped = true;\n          mappedTableData = [...mappedTableData, tableData[id]];\n        } else {\n          unmappedTableData = [...unmappedTableData, tableData[id]];\n        }\n\n        this.setState({\n          unmappedTableData,\n          mappedTableData\n        });\n      });\n    });\n  } //handle check change \n\n\n  handleCheckChange(id, mappingtable) {\n    console.log(mappingtable);\n    console.log(\"mapped table data\", this.state.mappedTableData[id]);\n    console.log(\"unmapped table data\", this.state.unmappedTableData[id]);\n  } //save batch funder mapping \n\n\n  saveFunderMappingDetails(batchId, funderId, isActive, fundingType, createdBy, createdOn, remarks) {\n    saveBatchFunderDetails(batchId, funderId, isActive, fundingType, createdBy, createdOn, remarks).then(jsondata => {\n      let res = JSON.parse(jsondata.data);\n      console.log(res);\n    });\n    console.log('clicked save', batchId, funderId, isActive, fundingType, createdBy, createdOn, remarks);\n    this.arrayTableData(this.state.funderId, this.state.funderName);\n  } //update batch funder mapping \n\n\n  updateFunderMappingDetails(id, batchId, funderId, isActive, remarks, updatedOn, updatedBy, fundingType) {\n    updateBatchFunderDetails(id, batchId, funderId, isActive, remarks, updatedOn, updatedBy, fundingType).then(jsondata => {\n      let res = JSON.parse(jsondata.data);\n      console.log(res);\n    });\n    console.log('clicked update', batchId, funderId, isActive, fundingType, updatedBy, updatedOn, remarks);\n    this.arrayTableData(this.state.funderId, this.state.funderName);\n  }\n\n  saveAll() {\n    this.state.unmappedTableData.map((element, id) => {\n      this.updateFunderMappingDetails(element === null || element === void 0 ? void 0 : element.id, element.batchId, element.funderId, element.isActive, this.state.funderType, UserContext.userid, today, \"\");\n      element.mapped = false; // this.state.mappedTableData.push({element})\n    });\n  }\n\n  updateAll() {\n    this.state.mappedTableData.map((element, id) => {\n      this.saveFunderMappingDetails(element.batchId, element.funderId, element.isActive, this.state.funderType, UserContext.userid, today, \"\");\n      element.mapped = true; // this.state.unmappedTableData.push({element})\n    });\n  }\n\n  render() {\n    // const options = {\n    //   filterType: 'checkbox',\n    //   onCellClick: this.saveFunderMappingDetails()\n    // };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 11\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 13\n      }\n    }, \"Regions\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"Selectedregion\",\n      id: \"Selectedregion\",\n      options: this.state.regions,\n      value: this.state.Selectedregion || '',\n      key: this.state.Selectedregion || '',\n      onChange: this.handleRegionsChange.bind(this, 'Selectedregion'),\n      helperText: this.state.errors.Selectedregion != undefined ? this.state.errors.Selectedregion.label : '',\n      error: this.state.errors.Selectedregion != undefined ? this.state.errors.centerId.value : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 13\n      }\n    }, \"State\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"Selectedstate\",\n      id: \"Selectedstate\",\n      key: this.state.Selectedstate || '',\n      options: this.state.statelist,\n      value: this.state.Selectedstate || '',\n      onChange: this.handleStateChange.bind(this, 'Selectedstate'),\n      helperText: this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.label : '',\n      error: this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.value : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 13\n      }\n    }, \"Center Name\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"selectedcenter\",\n      id: \"centerId\",\n      options: this.state.centerlist,\n      value: this.state.centerId || '',\n      onChange: this.handleCenterChange.bind(this, 'centerId'),\n      helperText: this.state.errors.centerId != undefined ? this.state.errors.centerId.label : '',\n      error: this.state.errors.centerId != undefined ? this.state.errors.centerId.value : '',\n      key: this.state.centerId || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 13\n      }\n    }, \"Funding Partner\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"selectedfunder\",\n      id: \"funderId\",\n      options: this.state.funderlist,\n      value: this.state.funderId || '',\n      onChange: this.handleFunderChange.bind(this, 'funderId'),\n      helperText: this.state.errors.funderId != undefined ? this.state.errors.funderId.label : '',\n      error: this.state.errors.funderId != undefined ? this.state.errors.funderId.value : '',\n      key: this.state.funderId || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }\n    }, \"Funding Type\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      onChange: this.handleRadioChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      value: \"P\",\n      name: \"funderType\",\n      checked: this.state.funderType === \"P\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 11\n      }\n    }), \" Primary \\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      value: \"S\",\n      name: \"funderType\",\n      checked: this.state.funderType === \"S\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 11\n      }\n    }), \" Secondary\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 11\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 11\n      }\n    }, \"Unmapped\"), /*#__PURE__*/React.createElement(Table, {\n      \"aria-label\": \"simple table\",\n      style: {\n        borderBlock: \"10.5px\",\n        borderWidth: \"10px\",\n        marginRight: \"300px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 17\n      }\n    }, \"Center Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 17\n      }\n    }, \"Batch Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 17\n      }\n    }, \"Start Date\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 17\n      }\n    }, \"End Date\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 17\n      }\n    }, \"Trainees\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 13\n      }\n    }, this.state.unmappedTableData.map((dataValue, id) => /*#__PURE__*/React.createElement(TableRow, {\n      id: \"tablerow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 19\n      }\n    }, this.state.funderName), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 19\n      }\n    }, dataValue.BatchName), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 19\n      }\n    }, dataValue.startDate), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 19\n      }\n    }, dataValue.endDate), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 19\n      }\n    }, dataValue.trainees), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => this.saveFunderMappingDetails(dataValue.batchId, dataValue.funderId, \"Y\", this.state.funderType, UserContext.userid, today, ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 32\n      }\n    }, \" map \"))))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      disabled: false,\n      onClick: this.saveAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 13\n      }\n    }, \"Map All\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      disabled: false,\n      onClick: this.updateAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 13\n      }\n    }, \"Unmap All\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 11\n      }\n    }, \"Mapped\"), /*#__PURE__*/React.createElement(Table, {\n      \"aria-label\": \"simple table\",\n      style: {\n        border: \"2px\",\n        marginRight: \"200px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 17\n      }\n    }, \"Center Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 17\n      }\n    }, \"Batch Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 17\n      }\n    }, \"Start Date\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 17\n      }\n    }, \"End Date\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 17\n      }\n    }, \"Trainees\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 13\n      }\n    }, this.state.mappedTableData.map((dataValue, id) => /*#__PURE__*/React.createElement(TableRow, {\n      id: \"tablerow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 19\n      }\n    }, this.state.funderName), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 19\n      }\n    }, dataValue.BatchName), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 19\n      }\n    }, dataValue.startDate), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 19\n      }\n    }, dataValue.endDate), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 19\n      }\n    }, dataValue.trainees), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => this.updateFunderMappingDetails(dataValue.id, dataValue.batchId, dataValue.funderId, \"N\", '', today, UserContext.userid, this.state.funderType),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 32\n      }\n    }, \" unmap \"))))))));\n  }\n\n}","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/FundManger.js"],"names":["React","Component","Checkbox","InputLabel","Input","Grid","Button","fetchAllStateDetails","fetchCenterByStateName","fetchEmployerDetails","fetchBatchDetails","fetchEnrollmentDetailsByBatchId","getBatchDetailsByBatchIdandFunderId","saveBatchFunderDetails","updateBatchFunderDetails","UserContext","SingleSelect","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TableSortLabel","MUIDataTable","createMuiTheme","MuiThemeProvider","Typography","Toolbar","Paper","Card","Box","data","FormControlLabel","FormControl","FormLabel","CheckOutlinedIcon","RemoveCircleOutlineOutlinedIcon","Tooltip","TableRowColumn","CheckBox","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","columns","label","name","headerStyle","color","FundManeger","constructor","props","state","regions","value","statelist","centerlist","centerId","funderId","funderType","funderName","accountStatus","typeOfRelationship","funderlist","errors","tableData","mappedTableData","unmappedTableData","centerName","arrayTableData","bind","sepratingTableData","saveAll","updateAll","handleRegionsChange","selectname","event","setState","Selectedstate","then","jsondata","result","JSON","parse","forEach","element","push","handleStateChange","id","handleCenterChange","console","log","accountName","handleFunderChange","index","findIndex","object","handleRadioChange","target","arrData","map","batchName","batchId","startDate","endDate","res","trainees","length","isActive","fundingType","remarks","mapped","handleCheckChange","mappingtable","saveFunderMappingDetails","createdBy","createdOn","updateFunderMappingDetails","updatedOn","updatedBy","userid","render","width","Selectedregion","undefined","borderBlock","borderWidth","marginRight","dataValue","BatchName","border"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Checkbox, InputLabel, Input, Grid, Button } from '@material-ui/core';\r\nimport { fetchAllStateDetails, fetchCenterByStateName, fetchEmployerDetails, fetchBatchDetails, fetchEnrollmentDetailsByBatchId, getBatchDetailsByBatchIdandFunderId, saveBatchFunderDetails, updateBatchFunderDetails } from './../util/api';\r\nimport UserContext from '../components/GolbalContext'\r\nimport { SingleSelect } from \"react-select-material-ui\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\nimport Box from '@material-ui/core/Box';\r\nimport { data } from 'jquery';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\r\nimport RemoveCircleOutlineOutlinedIcon from '@material-ui/icons/RemoveCircleOutlineOutlined';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { TableRowColumn } from 'material-ui';\r\nimport { CheckBox } from '@material-ui/icons';\r\n\r\nlet today = new Date();\r\nlet dd = String(today.getDate()).padStart(2, '0');\r\nlet mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\nlet yyyy = today.getFullYear();\r\nlet hours = String(today.getHours()).padStart(2, '0');\r\nlet minutes = String(today.getMinutes()).padStart(2, '0');\r\nlet seconds = String(today.getSeconds()).padStart(2, '0');\r\ntoday = yyyy + '-' + mm + '-' + dd + ' ' + hours + ':' + minutes + ':' + seconds;\r\n//columns for the table\r\nconst columns = [{label: 'Funder Name', name: 'funderName',headerStyle: {color:'#FF9800'}},\r\n{label: 'Batch Name', name: 'BatchName',headerStyle: {color:'#FF9800'}},\r\n{label: 'Start Date', name: 'startDate',headerStyle: {color:'#FF9800'}},\r\n{label: 'End Date', name: 'endDate',headerStyle: {color:'#FF9800'}},\r\n{label: 'Map/ Unmap', name: 'button',headerStyle: {color:'#FF9800'}},\r\n{label: 'No of Trainees', name: 'trainees',headerStyle: {color:'#FF9800'}}\r\n ];\r\n//options for the table\r\n\r\nexport default class FundManeger extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      regions: [{ value: '1', label: 'All' },\r\n      { value: '2', label: 'East' },\r\n      { value: '3', label: 'West' },\r\n      { value: '4', label: 'North' },\r\n      { value: '5', label: 'South' }],\r\n      statelist: [],\r\n      centerlist: [],\r\n      centerId: \"\",\r\n      funderId: \"\",\r\n      funderType: \"P\",\r\n      funderName: \"\",\r\n      accountStatus: \"Active Partner\",\r\n      typeOfRelationship: \"%Funding partner%\",\r\n      funderlist: [],\r\n      errors: {},\r\n      tableData: [],\r\n      mappedTableData: [],\r\n      unmappedTableData: [],\r\n      centerName: '',\r\n    };\r\n    this.arrayTableData = this.arrayTableData.bind(this);\r\n    this.sepratingTableData = this.sepratingTableData.bind(this);\r\n    this.saveAll = this.saveAll.bind(this);\r\n    this.updateAll = this.updateAll.bind(this);\r\n  }\r\n\r\n  // Module drop down for regions\r\n  handleRegionsChange(selectname, event) {\r\n    this.setState({\r\n      [selectname]: event,\r\n      errors: {\r\n        ...this.state.errors,\r\n        regions: {\r\n          'label': '',\r\n          'value': false\r\n        },\r\n        Selectedstate: {\r\n          'label': 'Please select some option',\r\n          'value': true\r\n        },\r\n        centerId: {\r\n          'label': 'Please select some option',\r\n          'value': true\r\n        },\r\n        funderId: {\r\n          'label': 'Please select some option',\r\n          'value': true\r\n        }\r\n      },\r\n      Selectedstate:'',\r\n      statelist:[],\r\n      centerId:'',\r\n      centerlist:[],\r\n      funderId:'',\r\n      funderlist:[],\r\n      mappedTableData:[],\r\n      unmappedTableData:[]\r\n    })\r\n    fetchAllStateDetails().then(jsondata => {\r\n      let result = JSON.parse(jsondata.data)\r\n      result.forEach(element => {\r\n        this.state.statelist.push({\r\n          \"value\": element.name,\r\n          \"label\": element.name\r\n        })\r\n      });\r\n    })\r\n  }\r\n  // drop down for state\r\n  handleStateChange(selectname, event) {\r\n    this.setState({\r\n      [selectname]: event,\r\n      errors: {\r\n        ...this.state.errors,\r\n        Selectedstate: {\r\n          'label': '',\r\n          'value': false\r\n        },\r\n        centerId: {\r\n          'label': 'Please select some option',\r\n          'value': true\r\n        },\r\n        funderId: {\r\n          'label': 'Please select some option',\r\n          'value': true\r\n        }\r\n      },\r\n      centerId:'',\r\n      centerlist:[],\r\n      funderId:'',\r\n      funderlist:[],\r\n      mappedTableData:[],\r\n      unmappedTableData:[]\r\n      \r\n    })\r\n    fetchCenterByStateName(event).then(jsondata => {\r\n      let result = JSON.parse(jsondata.data)\r\n      result.forEach(element => {\r\n        this.state.centerlist.push({\r\n          \"value\": element.id,\r\n          \"label\": element.name,\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  // drop down for center name\r\n  handleCenterChange(selectname, event) {\r\n    this.setState({\r\n      [selectname]: event,\r\n      errors: {\r\n        ...this.state.errors,\r\n        centerId: {\r\n          'label': '',\r\n          'value': false\r\n        },\r\n        funderId: {\r\n          'label': 'Please select some option',\r\n          'value': true\r\n        }\r\n      },\r\n      funderId:'',\r\n      funderlist:[],\r\n      mappedTableData:[],\r\n      unmappedTableData:[]\r\n    })\r\n    // Employer api calling to fetch funderlist\r\n    fetchEmployerDetails(this.state.accountStatus, this.state.typeOfRelationship).then(jsondata => {\r\n      let result = JSON.parse(jsondata.data)\r\n      console.log(result)\r\n      result.forEach(element => {\r\n        this.state.funderlist.push({\r\n          \"value\": element.id,\r\n          \"label\": element.accountName\r\n        })\r\n      })\r\n    })\r\n\r\n  }\r\n\r\n  // drop down for funder list\r\n  handleFunderChange(selectname, event) {\r\n    let funderId = event;\r\n    let index = this.state.funderlist.findIndex((object)=> object.value == funderId)\r\n    let funderName = this.state.funderlist[index].label\r\n    this.setState({\r\n      [selectname]: event,\r\n      funderName,\r\n      mappedTableData:[],\r\n      unmappedTableData:[]\r\n    })\r\n    this.arrayTableData(funderId, funderName)   \r\n  }\r\n\r\n  handleRadioChange(event){\r\n    let value = event.target.value\r\n       this.setState({ funderType : value });\r\n  }\r\n\r\n  // Center id is static i.e 20 for a time being\r\n  arrayTableData(funderId, funderName) {\r\n    var tableData = []\r\n    fetchBatchDetails(UserContext.centerId).then(jsondata => {\r\n      let result = JSON.parse(jsondata.data)\r\n      var arrData = {}\r\n      result.map((element, id) => {\r\n        arrData = element\r\n        tableData = [\r\n          ...tableData,\r\n          {\r\n            \"BatchName\": arrData.batchName,\r\n            \"batchId\": arrData.batchId,\r\n            \"funderName\": funderName,\r\n            \"startDate\": arrData.startDate,\r\n            \"endDate\": arrData.endDate,\r\n            \"mapped\": false,\r\n            \"funderId\": funderId,\r\n            \"trainees\": 0,\r\n            \"id\": \"\",\r\n            \"isActive\": \"Y\",\r\n            \"fundingType\": this.state.funderType,\r\n            \"remarks\": \"\",\r\n            \"savedata\": false\r\n          }]\r\n      })\r\n      this.sepratingTableData(tableData);\r\n    })\r\n  }\r\n\r\n  sepratingTableData(tableData){\r\n    console.log(\"Sperating Table Data begins\")\r\n    this.setState({ mappedTableData: [], unmappedTableData: [] })\r\n    var mappedTableData=[];\r\n    var unmappedTableData=[];\r\n    tableData.map((element, id) =>{\r\n      //to get the student Strength present based on the enrollment ID's \r\n      fetchEnrollmentDetailsByBatchId(element.batchId).then((jsondata) => {\r\n        let res = JSON.parse(jsondata.data)\r\n        tableData[id].trainees = res.length\r\n      })\r\n      getBatchDetailsByBatchIdandFunderId(element.batchId, this.state.funderId, \"Y\", this.state.funderType).then((jsondata) => {\r\n        let res = JSON.parse(jsondata.data)     \r\n        if (res[0].length > 0) {\r\n          tableData[id].id = res[0][0].id\r\n          tableData[id].isActive = res[0][0].isActive\r\n          tableData[id].fundingType = res[0][0].fundingType\r\n          tableData[id].remarks = res[0][0].remarks\r\n          tableData[id].mapped = true\r\n          mappedTableData = [\r\n            ...mappedTableData, \r\n            tableData[id]\r\n          ] \r\n        }\r\n        else{\r\n          unmappedTableData = [\r\n            ...unmappedTableData,\r\n            tableData[id]\r\n          ]\r\n        } \r\n        this.setState({unmappedTableData, mappedTableData})\r\n      })\r\n    })\r\n  }\r\n\r\n  //handle check change \r\n  handleCheckChange(id, mappingtable) {\r\n    console.log(mappingtable)\r\n    console.log(\"mapped table data\",this.state.mappedTableData[id])\r\n    console.log(\"unmapped table data\",this.state.unmappedTableData[id])\r\n  }\r\n\r\n  //save batch funder mapping \r\n  saveFunderMappingDetails(batchId, funderId, isActive, fundingType, createdBy, createdOn, remarks) {\r\n    saveBatchFunderDetails(batchId, funderId, isActive, fundingType, createdBy, createdOn, remarks).then((jsondata) => {\r\n      let res = JSON.parse(jsondata.data)\r\n      console.log(res)\r\n    })\r\n    console.log('clicked save', batchId, funderId, isActive, fundingType, createdBy, createdOn, remarks)\r\n    this.arrayTableData(this.state.funderId, this.state.funderName)\r\n  }\r\n  \r\n  //update batch funder mapping \r\n  updateFunderMappingDetails(id, batchId, funderId, isActive, remarks, updatedOn, updatedBy, fundingType) {\r\n    updateBatchFunderDetails(id, batchId, funderId, isActive, remarks, updatedOn, updatedBy, fundingType).then((jsondata) => {\r\n      let res = JSON.parse(jsondata.data)\r\n      console.log(res)\r\n    })\r\n    console.log('clicked update', batchId, funderId, isActive, fundingType, updatedBy, updatedOn, remarks)\r\n    this.arrayTableData(this.state.funderId, this.state.funderName)\r\n  }\r\n\r\n  saveAll(){\r\n    this.state.unmappedTableData.map((element, id)=>{\r\n      this.updateFunderMappingDetails(element?.id, element.batchId, element.funderId, element.isActive, this.state.funderType, UserContext.userid, today, \"\")\r\n            element.mapped = false\r\n      // this.state.mappedTableData.push({element})\r\n    })\r\n  }\r\n\r\n  updateAll(){\r\n    this.state.mappedTableData.map((element, id)=>{\r\n      this.saveFunderMappingDetails(element.batchId, element.funderId, element.isActive, this.state.funderType, UserContext.userid, today, \"\")\r\n            element.mapped = true\r\n        // this.state.unmappedTableData.push({element})\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    // const options = {\r\n    //   filterType: 'checkbox',\r\n    //   onCellClick: this.saveFunderMappingDetails()\r\n    // };\r\n    \r\n    return (\r\n      <div style={{ width: '100%' }}>\r\n        <Grid container>\r\n          <Grid item xs={12}> </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} >Regions</InputLabel>\r\n            <SingleSelect\r\n              name=\"Selectedregion\" id=\"Selectedregion\"\r\n              options={this.state.regions}\r\n              value={this.state.Selectedregion || ''}\r\n              key={this.state.Selectedregion || ''}\r\n              onChange={this.handleRegionsChange.bind(this, 'Selectedregion')}\r\n              helperText={this.state.errors.Selectedregion != undefined ? this.state.errors.Selectedregion.label : ''}\r\n              error={this.state.errors.Selectedregion != undefined ? this.state.errors.centerId.value : ''}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={2}></Grid>\r\n\r\n\r\n          <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} >State</InputLabel>\r\n            <SingleSelect\r\n              name=\"Selectedstate\" id=\"Selectedstate\"\r\n              key={this.state.Selectedstate || ''}\r\n              options={this.state.statelist}\r\n              value={this.state.Selectedstate || ''}\r\n              onChange={this.handleStateChange.bind(this, 'Selectedstate')}\r\n              helperText={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.label : ''}\r\n              error={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.value : ''}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <br />\r\n        <Grid container>\r\n          <Grid item xs={12}> </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} >Center Name</InputLabel>\r\n            <SingleSelect\r\n              name=\"selectedcenter\" id=\"centerId\"\r\n              options={this.state.centerlist}\r\n              value={this.state.centerId || ''}\r\n              onChange={this.handleCenterChange.bind(this, 'centerId')}\r\n              helperText={this.state.errors.centerId != undefined ? this.state.errors.centerId.label : ''}\r\n              error={this.state.errors.centerId != undefined ? this.state.errors.centerId.value : ''}\r\n              key={this.state.centerId || ''}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={2}></Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} >Funding Partner</InputLabel>\r\n            <SingleSelect\r\n              name=\"selectedfunder\" id=\"funderId\"\r\n              options={this.state.funderlist}\r\n              value={this.state.funderId || ''}\r\n              onChange={this.handleFunderChange.bind(this, 'funderId')}\r\n              helperText={this.state.errors.funderId != undefined ? this.state.errors.funderId.label : ''}\r\n              error={this.state.errors.funderId != undefined ? this.state.errors.funderId.value : ''}\r\n            key={this.state.funderId || ''}\r\n            />\r\n          </Grid>\r\n\r\n        </Grid>\r\n        <br />\r\n        <br />\r\n        <InputLabel shrink={true} >Funding Type</InputLabel>\r\n        <br />\r\n        <div onChange={this.handleRadioChange.bind(this)}>\r\n          <input type=\"radio\" value=\"P\" name=\"funderType\" checked={this.state.funderType === \"P\"}/> Primary\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <input type=\"radio\" value=\"S\" name=\"funderType\" checked={this.state.funderType === \"S\"}/> Secondary\r\n        </div>\r\n        {/* <br /><br /><br /><br /><br /><br /><br /><br /><br /><br />\r\n        <MuiThemeProvider theme={this.getMuiTheme()}>\r\n        <MUIDataTable \r\n          title={\"Mapped Batches\"} \r\n          data={this.state.mappedTableData} \r\n          columns={columns} \r\n          checkboxSelection\r\n        />\r\n        </MuiThemeProvider>\r\n        <br /><br /><br /><br /><br /><br />\r\n        <MuiThemeProvider theme={this.getMuiTheme()}>\r\n        <MUIDataTable\r\n          title={\"UnMapped Batches\"} \r\n          data={this.state.unmappedTableData} \r\n          columns={columns} \r\n          checkboxSelection\r\n        />\r\n        </MuiThemeProvider>\r\n      <br /><br /><br /><br /><br /><br /> */}\r\n      {/**********************************************/}\r\n      <br /><br /><br /><br /><br /><br />\r\n      <Grid container>\r\n          <Grid item xs={12}> </Grid>\r\n\r\n          {/* <Card style={{width:\"300px\"}}>\r\n              <Box border={1} borderRadius=\"1.75%\"> */}\r\n          {/* <Grid item xs={12} sm={3}> */}\r\n          <h6>Unmapped</h6>\r\n          <Table aria-label=\"simple table\" style={{ borderBlock: \"10.5px\", borderWidth: \"10px\", marginRight: \"300px\" }}>\r\n            <TableHead>\r\n\r\n              <TableRow>\r\n                <TableCell>Center Name</TableCell>\r\n                <TableCell>Batch Name</TableCell>\r\n                <TableCell>Start Date</TableCell>\r\n                <TableCell>End Date</TableCell>\r\n                <TableCell>Trainees</TableCell>\r\n\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.state.unmappedTableData.map((dataValue, id) => (\r\n                <TableRow id=\"tablerow\">\r\n                  <TableCell>{this.state.funderName}</TableCell>\r\n                  <TableCell>{dataValue.BatchName}</TableCell>\r\n                  <TableCell>{dataValue.startDate}</TableCell>\r\n                  <TableCell>{dataValue.endDate}</TableCell>\r\n                  <TableCell>{dataValue.trainees}</TableCell>\r\n                  <TableCell>{ <Button variant=\"contained\" color=\"primary\" onClick={() => this.saveFunderMappingDetails(dataValue.batchId, dataValue.funderId, \"Y\", this.state.funderType, UserContext.userid, today, '')} > map </Button> }</TableCell>\r\n                </TableRow>))}\r\n            </TableBody>\r\n          </ Table>\r\n        </Grid>\r\n        <br /> <br />\r\n        <Grid container>\r\n          <Grid item xs={4}>\r\n            <Button variant=\"contained\" color=\"primary\" disabled={false} onClick={this.saveAll}>Map All</Button>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Button variant=\"contained\" color=\"primary\" disabled={false} onClick={this.updateAll}>Unmap All</Button>\r\n          </Grid>\r\n        </Grid>\r\n        <br /><br />\r\n        {/* </Box>\r\n              </Card> */}\r\n        <Grid container>\r\n          <Grid item xs={12}></Grid>\r\n          {/*              \r\n            <Card style={{width:\"300px\" ,marginLeft:\"10px\"}} >\r\n            <Box border={1} borderRadius=\"1.75%\"> */}\r\n          {/* <Grid item xs={12} sm={3}> */}\r\n          <h6>Mapped</h6>\r\n          {/* <Typography  variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          Mapped Batches\r\n        </Typography> */}\r\n          <Table aria-label=\"simple table\" style={{ border: \"2px\", marginRight: \"200px\" }}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Center Name</TableCell>\r\n                <TableCell>Batch Name</TableCell>\r\n                <TableCell>Start Date</TableCell>\r\n                <TableCell>End Date</TableCell>\r\n                <TableCell>Trainees</TableCell>\r\n\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.state.mappedTableData.map((dataValue, id) => (\r\n                <TableRow id=\"tablerow\">\r\n                  <TableCell>{this.state.funderName}</TableCell>\r\n                  <TableCell>{dataValue.BatchName}</TableCell>\r\n                  <TableCell>{dataValue.startDate}</TableCell>\r\n                  <TableCell>{dataValue.endDate}</TableCell>\r\n                  <TableCell>{dataValue.trainees}</TableCell>\r\n                  <TableCell>{ <Button variant=\"contained\" color=\"primary\" onClick={() => this.updateFunderMappingDetails(dataValue.id, dataValue.batchId, dataValue.funderId, \"N\", '', today, UserContext.userid, this.state.funderType)} > unmap </Button> }</TableCell>\r\n                </TableRow>))}\r\n            </TableBody>\r\n          </ Table>\r\n          {/* </Grid> */}\r\n          {/* </Box>  \r\n              </Card> */}\r\n        </Grid>\r\n        \r\n    </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}