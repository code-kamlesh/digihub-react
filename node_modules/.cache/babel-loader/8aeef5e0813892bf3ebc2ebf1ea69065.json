{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\BulkUpload.js\";\nimport React, { Component } from 'react';\nimport * as XLSX from \"xlsx\";\nimport { InputLabel, Input, Grid, Button } from '@material-ui/core';\nimport { SingleSelect } from \"react-select-material-ui\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport UserContext from '../components/GolbalContext';\nimport { fetchNotCompletedBatchDetails, saveBulkMetaData, saveBulkStudentData } from '../util/api';\nimport Student_Template1 from \"./../assets/document/Student_Template1.xlsx\"; // import line\n\nimport { Route } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport History from \"./History\";\nlet today = new Date();\nlet dd = String(today.getDate()).padStart(2, '0');\nlet mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n\nlet yyyy = today.getFullYear();\ntoday = yyyy + '-' + mm + '-' + dd;\nexport default class bulkUpload extends Component {\n  constructor(props) {\n    super(props);\n\n    this.readExcel = file => {\n      // \n      let file_name = file.name;\n      this.setState({\n        fileName: file_name\n      });\n      const fileReader = new FileReader();\n      fileReader.readAsArrayBuffer(file);\n\n      fileReader.onload = e => {\n        //  console.log(e)\n        const bufferArray = e.target.result;\n        const wb = XLSX.read(bufferArray, {\n          type: \"buffer\"\n        });\n        const wsname = wb.SheetNames[0];\n        const ws = wb.Sheets[wsname]; // console.log(\"file name : \",file.name)\n\n        const data = XLSX.utils.sheet_to_json(ws, {\n          header: 1\n        });\n        console.log(\"Header file \", data[0]);\n        let student_data = XLSX.utils.sheet_to_json(ws);\n        this.setState({\n          studentInfo: student_data\n        });\n        this.setState({\n          student_count: data.length - 1\n        }); //  console.log(\"DataCount : \",this.state.student_count )\n\n        const requiredHeader = ['Aadhar_Number', 'First_Name', 'Middle_Name', 'Last_Name', 'Date_of_Birth', 'Gender', 'Qualification', 'Passing_year', 'Religion', 'Address_Line_1', 'Village', 'District', 'State', 'Pincode', 'Category', 'Primary_Contact_Number', 'Primary_Mail_ID', 'College_register_no', 'Iti_grade', 'Iti_trade'];\n        let flag = true; // var x= requiredHeader.findIndex(element =>{\n        //   element == \"Created_by\"\n        // })\n        // console.log(x)\n        // console.log(data[0] )\n\n        requiredHeader.map((element, id) => {\n          // console.log(\"header comparison \",element, \"data : \",data[0][id])\n          if (flag) {\n            if (element == data[0][id]) {\n              if (id + 1 == requiredHeader.length) {\n                // Activating the upload button\n                this.setState({\n                  upload_button: false\n                });\n              }\n            } else {\n              flag = false;\n              alert(\"Plese use the correct template for upload.The coloumn in the upload file and sample template does not match.\"); // Plese use the correct template for upload.\n\n              this.setState({\n                upload_button: true\n              });\n              return;\n            }\n          }\n        });\n      };\n    };\n\n    this.state = {\n      options: [{\n        value: \"Mobilization\",\n        label: \"Mobilization\"\n      }, {\n        value: \"Enrollment\",\n        label: \"Enrollment\"\n      }],\n      user_unique_id: 0,\n      batchList: [],\n      Selectedoption: \"\",\n      student_count: 0,\n      fileName: \"\",\n      studentInfo: [],\n      batchName: null,\n      batchId: 0,\n      flag: false,\n      upload_button: true,\n      errors: {},\n      batchName: \"\"\n    };\n  } // optind change handler\n\n\n  handleOptionsChange(selectname, event) {\n    console.log(\"model_id: \", UserContext.modelId);\n    const value = event; // console.log(value)\n\n    this.setState({\n      Selectedoption: value,\n      batchName: \"\",\n      batchId: 0,\n      errors: { ...this.state.errors,\n        SelectedBatch: {\n          'label': '',\n          'value': false\n        }\n      }\n    });\n    this.setState({\n      batchList: []\n    });\n\n    if (event === \"Enrollment\") {\n      this.setState({\n        errors: { ...this.state.errors,\n          SelectedBatch: {\n            'label': 'Please select some option',\n            'value': true\n          }\n        }\n      }); // setDisabled(false)\n\n      fetchNotCompletedBatchDetails(UserContext.centerId).then(jsondata => {\n        let result = JSON.parse(jsondata.data); // console.log(\"center : \",result)\n\n        result.forEach(element => {\n          //  console.log(\"Condition for date \" , element.freezeDate > today)\n          if (element.freezeDate > today) {\n            this.state.batchList.push({\n              \"value\": element.batchId,\n              \"label\": element.batchName\n            });\n          }\n        });\n      });\n    } else {// setDisabled(true)\n    }\n  } // Hhandle batch changes\n\n\n  handleBatchChange(selectname, event) {\n    // console.log(\"selected optins : \",this.state.Selectedoption)\n    let value = event; // console.log(event)\n\n    let index = this.state.batchList.findIndex(object => object.value == value);\n    let batchname = this.state.batchList[index].label; // console.log(this.state.batcheList)\n\n    this.setState({\n      batchId: event,\n      batchName: batchname,\n      errors: { ...this.state.errors,\n        SelectedBatch: {\n          'label': '',\n          'value': false\n        }\n      }\n    });\n  } // Handle for excel file change\n\n\n  // Uploadinh the doumnet\n  // this.setState({metaData})\n  async uploadDocuments() {\n    let x = 0; // alert(\"hello\")\n    // console.log(UserContext.modelId)\n    // console.log(this.state.student_count)\n    // console.log(this.state.studentInfo)\n    // console.log(this.state.fileName)\n\n    const response = await saveBulkMetaData(this.state.fileName, today, this.state.Selectedoption, this.state.batchName, this.state.batchId, this.state.student_count, \"L\", UserContext.centerName, UserContext.centerId, UserContext.modelId, UserContext.userid, \"under test\").then(jsondata => {\n      let result = JSON.parse(jsondata.data); // console.log(\"Mpdel id : \",result[0].modelId)\n      // \n\n      if (result[0].regId == 0) {\n        alert(\"Data Not saved\"); // changes\n\n        return;\n      } // Changes at 20 october\n      else {\n        this.state.user_unique_id = result[0].regId;\n        this.uploadStudentData();\n      }\n    });\n  }\n\n  async uploadStudentData() {\n    let flag = false;\n    let studentInfo = this.state.studentInfo; // console.log(\"Bulk Student data : \",studentInfo)\n\n    for (var i = 0; i < this.state.student_count; i++) {\n      const response1 = await saveBulkStudentData(this.state.user_unique_id, studentInfo[i].First_Name || null, studentInfo[i].Last_Name || null, studentInfo[i].Middle_Name || null, studentInfo[i].Date_of_Birth || null, studentInfo[i].Aadhar_Number || null, studentInfo[i].Qualification || null, studentInfo[i].Passing_year || null, studentInfo[i].Gender || null, studentInfo[i].Religion || null, studentInfo[i].Category || null, studentInfo[i].Primary_Contact_Number || null, studentInfo[i].Primary_Mail_ID || null, studentInfo[i].College_register_no || null, studentInfo[i].Iti_grade || null, studentInfo[i].Iti_trade || null, studentInfo[i].Address_Line_1 || null, studentInfo[i].Village || null, studentInfo[i].District || null, studentInfo[i].State || null, studentInfo[i].Pincode || null, today, UserContext.userid, \"P\", \"::\", \"::\").then(jsondata => {\n        let result = JSON.parse(jsondata.data); //  console.log(result)\n\n        flag = true;\n      });\n    }\n\n    if (flag == true) {\n      alert(\"Data Saved Successfully and Registration ID is : \" + this.state.user_unique_id);\n    } else {\n      alert(\"Data Not Saved\");\n      return;\n    }\n  } // Download file\n\n\n  downloadFile() {\n    // import Student_Template from \"./../assets/document/Student_Template.xlsx\";\n    const url = Student_Template1;\n    window.open(url);\n  } // Routes Change\n\n\n  routeChange() {\n    this.props.history.push({\n      pathname: '/dashboard/History',\n      state: {}\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-end\",\n      alignItems: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.downloadFile.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 14\n      }\n    }, \"Download template\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 7\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 13\n      }\n    }, \"Options\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"Selectedoption\",\n      id: \"Selectedoption\",\n      options: this.state.options,\n      value: this.state.Selectedoption || '',\n      key: this.state.Selectedoption || '',\n      onChange: this.handleOptionsChange.bind(this, 'Selectedoption') // helperText={this.state.errors.Selectedoption != undefined ? this.state.errors.Selectedoption.label : ''}\n      // error={this.state.errors.Selectedoption != undefined ? this.state.errors.Selectedoption.value : ''}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 13\n      }\n    }, \"Batches\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"SelectedBatch\",\n      id: \"SelectedBatch\",\n      key: this.state.SelectedBatch || '',\n      options: this.state.batchList,\n      value: this.state.SelectedBatch || '',\n      onChange: this.handleBatchChange.bind(this, 'SelectedBatch'),\n      disabled: this.state.Selectedoption == \"Mobilization\" ? true : false,\n      helperText: this.state.errors.SelectedBatch != undefined ? this.state.errors.SelectedBatch.label : '',\n      error: this.state.errors.SelectedBatch != undefined ? this.state.errors.SelectedBatch.value : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Table, {\n      \"aria-label\": \"simple table\",\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      name: \"upload-photo\",\n      type: \"file\",\n      accept: \".xlsx/*, .xls/*\",\n      onClick: e => {\n        e.target.value = null; // setDisabled(true)\n      },\n      onChange: e => {\n        const file = e.target.files[0];\n        var substr1 = file.name.substring(file.name.length - 4, file.name.length);\n        var substr2 = file.name.substring(file.name.length - 3, file.name.length);\n\n        if (substr1 == \"xlsx\" || substr2 == \"xls\") {\n          this.readExcel(file);\n        } else {\n          alert(\"Please Upload Excel file\");\n          return;\n        }\n      },\n      maxFileSize: 5000000,\n      filesLimit: 1,\n      showFileNames: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 15\n      }\n    }, \"Note-:Please upload Excel file\"), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 15\n      }\n    }, \"and size should not be greater than 5MB.\"))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 13\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 20\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      alignItems: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"small\",\n      onClick: this.uploadDocuments.bind(this),\n      disabled: this.state.upload_button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 15\n      }\n    }, \"Upload Document\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 14\n      }\n    }), \"  \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 22\n      }\n    }), \"  \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 30\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-end\",\n      alignItems: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.routeChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 14\n      }\n    }, \"History Details\", /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/History\",\n      component: History,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 16\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/BulkUpload.js"],"names":["React","Component","XLSX","InputLabel","Input","Grid","Button","SingleSelect","Table","TableBody","TableCell","TableRow","UserContext","fetchNotCompletedBatchDetails","saveBulkMetaData","saveBulkStudentData","Student_Template1","Route","Link","History","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","bulkUpload","constructor","props","readExcel","file","file_name","name","setState","fileName","fileReader","FileReader","readAsArrayBuffer","onload","e","bufferArray","target","result","wb","read","type","wsname","SheetNames","ws","Sheets","data","utils","sheet_to_json","header","console","log","student_data","studentInfo","student_count","length","requiredHeader","flag","map","element","id","upload_button","alert","state","options","value","label","user_unique_id","batchList","Selectedoption","batchName","batchId","errors","handleOptionsChange","selectname","event","modelId","SelectedBatch","centerId","then","jsondata","JSON","parse","forEach","freezeDate","push","handleBatchChange","index","findIndex","object","batchname","uploadDocuments","x","response","centerName","userid","regId","uploadStudentData","i","response1","First_Name","Last_Name","Middle_Name","Date_of_Birth","Aadhar_Number","Qualification","Passing_year","Gender","Religion","Category","Primary_Contact_Number","Primary_Mail_ID","College_register_no","Iti_grade","Iti_trade","Address_Line_1","Village","District","State","Pincode","downloadFile","url","window","open","routeChange","history","pathname","render","width","bind","undefined","files","substr1","substring","substr2","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport * as XLSX from \"xlsx\";\r\nimport {  InputLabel, Input, Grid, Button } from '@material-ui/core';\r\nimport { SingleSelect } from \"react-select-material-ui\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport UserContext from '../components/GolbalContext'\r\nimport {fetchNotCompletedBatchDetails,saveBulkMetaData,saveBulkStudentData} from '../util/api';\r\nimport Student_Template1 from \"./../assets/document/Student_Template1.xlsx\";\r\n// import line\r\nimport {Route } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom'\r\nimport History from \"./History\"\r\nlet today = new Date();\r\nlet dd = String(today.getDate()).padStart(2, '0');\r\nlet mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\nlet yyyy = today.getFullYear();\r\ntoday = yyyy + '-' + mm + '-' + dd;\r\n\r\nexport default class bulkUpload extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n\r\n      options:[{value:\"Mobilization\", label:\"Mobilization\"},\r\n                {value:\"Enrollment\" ,label:\"Enrollment\"}],\r\n      user_unique_id:0,\r\n      batchList:[],\r\n      Selectedoption:\"\",\r\n      student_count:0,\r\n      fileName:\"\",\r\n      studentInfo:[],\r\n      batchName:null,\r\n      batchId:0,\r\n      flag : false,\r\n      upload_button:true,\r\n      errors: {},\r\n      batchName:\"\",\r\n      \r\n    }\r\n  }\r\n \r\n// optind change handler\r\n  handleOptionsChange(selectname,event){\r\n    console.log(\"model_id: \",UserContext.modelId)\r\n    const value = event\r\n    // console.log(value)\r\n    this.setState({\r\n      Selectedoption: value,\r\n      batchName:\"\",\r\n      batchId:0,\r\n      errors:{\r\n        ...this.state.errors,\r\n        SelectedBatch: {\r\n          'label': '',\r\n          'value': false\r\n        },\r\n      }\r\n    })\r\n    this.setState({batchList:[]})\r\n\r\n    if(event === \"Enrollment\"){\r\n      this.setState({\r\n        errors:{\r\n          ...this.state.errors,\r\n          SelectedBatch: {\r\n            'label': 'Please select some option',\r\n            'value': true\r\n          },\r\n        }\r\n      })\r\n      // setDisabled(false)\r\n      fetchNotCompletedBatchDetails(UserContext.centerId).then((jsondata) => {\r\n        let result = JSON.parse(jsondata.data);\r\n        // console.log(\"center : \",result)\r\n       result.forEach(element => {\r\n        //  console.log(\"Condition for date \" , element.freezeDate > today)\r\n          if(element.freezeDate > today ){\r\n            this.state.batchList.push({\r\n              \"value\": element.batchId,\r\n              \"label\": element.batchName\r\n            })\r\n          }\r\n       });\r\n      })\r\n    }\r\n    else{\r\n      // setDisabled(true)\r\n    }\r\n  }\r\n   // Hhandle batch changes\r\n   handleBatchChange(selectname,event){\r\n    // console.log(\"selected optins : \",this.state.Selectedoption)\r\n    let value = event\r\n    // console.log(event)\r\n    let index = this.state.batchList.findIndex((object) => object.value == value)\r\n    let batchname = this.state.batchList[index].label\r\n    // console.log(this.state.batcheList)\r\n    this.setState({\r\n      batchId:event,\r\n      batchName: batchname,\r\n      errors:{\r\n        ...this.state.errors,\r\n        SelectedBatch: {\r\n          'label': '',\r\n          'value': false\r\n        },\r\n      }\r\n    })\r\n  }\r\n\r\n  // Handle for excel file change\r\n  readExcel = (file) => {\r\n    // \r\n    let file_name = file.name\r\n    this.setState({fileName :file_name })\r\n   const fileReader = new FileReader();\r\n   fileReader.readAsArrayBuffer(file);\r\n\r\n   fileReader.onload = (e) => {\r\n    //  console.log(e)\r\n     const bufferArray = e.target.result;\r\n\r\n     const wb = XLSX.read(bufferArray, { type: \"buffer\" });\r\n\r\n     const wsname = wb.SheetNames[0];\r\n\r\n     const ws = wb.Sheets[wsname];\r\n    \r\n    // console.log(\"file name : \",file.name)\r\n     const data = XLSX.utils.sheet_to_json(ws,{header:1});\r\n     console.log(\"Header file \",data[0])\r\n     let student_data = XLSX.utils.sheet_to_json(ws);\r\n     this.setState({studentInfo:student_data })\r\n    \r\n    \r\n    this.setState({student_count :data.length-1})\r\n    //  console.log(\"DataCount : \",this.state.student_count )\r\n\r\n    const requiredHeader =['Aadhar_Number', 'First_Name', 'Middle_Name', 'Last_Name', 'Date_of_Birth', 'Gender', 'Qualification', 'Passing_year', 'Religion', 'Address_Line_1', 'Village', 'District', 'State', 'Pincode', 'Category', 'Primary_Contact_Number', 'Primary_Mail_ID', 'College_register_no', 'Iti_grade', 'Iti_trade']\r\n    let flag = true\r\n    // var x= requiredHeader.findIndex(element =>{\r\n    //   element == \"Created_by\"\r\n    // })\r\n    // console.log(x)\r\n    // console.log(data[0] )\r\n    requiredHeader.map((element,id) =>{\r\n      // console.log(\"header comparison \",element, \"data : \",data[0][id])\r\n    \r\n      if(flag){\r\n        if(element==data[0][id]){\r\n            if(id+1 == requiredHeader.length)\r\n            {     \r\n              // Activating the upload button\r\n              this.setState({upload_button:false})      \r\n            }\r\n      }\r\n        else{\r\n          flag = false\r\n           \r\n          alert(\"Plese use the correct template for upload.The coloumn in the upload file and sample template does not match.\")\r\n          // Plese use the correct template for upload.\r\n          this.setState({upload_button:true})\r\n          return;\r\n        }\r\n      }\r\n    })\r\n   }\r\n}\r\n// Uploadinh the doumnet\r\n// this.setState({metaData})\r\n async uploadDocuments(){\r\n  let x = 0\r\n  // alert(\"hello\")\r\n  // console.log(UserContext.modelId)\r\n  // console.log(this.state.student_count)\r\n  // console.log(this.state.studentInfo)\r\n  // console.log(this.state.fileName)\r\n    const response = await saveBulkMetaData(this.state.fileName,today,this.state.Selectedoption,this.state.batchName,this.state.batchId,this.state.student_count,\"L\",UserContext.centerName,UserContext.centerId,UserContext.modelId, UserContext.userid,\"under test\").then((jsondata)=>{\r\n      let result = JSON.parse(jsondata.data)\r\n      // console.log(\"Mpdel id : \",result[0].modelId)\r\n      // \r\n      if(result[0].regId ==0){\r\n        alert(\"Data Not saved\")\r\n       // changes\r\n        return;\r\n      }\r\n\r\n      // Changes at 20 october\r\n     else{\r\n      this.state.user_unique_id = result[0].regId\r\n      this.uploadStudentData();\r\n     }\r\n    })\r\n    \r\n  } \r\n async uploadStudentData(){\r\n  let flag = false\r\n  let studentInfo =  this.state.studentInfo\r\n  // console.log(\"Bulk Student data : \",studentInfo)\r\n    for(var i=0;i<this.state.student_count;i++){\r\n        const response1 = await saveBulkStudentData(this.state.user_unique_id,\r\n          studentInfo[i].First_Name || null,\r\n           studentInfo[i].Last_Name || null,\r\n           studentInfo[i].Middle_Name || null,\r\n           studentInfo[i].Date_of_Birth|| null,\r\n           studentInfo[i].Aadhar_Number || null,\r\n           studentInfo[i].Qualification || null,\r\n           studentInfo[i].Passing_year|| null, \r\n           studentInfo[i].Gender || null,\r\n           studentInfo[i].Religion || null,\r\n           studentInfo[i].Category || null,\r\n           studentInfo[i].Primary_Contact_Number || null,\r\n           studentInfo[i].Primary_Mail_ID || null,\r\n           \r\n           studentInfo[i].College_register_no|| null,\r\n           studentInfo[i].Iti_grade || null,\r\n           studentInfo[i].Iti_trade || null,\r\n          \r\n           studentInfo[i].Address_Line_1 || null,\r\n           studentInfo[i].Village || null,\r\n    \r\n           studentInfo[i].District || null,\r\n           studentInfo[i].State || null,\r\n           studentInfo[i].Pincode || null,\r\n         \r\n           today,\r\n           UserContext.userid,\r\n           \"P\",\r\n           \"::\",\r\n           \"::\").then((jsondata)=>{\r\n           let result =JSON.parse(jsondata.data)\r\n          //  console.log(result)\r\n           flag = true\r\n         })\r\n   }\r\n\r\n   \r\n  if(flag == true){\r\n    alert(\"Data Saved Successfully and Registration ID is : \" + this.state.user_unique_id)\r\n  }\r\n  else{\r\n    alert(\"Data Not Saved\")\r\n    return;\r\n  }\r\n}\r\n\r\n// Download file\r\ndownloadFile(){\r\n  // import Student_Template from \"./../assets/document/Student_Template.xlsx\";\r\n  const url = Student_Template1;\r\n  window.open(url);\r\n}\r\n\r\n// Routes Change\r\nrouteChange(){\r\n  this.props.history.push(({ pathname: '/dashboard/History',state: {} }));\r\n \r\n}\r\n\r\n\r\n  render(){\r\n    return(\r\n      <div style={{ width: '100%' }}>\r\n         <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"flex-end\">\r\n             <Button color=\"primary\"  onClick={this.downloadFile.bind(this)}>\r\n               Download template\r\n             </Button>\r\n        </Grid>\r\n        <br/>\r\n      <Grid container>\r\n      <Grid item xs={12}> </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} >Options</InputLabel>\r\n            <SingleSelect\r\n              name=\"Selectedoption\" id=\"Selectedoption\"\r\n              options={this.state.options}\r\n              value={this.state.Selectedoption || ''}\r\n              key={this.state.Selectedoption || ''}\r\n              onChange={this.handleOptionsChange.bind(this, 'Selectedoption')}\r\n              // helperText={this.state.errors.Selectedoption != undefined ? this.state.errors.Selectedoption.label : ''}\r\n              // error={this.state.errors.Selectedoption != undefined ? this.state.errors.Selectedoption.value : ''}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={2}></Grid>\r\n\r\n          <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} >Batches</InputLabel>\r\n            <SingleSelect\r\n              name=\"SelectedBatch\" id=\"SelectedBatch\"\r\n              key={this.state.SelectedBatch || ''}\r\n              options={this.state.batchList}\r\n              value={this.state.SelectedBatch || ''}\r\n              onChange={this.handleBatchChange.bind(this, 'SelectedBatch')}\r\n              disabled={this.state.Selectedoption==\"Mobilization\"?true:false}\r\n              helperText={this.state.errors.SelectedBatch != undefined ? this.state.errors.SelectedBatch.label : ''}\r\n              error={this.state.errors.SelectedBatch != undefined ? this.state.errors.SelectedBatch.value : ''}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <br />\r\n        <Table  aria-label=\"simple table\" style={{ width:\"100%\"}}>\r\n          <TableBody>\r\n          <TableRow>\r\n            <TableCell> \r\n            <Input \r\n               name=\"upload-photo\"\r\n               type=\"file\"\r\n               accept='.xlsx/*, .xls/*'\r\n               onClick={e => {\r\n                (e.target.value = null)\r\n                // setDisabled(true)\r\n              }\r\n               }\r\n               onChange={(e) => {\r\n                \r\n                const file = e.target.files[0];\r\n                var substr1 = file.name.substring(file.name.length-4, file.name.length);\r\n                var substr2 = file.name.substring(file.name.length-3, file.name.length);\r\n                if(substr1== \"xlsx\" || substr2 == \"xls\"){\r\n                  this.readExcel(file); \r\n                }\r\n                else{\r\n                  alert(\"Please Upload Excel file\")\r\n                  return;\r\n                }\r\n               \r\n              }}\r\n              maxFileSize={5000000} filesLimit={1} showFileNames={true}\r\n              />\r\n              <p  style={{color:\"red\"}}>Note-:Please upload Excel file</p>\r\n              <p  style={{color:\"red\"}}>and size should not be greater than 5MB.</p>\r\n            </TableCell>\r\n            </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n            <br /> <br />\r\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\" size=\"small\"  onClick={this.uploadDocuments.bind(this)}\r\n                    disabled={this.state.upload_button}\r\n             >Upload Document</Button>\r\n             </Grid>\r\n             <br />  <br />  <br />\r\n             <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"flex-end\">\r\n             <Button color=\"primary\" onClick={this.routeChange.bind(this)}>\r\n               History Details\r\n               <Route exact path=\"/History\" component={History} />\r\n             </Button>\r\n             </Grid>\r\n\r\n             {/* <Link to={History}>\r\n              History\r\n            </Link> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}