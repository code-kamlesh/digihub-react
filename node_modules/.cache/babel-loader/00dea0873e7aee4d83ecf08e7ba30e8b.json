{"ast":null,"code":"export function calculateBatchFreezeDate(startDate, duration) {\n  var min = Math.ceil(0.1 * (duration / 7));\n\n  if (min >= 10) {\n    min = 10;\n  }\n\n  if (min <= 1) {\n    min = 2;\n  }\n\n  var date = startDate.split(\"-\");\n  var c = new Date(date[0], date[1] - 1, date[2]);\n  c.setDate(c.getDate() + min);\n  startDate = c.getDate() + \"-\" + c.getMonth() + \"-\" + c.getFullYear();\n  var weekendDays = calculateWeekendDays(date[1] + \"-\" + date[2] + \"-\" + date[0], c.getMonth() + \"-\" + c.getDate() + \"-\" + c.getFullYear());\n\n  if (weekendDays != 0) {\n    c.setDate(c.getDate() + weekendDays); //  c.add(new Date(), weekendDays);\n    //  startDate = c.getDate()+\"-\"+c.getMonth()+\"-\"+c.getFullYear()\n  }\n\n  startDate = c.getFullYear() + \"-\" + (c.getMonth() + 1) + \"-\" + c.getDate();\n  return startDate;\n}\nexport function calculateWeekendDays(fromDate, toDate) {\n  var start = new Date(fromDate);\n  var finish = new Date(toDate);\n  var dayMilliseconds = 1000 * 60 * 60 * 24;\n  var weekendDays = 0;\n\n  while (start <= finish) {\n    var day = start.getDay();\n\n    if (day == 0) {\n      weekendDays++;\n    }\n\n    start = new Date(+start + dayMilliseconds);\n  }\n\n  return weekendDays;\n} // Calculate the difference of two dates in total days\n\nexport function diffDays(startDate, endDate) {\n  // Here are the two dates to compare\n  // var date1 = d1;\n  // var date2 = d2;\n  const diffInMs = new Date(endDate) - new Date(startDate);\n  const diffInDays = diffInMs / (1000 * 60 * 60 * 24);\n  console.log(\"=====\" + diffInDays);\n  return diffInDays;\n}","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/util/util.js"],"names":["calculateBatchFreezeDate","startDate","duration","min","Math","ceil","date","split","c","Date","setDate","getDate","getMonth","getFullYear","weekendDays","calculateWeekendDays","fromDate","toDate","start","finish","dayMilliseconds","day","getDay","diffDays","endDate","diffInMs","diffInDays","console","log"],"mappings":"AAAA,OAAO,SAASA,wBAAT,CAAkCC,SAAlC,EAA4CC,QAA5C,EACP;AAEI,MAAIC,GAAG,GAAGC,IAAI,CAACC,IAAL,CAAU,OAAOH,QAAQ,GAAC,CAAhB,CAAV,CAAV;;AACA,MAAIC,GAAG,IAAI,EAAX,EACA;AACIA,IAAAA,GAAG,GAAG,EAAN;AACH;;AACD,MAAGA,GAAG,IAAI,CAAV,EACA;AACIA,IAAAA,GAAG,GAAG,CAAN;AACH;;AAED,MAAIG,IAAI,GAAGL,SAAS,CAACM,KAAV,CAAgB,GAAhB,CAAX;AACA,MAAIC,CAAC,GAAG,IAAIC,IAAJ,CAASH,IAAI,CAAC,CAAD,CAAb,EAAiBA,IAAI,CAAC,CAAD,CAAJ,GAAQ,CAAzB,EAA2BA,IAAI,CAAC,CAAD,CAA/B,CAAR;AACAE,EAAAA,CAAC,CAACE,OAAF,CAAUF,CAAC,CAACG,OAAF,KAAcR,GAAxB;AACAF,EAAAA,SAAS,GAAGO,CAAC,CAACG,OAAF,KAAY,GAAZ,GAAgBH,CAAC,CAACI,QAAF,EAAhB,GAA6B,GAA7B,GAAiCJ,CAAC,CAACK,WAAF,EAA7C;AACA,MAAIC,WAAW,GAACC,oBAAoB,CAACT,IAAI,CAAC,CAAD,CAAJ,GAAQ,GAAR,GAAYA,IAAI,CAAC,CAAD,CAAhB,GAAoB,GAApB,GAAwBA,IAAI,CAAC,CAAD,CAA7B,EAAiCE,CAAC,CAACI,QAAF,KAAa,GAAb,GAAiBJ,CAAC,CAACG,OAAF,EAAjB,GAA6B,GAA7B,GAAiCH,CAAC,CAACK,WAAF,EAAlE,CAApC;;AAEA,MAAGC,WAAW,IAAI,CAAlB,EACA;AACIN,IAAAA,CAAC,CAACE,OAAF,CAAUF,CAAC,CAACG,OAAF,KAAcG,WAAxB,EADJ,CAEE;AACF;AACC;;AACDb,EAAAA,SAAS,GAAGO,CAAC,CAACK,WAAF,KAAgB,GAAhB,IAAqBL,CAAC,CAACI,QAAF,KAAa,CAAlC,IAAqC,GAArC,GAAyCJ,CAAC,CAACG,OAAF,EAArD;AAEA,SAAOV,SAAP;AACH;AAGD,OAAO,SAASc,oBAAT,CAA8BC,QAA9B,EAAwCC,MAAxC,EACP;AAEA,MAAIC,KAAK,GAAG,IAAIT,IAAJ,CAASO,QAAT,CAAZ;AACA,MAAIG,MAAM,GAAG,IAAIV,IAAJ,CAASQ,MAAT,CAAb;AAEA,MAAIG,eAAe,GAAG,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAAvC;AACA,MAAIN,WAAW,GAAG,CAAlB;;AACA,SAAOI,KAAK,IAAIC,MAAhB,EAAwB;AACtB,QAAIE,GAAG,GAAGH,KAAK,CAACI,MAAN,EAAV;;AACA,QAAID,GAAG,IAAI,CAAX,EAAc;AACVP,MAAAA,WAAW;AACd;;AACDI,IAAAA,KAAK,GAAG,IAAIT,IAAJ,CAAS,CAACS,KAAD,GAASE,eAAlB,CAAR;AACD;;AAED,SAAON,WAAP;AACC,C,CAKD;;AACA,OAAO,SAASS,QAAT,CAAkBtB,SAAlB,EAA6BuB,OAA7B,EACP;AACE;AACA;AACA;AAEF,QAAMC,QAAQ,GAAK,IAAIhB,IAAJ,CAASe,OAAT,IAAoB,IAAIf,IAAJ,CAASR,SAAT,CAAvC;AACA,QAAMyB,UAAU,GAAGD,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAA3B;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAQF,UAApB;AAEE,SAAOA,UAAP;AACD","sourcesContent":["export function calculateBatchFreezeDate(startDate,duration) \r\n{\r\n    \r\n    var min = Math.ceil(0.1 * (duration/7));\r\n    if (min >= 10)\r\n    {\r\n        min = 10;\r\n    }\r\n    if(min <= 1)\r\n    {\r\n        min = 2;\r\n    }\r\n\r\n    var date = startDate.split(\"-\");\r\n    var c = new Date(date[0],date[1]-1,date[2]);\r\n    c.setDate(c.getDate() + min);\r\n    startDate = c.getDate()+\"-\"+c.getMonth()+\"-\"+c.getFullYear()\r\n    var weekendDays=calculateWeekendDays(date[1]+\"-\"+date[2]+\"-\"+date[0],c.getMonth()+\"-\"+c.getDate()+\"-\"+c.getFullYear());\r\n\r\n    if(weekendDays != 0)\r\n    {\r\n        c.setDate(c.getDate() + weekendDays);\r\n      //  c.add(new Date(), weekendDays);\r\n    //  startDate = c.getDate()+\"-\"+c.getMonth()+\"-\"+c.getFullYear()\r\n    }\r\n    startDate = c.getFullYear()+\"-\"+(c.getMonth()+1)+\"-\"+c.getDate()\r\n  \r\n    return startDate;\r\n}\r\n\r\n\r\nexport function calculateWeekendDays(fromDate, toDate) \r\n{   \r\n\r\nvar start = new Date(fromDate);\r\nvar finish = new Date(toDate);\r\n\r\nvar dayMilliseconds = 1000 * 60 * 60 * 24;\r\nvar weekendDays = 0;\r\nwhile (start <= finish) {\r\n  var day = start.getDay()\r\n  if (day == 0) {\r\n      weekendDays++;\r\n  }\r\n  start = new Date(+start + dayMilliseconds);\r\n}\r\n\r\nreturn weekendDays;\r\n}\r\n\r\n\r\n\r\n\r\n// Calculate the difference of two dates in total days\r\nexport function diffDays(startDate, endDate)\r\n{\r\n  // Here are the two dates to compare\r\n  // var date1 = d1;\r\n  // var date2 = d2;\r\n\r\nconst diffInMs   = new Date(endDate) - new Date(startDate)\r\nconst diffInDays = diffInMs / (1000 * 60 * 60 * 24);\r\n\r\nconsole.log(\"=====\"+diffInDays);\r\n\r\n  return diffInDays;\r\n}"]},"metadata":{},"sourceType":"module"}