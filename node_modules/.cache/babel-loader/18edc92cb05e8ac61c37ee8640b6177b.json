{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\ForgotPassword.js\";\nimport React, { Component } from 'react';\nimport AlertDialog from '../util/AlertDialog';\nimport { isPasswordsSame, passwordStrength, isNotEmpty } from '../util/validation';\nimport { login, CheckIfUserWithDetailsExists, ResetPasswordWithoutLoggingIn } from '../util/api';\nimport { InputLabel } from '@material-ui/core';\nimport { red } from '@material-ui/core/colors';\nconst alertDialogOptions = {\n  message: ''\n};\nexport default class ForgotPassword extends React.Component {\n  constructor() {\n    super();\n\n    this.validateForm = errors => {\n      this.validate(\"newPassword\", this.state.newPassword);\n      this.validate(\"confirmPassword\", this.state.confirmPassword);\n      let valid = true;\n      Object.values(errors).forEach( // if we have an error string set valid to false\n      val => val.length > 0 && (valid = false));\n      return valid;\n    };\n\n    this.passwordReset = event => {\n      event.preventDefault();\n      this.passwordReset1();\n    };\n\n    this.validate = (name, value) => {\n      let errors = this.state.errors;\n\n      switch (name) {\n        case 'newPassword':\n          errors.newPasswordError = isNotEmpty(value);\n\n          if (!isNotEmpty(value)) {\n            errors.newPasswordError = passwordStrength(value);\n          }\n\n          break;\n\n        case 'confirmPassword':\n          errors.confirmPasswordError = isNotEmpty(value);\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors\n      });\n    };\n\n    this.handleInputPassword = event => {\n      const target = event.target;\n      const value = target.value;\n      const name = target.name;\n      this.validate(name, value);\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleInputConfirmPassword = event => {\n      const target = event.target;\n      const value = target.value;\n      const name = target.name;\n      this.validate(name, value);\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.updatePassword = event => {\n      event.preventDefault(); // this.password();\n\n      let errors = this.state.errors;\n      this.setState({\n        alertDialogFlag: false\n      });\n\n      if (this.validateForm(errors)) {\n        var _this$state, _this$state2;\n\n        if (isPasswordsSame(this === null || this === void 0 ? void 0 : (_this$state = this.state) === null || _this$state === void 0 ? void 0 : _this$state.newPassword, this === null || this === void 0 ? void 0 : (_this$state2 = this.state) === null || _this$state2 === void 0 ? void 0 : _this$state2.confirmPassword)) {\n          ResetPasswordWithoutLoggingIn(this.state.userId_forgetpassword, this.state.newPassword).then(jsondata => {\n            if (jsondata.status === \"success\") {\n              alertDialogOptions.message = /*#__PURE__*/React.createElement(\"span\", {\n                style: {\n                  color: \"green\"\n                },\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 37\n                }\n              }, \"Password Changed Sucessfully\");\n              this.setState({\n                alertDialogFlag: true\n              });\n              window.location.reload();\n            } else {\n              alert(\"New Password Cannot be same as Previous password\");\n            }\n          });\n        } else {\n          alert(\"New and confirm password are not same\");\n        }\n      }\n    };\n\n    this.state = {\n      email: '',\n      userId_forgetpassword: '',\n      password: '',\n      user_name: '',\n      // changes for forget passwprd\n      newPassword: '',\n      confirmPassword: '',\n      errors: {\n        newPasswordError: '',\n        confirmPasswordError: ''\n      }\n    };\n  } //validate form\n\n\n  // \n  handleInputEmailChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.state.email = value; //    this.setState({\n    //        email: value\n    //    })\n  } //\n\n\n  handleInputUser(event) {\n    // console.log(this.state.DOB)\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.state.user_name = value; // console.log(value)\n  } // \n\n\n  passwordReset1() {\n    CheckIfUserWithDetailsExists(this.state.email, this.state.user_name).then(jsondata => {\n      if (jsondata.data !== \"null\") {\n        let res = JSON.parse(jsondata.data); // console.log(res.id)\n        // console.log(res[0].UserId);\n\n        this.setState({\n          userId_forgetpassword: res === null || res === void 0 ? void 0 : res.id\n        }); // this.state.userId_forgetpassword = res[0].UserId\n      } else {\n        alert(\"Invalid Credential\");\n      }\n    });\n  } // validating password\n\n\n  password() {}\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, this.state.userId_forgetpassword === '' && /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.passwordReset,\n      method: \"post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      class: \"legend last\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }\n    }, \"Reset Password\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      class: \"fa fa-envelope-o\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Email\",\n      name: \"email\",\n      maxlength: \"50\",\n      onChange: this.handleInputEmailChange.bind(this),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      class: \"fa fa-key\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"user_name\",\n      name: \"user_name\",\n      onChange: this.handleInputUser.bind(this),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      class: \"btn submit last-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }\n    }, \"Submit\")), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"bottom-text-w3ls\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"bottom-text-w3ls\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"fill_pad4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, \"\\xA0\")), this.state.userId_forgetpassword !== '' && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.updatePassword,\n      method: \"post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      class: \"legend last\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }\n    }, \"Reset Password\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      class: \"fa fa-key\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"New Password\",\n      name: \"newPassword\",\n      error: this.state.errors.newPasswordError == '' ? false : true,\n      maxlength: \"50\",\n      onChange: this.handleInputPassword.bind(this),\n      required: true // helperText={this.state.errors.newPasswordError}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 22\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"red\",\n        fontSize: \"12px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 28\n      }\n    }, this.state.errors.newPasswordError, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      class: \"fa fa-key\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Confirm password\",\n      name: \"confirmPassword\",\n      error: this.state.errors.confirmPasswordError == '' ? false : true,\n      onChange: this.handleInputConfirmPassword.bind(this),\n      required: true // helperText={this.state.errors.confirmPassword}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"red\",\n        fontSize: \"12px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 26\n      }\n    }, this.state.errors.confirmPassword, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      class: \"btn submit last-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }\n    }, \"Reset\")), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"bottom-text-w3ls\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"bottom-text-w3ls\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"fill_pad4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"fill_pad4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"fill_pad4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"fill_pad4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"fill_pad4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"fill_pad4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"fill_pad4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"fill_pad4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"fill_pad4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"fill_pad4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"bottom-text-w3ls\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 21\n      }\n    }, \"\\xA0\")), this.state.alertDialogFlag && /*#__PURE__*/React.createElement(AlertDialog, {\n      message: alertDialogOptions.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 49\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/ForgotPassword.js"],"names":["React","Component","AlertDialog","isPasswordsSame","passwordStrength","isNotEmpty","login","CheckIfUserWithDetailsExists","ResetPasswordWithoutLoggingIn","InputLabel","red","alertDialogOptions","message","ForgotPassword","constructor","validateForm","errors","validate","state","newPassword","confirmPassword","valid","Object","values","forEach","val","length","passwordReset","event","preventDefault","passwordReset1","name","value","newPasswordError","confirmPasswordError","setState","handleInputPassword","target","handleInputConfirmPassword","updatePassword","alertDialogFlag","userId_forgetpassword","then","jsondata","status","color","window","location","reload","alert","email","password","user_name","handleInputEmailChange","handleInputUser","data","res","JSON","parse","id","render","bind","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport AlertDialog from '../util/AlertDialog';\r\nimport { isPasswordsSame,passwordStrength,isNotEmpty} from '../util/validation';\r\nimport {login,CheckIfUserWithDetailsExists,ResetPasswordWithoutLoggingIn} from '../util/api';\r\nimport { InputLabel } from '@material-ui/core';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst alertDialogOptions = {\r\n    message: ''\r\n  }\r\nexport default class ForgotPassword extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            email:'',\r\n            userId_forgetpassword:'',\r\n            password:'', user_name:'', // changes for forget passwprd\r\n            newPassword:'',\r\n            confirmPassword:'',\r\n            \r\n            errors:{newPasswordError:'',confirmPasswordError:''},\r\n        }\r\n    } \r\n//validate form\r\nvalidateForm = (errors) => {\r\n\r\n    this.validate(\"newPassword\",this.state.newPassword);\r\n    this.validate(\"confirmPassword\",this.state.confirmPassword);\r\n    let valid = true;\r\n    Object.values(errors).forEach(\r\n      // if we have an error string set valid to false\r\n      (val) => val.length > 0 && (valid = false)\r\n    );\r\n    return valid;\r\n  }\r\n// \r\nhandleInputEmailChange(event){\r\n    const target = event.target;\r\n    const value =  target.value;\r\n    const name = target.name; \r\n    this.state.email = value;\r\n//    this.setState({\r\n//        email: value\r\n//    })\r\n}\r\n\r\n//\r\nhandleInputUser(event){\r\n    // console.log(this.state.DOB)\r\n    const target = event.target;\r\n    const value =  target.value;\r\n    const name = target.name; \r\n    this.state.user_name = value\r\n    // console.log(value)\r\n}\r\n\r\n// \r\n\r\npasswordReset = (event) => {\r\n    event.preventDefault();\r\n    this.passwordReset1();\r\n}\r\n\r\npasswordReset1(){\r\n    CheckIfUserWithDetailsExists(this.state.email,this.state.user_name).then((jsondata)=>{\r\n        if(jsondata.data !== \"null\"){\r\n        let res = JSON.parse(jsondata.data)\r\n        // console.log(res.id)\r\n\r\n            // console.log(res[0].UserId);\r\n                this.setState({\r\n                    userId_forgetpassword: res?.id\r\n                })\r\n            // this.state.userId_forgetpassword = res[0].UserId\r\n        }\r\n        else{\r\n            alert(\"Invalid Credential\")\r\n        }\r\n    })\r\n    \r\n}\r\n\r\n// validating password\r\n  validate = (name,value)=>{\r\n    let errors = this.state.errors;\r\n    switch (name) {\r\n      case 'newPassword': \r\n      errors.newPasswordError = isNotEmpty(value);\r\n        if(!isNotEmpty(value)){\r\n          errors.newPasswordError=passwordStrength(value);\r\n         }  \r\n      break;\r\n      case 'confirmPassword': errors.confirmPasswordError =  isNotEmpty(value);\r\n        break;\r\n   \r\n      default:\r\n      break;\r\n  }\r\n  this.setState({errors});\r\n}\r\n\r\n    handleInputPassword =(event)=>{\r\n        const target = event.target;\r\n        const value = target.value\r\n        const name = target.name\r\n        this.validate(name,value)\r\n        this.setState({[name]:value });\r\n       \r\n    }  \r\n    handleInputConfirmPassword=(event)=>{\r\n        const target = event.target;\r\n        const value = target.value\r\n        const name = target.name\r\n       \r\n        this.validate(name,value)\r\n        this.setState({[name]: value });\r\n       \r\n    }\r\n    // update password\r\n    updatePassword = (event)=>{\r\n    event.preventDefault();\r\n    // this.password();\r\n    let errors = this.state.errors;\r\n    this.setState({ alertDialogFlag: false });\r\n    if(this.validateForm(errors)){\r\n    if (isPasswordsSame(this?.state?.newPassword, this?.state?.confirmPassword)) {\r\n        ResetPasswordWithoutLoggingIn(this.state.userId_forgetpassword, this.state.newPassword).then((jsondata) => {\r\n        if(jsondata.status === \"success\"){\r\n        alertDialogOptions.message =<span style={{color:\"green\"}}>Password Changed Sucessfully</span>;\r\n        this.setState({ alertDialogFlag: true });\r\n        window.location.reload();\r\n        }\r\n        else{\r\n            alert(\"New Password Cannot be same as Previous password\")\r\n        }\r\n      });\r\n    }\r\n    else{\r\n        alert(\"New and confirm password are not same\")\r\n    }   \r\n} \r\n    }\r\n\r\n    password(){\r\n   \r\n}\r\n    render(){\r\n        return(\r\n            <div>\r\n            {this.state.userId_forgetpassword === '' && (\r\n\r\n                <form onSubmit={this.passwordReset} method=\"post\">\r\n                    <h3 class=\"legend last\">Reset Password</h3>\r\n                    <div class=\"input\">\r\n                        <span class=\"fa fa-envelope-o\" aria-hidden=\"true\"></span>\r\n                        <input type=\"text\" placeholder=\"Email\" name=\"email\"  maxlength=\"50\" onChange={this.handleInputEmailChange.bind(this)} required />\r\n                    </div>\r\n                    <div class=\"input\">\r\n                        <span class=\"fa fa-key\" aria-hidden=\"true\"></span>\r\n                        <input type=\"text\" placeholder=\"user_name\" name=\"user_name\"  onChange={this.handleInputUser.bind(this)} required />\r\n                    </div>\r\n                   \r\n                    <div>\r\n                    <button type=\"submit\" class=\"btn submit last-btn\">Submit</button>\r\n                    </div>\r\n                    <div class=\"bottom-text-w3ls\">&nbsp;</div>\r\n                    <div class=\"bottom-text-w3ls\">&nbsp;</div>\r\n                   \r\n                    <div class=\"fill_pad4\">&nbsp;</div> \r\n                    \r\n                </form> )}\r\n            { this.state.userId_forgetpassword !== '' &&\r\n            (\r\n                <div>\r\n                 <form onSubmit={this.updatePassword} method=\"post\">\r\n                    <h3 class=\"legend last\">Reset Password</h3>\r\n                    <div class=\"input\">\r\n                        <span class=\"fa fa-key\" aria-hidden=\"true\"></span>\r\n                        <input type=\"password\" placeholder=\"New Password\" name=\"newPassword\" \r\n                        error={this.state.errors.newPasswordError==''?false:true}\r\n                        maxlength=\"50\" onChange={this.handleInputPassword.bind(this)} required \r\n                        // helperText={this.state.errors.newPasswordError}\r\n                    />\r\n                    </div>\r\n                     <div> <p  style={{color:\"red\",  fontSize:\"12px\"}}>{this.state.errors.newPasswordError} </p></div>\r\n                    <div class=\"input\">\r\n                        <span class=\"fa fa-key\" aria-hidden=\"true\"></span>\r\n                        <input type=\"password\"   placeholder=\"Confirm password\" name=\"confirmPassword\"  \r\n                        error={this.state.errors.confirmPasswordError==''?false:true}\r\n                        onChange={this.handleInputConfirmPassword.bind(this)} required \r\n                        // helperText={this.state.errors.confirmPassword}\r\n                        />\r\n                        \r\n                    </div>\r\n                    <div><p  style={{color:\"red\" , fontSize:\"12px\"}}>{this.state.errors.confirmPassword} </p></div>\r\n                    <div>\r\n                    <button type=\"submit\" class=\"btn submit last-btn\">Reset</button>\r\n                    </div>\r\n                    <div class=\"bottom-text-w3ls\">&nbsp;</div>\r\n                    <div class=\"bottom-text-w3ls\">&nbsp;</div>\r\n                    \r\n                    <div class=\"fill_pad4\">&nbsp;</div>\r\n                    <div class=\"fill_pad4\">&nbsp;</div> \r\n                    <div class=\"fill_pad4\">&nbsp;</div> \r\n                    \r\n                    <div class=\"fill_pad4\">&nbsp;</div> \r\n                    <div class=\"fill_pad4\">&nbsp;</div>\r\n                    <div class=\"fill_pad4\">&nbsp;</div> \r\n                    <div class=\"fill_pad4\">&nbsp;</div> \r\n                    <div class=\"fill_pad4\">&nbsp;</div>\r\n                    <div class=\"fill_pad4\">&nbsp;</div> \r\n                    <div class=\"fill_pad4\">&nbsp;</div>  \r\n                    <div class=\"bottom-text-w3ls\">&nbsp;</div>\r\n                </form>\r\n\r\n                {\r\n                (this.state.alertDialogFlag) && <AlertDialog message={alertDialogOptions.message}></AlertDialog>\r\n                }\r\n            </div>\r\n            \r\n            )}\r\n         </div>  \r\n        )\r\n    }\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}