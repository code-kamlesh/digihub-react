{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\StudentMigration.js\";\nimport React, { Component } from 'react';\nimport UserContext from '../components/GolbalContext';\nimport { SingleSelect } from \"react-select-material-ui\";\nimport { Checkbox, InputLabel, Input, Grid, Button } from '@material-ui/core';\nimport { fetchAllStateDetails, fetchCenterByStateName, fetchStudentDataOfVirtualCenter, fetchAddressBaiedOnIdAndState, updateStudentData } from './../util/api';\nimport MUIDataTable from \"mui-datatables\";\nimport { forEach } from 'underscore';\nimport { serviceEndPoint } from './../util/serviceEndPoint';\nimport { isSessionValid, isTokenValid } from './../util/session.js';\nimport { regenerateToken } from './../util/validation';\nexport default class StudentMigration extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      channelCreation: \"\",\n      statelist: [],\n      centerList: [],\n      Selectedstate: \"\",\n      selectedCenterId: \"\",\n      studentInfo: [],\n      selectedIndex: [],\n      updateStudentData: [] // studentsToDisplay: [],\n      // engDetailsTable: [],\n      // engMasterTable: [],\n\n    }; // this.handleStateChange = this.handleStateChange.bind(this);\n    // this.saveStudentDetails = this.saveStudentDetails.bind(this);\n    // this.discardUnwantedList = this.discardUnwantedList.bind(this);\n\n    fetchAllStateDetails().then(jsondata => {\n      let res = JSON.parse(jsondata.data);\n      console.log(res);\n      res.forEach(element => {\n        this.state.statelist.push({\n          'value': element.name,\n          'label': element.name\n        });\n      });\n    });\n  } // Dropdown for state\n\n\n  handleStateChange(selectname, event) {\n    this.setState({\n      studentInfo: [],\n      updateStudentData: [],\n      centerList: [],\n      selectedCenterId: ''\n    });\n    const state = event;\n    this.setState({\n      selectedstate: state\n    });\n    fetchCenterByStateName(event).then(jsondata => {\n      let result = JSON.parse(jsondata.data);\n      var center = result.filter(key => key.isActive == \"Y\"); // console.log(center)\n\n      center.forEach(element => {\n        this.state.centerList.push({\n          \"value\": element.id,\n          \"label\": element.name\n        });\n      });\n    });\n  } // center List handler\n\n\n  handleCenterChange(selectname, event) {\n    this.setState({\n      studentInfo: [],\n      updateStudentData: []\n    });\n    this.setState({\n      selectedCenterId: event\n    });\n    this.setStudentData(); // fetchVirtualData(3049,\"Karnataka\",\"SR-STRIVE\").then((jsondata)=>{\n    //   let result = JSON.parse(jsondata.data)\n    //   this.setState({studentInfo: result})\n    // })\n  }\n\n  setStudentData() {\n    fetchStudentDataOfVirtualCenter(\"3049\").then(jsondata => {\n      let result = JSON.parse(jsondata.data);\n      let data = result.filter(key => key.creationChannel == \"SR-STRIVE\"); // console.log(data)\n\n      for (var i = 0; i < data.length; i++) {\n        fetchAddressBaiedOnIdAndState(data[i].dbUserId, \"P\", \"Karnataka\").then(jsondata => {\n          let res = JSON.parse(jsondata.data);\n          console.log(res);\n          this.setState({ ...data,\n            data\n          });\n        });\n      }\n\n      this.setState({\n        studentInfo: data\n      });\n    });\n  }\n\n  savingStudentdata() {\n    console.log(this.state.selectedIndex[0].dataIndex);\n\n    for (var i = 0; i < this.state.selectedIndex.length; i++) {\n      var data = this.state.studentInfo[this.state.selectedIndex[i].dataIndex];\n      console.log(data);\n      this.state.updateStudentData.push({ ...updateStudentData,\n        \"engagementId\": data.EngagementId,\n        \"name\": data.Name,\n        \"centerId\": this.state.selectedCenterId\n      });\n    }\n\n    console.log(this.state.updateStudentData);\n  }\n\n  render() {\n    console.log(this.state.selectedIndex.length);\n    const columns = [{\n      label: 'Engagement Id',\n      name: 'engagementId',\n      options: {\n        sortDirection: 'desc'\n      },\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, // {label: 'Name', name: 'first_name',options : {    // not showing the value on fromt end\n    //   sortDirection : 'desc',display: false\n    // },headerStyle: {color:'#FF9800'}},\n    {\n      label: 'Name',\n      name: 'firstName',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Date Of Birth',\n      name: 'dob',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Contact Number',\n      name: 'PrimaryContactNumber',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'City',\n      name: 'PermCityName',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Pin code',\n      name: 'PermPincode',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }];\n    const options = {\n      selectableRows: 'multiple',\n      filterType: \"dropdown\",\n      responsive: \"stacked\",\n      sortDirection: \"desc\",\n      disableToolbarSelect: true,\n      rowsPerPage: 15,\n      selectableRowsOnClick: true,\n      onRowsSelect: (curRowSelected, allRowsSelected) => {\n        console.log(\"---RowSelect\");\n        console.log(\"Row Selected: \", curRowSelected);\n        console.log(\"All Selected: \", allRowsSelected);\n        this.setState({\n          selectedIndex: allRowsSelected\n        }); // console.log(this.state.selectedIndex)\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, \"State\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"Selectedstate\",\n      id: \"Selectedstate\" //   key={this.state.Selectedstate || ''}\n      ,\n      options: this.state.statelist,\n      value: this.state.Selectedstate || '',\n      onChange: this.handleStateChange.bind(this, 'Selectedstate') //   helperText={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.label : ''}\n      //   error={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.value : ''}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"selectedcenter\",\n      id: \"centerId\",\n      options: this.state.centerList,\n      value: this.state.selectedcenter || '',\n      onChange: this.handleCenterChange.bind(this, 'Selectedstate'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MUIDataTable, {\n      title: \"Students\",\n      label: \"List of Students\",\n      data: this.state.studentInfo,\n      columns: columns,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"large\",\n      disabled: this.state.selectedIndex.length <= 0,\n      onClick: () => this.savingStudentdata(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    }, \"Move\")));\n  }\n\n}","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/StudentMigration.js"],"names":["React","Component","UserContext","SingleSelect","Checkbox","InputLabel","Input","Grid","Button","fetchAllStateDetails","fetchCenterByStateName","fetchStudentDataOfVirtualCenter","fetchAddressBaiedOnIdAndState","updateStudentData","MUIDataTable","forEach","serviceEndPoint","isSessionValid","isTokenValid","regenerateToken","StudentMigration","constructor","props","state","channelCreation","statelist","centerList","Selectedstate","selectedCenterId","studentInfo","selectedIndex","then","jsondata","res","JSON","parse","data","console","log","element","push","name","handleStateChange","selectname","event","setState","selectedstate","result","center","filter","key","isActive","id","handleCenterChange","setStudentData","creationChannel","i","length","dbUserId","savingStudentdata","dataIndex","EngagementId","Name","render","columns","label","options","sortDirection","headerStyle","color","selectableRows","filterType","responsive","disableToolbarSelect","rowsPerPage","selectableRowsOnClick","onRowsSelect","curRowSelected","allRowsSelected","width","bind","selectedcenter"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport UserContext from '../components/GolbalContext'\r\nimport { SingleSelect } from \"react-select-material-ui\";\r\nimport { Checkbox, InputLabel, Input, Grid, Button } from '@material-ui/core';\r\nimport { fetchAllStateDetails, fetchCenterByStateName, fetchStudentDataOfVirtualCenter, fetchAddressBaiedOnIdAndState, updateStudentData } from './../util/api';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { forEach } from 'underscore';\r\nimport { serviceEndPoint } from './../util/serviceEndPoint';\r\nimport { isSessionValid, isTokenValid } from './../util/session.js';\r\nimport { regenerateToken } from './../util/validation';\r\n\r\n\r\nexport default class StudentMigration extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      channelCreation: \"\",\r\n      statelist: [],\r\n      centerList: [],\r\n      Selectedstate: \"\",\r\n      selectedCenterId: \"\",\r\n      studentInfo: [],\r\n      selectedIndex:[],\r\n      updateStudentData:[],\r\n      // studentsToDisplay: [],\r\n      // engDetailsTable: [],\r\n      // engMasterTable: [],\r\n    }\r\n    // this.handleStateChange = this.handleStateChange.bind(this);\r\n    // this.saveStudentDetails = this.saveStudentDetails.bind(this);\r\n    // this.discardUnwantedList = this.discardUnwantedList.bind(this);\r\n    fetchAllStateDetails().then((jsondata) => {\r\n      let res = JSON.parse(jsondata.data)\r\n      console.log(res)\r\n      res.forEach(element => {\r\n        this.state.statelist.push({\r\n          'value': element.name,\r\n          'label': element.name,\r\n        })\r\n      });\r\n    })\r\n  }\r\n\r\n  // Dropdown for state\r\n  handleStateChange(selectname, event) {\r\n    this.setState({studentInfo:[], updateStudentData:[],centerList:[], selectedCenterId:''})\r\n    const state = event\r\n    this.setState({ selectedstate: state })\r\n    fetchCenterByStateName(event).then((jsondata) => {\r\n      let result = JSON.parse(jsondata.data)\r\n      var center = result.filter((key) => key.isActive == \"Y\")\r\n      // console.log(center)\r\n      center.forEach(element => {\r\n        this.state.centerList.push({\r\n          \"value\": element.id,\r\n          \"label\": element.name\r\n        })\r\n      })\r\n    })\r\n  }\r\n  // center List handler\r\n  handleCenterChange(selectname, event) {\r\n    this.setState({studentInfo:[], updateStudentData:[]})\r\n    this.setState({ selectedCenterId: event })\r\n    this.setStudentData();\r\n    // fetchVirtualData(3049,\"Karnataka\",\"SR-STRIVE\").then((jsondata)=>{\r\n    //   let result = JSON.parse(jsondata.data)\r\n    //   this.setState({studentInfo: result})\r\n    // })\r\n  }\r\n  setStudentData(){\r\n    fetchStudentDataOfVirtualCenter(\"3049\").then((jsondata)=>{\r\n      let result = JSON.parse(jsondata.data)\r\n      let data = result.filter(key=>key.creationChannel==\"SR-STRIVE\")\r\n      // console.log(data)\r\n      for(var i=0;i<data.length;i++){\r\n        fetchAddressBaiedOnIdAndState(data[i].dbUserId,\"P\",\"Karnataka\").then((jsondata)=>{\r\n          let res = JSON.parse(jsondata.data)\r\n          console.log(res)\r\n          this.setState({\r\n            ...data,\r\n            data\r\n          })\r\n        })\r\n      }\r\n      this.setState({studentInfo: data})\r\n    })\r\n  }\r\n  savingStudentdata(){\r\n    console.log(this.state.selectedIndex[0].dataIndex)\r\n    for(var i=0;i<this.state.selectedIndex.length;i++){\r\n      var data =this.state.studentInfo[this.state.selectedIndex[i].dataIndex]\r\n      console.log(data)\r\n      \r\n       this.state.updateStudentData.push({\r\n         ...updateStudentData,\r\n          \"engagementId\":data.EngagementId,\r\n          \"name\": data.Name,\r\n          \"centerId\": this.state.selectedCenterId\r\n        })\r\n      \r\n    }\r\n    console.log(this.state.updateStudentData)\r\n    \r\n  }\r\n\r\n\r\n\r\n      \r\n  render() {\r\n    console.log(this.state.selectedIndex.length)\r\n    const columns = [\r\n      {\r\n        label: 'Engagement Id', name: 'engagementId', options: {\r\n          sortDirection: 'desc'\r\n        }, headerStyle: { color: '#FF9800' }\r\n      },\r\n      // {label: 'Name', name: 'first_name',options : {    // not showing the value on fromt end\r\n      //   sortDirection : 'desc',display: false\r\n      // },headerStyle: {color:'#FF9800'}},\r\n      { label: 'Name', name: 'firstName', headerStyle: { color: '#FF9800' } },\r\n      { label: 'Date Of Birth', name: 'dob', headerStyle: { color: '#FF9800' } },\r\n      { label: 'Contact Number', name: 'PrimaryContactNumber', headerStyle: { color: '#FF9800' } },\r\n      { label: 'City', name: 'PermCityName', headerStyle: { color: '#FF9800' } },\r\n      { label: 'Pin code', name: 'PermPincode', headerStyle: { color: '#FF9800' } },\r\n      \r\n    ]\r\n    \r\n    const options = {\r\n    \r\n      selectableRows: 'multiple',\r\n    \r\n      filterType: \"dropdown\",\r\n      responsive: \"stacked\",\r\n      sortDirection: \"desc\",\r\n      disableToolbarSelect: true,\r\n      rowsPerPage: 15,\r\n      selectableRowsOnClick: true,\r\n          \r\n          onRowsSelect: (curRowSelected, allRowsSelected) => {\r\n            console.log(\"---RowSelect\")\r\n            console.log(\"Row Selected: \", curRowSelected);\r\n            console.log(\"All Selected: \", allRowsSelected);\r\n            this.setState({selectedIndex:allRowsSelected })\r\n            // console.log(this.state.selectedIndex)\r\n          }\r\n    };\r\n    return (\r\n      <div style={{ width: '100%' }}>\r\n        <Grid container>\r\n          <Grid item xs={12}> </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} >State</InputLabel>\r\n            <SingleSelect\r\n              name=\"Selectedstate\" id=\"Selectedstate\"\r\n              //   key={this.state.Selectedstate || ''}\r\n              options={this.state.statelist}\r\n              value={this.state.Selectedstate || ''}\r\n              onChange={this.handleStateChange.bind(this, 'Selectedstate')}\r\n            //   helperText={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.label : ''}\r\n            //   error={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.value : ''}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}></Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <SingleSelect\r\n              name=\"selectedcenter\" id=\"centerId\"\r\n              options={this.state.centerList}\r\n              value={this.state.selectedcenter || ''}\r\n              onChange={this.handleCenterChange.bind(this, 'Selectedstate')}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <br /> <br />\r\n        <br />\r\n        <Grid>\r\n          <MUIDataTable title={\"Students\"} label={\"List of Students\"} data={this.state.studentInfo}\r\n            columns={columns} options={options}\r\n          />\r\n        </Grid>\r\n        < br/>\r\n        <Grid>\r\n            <Button variant=\"contained\" color=\"primary\" size=\"large\" disabled={this.state.selectedIndex.length<=0}\r\n            onClick={()=>this.savingStudentdata()}>\r\n              Move\r\n           </Button>\r\n        </Grid>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}