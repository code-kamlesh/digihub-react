{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\StudentMigration.js\";\nimport React, { Component } from 'react';\nimport UserContext from '../components/GolbalContext';\nimport { SingleSelect } from \"react-select-material-ui\";\nimport { Checkbox, InputLabel, Input, Grid, Button } from '@material-ui/core';\nimport { fetchAllStateDetails, fetchStudentDetailsBaisedOnChannel, fetchVirtualData, fetchStudentDetailsByEngagementId, updateStudentData } from './../util/api';\nimport MUIDataTable from \"mui-datatables\";\nimport { forEach } from 'underscore';\nimport { serviceEndPoint } from './../util/serviceEndPoint';\nimport { isSessionValid, isTokenValid } from './../util/session.js';\nimport { regenerateToken } from './../util/validation';\nconst columns = [{\n  label: 'Engagement Id',\n  name: 'EngagementId',\n  options: {\n    sortDirection: 'desc'\n  },\n  headerStyle: {\n    color: '#FF9800'\n  }\n}, // {label: 'Name', name: 'first_name',options : {    // not showing the value on fromt end\n//   sortDirection : 'desc',display: false\n// },headerStyle: {color:'#FF9800'}},\n{\n  label: 'Name',\n  name: 'Name',\n  headerStyle: {\n    color: '#FF9800'\n  }\n}, {\n  label: 'Date Of Birth',\n  name: 'Dob',\n  headerStyle: {\n    color: '#FF9800'\n  }\n}, {\n  label: 'Contact Number',\n  name: 'PrimaryContactNumber',\n  headerStyle: {\n    color: '#FF9800'\n  }\n}, {\n  label: 'Address',\n  name: 'PermAddressLine1',\n  headerStyle: {\n    color: '#FF9800'\n  }\n}, {\n  label: 'City',\n  name: 'PermCityName',\n  headerStyle: {\n    color: '#FF9800'\n  }\n}, {\n  label: 'Pin code',\n  name: 'PermPincode',\n  headerStyle: {\n    color: '#FF9800'\n  }\n}, {\n  label: 'Action',\n  name: 'Action',\n  headerStyle: {\n    color: '#FF9800'\n  }\n}];\nconst options = {\n  selectableRows: 'single',\n  filterType: \"dropdown\",\n  responsive: \"stacked\",\n  sortDirection: \"desc\",\n  disableToolbarSelect: true,\n  rowsPerPage: 10,\n  selectableRowsOnClick: true //     rowsSelected : this.state.selectedIndex,\n  //     onRowsSelect: (allRows) => {\n  //         let rows = this.state.selectedIndex;\n  //         rows[0] = allRows[0].dataIndex;\n  //         this.setState({\n  //           rowsSelected : this.state.info[allRows[0].dataIndex],\n  //           selectedIndex : rows,\n  //           name:this.state.info[allRows[0].dataIndex].name\n  //         }) // this is the row in your data source       \n  //    },\n\n};\nexport default class StudentMigration extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleStateChange = e => {\n      console.log(e);\n    };\n\n    this.state = {\n      channelCreation: \"\",\n      statelist: [],\n      Selectedstate: \"\",\n      studentInfo: [],\n      studentsToDisplay: [],\n      engDetailsTable: [],\n      engMasterTable: []\n    };\n    this.handleStateChange = this.handleStateChange.bind(this);\n    this.saveStudentDetails = this.saveStudentDetails.bind(this);\n    this.discardUnwantedList = this.discardUnwantedList.bind(this);\n    fetchAllStateDetails().then(jsondata => {\n      let res = JSON.parse(jsondata.data);\n      console.log(res);\n      res.forEach(element => {\n        this.state.statelist.push({\n          'value': element.name,\n          'label': element.name\n        });\n      });\n    });\n  } // Dropdown for state\n\n\n  //saving table data in student_details_table\n  saveStudentDetails(engId) {\n    let index = this.state.studentInfo.findIndex(data => data.EngagementId == engId);\n    let studentToBeUpdated = this.state.studentInfo[index];\n    console.log(studentToBeUpdated);\n    fetchStudentDetailsByEngagementId(engId).then(jsondata => {\n      let res = JSON.parse(jsondata.data);\n      console.log(res[0]);\n\n      if (res[0].centerId == 3049) {\n        updateStudentData(res[0].engagementId, res[0].dbUserId, UserContext.centerId, res[0].createdBy, res[0].updatedBy, \"Updated center from Virtual\", res[0].status, 0, \"\").then(jsondata => {\n          let savedData = JSON.parse(jsondata.data);\n\n          if (savedData[0].engagementId == res[0].engagementId && savedData[0].centerId != '3049') {\n            alert(\"Student successfully migrated to !\" + UserContext.centerName);\n          }\n        });\n      } else {\n        alert('Student is already assigned to some other Center');\n      }\n    });\n  } // remove unwanted table data \n\n\n  async discardUnwantedList(master) {\n    var dataToBeDisplayed = [];\n    var studentDetails = [];\n    console.log('Checkpoint 1');\n    await master.map((data, id) => {\n      console.log('Checkpoint 2');\n      fetchStudentDetailsByEngagementId(data.EngagementId).then(jsondata => {\n        console.log('Checkpoint 2.5');\n        let result = JSON.parse(jsondata.data);\n\n        if (result[0].centerId == '3049') {\n          console.log(\"data to be saved ===> \", data);\n          var details = {\n            \"EngagementId\": data.EngagementId,\n            \"Name\": data.Name,\n            \"Dob\": data.Dob,\n            \"PrimaryContactNumber\": data.PrimaryContactNumber,\n            \"PermAddressLine1\": data.PermAddressLine1,\n            \"PermCityName\": data.PermCityName,\n            \"PermPincode\": data.PermPincode,\n            \"Action\": /*#__PURE__*/React.createElement(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: () => this.saveStudentDetails(data.EngagementId),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 42\n              }\n            }, \"Save\")\n          };\n          dataToBeDisplayed.push(details); // this.state.studentInfo.push(details);\n        } else {\n          console.log(\"this data is to be deleted ===> \", data);\n          studentDetails.push(result[0]); // this.state.engDetailsTable.push(data)\n        }\n      });\n    });\n    this.setState({\n      studentInfo: dataToBeDisplayed,\n      studentsToDisplay: dataToBeDisplayed\n    });\n    console.log(this.state);\n    console.log('Checkpoint 3');\n  } //Getting the info of the table data\n\n\n  getDetails() {\n    var engMasterTable = [];\n    var virtualData = [];\n    var dataToBeDisplayed = [];\n    fetchVirtualData(\"3049\", this.state.Selectedstate).then(jsondata => {\n      console.log('Checkpoint 0.5');\n      let res = JSON.parse(jsondata.data);\n      engMasterTable = res;\n      this.setState({\n        engMasterTable: res\n      });\n      console.log(\"master table ===> \", engMasterTable);\n      this.discardUnwantedList(engMasterTable); //  const x = async ()=>{\n      //   console.log(\"hello\")\n      //   const wait = await this.discardUnwantedList(engMasterTable);\n      // }\n\n      res.map((data, id) => {\n        //   fetchStudentDetailsByEngagementId(data.EngagementId).then((jsondata)=>{\n        console.log('Checkpoint 0.75'); //       let result = JSON.parse(jsondata.data);  \n        //       // console.log(result)\n        //       this.state.engDetailsTable.push(result[0]);\n        //       if(result[0].centerId=='3049'){\n        //         var details =\n        //           {\n        //               \"EngagementId\": data.EngagementId,\n        //               \"Name\": data.Name ,\n        //               \"Dob\": data.Dob ,\n        //               \"PrimaryContactNumber\": data.PrimaryContactNumber ,\n        //               \"PermAddressLine1\": data.PermAddressLine1 ,\n        //               \"PermCityName\": data.PermCityName ,\n        //               \"PermPincode\": data.PermPincode ,\n        //               \"Action\":<Button variant=\"contained\" color=\"primary\" onClick={ () => this.saveStudentDetails(data.EngagementId) }>Save</Button>\n        //           }\n        //         dataToBeDisplayed.push(details);\n        //         this.state.engDetailsTable.push( details );\n        //       }\n        // })\n\n        var details = {\n          \"EngagementId\": data.EngagementId,\n          \"Name\": data.Name,\n          \"Dob\": data.Dob,\n          \"PrimaryContactNumber\": data.PrimaryContactNumber,\n          \"PermAddressLine1\": data.PermAddressLine1,\n          \"PermCityName\": data.PermCityName,\n          \"PermPincode\": data.PermPincode,\n          \"Action\": /*#__PURE__*/React.createElement(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: () => this.saveStudentDetails(data.EngagementId),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 36\n            }\n          }, \"Save\")\n        };\n        virtualData.push(details); // this.discardUnwantedList(virtualData)\n      }); // console.log(\" details table ===> \",engDetailsTable)\n      // console.log(\"data to display ===> \"+dataToBeDisplayed)\n      // this.setState({ engDetailsTable,\n      //                 studentInfo: dataToBeDisplayed })\n\n      console.log('Checkpoint 0.9'); // this.discardUnwantedList(engMasterTable);\n\n      this.setState({\n        studentInfo: virtualData\n      });\n    }); // this.discardUnwantedList(engMasterTable, engDetailsTable);\n    // console.log(this.state)\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }\n    }, \"State\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"Selectedstate\",\n      id: \"Selectedstate\" //   key={this.state.Selectedstate || ''}\n      ,\n      options: this.state.statelist,\n      value: this.state.Selectedstate || '',\n      onChange: () => handleStateChange //   helperText={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.label : ''}\n      //   error={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.value : ''}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      variant: \"contained\",\n      onClick: this.getDetails.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }\n    }, \"Get Details\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MUIDataTable, {\n      title: \"Students\",\n      label: \"List of Students\",\n      data: this.state.studentInfo,\n      columns: columns,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/StudentMigration.js"],"names":["React","Component","UserContext","SingleSelect","Checkbox","InputLabel","Input","Grid","Button","fetchAllStateDetails","fetchStudentDetailsBaisedOnChannel","fetchVirtualData","fetchStudentDetailsByEngagementId","updateStudentData","MUIDataTable","forEach","serviceEndPoint","isSessionValid","isTokenValid","regenerateToken","columns","label","name","options","sortDirection","headerStyle","color","selectableRows","filterType","responsive","disableToolbarSelect","rowsPerPage","selectableRowsOnClick","StudentMigration","constructor","props","handleStateChange","e","console","log","state","channelCreation","statelist","Selectedstate","studentInfo","studentsToDisplay","engDetailsTable","engMasterTable","bind","saveStudentDetails","discardUnwantedList","then","jsondata","res","JSON","parse","data","element","push","engId","index","findIndex","EngagementId","studentToBeUpdated","centerId","engagementId","dbUserId","createdBy","updatedBy","status","savedData","alert","centerName","master","dataToBeDisplayed","studentDetails","map","id","result","details","Name","Dob","PrimaryContactNumber","PermAddressLine1","PermCityName","PermPincode","setState","getDetails","virtualData","render","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport UserContext from '../components/GolbalContext'\r\nimport { SingleSelect } from \"react-select-material-ui\";\r\nimport { Checkbox, InputLabel, Input, Grid, Button } from '@material-ui/core';\r\nimport {fetchAllStateDetails,fetchStudentDetailsBaisedOnChannel,fetchVirtualData, fetchStudentDetailsByEngagementId, updateStudentData} from './../util/api';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { forEach } from 'underscore';\r\nimport { serviceEndPoint } from './../util/serviceEndPoint';\r\nimport {isSessionValid, isTokenValid} from './../util/session.js';\r\nimport { regenerateToken } from './../util/validation';\r\n\r\nconst columns = [\r\n{label: 'Engagement Id', name: 'EngagementId',options : {\r\n  sortDirection : 'desc'\r\n},headerStyle: {color:'#FF9800'}},\r\n// {label: 'Name', name: 'first_name',options : {    // not showing the value on fromt end\r\n//   sortDirection : 'desc',display: false\r\n// },headerStyle: {color:'#FF9800'}},\r\n{label: 'Name', name: 'Name',headerStyle: {color:'#FF9800'}},\r\n{label: 'Date Of Birth', name: 'Dob',headerStyle: {color:'#FF9800'}},\r\n{label: 'Contact Number', name: 'PrimaryContactNumber',headerStyle: {color:'#FF9800'}},\r\n{label: 'Address', name: 'PermAddressLine1',headerStyle: {color:'#FF9800'}},\r\n{label: 'City', name: 'PermCityName',headerStyle: {color:'#FF9800'}},\r\n{label: 'Pin code', name: 'PermPincode',headerStyle: {color:'#FF9800'}},\r\n{label: 'Action', name: 'Action',headerStyle: {color:'#FF9800'}}\r\n]\r\n\r\nconst options = {\r\n      \r\n    selectableRows : 'single',\r\n  \r\n    filterType: \"dropdown\",\r\n    responsive: \"stacked\",\r\n    sortDirection: \"desc\",\r\n    disableToolbarSelect:true,\r\n    rowsPerPage:10,\r\n    selectableRowsOnClick: true,\r\n//     rowsSelected : this.state.selectedIndex,\r\n//     onRowsSelect: (allRows) => {\r\n//         let rows = this.state.selectedIndex;\r\n//         rows[0] = allRows[0].dataIndex;\r\n//         this.setState({\r\n//           rowsSelected : this.state.info[allRows[0].dataIndex],\r\n//           selectedIndex : rows,\r\n//           name:this.state.info[allRows[0].dataIndex].name\r\n//         }) // this is the row in your data source       \r\n//    },\r\n  };\r\nexport default class StudentMigration extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n           channelCreation:\"\",\r\n           statelist:[],\r\n           Selectedstate:\"\",\r\n           studentInfo:[],\r\n           studentsToDisplay:[],\r\n           engDetailsTable: [],\r\n           engMasterTable: [],\r\n        }\r\n        this.handleStateChange = this.handleStateChange.bind(this);\r\n        this.saveStudentDetails = this.saveStudentDetails.bind(this);\r\n        this.discardUnwantedList = this.discardUnwantedList.bind(this);\r\n       fetchAllStateDetails().then((jsondata)=>{\r\n                let res = JSON.parse(jsondata.data)\r\n                console.log(res)\r\n                res.forEach(element => {\r\n                    this.state.statelist.push({\r\n                        'value':element.name,\r\n                        'label':element.name,\r\n                    })\r\n                });\r\n            })\r\n    }\r\n\r\n    // Dropdown for state\r\n    handleStateChange =(e)=>{\r\n      console.log(e)\r\n    }\r\n\r\n    //saving table data in student_details_table\r\n    saveStudentDetails (engId) {\r\n        let index = this.state.studentInfo.findIndex((data)=> data.EngagementId == engId);\r\n        let studentToBeUpdated = this.state.studentInfo[index];\r\n        console.log(studentToBeUpdated)\r\n        fetchStudentDetailsByEngagementId(engId).then((jsondata)=>{\r\n            let res = JSON.parse(jsondata.data);\r\n            console.log(res[0])  \r\n            if(res[0].centerId==3049){\r\n              updateStudentData(res[0].engagementId, res[0].dbUserId, UserContext.centerId, res[0].createdBy, res[0].updatedBy, \"Updated center from Virtual\", res[0].status, 0, \"\").then((jsondata)=>{\r\n                    let savedData = JSON.parse(jsondata.data);\r\n                    if(savedData[0].engagementId == res[0].engagementId && savedData[0].centerId != '3049'){\r\n                      alert(\"Student successfully migrated to !\"+UserContext.centerName)\r\n                    }\r\n              });\r\n            }\r\n            else{\r\n              alert('Student is already assigned to some other Center')\r\n            }\r\n        })\r\n    }\r\n\r\n// remove unwanted table data \r\n  async discardUnwantedList(master) {\r\n        var dataToBeDisplayed = [];\r\n        var studentDetails = [];\r\n          console.log('Checkpoint 1');\r\n           await master.map((data, id)=>{\r\n            console.log('Checkpoint 2');\r\n             fetchStudentDetailsByEngagementId(data.EngagementId).then((jsondata)=>{\r\n                console.log('Checkpoint 2.5');\r\n                let result = JSON.parse(jsondata.data)\r\n                if(result[0].centerId=='3049'){\r\n                  console.log(\"data to be saved ===> \",data)\r\n                  var details =\r\n                            {\r\n                                \"EngagementId\": data.EngagementId,\r\n                                \"Name\": data.Name ,\r\n                                \"Dob\": data.Dob ,\r\n                                \"PrimaryContactNumber\": data.PrimaryContactNumber ,\r\n                                \"PermAddressLine1\": data.PermAddressLine1 ,\r\n                                \"PermCityName\": data.PermCityName ,\r\n                                \"PermPincode\": data.PermPincode ,\r\n                                \"Action\":<Button variant=\"contained\" color=\"primary\" onClick={ () => this.saveStudentDetails(data.EngagementId) }>Save</Button>\r\n                            }\r\n                  dataToBeDisplayed.push(details);\r\n                  // this.state.studentInfo.push(details);\r\n                }\r\n                else{\r\n                  console.log(\"this data is to be deleted ===> \", data)\r\n                  studentDetails.push(result[0]);\r\n                  // this.state.engDetailsTable.push(data)\r\n                }\r\n            })\r\n          })\r\n\r\n          this.setState({ studentInfo : dataToBeDisplayed, studentsToDisplay: dataToBeDisplayed });\r\n          console.log(this.state)\r\n          console.log('Checkpoint 3');\r\n          \r\n    }\r\n\r\n    //Getting the info of the table data\r\n   getDetails(){\r\n        var engMasterTable = [];\r\n        var virtualData = [];\r\n        var dataToBeDisplayed = [];\r\n        fetchVirtualData(\"3049\", this.state.Selectedstate).then((jsondata)=>{\r\n            console.log('Checkpoint 0.5');\r\n            let res = JSON.parse(jsondata.data)\r\n            engMasterTable = res;\r\n            this.setState({ engMasterTable : res })\r\n            console.log(\"master table ===> \",engMasterTable);\r\n            this.discardUnwantedList(engMasterTable);\r\n            //  const x = async ()=>{\r\n            //   console.log(\"hello\")\r\n            //   const wait = await this.discardUnwantedList(engMasterTable);\r\n            // }\r\n             res.map((data, id)=> {\r\n            //   fetchStudentDetailsByEngagementId(data.EngagementId).then((jsondata)=>{\r\n                console.log('Checkpoint 0.75');\r\n            //       let result = JSON.parse(jsondata.data);  \r\n            //       // console.log(result)\r\n            //       this.state.engDetailsTable.push(result[0]);\r\n            //       if(result[0].centerId=='3049'){\r\n            //         var details =\r\n            //           {\r\n            //               \"EngagementId\": data.EngagementId,\r\n            //               \"Name\": data.Name ,\r\n            //               \"Dob\": data.Dob ,\r\n            //               \"PrimaryContactNumber\": data.PrimaryContactNumber ,\r\n            //               \"PermAddressLine1\": data.PermAddressLine1 ,\r\n            //               \"PermCityName\": data.PermCityName ,\r\n            //               \"PermPincode\": data.PermPincode ,\r\n            //               \"Action\":<Button variant=\"contained\" color=\"primary\" onClick={ () => this.saveStudentDetails(data.EngagementId) }>Save</Button>\r\n            //           }\r\n            //         dataToBeDisplayed.push(details);\r\n            //         this.state.engDetailsTable.push( details );\r\n            //       }\r\n            // })\r\n                    var details =\r\n                      {\r\n                          \"EngagementId\": data.EngagementId,\r\n                          \"Name\": data.Name ,\r\n                          \"Dob\": data.Dob ,\r\n                          \"PrimaryContactNumber\": data.PrimaryContactNumber ,\r\n                          \"PermAddressLine1\": data.PermAddressLine1 ,\r\n                          \"PermCityName\": data.PermCityName ,\r\n                          \"PermPincode\": data.PermPincode ,\r\n                          \"Action\":<Button variant=\"contained\" color=\"primary\" onClick={ () => this.saveStudentDetails(data.EngagementId) }>Save</Button>\r\n                      }\r\n                      virtualData.push(details);\r\n                      // this.discardUnwantedList(virtualData)\r\n            });\r\n            // console.log(\" details table ===> \",engDetailsTable)\r\n            // console.log(\"data to display ===> \"+dataToBeDisplayed)\r\n            // this.setState({ engDetailsTable,\r\n            //                 studentInfo: dataToBeDisplayed })\r\n            console.log('Checkpoint 0.9');\r\n            // this.discardUnwantedList(engMasterTable);\r\n            this.setState({\r\n                 studentInfo: virtualData\r\n            });\r\n          });\r\n\r\n          // this.discardUnwantedList(engMasterTable, engDetailsTable);\r\n\r\n        // console.log(this.state)\r\n    }\r\n\r\n    \r\n    render(){\r\n        return(\r\n            <div style={{ width: '100%' }}>\r\n            <Grid container>\r\n            <Grid item xs={12}> </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} >State</InputLabel>\r\n            <SingleSelect\r\n              name=\"Selectedstate\" id=\"Selectedstate\"\r\n            //   key={this.state.Selectedstate || ''}\r\n              options={this.state.statelist}\r\n              value={this.state.Selectedstate || ''}\r\n              onChange={()=>handleStateChange}\r\n            //   helperText={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.label : ''}\r\n            //   error={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.value : ''}\r\n            />\r\n            </Grid>\r\n            <Grid item xs={12} sm={1}></Grid>\r\n            <Grid item xs={12} sm={4}>\r\n            <Button color=\"primary\" variant=\"contained\" onClick={this.getDetails.bind(this)}>\r\n               Get Details\r\n             </Button>\r\n          </Grid>\r\n          </Grid>\r\n          <br /> <br />\r\n          <br /> \r\n            <Grid>\r\n            <MUIDataTable  title={\"Students\"} label={\"List of Students\"} data={this.state.studentInfo} \r\n            columns={columns} options={options}\r\n            />\r\n            </Grid>\r\n            </div>\r\n           \r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}