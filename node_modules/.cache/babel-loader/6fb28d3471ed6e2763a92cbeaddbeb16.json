{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { getBaseStyles, getCellStyles, getNumberFormats } from '../xml/xlsx'; // http://officeopenxml.com/SSstyles.php\n// Returns an array of cell styles.\n// A cell style index is its ID.\n\nexport default function parseStyles(content, xml) {\n  if (!content) {\n    return {};\n  } // https://social.msdn.microsoft.com/Forums/sqlserver/en-US/708978af-b598-45c4-a598-d3518a5a09f0/howwhen-is-cellstylexfs-vs-cellxfs-applied-to-a-cell?forum=os_binaryfile\n  // https://www.office-forums.com/threads/cellxfs-cellstylexfs.2163519/\n\n\n  var doc = xml.createDocument(content);\n  var baseStyles = getBaseStyles(doc).map(parseCellStyle);\n  var numberFormats = getNumberFormats(doc).map(parseNumberFormatStyle).reduce(function (formats, format) {\n    // Format ID is a numeric index.\n    // There're some standard \"built-in\" formats (in Excel) up to about `100`.\n    formats[format.id] = format;\n    return formats;\n  }, []);\n\n  var getCellStyle = function getCellStyle(xf) {\n    if (xf.hasAttribute('xfId')) {\n      return _objectSpread(_objectSpread({}, baseStyles[xf.xfId]), parseCellStyle(xf, numberFormats));\n    }\n\n    return parseCellStyle(xf, numberFormats);\n  };\n\n  return getCellStyles(doc).map(getCellStyle);\n}\n\nfunction parseNumberFormatStyle(numFmt) {\n  return {\n    id: numFmt.getAttribute('numFmtId'),\n    template: numFmt.getAttribute('formatCode')\n  };\n} // http://www.datypic.com/sc/ooxml/e-ssml_xf-2.html\n\n\nfunction parseCellStyle(xf, numFmts) {\n  var style = {};\n\n  if (xf.hasAttribute('numFmtId')) {\n    var numberFormatId = xf.getAttribute('numFmtId'); // Built-in number formats don't have a `<numFmt/>` element in `styles.xml`.\n    // https://hexdocs.pm/xlsxir/number_styles.html\n\n    if (numFmts[numberFormatId]) {\n      style.numberFormat = numFmts[numberFormatId];\n    } else {\n      style.numberFormat = {\n        id: numberFormatId\n      };\n    }\n  }\n\n  return style;\n}","map":{"version":3,"sources":["../../source/read/parseStyles.js"],"names":["doc","xml","baseStyles","getBaseStyles","numberFormats","formats","format","getCellStyle","xf","parseCellStyle","getCellStyles","id","numFmt","template","style","numberFormatId","numFmts"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAA,aAAA,EAAA,aAAA,EAAA,gBAAA,QAAA,aAAA,C,CAMA;AACA;AACA;;AACA,eAAe,SAAA,WAAA,CAAA,OAAA,EAAA,GAAA,EAAmC;AAChD,MAAI,CAAJ,OAAA,EAAc;AACZ,WAAA,EAAA;AAF8C,GAAA,CAKhD;AACA;;;AACA,MAAMA,GAAG,GAAGC,GAAG,CAAHA,cAAAA,CAAZ,OAAYA,CAAZ;AAEA,MAAMC,UAAU,GAAGC,aAAa,CAAbA,GAAa,CAAbA,CAAAA,GAAAA,CAAnB,cAAmBA,CAAnB;AAGA,MAAMC,aAAa,GAAG,gBAAgB,CAAhB,GAAgB,CAAhB,CAAA,GAAA,CAAA,sBAAA,EAAA,MAAA,CAEZ,UAAA,OAAA,EAAA,MAAA,EAAqB;AAC3B;AACA;AACAC,IAAAA,OAAO,CAACC,MAAM,CAAdD,EAAO,CAAPA,GAAAA,MAAAA;AACA,WAAA,OAAA;AANkB,GAAA,EAAtB,EAAsB,CAAtB;;AASA,MAAME,YAAY,GAAG,SAAfA,YAAe,CAAA,EAAA,EAAQ;AAC3B,QAAIC,EAAE,CAAFA,YAAAA,CAAJ,MAAIA,CAAJ,EAA6B;AAC3B,aAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EACKN,UAAU,CAACM,EAAE,CADlB,IACe,CADf,CAAA,EAEKC,cAAc,CAAA,EAAA,EAFnB,aAEmB,CAFnB,CAAA;AAID;;AACD,WAAOA,cAAc,CAAA,EAAA,EAArB,aAAqB,CAArB;AAPF,GAAA;;AAUA,SAAOC,aAAa,CAAbA,GAAa,CAAbA,CAAAA,GAAAA,CAAP,YAAOA,CAAP;AACD;;AAED,SAAA,sBAAA,CAAA,MAAA,EAAwC;AACtC,SAAO;AACLC,IAAAA,EAAE,EAAEC,MAAM,CAANA,YAAAA,CADC,UACDA,CADC;AAELC,IAAAA,QAAQ,EAAED,MAAM,CAANA,YAAAA,CAAAA,YAAAA;AAFL,GAAP;EAMF;;;AACA,SAAA,cAAA,CAAA,EAAA,EAAA,OAAA,EAAqC;AACnC,MAAME,KAAK,GAAX,EAAA;;AACA,MAAIN,EAAE,CAAFA,YAAAA,CAAJ,UAAIA,CAAJ,EAAiC;AAC/B,QAAMO,cAAc,GAAGP,EAAE,CAAFA,YAAAA,CADQ,UACRA,CAAvB,CAD+B,CAE/B;AACA;;AACA,QAAIQ,OAAO,CAAX,cAAW,CAAX,EAA6B;AAC3BF,MAAAA,KAAK,CAALA,YAAAA,GAAqBE,OAAO,CAA5BF,cAA4B,CAA5BA;AADF,KAAA,MAEO;AACLA,MAAAA,KAAK,CAALA,YAAAA,GAAqB;AAAEH,QAAAA,EAAE,EAAEI;AAAN,OAArBD;AACD;AACF;;AACD,SAAA,KAAA;AACD","sourcesContent":["import {\r\n  getBaseStyles,\r\n  getCellStyles,\r\n  getNumberFormats\r\n} from '../xml/xlsx'\r\n\r\n// http://officeopenxml.com/SSstyles.php\r\n// Returns an array of cell styles.\r\n// A cell style index is its ID.\r\nexport default function parseStyles(content, xml) {\r\n  if (!content) {\r\n    return {}\r\n  }\r\n\r\n  // https://social.msdn.microsoft.com/Forums/sqlserver/en-US/708978af-b598-45c4-a598-d3518a5a09f0/howwhen-is-cellstylexfs-vs-cellxfs-applied-to-a-cell?forum=os_binaryfile\r\n  // https://www.office-forums.com/threads/cellxfs-cellstylexfs.2163519/\r\n  const doc = xml.createDocument(content)\r\n\r\n  const baseStyles = getBaseStyles(doc)\r\n    .map(parseCellStyle)\r\n\r\n  const numberFormats = getNumberFormats(doc)\r\n    .map(parseNumberFormatStyle)\r\n    .reduce((formats, format) => {\r\n      // Format ID is a numeric index.\r\n      // There're some standard \"built-in\" formats (in Excel) up to about `100`.\r\n      formats[format.id] = format\r\n      return formats\r\n    }, [])\r\n\r\n  const getCellStyle = (xf) => {\r\n    if (xf.hasAttribute('xfId')) {\r\n      return {\r\n        ...baseStyles[xf.xfId],\r\n        ...parseCellStyle(xf, numberFormats)\r\n      }\r\n    }\r\n    return parseCellStyle(xf, numberFormats)\r\n  }\r\n\r\n  return getCellStyles(doc).map(getCellStyle)\r\n}\r\n\r\nfunction parseNumberFormatStyle(numFmt) {\r\n  return {\r\n    id: numFmt.getAttribute('numFmtId'),\r\n    template: numFmt.getAttribute('formatCode')\r\n  }\r\n}\r\n\r\n// http://www.datypic.com/sc/ooxml/e-ssml_xf-2.html\r\nfunction parseCellStyle(xf, numFmts) {\r\n  const style = {}\r\n  if (xf.hasAttribute('numFmtId')) {\r\n    const numberFormatId = xf.getAttribute('numFmtId')\r\n    // Built-in number formats don't have a `<numFmt/>` element in `styles.xml`.\r\n    // https://hexdocs.pm/xlsxir/number_styles.html\r\n    if (numFmts[numberFormatId]) {\r\n      style.numberFormat = numFmts[numberFormatId]\r\n    } else {\r\n      style.numberFormat = { id: numberFormatId }\r\n    }\r\n  }\r\n  return style\r\n}"]},"metadata":{},"sourceType":"module"}