{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\Shortlist.js\";\nimport React, { Component } from 'react';\nimport { useState } from 'react';\nimport './../App.css';\nimport './../assets/css/login-style.css';\nimport './../assets/css/font-awesome.min.css';\nimport underscore from 'underscore'; //import ChartistGraph from \"react-chartist\";\n// @material-ui/core\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Icon from \"@material-ui/core/Icon\"; // @material-ui/icons\n//import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Store from \"@material-ui/icons/Store\";\nimport Warning from \"@material-ui/icons/Warning\";\nimport DateRange from \"@material-ui/icons/DateRange\";\nimport LocalOffer from \"@material-ui/icons/LocalOffer\";\nimport Update from \"@material-ui/icons/Update\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport AccessTime from \"@material-ui/icons/AccessTime\";\nimport Accessibility from \"@material-ui/icons/Accessibility\";\nimport BugReport from \"@material-ui/icons/BugReport\";\nimport Code from \"@material-ui/icons/Code\";\nimport Cloud from \"@material-ui/icons/Cloud\";\nimport Button from '@material-ui/core/Button';\nimport { changeStudentStatus, fetchStudentDetailsByEngagementId, fetchKnackScore, fetchEvaluationData } from './../util/api';\nimport { FormControl, FormControlLabel, TextField, InputLabel, Input, Grid, RadioGroup, Radio } from '@material-ui/core';\nimport styles from \"../components/components.js\";\nimport { CommunicationCallMerge } from 'material-ui/svg-icons';\nimport { SingleSelect } from \"react-select-material-ui\";\nimport callMerge from 'material-ui/svg-icons/communication/call-merge';\nimport UserContext from '../components/GolbalContext'; //import MasterData from './../components/MasterData.js'\n\nclass Shortlist extends Component {\n  constructor(props) {\n    super(props);\n\n    this.mySubmitHandler = event => {\n      event.preventDefault();\n      document.getElementById(\"save\").setAttribute(\"disabled\", true); // authentication response and redirect to error or dashbaord page\n      //alert(this.email)\n\n      this.submitEngagement(this.state.dbUserId, this.state.engagementId); //this.submitEngagement();\n      //this.props.history.push('/dashboard/mobilize')\n    };\n\n    this.state = {\n      knackData: {},\n      engagementData: {},\n      engagementId: props.engagementId,\n      dbUserId: props.id,\n      shortlistData: {\n        action: \"\",\n        comments: \"\",\n        actionedBy: UserContext.userid\n      }\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n\n    if (props.id != null && props.id != undefined) {\n      this.state.engagementId = props.engagementId;\n      this.getKnackScore(this.state.engagementId);\n      this.getEvaluationData(this.state.engagementId);\n      this.getshortlistData(this.state.engagementId);\n    } // alert(this.state.dbUserId);\n\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      shortlistData: { ...this.state.shortlistData,\n        [name]: value\n      }\n    });\n  }\n\n  getEvaluationData(eng) {\n    // let formData = new FormData();\n    let finalAvg = 0; //formData.append('data', '{\"token\" : \"'+this.state.token+'\", \"action\" : \"'+this.state.action+'\", \"data\" : [{\"userName\":\"'+this.state.email+'\",\"password\":\"'+this.state.password+'\"}]}');\n    // formData.append('data','{\"token\" : \"'+ \"1234\" +'\", \"action\" : \"viewByEngagementId\", \"data\" : [{ \"engagementId\" : ' + eng + '}]}');\n    // fetch(\"http://playground.tatastrive.com/sservices-v1/evaluation\", {\n    // method: \"POST\",\n    // body: formData \n    // }).then(response => response.json())\n\n    fetchEvaluationData(eng).then(jsondata => {\n      console.log(jsondata);\n      let finalDetails = JSON.parse(jsondata.data);\n\n      for (let i = 0; i < finalDetails.length; i++) {\n        let score = 0.05 * this.state.knackData.finalScore + 0.15 * finalDetails[i].individualExecScore + 0.15 * finalDetails[i].groupExecObservation + 0.15 * finalDetails[i].behaviourInterviewObservation;\n\n        if (finalAvg != 0) {\n          finalAvg = (finalAvg + score) / 2;\n        } else {\n          finalAvg = score;\n        }\n      } // alert(finalAvg)  ;\n\n    });\n  }\n\n  getKnackScore(eng) {\n    //   let formData = new FormData();\n    //alert(JSON.stringify(this.state));\n    //formData.append('data', '{\"token\" : \"'+this.state.token+'\", \"action\" : \"'+this.state.action+'\", \"data\" : [{\"userName\":\"'+this.state.email+'\",\"password\":\"'+this.state.password+'\"}]}');\n    // formData.append('data','{\"token\" : \"'+ \"1234\" +'\", \"action\" : \"get\", \"data\" : [{ \"engagementId\" : ' + eng + '}]}');\n    // return fetch(\"http://playground.tatastrive.com/sservices-v1/knack\", {\n    // method: \"POST\",\n    // body: formData \n    // }).then(response => response.json())\n    fetchKnackScore(eng).then(jsondata => {\n      console.log(jsondata);\n\n      if (jsondata.data != []) {\n        let jsonobjects = JSON.parse(jsondata.data);\n        this.setState({\n          knackData: jsonobjects[0][0]\n        }); // alert(JSON.stringify(this.state.knackData)) ;\n      } else {\n        console.log(\"error\");\n      }\n    });\n  }\n\n  getshortlistData(eng) {\n    // let formData = new FormData();\n    //alert(JSON.stringify(this.state));\n    //formData.append('data', '{\"token\" : \"'+this.state.token+'\", \"action\" : \"'+this.state.action+'\", \"data\" : [{\"userName\":\"'+this.state.email+'\",\"password\":\"'+this.state.password+'\"}]}');\n    // formData.append('data','{\"token\" : \"'+ \"1234\" +'\", \"action\" : \"viewStudentEngagementById\", \"data\" : [{ \"engagementId\" : ' + eng + '}]}');\n    // return fetch(\"http://playground.tatastrive.com/sservices-v1/engagement\", {\n    // method: \"POST\",\n    // body: formData \n    // }).then(response => response.json())\n    fetchStudentDetailsByEngagementId(eng).then(jsondata => {\n      console.log(jsondata);\n\n      if (jsondata.appError == null) {\n        let jsonobjects = JSON.parse(jsondata.data);\n        this.setState({\n          engagementData: jsonobjects[0]\n        });\n        console.log(jsonobjects);\n      } else {\n        console.log(\"error\");\n      }\n    });\n  }\n\n  submitEngagement(dbUserId, engId) {\n    let statusChangeData = '\"engagementId\":' + this.state.engagementId + ',\"status\": \"' + this.state.shortlistData.action + '\",\"updatedBy\":' + UserContext.userid + ', \"remarks\" : \"' + this.state.shortlistData.remarks + '\"'; //alert(statusChangeData);\n\n    changeStudentStatus(statusChangeData).then(jsondata => {\n      alert(\"Status changed successfully\");\n      this.props.history.push({\n        pathname: '/dashboard/managebeneficiary',\n        state: {\n          dbUserId: this.state.dbUserId,\n          tab: 10\n        }\n      });\n    });\n  }\n\n  render() {\n    const dbUserId = this.state.dbUserId == '' || this.state.dbUserId == null;\n    let button;\n    let displayText;\n    button = /*#__PURE__*/React.createElement(Button, {\n      id: \"save\",\n      variant: \"contained\",\n      type: \"submit\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 16\n      }\n    }, \"Save\");\n\n    if (this.state.engagementData.status == \"Shortlisted\") {\n      displayText = /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }\n      }, \"Already Shortlisted\"));\n      button = \"\";\n    } else if (this.state.engagementData.status == \"Rejected\") {\n      displayText = /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 9\n        }\n      }, \"Already Rejected\"));\n      button = \"\";\n    } else {\n      displayText = /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(RadioGroup, {\n        row: true,\n        \"aria-label\": \"recommend\",\n        name: \"action\",\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(FormControlLabel, {\n        value: \"Shortlisted\",\n        control: /*#__PURE__*/React.createElement(Radio, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 58\n          }\n        }),\n        label: \"Shortlist\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(FormControlLabel, {\n        value: \"Rejected\",\n        control: /*#__PURE__*/React.createElement(Radio, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 55\n          }\n        }),\n        label: \"Reject\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }\n      }))));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.mySubmitHandler,\n      method: \"post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      label: \"Remarks\",\n      name: \"remarks\",\n      InputLabelProps: {\n        shrink: true\n      },\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }\n    }), displayText), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 7\n      }\n    }), button));\n  }\n\n}\n\nexport default Shortlist;","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/Shortlist.js"],"names":["React","Component","useState","underscore","makeStyles","Icon","Store","Warning","DateRange","LocalOffer","Update","ArrowUpward","AccessTime","Accessibility","BugReport","Code","Cloud","Button","changeStudentStatus","fetchStudentDetailsByEngagementId","fetchKnackScore","fetchEvaluationData","FormControl","FormControlLabel","TextField","InputLabel","Input","Grid","RadioGroup","Radio","styles","CommunicationCallMerge","SingleSelect","callMerge","UserContext","Shortlist","constructor","props","mySubmitHandler","event","preventDefault","document","getElementById","setAttribute","submitEngagement","state","dbUserId","engagementId","knackData","engagementData","id","shortlistData","action","comments","actionedBy","userid","handleInputChange","bind","undefined","getKnackScore","getEvaluationData","getshortlistData","target","value","name","setState","eng","finalAvg","then","jsondata","console","log","finalDetails","JSON","parse","data","i","length","score","finalScore","individualExecScore","groupExecObservation","behaviourInterviewObservation","jsonobjects","appError","engId","statusChangeData","remarks","alert","history","push","pathname","tab","render","button","displayText","status","width","shrink"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { useState } from 'react';\r\nimport './../App.css';\r\nimport './../assets/css/login-style.css'\r\nimport './../assets/css/font-awesome.min.css'\r\nimport underscore from 'underscore';\r\n//import ChartistGraph from \"react-chartist\";\r\n// @material-ui/core\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n// @material-ui/icons\r\n//import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Store from \"@material-ui/icons/Store\";\r\nimport Warning from \"@material-ui/icons/Warning\";\r\nimport DateRange from \"@material-ui/icons/DateRange\";\r\nimport LocalOffer from \"@material-ui/icons/LocalOffer\";\r\nimport Update from \"@material-ui/icons/Update\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport AccessTime from \"@material-ui/icons/AccessTime\";\r\nimport Accessibility from \"@material-ui/icons/Accessibility\";\r\nimport BugReport from \"@material-ui/icons/BugReport\";\r\nimport Code from \"@material-ui/icons/Code\";\r\nimport Cloud from \"@material-ui/icons/Cloud\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { changeStudentStatus,fetchStudentDetailsByEngagementId,fetchKnackScore,fetchEvaluationData }from './../util/api';\r\n  import { FormControl , FormControlLabel ,TextField, InputLabel, Input, Grid , RadioGroup, Radio}  from '@material-ui/core';\r\nimport styles from \"../components/components.js\"; \r\nimport { CommunicationCallMerge } from 'material-ui/svg-icons';\r\nimport { SingleSelect } from \"react-select-material-ui\";\r\nimport callMerge from 'material-ui/svg-icons/communication/call-merge';\r\nimport UserContext from '../components/GolbalContext'\r\n//import MasterData from './../components/MasterData.js'\r\n\r\nclass Shortlist extends Component\r\n{\r\n    constructor(props) {\r\n       super(props);\r\n     \r\n        this.state = {knackData : {} , engagementData : {},engagementId : props.engagementId,dbUserId : props.id, shortlistData : {action : \"\" ,comments : \"\" , actionedBy : UserContext.userid }}\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        if(props.id != null && props.id != undefined)\r\n        {\r\n          this.state.engagementId=props.engagementId;\r\n          this.getKnackScore(this.state.engagementId);\r\n          this.getEvaluationData(this.state.engagementId);\r\n          this.getshortlistData(this.state.engagementId);\r\n        } \r\n       // alert(this.state.dbUserId);\r\n        \r\n    }\r\n\r\n    handleInputChange(event) {\r\n        \r\n        const target = event.target;\r\n        const value =  (target.value);\r\n        const name = target.name;\r\n        this.setState({\r\n          shortlistData: {\r\n            ...this.state.shortlistData,\r\n            [name]: value\r\n          }\r\n        })\r\n        \r\n      }\r\n      getEvaluationData(eng)\r\n      {\r\n       // let formData = new FormData();\r\n        let finalAvg = 0;\r\n          //formData.append('data', '{\"token\" : \"'+this.state.token+'\", \"action\" : \"'+this.state.action+'\", \"data\" : [{\"userName\":\"'+this.state.email+'\",\"password\":\"'+this.state.password+'\"}]}');\r\n          // formData.append('data','{\"token\" : \"'+ \"1234\" +'\", \"action\" : \"viewByEngagementId\", \"data\" : [{ \"engagementId\" : ' + eng + '}]}');\r\n          // fetch(\"http://playground.tatastrive.com/sservices-v1/evaluation\", {\r\n          // method: \"POST\",\r\n          // body: formData \r\n          // }).then(response => response.json())\r\n          \r\n          fetchEvaluationData(eng).then((jsondata)=>{\r\n            console.log(jsondata);\r\n            let finalDetails = JSON.parse(jsondata.data);\r\n            for(let i=0 ; i<finalDetails.length;i++){\r\n               let score = (0.05 * this.state.knackData.finalScore) + (0.15 * finalDetails[i].individualExecScore) + (0.15 * finalDetails[i].groupExecObservation) + (0.15 * finalDetails[i].behaviourInterviewObservation);\r\n              if(finalAvg != 0)\r\n              {\r\n                finalAvg = (finalAvg + score)/2;\r\n              }\r\n              else\r\n              {\r\n                finalAvg = score;\r\n              }\r\n         }  \r\n        // alert(finalAvg)  ;\r\n              \r\n      });   \r\n      }\r\n      getKnackScore(eng)\r\n      {\r\n     //   let formData = new FormData();\r\n      //alert(JSON.stringify(this.state));\r\n          //formData.append('data', '{\"token\" : \"'+this.state.token+'\", \"action\" : \"'+this.state.action+'\", \"data\" : [{\"userName\":\"'+this.state.email+'\",\"password\":\"'+this.state.password+'\"}]}');\r\n          // formData.append('data','{\"token\" : \"'+ \"1234\" +'\", \"action\" : \"get\", \"data\" : [{ \"engagementId\" : ' + eng + '}]}');\r\n          // return fetch(\"http://playground.tatastrive.com/sservices-v1/knack\", {\r\n          // method: \"POST\",\r\n          // body: formData \r\n          // }).then(response => response.json())\r\n          \r\n          fetchKnackScore(eng).then((jsondata)=>{\r\n              console.log(jsondata); \r\n              if(jsondata.data != []){      \r\n                  let jsonobjects = JSON.parse(jsondata.data);\r\n                  this.setState({knackData :jsonobjects[0][0]});\r\n                 // alert(JSON.stringify(this.state.knackData)) ;\r\n              }  else{\r\n                  console.log(\"error\");\r\n              } \r\n           })\r\n      }\r\n\r\n      getshortlistData(eng)\r\n      {\r\n        // let formData = new FormData();\r\n      //alert(JSON.stringify(this.state));\r\n          //formData.append('data', '{\"token\" : \"'+this.state.token+'\", \"action\" : \"'+this.state.action+'\", \"data\" : [{\"userName\":\"'+this.state.email+'\",\"password\":\"'+this.state.password+'\"}]}');\r\n          // formData.append('data','{\"token\" : \"'+ \"1234\" +'\", \"action\" : \"viewStudentEngagementById\", \"data\" : [{ \"engagementId\" : ' + eng + '}]}');\r\n          // return fetch(\"http://playground.tatastrive.com/sservices-v1/engagement\", {\r\n          // method: \"POST\",\r\n          // body: formData \r\n          // }).then(response => response.json())\r\n          \r\n          fetchStudentDetailsByEngagementId(eng).then((jsondata)=>{\r\n              console.log(jsondata); \r\n              if(jsondata.appError==null){      \r\n                  let jsonobjects = JSON.parse(jsondata.data);\r\n                  this.setState({engagementData :jsonobjects[0]});\r\n                  console.log(jsonobjects);  \r\n              }  else{\r\n                  console.log(\"error\");\r\n              } \r\n           })\r\n      }\r\n\r\n    mySubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        document.getElementById(\"save\").setAttribute(\"disabled\" , true);\r\n        // authentication response and redirect to error or dashbaord page\r\n        //alert(this.email)\r\n        this.submitEngagement(this.state.dbUserId,this.state.engagementId);\r\n        //this.submitEngagement();\r\n        //this.props.history.push('/dashboard/mobilize')\r\n    }\r\n\r\n   \r\nsubmitEngagement(dbUserId,engId)\r\n{\r\n\r\n    let statusChangeData='\"engagementId\":'+this.state.engagementId+',\"status\": \"' +this.state.shortlistData.action +  '\",\"updatedBy\":' + UserContext.userid + ', \"remarks\" : \"' + this.state.shortlistData.remarks + '\"' ;\r\n    //alert(statusChangeData);\r\n    changeStudentStatus(statusChangeData).then((jsondata) => { \r\n            alert(\"Status changed successfully\");\r\n            this.props.history.push({\r\n              pathname: '/dashboard/managebeneficiary',\r\n              state: { dbUserId: this.state.dbUserId ,  tab : 10 }\r\n            });\r\n      });\r\n   \r\n  \r\n    \r\n}\r\n\r\nrender()\r\n{\r\n  \r\n  const dbUserId = (this.state.dbUserId == '' || this.state.dbUserId == null);\r\n  let button;\r\n  let displayText;\r\n    button =   <Button id = \"save\" variant=\"contained\" type=\"submit\" color=\"primary\">\r\n    Save\r\n  </Button>;\r\n\r\n      if(this.state.engagementData.status == \"Shortlisted\")\r\n      {\r\n        displayText = \r\n        <Grid item xs={12} sm={8}>\r\n          <h2>Already Shortlisted</h2>\r\n          </Grid>;\r\n          button = \"\";\r\n      }\r\n      else if(this.state.engagementData.status == \"Rejected\")\r\n      {\r\n        displayText =\r\n        <Grid item xs={12} sm={8}>\r\n        <h2>Already Rejected</h2>\r\n        </Grid>;\r\n        button = \"\";\r\n      }\r\n      else{\r\n        displayText =\r\n          <Grid item xs={12} sm={8}>\r\n          <FormControl>\r\n          <RadioGroup row aria-label=\"recommend\"  name=\"action\"  onChange={this.handleInputChange}>\r\n          <FormControlLabel value=\"Shortlisted\" control={<Radio />} label=\"Shortlist\" />\r\n          <FormControlLabel value=\"Rejected\" control={<Radio />} label=\"Reject\" />\r\n        </RadioGroup>\r\n            </FormControl>\r\n      </Grid>;\r\n      }\r\n\r\n    return (\r\n  <div style = {{ width : '100%' }}>\r\n    <form onSubmit={this.mySubmitHandler} method=\"post\">\r\n   <Grid container spacing={2}>\r\n    \r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl>\r\n            <TextField type = \"text\"\r\n              label=\"Remarks\"\r\n              name = \"remarks\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </FormControl>  \r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          </Grid>\r\n         {displayText}\r\n        \r\n      </Grid>\r\n\r\n      <br/>\r\n      {button}\r\n    \r\n    </form>\r\n    </div>\r\n\r\n    );\r\n}\r\n\r\n}\r\nexport default Shortlist;"]},"metadata":{},"sourceType":"module"}