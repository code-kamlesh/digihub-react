{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\DropoutDetails.js\";\n\n/*!\r\n\r\n=========================================================\r\n* Material Dashboard React - v1.8.0\r\n=========================================================\r\n\r\n\r\n* Coded by Ashish S\r\n\r\n=========================================================\r\n\r\n\r\n*/\nimport React, { Component } from 'react';\nimport { render } from \"react-dom\";\nimport './../App.css';\nimport './../assets/css/login-style.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { SingleSelect } from \"react-select-material-ui\";\nimport callMerge from 'material-ui/svg-icons/communication/call-merge';\nimport UserContext from '../components/GolbalContext';\nimport { FormControl, InputLabel, FormControlLabel, Input, Grid, RadioGroup, Radio, TextField } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport { isNotEmpty } from '../util/validation';\nimport AlertDialog from '../util/AlertDialog';\nimport { fetchCentersOfUser, fetchCentersDetails, fetchEnrollmentDetailsByBatchId, fetchAllStudentDataByEngagementIdAndReadyForDropout, fetchBatchDetails, fetchStudentDropoutDetailByEngagementId, markDropout, changeStudentStatus, fectUserDetails, fetchRunningBatchDetails } from '../util/api';\nimport MUIDataTable from \"mui-datatables\";\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nconst alertDialogOptions = {\n  message: ''\n};\n\nclass Dropout extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getMuiTheme = () => createMuiTheme({\n      overrides: {\n        MuiTableBody: {\n          root: {}\n        }\n      },\n      typography: {\n        \"fontSize\": 12\n      }\n    });\n\n    this.mySubmitHandler = event => {\n      event.preventDefault();\n\n      if (this.validateForm(this.state.errors)) {\n        this.markDropout();\n      }\n    };\n\n    this.validate = (name, value) => {\n      let errors = this.state.errors;\n\n      switch (name) {\n        case 'dropoutReason':\n          errors.dropoutReason = isNotEmpty(value);\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors\n      });\n    };\n\n    this.state = {\n      selectedEngagementId: '',\n      studentDetails: [],\n      dropoutDetails: [],\n      center: [],\n      batch: [],\n      centerId: '',\n      batchId: '',\n      dropoutReason: '',\n      alertDialogFlag: false,\n      errors: {\n        dropoutReason: ''\n      },\n      dropoutReasons: [{\n        value: 'Others',\n        label: 'Others'\n      }, {\n        value: 'Not Interested',\n        label: 'Not Interested'\n      }, {\n        value: 'Got other job',\n        label: 'Got other job'\n      }, {\n        value: 'Health Issues',\n        label: 'Health Issues'\n      }, {\n        value: 'Moved to other place',\n        label: 'Moved to other place'\n      }, {\n        value: 'Not Eligible',\n        label: 'Not Eligible'\n      }, {\n        value: 'Marriage',\n        label: 'Marriage'\n      }, {\n        value: 'Higher Education',\n        label: 'Higher Education'\n      }, {\n        value: 'Maternity',\n        label: 'Maternity'\n      }]\n    };\n    this.formData = {\n      engagementId: []\n    };\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n    this.fetchCenterById();\n  }\n\n  fetchCenterById() {\n    //alert(\"hi\");\n    let centerId = [];\n    let batchId = [];\n    let currentComponent = this;\n    fetchCentersOfUser(UserContext.userid).then(jsondata => {\n      let userJsonObjects = JSON.parse(jsondata.data);\n      currentComponent.setState({\n        userScope: userJsonObjects\n      });\n      userJsonObjects.forEach(user => {\n        centerId.push({\n          \"id\": user.centerId\n        });\n      });\n    }).then(function (result) {\n      let centerDetails = [];\n      fetchCentersDetails(JSON.stringify(centerId)).then(jsondata => {\n        let centerObjects = JSON.parse(jsondata.data);\n        centerObjects.forEach(center => {\n          centerDetails.push({\n            label: center.name,\n            value: center.id\n          });\n        });\n        currentComponent.setState({\n          center: centerDetails\n        });\n      });\n    });\n  }\n\n  handleSelectChange(selectname, event) {\n    let centerId = [];\n    let batchId = [];\n\n    if (selectname == \"centerId\") {\n      let batchDetails = [];\n      centerId.push({\n        \"id\": event\n      });\n      batchId.push({\n        \"id\": event\n      });\n      fetchRunningBatchDetails(event).then(jsondata => {\n        let batchObjects = JSON.parse(jsondata.data); //alert(JSON.stringify(batchObjects));\n\n        batchObjects.forEach(batch => {\n          batchDetails.push({\n            label: batch.batchName,\n            value: batch.batchId\n          });\n        });\n        this.setState({\n          batch: batchDetails\n        });\n        this.setState({\n          batchId: \"\"\n        });\n        this.setState({\n          studentDetails: []\n        });\n      });\n    } else {\n      this.fetchStudentsByBatchId(event);\n    }\n\n    this.setState({\n      [selectname]: event\n    });\n  }\n\n  handleDropoutReasonSelectChange(selectname, event) {\n    this.setState({\n      [selectname]: event\n    });\n    this.validate(selectname, event);\n  }\n\n  fetchDropoutDetilByEngagementId(engagementId) {\n    let localThis = this;\n    let studentDropoutInfo = [];\n    fetchStudentDropoutDetailByEngagementId(engagementId).then(jsondata => {\n      if (jsondata.data) {\n        let dropoutDetails = JSON.parse(jsondata.data);\n\n        for (var i = 0; i < dropoutDetails.length; i++) {\n          let engagementId = dropoutDetails[i].engagementId;\n          let effortSpent = dropoutDetails[i].effortSpent;\n          fectUserDetails(dropoutDetails[i].createdBy).then(jsondata => {\n            let jsonobjects = JSON.parse(jsondata.data);\n            var details = {\n              'engagementId': engagementId,\n              'effortSpent': effortSpent,\n              'createdBy': jsonobjects[0].firstName\n            };\n            studentDropoutInfo.push(details);\n          }).then(function (result) {\n            localThis.setState({\n              dropoutDetails: []\n            }, () => {\n              localThis.setState({\n                dropoutDetails: studentDropoutInfo\n              });\n            });\n          });\n        }\n      }\n\n      this.setState({\n        dropoutDetails: []\n      }, () => {\n        this.setState({\n          dropoutDetails: studentDropoutInfo\n        });\n      });\n    });\n  }\n\n  fetchStudentsByBatchId(batchId) {\n    fetchEnrollmentDetailsByBatchId(batchId).then(jsondata => {\n      let enrollmentDetails = JSON.parse(jsondata.data);\n      this.formData.engagementId.length = 0;\n      enrollmentDetails.map(item => {\n        this.formData.engagementId.push({\n          engagementId: item.engagementId\n        });\n      });\n      fetchAllStudentDataByEngagementIdAndReadyForDropout(JSON.stringify(this.formData.engagementId)).then(jsondata => {\n        let studentInfo = [];\n\n        if (jsondata.data) {\n          let studentDetails = JSON.parse(jsondata.data);\n\n          for (var i = 0; i < studentDetails.length; i++) {\n            if (studentDetails[i].status === \"Enrolled\") {\n              var details = {\n                'engagement_id': studentDetails[i].engagementId,\n                'name': studentDetails[i].firstName + \" \" + studentDetails[i].lastName,\n                'status': studentDetails[i].status\n              };\n              studentInfo.push(details);\n            }\n          }\n        }\n\n        this.setState({\n          studentDetails: []\n        }, () => {\n          this.setState({\n            studentDetails: studentInfo\n          });\n        });\n        studentInfo = null;\n      });\n    });\n  }\n\n  validateForm(errors) {\n    this.validate(\"dropoutReason\", this.state.dropoutReason);\n    this.state.errors = errors;\n    this.setState({\n      errors\n    });\n    let valid = true;\n    Object.values(errors).forEach( // if we have an error string set valid to false\n    val => val.length > 0 && (valid = false));\n    return valid;\n  }\n\n  markDropout() {\n    let dropoutData = '\"engagementId\":' + this.state.selectedEngagementId + ',\"dropoutReason\":\"' + this.state.dropoutReason + '\",\"status\":\"Dropout\"';\n    let statusChangeData = '\"engagementId\":' + this.state.selectedEngagementId + ',\"status\":\"Dropout\",\"updatedBy\":0';\n    this.setState({\n      alertDialogFlag: false\n    });\n    markDropout(dropoutData).then(jsondata => {\n      changeStudentStatus(statusChangeData).then(jsondata => {\n        alertDialogOptions.message = \"Data Saved Sucessfully\";\n        this.setState({\n          alertDialogFlag: true\n        });\n        this.fetchStudentsByBatchId(this.state.batchId);\n        this.setState({\n          dropoutDetails: []\n        });\n        this.setState({\n          dropoutReason: ''\n        });\n      });\n    });\n  }\n\n  render() {\n    const columns = [{\n      label: 'Engagement Id',\n      name: 'engagement_id',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Name',\n      name: 'name',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Status',\n      name: 'status',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }];\n    const options = {\n      filterType: \"dropdown\",\n      responsive: \"stacked\",\n      sortDirection: \"desc\",\n      selectableRows: \"single\",\n      rowsPerPage: 10,\n      selectableRowsOnClick: true,\n      disableToolbarSelect: true,\n      textLabels: {\n        body: {\n          noMatch: /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: \"blue\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 18\n            }\n          }, \"Please select batch/ another batch to load students here\")\n        }\n      },\n      onRowsSelect: (currentRowsSelected, allRows) => {\n        var index = currentRowsSelected[0].dataIndex;\n        var engagementId = this.state.studentDetails[index].engagement_id;\n\n        if (this.state.selectedEngagementId === engagementId) {\n          this.setState({\n            selectedEngagementId: ''\n          });\n          this.state.selectedEngagementId = '';\n        } else {\n          this.setState({\n            selectedEngagementId: this.state.studentDetails[index].engagement_id\n          });\n          this.state.selectedEngagementId = this.state.studentDetails[index].engagement_id;\n          this.state.selectedBeneficiaryName = this.state.studentDetails[index].name;\n          this.fetchDropoutDetilByEngagementId(this.state.studentDetails[index].engagement_id);\n        }\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.mySubmitHandler,\n      method: \"post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      id: \"roleBasedDisable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      id: \"hideData\",\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"centerName\",\n      id: \"centerName\",\n      placeholder: \"Select Center\",\n      options: this.state.center,\n      onChange: this.handleSelectChange.bind(this, 'centerId'),\n      value: this.state.centerId || '',\n      helperText: this.state.errors.centerName,\n      error: this.state.errors.centerName == '' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"batchName\",\n      id: \"batchName\",\n      placeholder: \"Select Batch\",\n      options: this.state.batch,\n      onChange: this.handleSelectChange.bind(this, 'batchId'),\n      value: this.state.batchId || '',\n      key: this.state.batchId,\n      helperText: this.state.errors.batchName,\n      error: this.state.errors.batchName == '' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 6\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 4\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 4\n      }\n    }), /*#__PURE__*/React.createElement(MuiThemeProvider, {\n      theme: this.getMuiTheme(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(MUIDataTable, {\n      title: \"Enrolled Student list\",\n      label: \"List of Students\",\n      data: this.state.studentDetails,\n      columns: columns,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 5\n      }\n    }), this.state.selectedEngagementId != '' && /*#__PURE__*/React.createElement(Grid, {\n      id: \"hideData\",\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"dropoutReason\",\n      id: \"dropoutReason\",\n      placeholder: \"Select Reason\",\n      options: this.state.dropoutReasons,\n      onChange: this.handleDropoutReasonSelectChange.bind(this, 'dropoutReason'),\n      value: this.state.dropoutReason || '',\n      key: this.state.dropoutReason,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 6\n      }\n    }, \"Dropout\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 4\n      }\n    })), this.state.selectedEngagementId != '' && /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 5\n      }\n    }, \"Engagement Id\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 5\n      }\n    }, \"Effort Spent\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 5\n      }\n    }, \"Created By\")), this.state.dropoutDetails.map(row => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 5\n      }\n    }, row.engagementId), row.effortSpent.length <= 10 && /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 39\n      }\n    }, \" \", row.effortSpent, \" \"), row.effortSpent.length > 10 && /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 38\n      }\n    }, \" \", row.effortSpent.substring(0, 10), \" \\xA0\", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      title: row.effortSpent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 5\n      }\n    }, \"read more\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 5\n      }\n    }, row.createdBy))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 2\n      }\n    }), this.state.alertDialogFlag && /*#__PURE__*/React.createElement(AlertDialog, {\n      message: alertDialogOptions.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 35\n      }\n    }));\n  }\n\n}\n\nexport default Dropout;","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/DropoutDetails.js"],"names":["React","Component","render","SingleSelect","callMerge","UserContext","FormControl","InputLabel","FormControlLabel","Input","Grid","RadioGroup","Radio","TextField","Button","isNotEmpty","AlertDialog","fetchCentersOfUser","fetchCentersDetails","fetchEnrollmentDetailsByBatchId","fetchAllStudentDataByEngagementIdAndReadyForDropout","fetchBatchDetails","fetchStudentDropoutDetailByEngagementId","markDropout","changeStudentStatus","fectUserDetails","fetchRunningBatchDetails","MUIDataTable","TextareaAutosize","createMuiTheme","MuiThemeProvider","alertDialogOptions","message","Dropout","constructor","props","getMuiTheme","overrides","MuiTableBody","root","typography","mySubmitHandler","event","preventDefault","validateForm","state","errors","validate","name","value","dropoutReason","setState","selectedEngagementId","studentDetails","dropoutDetails","center","batch","centerId","batchId","alertDialogFlag","dropoutReasons","label","formData","engagementId","handleSelectChange","bind","fetchCenterById","currentComponent","userid","then","jsondata","userJsonObjects","JSON","parse","data","userScope","forEach","user","push","result","centerDetails","stringify","centerObjects","id","selectname","batchDetails","batchObjects","batchName","fetchStudentsByBatchId","handleDropoutReasonSelectChange","fetchDropoutDetilByEngagementId","localThis","studentDropoutInfo","i","length","effortSpent","createdBy","jsonobjects","details","firstName","enrollmentDetails","map","item","studentInfo","status","lastName","valid","Object","values","val","dropoutData","statusChangeData","columns","headerStyle","color","options","filterType","responsive","sortDirection","selectableRows","rowsPerPage","selectableRowsOnClick","disableToolbarSelect","textLabels","body","noMatch","onRowsSelect","currentRowsSelected","allRows","index","dataIndex","engagement_id","selectedBeneficiaryName","width","centerName","row","substring"],"mappings":"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","sourcesContent":["/*!\r\n\r\n=========================================================\r\n* Material Dashboard React - v1.8.0\r\n=========================================================\r\n\r\n\r\n* Coded by Ashish S\r\n\r\n=========================================================\r\n\r\n\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport { render } from \"react-dom\";\r\nimport './../App.css';\r\n\r\nimport './../assets/css/login-style.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { SingleSelect } from \"react-select-material-ui\";\r\nimport callMerge from 'material-ui/svg-icons/communication/call-merge';\r\nimport UserContext from '../components/GolbalContext'\r\nimport { FormControl , InputLabel,FormControlLabel, Input, Grid , RadioGroup, Radio, TextField}  from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport {isNotEmpty} from '../util/validation';\r\nimport AlertDialog from '../util/AlertDialog';\r\nimport { fetchCentersOfUser, fetchCentersDetails, fetchEnrollmentDetailsByBatchId,fetchAllStudentDataByEngagementIdAndReadyForDropout,fetchBatchDetails,fetchStudentDropoutDetailByEngagementId,markDropout,changeStudentStatus,\r\n  fectUserDetails,fetchRunningBatchDetails} from '../util/api';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\r\nconst alertDialogOptions = {\r\n  message: ''\r\n}\r\n\r\nclass Dropout extends Component {\r\n    \r\n  constructor(props) {\r\n    super(props);\r\n     \r\n     this.state = {selectedEngagementId:'',studentDetails:[],dropoutDetails:[],center: [],\r\n     batch:[],centerId: '',batchId:'', dropoutReason:'',\r\n     alertDialogFlag:false , errors : {dropoutReason:''} , \r\n              \r\n         dropoutReasons : [\r\n          { value: 'Others', label: 'Others' },\r\n          { value: 'Not Interested', label: 'Not Interested' },\r\n          { value: 'Got other job', label: 'Got other job' },\r\n          { value: 'Health Issues', label: 'Health Issues' },\r\n          { value: 'Moved to other place', label: 'Moved to other place' },\r\n          { value: 'Not Eligible', label: 'Not Eligible' },\r\n          { value: 'Marriage', label: 'Marriage' },\r\n          { value: 'Higher Education', label: 'Higher Education'},\r\n          { value: 'Maternity', label: 'Maternity' } \r\n        ]\r\n        };    \r\n        this.formData = {engagementId:[]}; \r\n       this.handleSelectChange = this.handleSelectChange.bind(this);\r\n        this.fetchCenterById();\r\n }\r\n getMuiTheme = () => createMuiTheme({\r\n  overrides: {\r\n    MuiTableBody: {\r\n      root: {\r\n      \r\n      }\r\n    }\r\n  },\r\n  typography: {\r\n    \"fontSize\":12,\r\n   }\r\n})\r\n\r\n fetchCenterById() {\r\n  //alert(\"hi\");\r\n  let centerId = [];\r\n  let batchId =[];\r\n\r\n  let currentComponent = this;\r\n  fetchCentersOfUser(UserContext.userid).then((jsondata) => {\r\n    let userJsonObjects = JSON.parse(jsondata.data);\r\n    currentComponent.setState({ userScope: userJsonObjects });\r\n    userJsonObjects.forEach(user => {\r\n      centerId.push({ \"id\": user.centerId });\r\n    })\r\n  }).then(function (result) {\r\n    let centerDetails = [];\r\n    fetchCentersDetails(JSON.stringify(centerId)).then((jsondata) => {\r\n      let centerObjects = JSON.parse(jsondata.data);\r\n      centerObjects.forEach(center => {\r\n        centerDetails.push({ label: center.name, value: center.id });\r\n      })\r\n      currentComponent.setState({ center: centerDetails });\r\n    });\r\n  })\r\n}\r\n\r\nhandleSelectChange(selectname,event) {\r\nlet centerId=[];\r\nlet batchId=[];\r\nif (selectname ==\"centerId\"){\r\n  let batchDetails = [];\r\n  centerId.push({ \"id\": event});\r\n  batchId.push({\"id\":event});\r\n  \r\n  fetchRunningBatchDetails(event).then((jsondata) => {\r\n    let batchObjects = JSON.parse(jsondata.data);\r\n    //alert(JSON.stringify(batchObjects));\r\n    batchObjects.forEach(batch => {\r\n      batchDetails.push({ label: batch.batchName, value: batch.batchId });\r\n    })\r\n    this.setState({\r\n      batch: batchDetails\r\n    });\r\n    this.setState({batchId:\"\"});\r\n    this.setState({studentDetails:[]});\r\n  });\r\n  \r\n}\r\nelse{\r\nthis.fetchStudentsByBatchId(event);\r\n}\r\nthis.setState({[selectname]: event})\r\n}\r\n\r\nhandleDropoutReasonSelectChange(selectname,event) {\r\n  this.setState({\r\n       [selectname]: event\r\n     })\r\nthis.validate(selectname,event);\r\n    }\r\n\r\nfetchDropoutDetilByEngagementId(engagementId){\r\n  let localThis=this;\r\n  let studentDropoutInfo=[];\r\nfetchStudentDropoutDetailByEngagementId(engagementId).then((jsondata) =>{\r\n  if(jsondata.data){\r\n      let dropoutDetails = JSON.parse(jsondata.data);  \r\n      for(var i=0;i<dropoutDetails.length;i++){\r\n        let engagementId=dropoutDetails[i].engagementId;\r\n          let effortSpent=dropoutDetails[i].effortSpent;\r\n            fectUserDetails(dropoutDetails[i].createdBy).then((jsondata) =>{\r\n            let jsonobjects = JSON.parse(jsondata.data);\r\n            var  details =\r\n            {    \r\n                'engagementId':engagementId,\r\n                'effortSpent':effortSpent,\r\n                'createdBy':jsonobjects[0].firstName\r\n            }; \r\n            studentDropoutInfo.push(details);  \r\n          }).then(function(result){\r\n            localThis.setState({dropoutDetails:[]},()=>{localThis.setState({dropoutDetails:studentDropoutInfo})});\r\n          });  \r\n    } \r\n  \r\n  }    \r\n  this.setState({dropoutDetails:[]},()=>{this.setState({dropoutDetails:studentDropoutInfo})});\r\n});\r\n\r\n}\r\n fetchStudentsByBatchId(batchId){\r\n\r\n  fetchEnrollmentDetailsByBatchId(batchId).then((jsondata) => {\r\n    let enrollmentDetails = JSON.parse(jsondata.data);\r\n    this.formData.engagementId.length=0;\r\n    enrollmentDetails.map(item => {this.formData.engagementId.push({engagementId:item.engagementId}) });\r\n    fetchAllStudentDataByEngagementIdAndReadyForDropout(JSON.stringify(this.formData.engagementId)).then((jsondata) => {\r\n      let studentInfo=[];\r\n  if(jsondata.data){\r\n      let studentDetails = JSON.parse(jsondata.data);   \r\n      for(var i=0;i<studentDetails.length;i++){\r\n        if(studentDetails[i].status===\"Enrolled\"){\r\n        var  details =\r\n        {    'engagement_id':studentDetails[i].engagementId,\r\n            'name' :studentDetails[i].firstName+\" \"+studentDetails[i].lastName,\r\n            'status':studentDetails[i].status\r\n        }; \r\n        studentInfo.push(details);    \r\n      }\r\n    } \r\n  \r\n  }    \r\n  \r\n  this.setState({studentDetails:[]},()=>{this.setState({studentDetails:studentInfo})});\r\n  studentInfo=null;\r\n  }); \r\n  });\r\n }\r\n mySubmitHandler = (event) => {\r\n   event.preventDefault();\r\n   if(this.validateForm(this.state.errors)){\r\n   this.markDropout(); \r\n   }\r\n  }\r\n\r\n validate = (name,value)=>{\r\n  let errors = this.state.errors;\r\n  switch (name) {\r\n    case 'dropoutReason': errors.dropoutReason =isNotEmpty(value);\r\n      break;\r\n      default:\r\n       break;\r\n}\r\n\r\n this.setState({errors});\r\n}\r\n\r\nvalidateForm(errors) \r\n{\r\n  this.validate(\"dropoutReason\",this.state.dropoutReason);\r\n  this.state.errors = errors;\r\n  this.setState({errors});\r\n  let valid = true;\r\n    Object.values(errors).forEach(\r\n      // if we have an error string set valid to false\r\n      (val) => val.length > 0 && (valid = false)\r\n    );\r\n    return valid;\r\n}\r\n\r\nmarkDropout()\r\n{\r\n  let dropoutData='\"engagementId\":'+this.state.selectedEngagementId+',\"dropoutReason\":\"'+this.state.dropoutReason+'\",\"status\":\"Dropout\"';\r\n    let statusChangeData='\"engagementId\":'+this.state.selectedEngagementId+',\"status\":\"Dropout\",\"updatedBy\":0';\r\n      this.setState({alertDialogFlag:false});\r\n      markDropout(dropoutData).then((jsondata) => { \r\n         changeStudentStatus(statusChangeData).then((jsondata) => { \r\n           alertDialogOptions.message=\"Data Saved Sucessfully\";\r\n           this.setState({alertDialogFlag:true});\r\n           this.fetchStudentsByBatchId(this.state.batchId);\r\n           this.setState({dropoutDetails:[]});\r\n           this.setState({dropoutReason:''});\r\n         });\r\n    });\r\n}\r\n\r\nrender()\r\n{\r\n\r\n  const columns = \r\n  [\r\n  {label: 'Engagement Id', name: 'engagement_id',headerStyle: {color:'#FF9800'}},\r\n  {label: 'Name', name: 'name',headerStyle: {color:'#FF9800'}},\r\n  {label: 'Status', name: 'status',headerStyle: {color:'#FF9800'}}  \r\n ]\r\n \r\n  const options = {\r\n    filterType: \"dropdown\",\r\n    responsive: \"stacked\",\r\n    sortDirection: \"desc\",\r\n    selectableRows:\"single\",\r\n    rowsPerPage:10,\r\n    selectableRowsOnClick: true,\r\n    disableToolbarSelect:true,\r\n    textLabels: {\r\n      body: {\r\n        noMatch: <span style={{color:\"blue\"}}>Please select batch/ another batch to load students here</span>\r\n      }\r\n    },\r\n    onRowsSelect: (currentRowsSelected,allRows) => {\r\n      var index=currentRowsSelected[0].dataIndex;\r\n      var engagementId= this.state.studentDetails[index].engagement_id      \r\n      if(this.state.selectedEngagementId===engagementId){\r\n        this.setState({selectedEngagementId:''})\r\n        this.state.selectedEngagementId=''; \r\n      }\r\n      else{\r\n        this.setState({selectedEngagementId:this.state.studentDetails[index].engagement_id})\r\n        this.state.selectedEngagementId=this.state.studentDetails[index].engagement_id; \r\n        this.state.selectedBeneficiaryName=this.state.studentDetails[index].name;\r\n        this.fetchDropoutDetilByEngagementId(this.state.studentDetails[index].engagement_id);\r\n      }\r\n\r\n     }\r\n  };\r\n\r\n return (\r\n<div style = {{ width : '100%' }}>\r\n <form onSubmit={this.mySubmitHandler} method=\"post\">  \r\n <fieldset id = \"roleBasedDisable\">\r\n<Grid id=\"hideData\" container spacing={2}>\r\n     <br></br>\r\n     <Grid item xs={12} sm={3}>\r\n     <SingleSelect  name=\"centerName\" id=\"centerName\"\r\n              placeholder = \"Select Center\"              \r\n              options={this.state.center}  \r\n              onChange={this.handleSelectChange.bind(this, 'centerId')}\r\n              value={this.state.centerId || '' } \r\n              helperText={this.state.errors.centerName}  error={this.state.errors.centerName==''?false:true}    \r\n            />\r\n     </Grid>\r\n     <Grid item xs={12} sm={3}>\r\n     <SingleSelect name=\"batchName\" id=\"batchName\"\r\n              placeholder = \"Select Batch\"              \r\n              options={this.state.batch}  \r\n              onChange={this.handleSelectChange.bind(this, 'batchId')}\r\n              value={this.state.batchId || '' } key={this.state.batchId}\r\n              helperText={this.state.errors.batchName}  error={this.state.errors.batchName==''?false:true}    \r\n            />\r\n      </Grid>\r\n   </Grid>\r\n   <br></br>\r\n   <br></br>\r\n   <MuiThemeProvider theme={this.getMuiTheme()}>    \r\n      <MUIDataTable\r\n       title={\"Enrolled Student list\"} label={\"List of Students\"}\r\n        data={this.state.studentDetails} columns={columns} \r\n        options={options} \r\n        />\r\n    </MuiThemeProvider>\r\n    <br></br>\r\n    <br></br>\r\n    { \r\n  (this.state.selectedEngagementId!='') && \r\n    <Grid id=\"hideData\" container spacing={2}>\r\n     <br></br>\r\n     <Grid item xs={12} sm={3}>\r\n     <SingleSelect  name=\"dropoutReason\" id=\"dropoutReason\"\r\n              placeholder = \"Select Reason\"              \r\n              options={this.state.dropoutReasons}  \r\n              onChange={this.handleDropoutReasonSelectChange.bind(this, 'dropoutReason')}\r\n              value={this.state.dropoutReason || '' }   key={this.state.dropoutReason}\r\n            />\r\n     </Grid>\r\n     <Grid item xs={12} sm={3}>\r\n     <Button type=\"submit\" variant=\"contained\" color=\"primary\" size=\"small\">Dropout</Button>\r\n     </Grid>\r\n   </Grid>\r\n}\r\n   <br></br>\r\n   </fieldset>\r\n\r\n\r\n   { \r\n  (this.state.selectedEngagementId!='') && \r\n  <table>\r\n  <tr>\r\n    <th>Engagement Id</th>\r\n    <th>Effort Spent</th>\r\n    <th>Created By</th>\r\n  </tr>\r\n  {this.state.dropoutDetails.map(row=>(\r\n  <tr>\r\n    <td>{row.engagementId}</td>\r\n    { (row.effortSpent.length<=10) && <td> {row.effortSpent} </td> }\r\n    { (row.effortSpent.length>10) && <td> {row.effortSpent.substring(0,10)} &nbsp;\r\n    <a href=\"#\" title={row.effortSpent}>read more</a>\r\n    </td> }   \r\n    <td>{row.createdBy}</td>\r\n  </tr>\r\n  ))}\r\n  \r\n</table>\r\n \r\n}\r\n\r\n </form>\r\n <br></br>\r\n { \r\n  (this.state.alertDialogFlag) && <AlertDialog   message={alertDialogOptions.message}></AlertDialog>\r\n    }\r\n </div>\r\n\r\n );\r\n}\r\n\r\n}\r\n\r\nexport default Dropout;"]},"metadata":{},"sourceType":"module"}