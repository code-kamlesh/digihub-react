{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\PlacementDetails.js\";\n\n/*!\r\n\r\n=========================================================\r\n* Material Dashboard React - v1.8.0\r\n=========================================================\r\n\r\n\r\n* Coded by Ashish S\r\n\r\n=========================================================\r\n\r\n\r\n*/\nimport React, { Component } from 'react';\nimport { render } from \"react-dom\";\nimport './../App.css';\nimport './../assets/css/login-style.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { SingleSelect } from \"react-select-material-ui\";\nimport callMerge from 'material-ui/svg-icons/communication/call-merge';\nimport UserContext from '../components/GolbalContext';\nimport { FormControl, InputLabel, FormControlLabel, Input, Grid, RadioGroup, Radio, TextField } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport { isNotEmpty, isNotZero } from './../util/validation';\nimport { roleBasedReadonly, checkButton } from '../util/validation';\nimport AlertDialog from '../util/AlertDialog';\nimport Paper from '@material-ui/core/Paper';\nimport { savePlacementDetails, deleteDocumentById, fetchUserDocumentsByUserIdAndTypeOfDocument, fectAddressDetailsByAddressID, fetchAddressDetailsBasedOnPincode, fetchPlacementDetailsByEngagementId, fetchAllCenter, saveAddressDetails, uploadDocument, fetchEmployerDetails } from '../util/api';\nimport MUIDataTable from \"mui-datatables\";\nimport AddressForPlacement from \"./AddressForPlacement\";\nimport underscore from 'underscore';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { DropzoneArea } from 'material-ui-dropzone';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { serviceEndPoint } from '../util/serviceEndPoint';\nimport Checkbox from '@material-ui/core/Checkbox';\nconst alertDialogOptions = {\n  message: ''\n};\n\nclass PlacementDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const target = event.target;\n      let value = target.value;\n      const name = target.name;\n      this.setState({\n        placementData: { ...this.state.placementData\n        }\n      });\n    };\n\n    this.deleteDocument = basicDocId => {\n      deleteDocumentById(basicDocId);\n      this.getDocuments();\n    };\n\n    this.handleCheckboxChange = event => {\n      this.setState({\n        placementData: { ...this.state.placementData,\n          [event.target.name]: event.target.checked\n        }\n      });\n    };\n\n    this.mySubmitHandler = event => {\n      // alert(\"check\");\n      event.preventDefault();\n      this.state.disabled = true;\n      this.validate(\"interviewStatus\", this.state.placementData.interviewStatus);\n\n      if (this.state.errors.interviewStatus === '') {\n        if (this.state.placementData.interviewStatus === 'Placed' || this.state.placementData.interviewStatus === 'Offer Not Taken') {\n          this.validatePlacedAndOfferNotTaken(\"empId\", this.state.placementData.empId);\n          this.validatePlacedAndOfferNotTaken(\"domainName\", this.state.placementData.domainName);\n          this.validatePlacedAndOfferNotTaken(\"spocName\", this.state.placementData.spocName);\n          this.validatePlacedAndOfferNotTaken(\"designation\", this.state.placementData.designation);\n          this.validatePlacedAndOfferNotTaken(\"spocPhoneNumber\", this.state.placementData.spocPhoneNumber);\n          this.validatePlacedAndOfferNotTaken(\"annualSal\", this.state.placementData.annualSal);\n          this.validatePlacedAndOfferNotTaken(\"offerDate\", this.state.placementData.offerDate);\n          this.validatePlacedAndOfferNotTaken(\"joiningDate\", this.state.placementData.joiningDate);\n          this.validatePlacedAndOfferNotTaken(\"joined\", this.state.placementData.joined);\n          this.validateAddress(\"pincode\", this.state.address.pincode);\n          this.validateAddress(\"villageName\", this.state.address.villageName);\n          this.validateAddress(\"cityName\", this.state.address.cityName);\n          this.validateAddress(\"state\", this.state.address.state);\n          this.validateAddress(\"district\", this.state.address.district);\n          let errorsExist = true;\n          Object.values(this.state.errors).forEach(val => val.length > 0 && (errorsExist = false));\n\n          if (errorsExist) {\n            this.submitPlacementDetails();\n          }\n        } else if (this.state.placementData.interviewStatus === 'Not Placed') {\n          this.validateNotPlaced(\"reason\", this.state.placementData.reason);\n          let errorsExist = true;\n          Object.values(this.state.errors).forEach(val => val.length > 0 && (errorsExist = false));\n\n          if (errorsExist) {\n            this.submitPlacementDetails();\n          }\n        } else if (this.state.placementData.interviewStatus === 'Not Interested') {\n          this.validateNotInterested(\"reason\", this.state.placementData.reason);\n          let errorsExist = true;\n          Object.values(this.state.errors).forEach(val => val.length > 0 && (errorsExist = false));\n\n          if (errorsExist) {\n            this.submitPlacementDetails();\n          }\n        } else if (this.state.placementData.interviewStatus === 'Entrepreneurship') {\n          this.validateAddress(\"pincode\", this.state.address.pincode);\n          this.validateAddress(\"villageName\", this.state.address.villageName);\n          this.validateAddress(\"cityName\", this.state.address.cityName);\n          this.validateAddress(\"state\", this.state.address.state);\n          this.validateAddress(\"district\", this.state.address.district);\n          this.validateEntrepreneurship(\"noOfPeopleEmployed\", this.state.placementData.noOfPeopleEmployed);\n          let errorsExist = true;\n          Object.values(this.state.errors).forEach(val => val.length > 0 && (errorsExist = false));\n\n          if (errorsExist) {\n            this.submitPlacementDetails();\n          }\n        } else if (this.state.placementData.interviewStatus === 'Rejected') {\n          this.validateRejected(\"empId\", this.state.placementData.empId);\n          let errorsExist = true;\n          Object.values(this.state.errors).forEach(val => val.length > 0 && (errorsExist = false));\n\n          if (errorsExist) {\n            this.submitPlacementDetails();\n          }\n        } else {\n          this.submitPlacementDetails();\n        }\n      } // authentication response and redirect to error or dashbaord page\n\n\n      this.setState({\n        errors: this.state.errors\n      });\n\n      if (checkButton(this.state.errors)) {} else {\n        this.state.disabled = true;\n      }\n    };\n\n    this.validate = (name, value) => {\n      let errors = this.state.errors;\n\n      switch (name) {\n        case 'interviewStatus':\n          errors.interviewStatus = isNotEmpty(value);\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors\n      });\n    };\n\n    this.validateNotInterested = (name, value) => {\n      let errors = this.state.errors;\n\n      switch (name) {\n        case 'reason':\n          errors.reason = isNotEmpty(value);\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors\n      });\n    };\n\n    this.validateEntrepreneurship = (name, value) => {\n      let errors = this.state.errors;\n\n      switch (name) {\n        case 'noOfPeopleEmployed':\n          errors.noOfPeopleEmployed = isNotEmpty(value);\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors\n      });\n    };\n\n    this.validateNotPlaced = (name, value) => {\n      let errors = this.state.errors;\n\n      switch (name) {\n        case 'reason':\n          errors.reason = isNotEmpty(value);\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors\n      });\n    };\n\n    this.validateRejected = (name, value) => {\n      let errors = this.state.errors;\n\n      switch (name) {\n        case 'empId':\n          errors.empId = isNotZero(value);\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors\n      });\n    };\n\n    this.validatePlacedAndOfferNotTaken = (name, value) => {\n      let errors = this.state.errors;\n\n      switch (name) {\n        case 'empId':\n          errors.empId = isNotEmpty(value);\n          break;\n\n        case 'domainName':\n          errors.domainName = isNotEmpty(value);\n          break;\n\n        case 'spocName':\n          errors.spocName = isNotEmpty(value);\n          break;\n\n        case 'designation':\n          errors.designation = isNotEmpty(value);\n          break;\n\n        case 'spocPhoneNumber':\n          errors.spocPhoneNumber = isNotEmpty(value);\n          break;\n\n        case 'annualSal':\n          errors.annualSal = isNotEmpty(value);\n          break;\n\n        case 'offerDate':\n          errors.offerDate = isNotEmpty(value);\n          break;\n\n        case 'joiningDate':\n          errors.joiningDate = isNotEmpty(value);\n          break;\n\n        case 'joined':\n          errors.joined = isNotEmpty(value);\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors\n      });\n    };\n\n    this.validateAddress = (name, value) => {\n      let errors = this.state.errors;\n\n      switch (name) {\n        case 'pincode':\n          errors.pincode = isNotEmpty(value);\n          break;\n\n        case 'villageName':\n          errors.village = isNotEmpty(value);\n          break;\n\n        case 'cityName':\n          errors.cityName = isNotEmpty(value);\n          break;\n\n        case 'state':\n          errors.state = isNotEmpty(value);\n          break;\n\n        case 'district':\n          errors.district = isNotEmpty(value);\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors\n      });\n    };\n\n    this.downloadDocuments = value => {\n      let formData = new FormData();\n      formData.append('data', '{\"token\" : \"\", \"action\" : \"downloadDocument\", \"data\" : [{\"basicDocId\":' + value + '}]}');\n      fetch(serviceEndPoint.documentServiceEndPoint, {\n        method: 'post',\n        headers: {\n          'Authorization': 'Bearer ' + UserContext.token\n        },\n        body: formData\n      }).then(response => response.json()).then(jsondata => {\n        let jsonobjects = JSON.parse(jsondata.data);\n        var url = serviceEndPoint.downloadDocument + jsonobjects[0].documentPath + \"\";\n        window.open(url, \"_blank\");\n      });\n    };\n\n    this.uploadDocuments = e => {\n      e.preventDefault();\n      var levelOfDocument = \"G\";\n      let localThis = this;\n      let reader = new FileReader();\n      reader.readAsDataURL(this.state.file);\n\n      reader.onload = function () {\n        let document = reader.result;\n        localThis.setState({\n          alertDialogFlag: false\n        });\n        uploadDocument(localThis.state.dbUserId, localThis.state.engagementId, localThis.state.typeOfDocument, 'PD', localThis.state.typeOfDocument, document, \"\").then(res => {});\n      };\n    };\n\n    this.onFileChangeHandler = files => {\n      this.setState({\n        file: files[0]\n      });\n    };\n\n    this.resetForm = () => {\n      this.setState({\n        placementData: { ...this.state.placementData,\n          interviewStatus: '',\n          spocName: '',\n          spocPhoneNumber: '',\n          domainName: '',\n          reason: '',\n          designation: '',\n          annualSal: '',\n          offerDate: '',\n          joiningDate: '',\n          joined: '',\n          empId: ''\n        }\n      });\n      this.setState({\n        address: { ...this.state.address,\n          pincode: '',\n          villageName: '',\n          district: '',\n          state: '',\n          cityName: ''\n        }\n      });\n    };\n\n    this.state = {\n      status: props.status,\n      engagementId: props.engagementId,\n      alertDialogFlag: false,\n      disabled: false,\n      flag: \"0\",\n      errors: {\n        joiningDate: '',\n        offerDate: '',\n        annualSal: '',\n        spocPhoneNumber: '',\n        designation: '',\n        pincode: '',\n        noOfPeopleEmployed: '',\n        spocName: ''\n      },\n      dbUserId: props.id,\n      info: [],\n      placementData: {\n        annualSal: '0',\n        empId: 0,\n        noOfPeopleEmployed: '0',\n        joined: '',\n        spocPhoneNumber: '',\n        spocName: '',\n        designation: '',\n        domainName: '',\n        addressId: \"0\",\n        createdBy: UserContext.userid,\n        updatedBy: UserContext.userid,\n        engagementId: props.engagementId,\n        dbUserId: props.id,\n        interviewDate: \"\",\n        interviewStatus: \"\",\n        interviewRemark: \"\",\n        offerDate: \"\",\n        joiningDate: \"\",\n        isActive: \"Y\",\n        isDocumentsUploaded: '',\n        reason: ''\n      },\n      center: [],\n      centerData: [],\n      documents: [],\n      info: [{\n        \"createdBy\": UserContext.userid,\n        \"updatedBy\": UserContext.userid,\n        \"isActive\": \"Y\",\n        \"dbUserId\": props.id\n      }],\n      intStatus: [{\n        value: 'Placed',\n        label: 'Placed'\n      }, {\n        value: 'Offer Not Taken',\n        label: 'Offer Not Taken'\n      }, {\n        value: 'Not Placed',\n        label: 'Not Placed'\n      }, {\n        value: 'Not Interested',\n        label: 'Not Interested'\n      }, {\n        value: 'Entrepreneurship',\n        label: 'Entrepreneurship'\n      }, {\n        value: 'Self Employed',\n        label: 'Self Employed'\n      }, {\n        value: 'Rejected',\n        label: 'Rejected'\n      }],\n      offerNotTakenReason: [{\n        value: 'Low salary',\n        label: 'Low salary'\n      }, {\n        value: 'Migration',\n        label: 'Migration'\n      }, {\n        value: 'Family problem',\n        label: 'Family problem'\n      }, {\n        value: 'health issues',\n        label: 'health issues'\n      }, {\n        value: 'further studies',\n        label: 'further studies'\n      }, {\n        value: 'marriage',\n        label: 'marriage'\n      }],\n      notPlacedReasons: [{\n        value: 'Other',\n        label: 'Other'\n      }, {\n        value: 'Not Interested',\n        label: 'Not Interested'\n      }, {\n        value: 'Got other job',\n        label: 'Got other job'\n      }, {\n        value: 'Health Issues',\n        label: 'Health Issues'\n      }, {\n        value: 'Moved to other place',\n        label: 'Moved to other place'\n      }, {\n        value: 'Not Eligible',\n        label: 'Not Eligible'\n      }, {\n        value: 'Marriage',\n        label: 'Marriage'\n      }, {\n        value: 'Higher Education',\n        label: 'Higher Education'\n      }, {\n        value: 'Maternity',\n        label: 'Maternity'\n      }],\n      notInterestedReason: [{\n        value: 'family issue',\n        label: 'family issue'\n      }, {\n        value: 'medical problem',\n        label: 'medical problem'\n      }, {\n        value: 'higher studies',\n        label: 'higher studies'\n      }],\n      studStatus: [{\n        value: 'Inter',\n        label: 'Inter'\n      }, {\n        value: 'Joined',\n        label: 'Joined'\n      }],\n      domains: [{\n        value: 'Banking',\n        label: 'Banking'\n      }, {\n        value: 'Retails',\n        label: 'Retails'\n      }, {\n        value: 'House Keeping',\n        label: 'House Keeping'\n      }, {\n        value: 'F and B',\n        label: 'F and B'\n      }, {\n        value: 'Android',\n        label: 'Android'\n      }, {\n        value: 'QSR',\n        label: 'QSR'\n      }, {\n        value: 'Electrical',\n        label: 'Electrical'\n      }],\n      join: [{\n        value: 'Yes',\n        label: 'Yes'\n      }, {\n        value: 'No',\n        label: 'No'\n      }],\n      typeOfDocument: null,\n      file: null,\n      typeOfProofData: [{\n        value: 'AgeProof',\n        label: 'Age Proof'\n      }, {\n        value: 'ApplicationForm',\n        label: 'Application Form'\n      }, {\n        value: 'CasteCertificate',\n        label: 'Caste Certificate'\n      }, {\n        value: 'ContributionReceipt',\n        label: 'Contribution Receipt'\n      }, {\n        value: 'EducationProof',\n        label: 'Education Proof'\n      }, {\n        value: 'FirstDayPicture',\n        label: 'First Day Picture'\n      }, {\n        value: 'LastDayPicture',\n        label: 'Last Day Picture'\n      }, {\n        value: 'Medicalfitnesscertificate',\n        label: 'Medical fitness certificate'\n      }, {\n        value: 'PhotoProof',\n        label: 'Photo Proof'\n      }, {\n        value: 'StudentPicture',\n        label: 'Student Picture'\n      }, {\n        value: 'Studentsigned',\n        label: 'Student signed'\n      }],\n      typeOfDocumentData: [{\n        value: 'Offer Letter',\n        label: 'Offer Letter'\n      }, {\n        value: 'Joining Letter',\n        label: 'Joining Letter'\n      }, {\n        value: 'Pay Slip',\n        label: 'Pay Slip'\n      }, {\n        value: 'Student Declaration',\n        label: 'Student Declaration'\n      }, {\n        value: 'Pic Of Business',\n        label: 'Pic Of Business'\n      }, {\n        value: 'Registration Certificate',\n        label: 'Registration Certificate'\n      }],\n      address: {\n        entityId: props.engagementId,\n        createdBy: UserContext.userid,\n        'isActive': 'Y',\n        'type': 'PD',\n        'entityType': 'S',\n        pincode: \"\",\n        addressLine1: \"\",\n        addressLine2: \"\",\n        district: \"\",\n        state: \"\",\n        cityName: \"\",\n        villageName: \"\"\n      },\n      state: [],\n      district: [],\n      pincodes: [],\n      city: [],\n      village: [],\n      engagementId: props.engagementId\n    };\n    this.formData = {\n      state: [],\n      district: [],\n      pincodes: [],\n      city: [],\n      village: []\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.getEmployerDetails(); // this.getCenterMasters();\n\n    this.getDocuments(); //alert(this.state.engagementId);\n\n    if (props.id != null && props.id != undefined) {\n      this.fetchPlacementdetailsFouUser(props.engagementId);\n    }\n  }\n\n  componentDidMount() {\n    roleBasedReadonly();\n  }\n\n  getDocuments() {\n    fetchUserDocumentsByUserIdAndTypeOfDocument(this.state.dbUserId, 'PD').then(jsondata => {\n      let jsonobjects = JSON.parse(jsondata.data);\n      this.setState({\n        documents: [...this.state.documents, ...jsonobjects]\n      });\n    });\n  }\n\n  handleEditChange(obj) {\n    this.setState({\n      placementData: obj\n    }, () => {\n      if (this.state.placementData.interviewStatus === 'Placed' || this.state.placementData.interviewStatus === 'Offer Not Taken' || this.state.placementData.interviewStatus === 'Entrepreneurship') {\n        this.getAddressDetailsByAddressID(this.state.placementData.addressId);\n      }\n    });\n  }\n\n  getAddressDetailsByAddressID(addressId) {\n    fectAddressDetailsByAddressID(addressId).then(jsondata => {\n      let addressDetails = JSON.parse(jsondata.data);\n      this.setState({\n        address: addressDetails[0]\n      }, () => {\n        this.getAddressdataBasedOnPin(this.state.address.pincode);\n      });\n    });\n  }\n\n  getAddressdataBasedOnPin(pincode) {\n    fetchAddressDetailsBasedOnPincode(pincode).then(jsondata => {\n      let jsonobjects = JSON.parse(jsondata.data);\n      let taluk = [];\n      let pincode = [];\n      let cityVillage = [];\n      let states = [];\n      let district = [];\n      this.formData.village.length = 0;\n      this.formData.pincodes.length = 0;\n      this.formData.city.length = 0;\n      this.formData.state.length = 0;\n      this.formData.district.length = 0;\n      jsonobjects.map(item => {\n        cityVillage.push({\n          label: item.cityVillage,\n          value: item.id\n        });\n      });\n      cityVillage = underscore.uniq(cityVillage, true, \"label\");\n      cityVillage.map(item => {\n        this.formData.village.push({\n          label: item.label,\n          value: item.label.toString()\n        });\n      });\n      this.setState({\n        village: this.formData.village\n      });\n      jsonobjects.map(item => {\n        taluk.push({\n          label: item.taluk,\n          value: item.id\n        });\n      });\n      taluk = underscore.uniq(taluk, true, \"label\");\n      taluk.map(item => {\n        this.formData.city.push({\n          label: item.label,\n          value: item.label.toString()\n        });\n      });\n      this.setState({\n        city: this.formData.city\n      });\n      jsonobjects.map(item => {\n        states.push({\n          label: item.state,\n          value: item.id\n        });\n      });\n      states = underscore.uniq(states, true, \"label\");\n      states.map(item => {\n        this.formData.state.push({\n          label: item.label,\n          value: item.value.toString()\n        });\n      });\n      this.setState({\n        state: this.formData.state\n      }, () => {\n        console.log(this.state.state);\n      });\n      jsonobjects.map(item => {\n        district.push({\n          label: item.district,\n          value: item.id\n        });\n      });\n      district = underscore.uniq(district, true, \"label\");\n      district.map(item => {\n        this.formData.district.push({\n          label: item.label,\n          value: item.value.toString()\n        });\n      });\n      this.setState({\n        district: this.formData.district\n      });\n    });\n  }\n\n  handleSelectChangeDoc(selectname, event) {\n    this.setState({\n      [selectname]: event\n    });\n  }\n\n  handlePlacementSelectChange(selectname, event) {\n    this.setState({\n      placementData: { ...this.state.placementData,\n        [selectname]: event\n      }\n    });\n    this.validate(selectname, event);\n  }\n\n  handleSelectChange(selectname, event) {\n    let value = 0;\n    let target = null;\n\n    try {\n      target = event.target;\n      value = target.value;\n    } catch (e) {\n      value = event;\n    }\n\n    this.setState({\n      \"disabled\": false\n    });\n    this.setState({\n      placementData: { ...this.state.placementData,\n        [selectname]: event\n      }\n    }); //   this.setState({\n    //     errors: {\n    //       ...this.state.errors,\n    //       [selectname] : {\n    //         'label' : \"\" , \n    //         'value' : false\n    //       }\n    //     }\n    // });\n\n    if (this.state.placementData.interviewStatus === 'Not Placed') {\n      this.validateNotPlaced(selectname, event);\n    } else if (this.state.placementData.interviewStatus === 'Not Interested') {\n      this.validateNotInterested(selectname, event);\n    } else if (this.state.placementData.interviewStatus === 'Placed' || this.state.placementData.interviewStatus === 'Offer Not Taken') {\n      this.validatePlacedAndOfferNotTaken(selectname, event);\n    } else if (this.state.placementData.interviewStatus === 'Rejected') {\n      this.validateRejected(selectname, event);\n    }\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    let value = target.value;\n    const name = target.name;\n    this.setState({\n      \"disabled\": false\n    }); //   this.setState({\n    //     errors: {\n    //       ...this.state.errors,\n    //       [name] : {\n    //         'label' : \"\" , \n    //         'value' : false\n    //       }\n    //     }\n    // });\n\n    this.setState({\n      placementData: { ...this.state.placementData,\n        [name]: value\n      }\n    });\n\n    if (this.state.placementData.interviewStatus === 'Entrepreneurship') {\n      this.validateEntrepreneurship(name, value);\n    } else if (this.state.placementData.interviewStatus === 'Placed' || this.state.placementData.interviewStatus === 'Offer Not Taken') {\n      this.validatePlacedAndOfferNotTaken(name, value);\n    }\n  }\n\n  fetchPlacementdetailsFouUser(engagementId) {\n    let placementInfo = [];\n    fetchPlacementDetailsByEngagementId(engagementId).then(jsondata => {\n      //alert(JSON.stringify(jsondata));\n      let placementDetailsOfUser = JSON.parse(jsondata.data);\n\n      for (var i = 0; i < placementDetailsOfUser.length; i++) {\n        var details = {\n          // 'employer_name':placementDetailsOfUser[i].employerName, \n          'interview_status': placementDetailsOfUser[i].interviewStatus,\n          'Reason': placementDetailsOfUser[i].reason,\n          'annual_sal': placementDetailsOfUser[i].annualSal,\n          'action': /*#__PURE__*/React.createElement(EditIcon, {\n            style: {\n              color: \"blue\"\n            },\n            onClick: this.handleEditChange.bind(this, placementDetailsOfUser[i]),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 30\n            }\n          })\n        };\n        placementInfo.push(details);\n      }\n\n      this.setState({\n        info: placementInfo\n      });\n    });\n  }\n\n  getEmployerDetails() {\n    fetchEmployerDetails(\"Active Partner\", \"%Placement%\").then(jsondata => {\n      if (jsondata.appError == null) {\n        let jsonobjects = JSON.parse(jsondata.data);\n        jsonobjects.map(item => {\n          this.state.center.push({\n            label: item.accountName,\n            value: item.id\n          });\n        });\n      }\n    });\n  }\n\n  getCenterMasters(ids) {\n    fetchAllCenter().then(jsondata => {\n      console.log(jsondata);\n\n      if (jsondata.appError == null) {\n        let jsonobjects = JSON.parse(jsondata.data); // alert(JSON.stringify(jsonobjects));\n\n        jsonobjects.map(item => {\n          this.state.center.push({\n            label: item.name,\n            value: item.id\n          });\n        }); // this.setState({centerData : jsonobjects});\n      }\n\n      return true;\n    }).then(response => response);\n  }\n\n  handleAddressInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      address: { ...this.state.address,\n        [name]: value\n      }\n    });\n    this.validate(name, value);\n  }\n\n  handleAddressSelectChange(selectname, event) {\n    this.setState({\n      address: { ...this.state.address,\n        [selectname]: event\n      }\n    });\n    this.validateAddress(selectname, event);\n  }\n\n  handleTypeOfProofSelectChange(selectname, event) {\n    let newVal = event;\n    let stateVal = this.state.documentType;\n    stateVal.indexOf(newVal) === -1 ? stateVal.push(newVal) : stateVal.length === 1 ? stateVal = [] : stateVal.splice(stateVal.indexOf(newVal), 1);\n    this.setState({\n      documentType: stateVal\n    });\n  }\n\n  getPincodeData(selectname, event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      address: { ...this.state.address,\n        [name]: value\n      }\n    });\n    this.validateAddress(name, value);\n\n    if (value.length == 6) {\n      fetchAddressDetailsBasedOnPincode(value).then(jsondata => {\n        let jsonobjects = JSON.parse(jsondata.data);\n        let taluk = [];\n        let pincode = [];\n        let cityVillage = [];\n        let states = [];\n        let district = [];\n        this.formData.village.length = 0;\n        this.formData.pincodes.length = 0;\n        this.formData.city.length = 0;\n        this.formData.state.length = 0;\n        this.formData.district.length = 0;\n        jsonobjects.map(item => {\n          cityVillage.push({\n            label: item.cityVillage,\n            value: item.id\n          });\n        });\n        cityVillage = underscore.uniq(cityVillage, true, \"label\");\n        cityVillage.map(item => {\n          this.formData.village.push({\n            label: item.label,\n            value: item.label.toString()\n          });\n        });\n        this.setState({\n          village: this.formData.village\n        });\n        jsonobjects.map(item => {\n          taluk.push({\n            label: item.taluk,\n            value: item.id\n          });\n        });\n        taluk = underscore.uniq(taluk, true, \"label\");\n        taluk.map(item => {\n          this.formData.city.push({\n            label: item.label,\n            value: item.label.toString()\n          });\n        });\n        this.setState({\n          city: this.formData.city\n        });\n        jsonobjects.map(item => {\n          states.push({\n            label: item.state,\n            value: item.id\n          });\n        });\n        states = underscore.uniq(states, true, \"label\");\n        states.map(item => {\n          this.formData.state.push({\n            label: item.label,\n            value: item.value.toString()\n          });\n        });\n        this.setState({\n          state: this.formData.state\n        }, () => {\n          console.log(this.state.state);\n        });\n        jsonobjects.map(item => {\n          district.push({\n            label: item.district,\n            value: item.id\n          });\n        });\n        district = underscore.uniq(district, true, \"label\");\n        district.map(item => {\n          this.formData.district.push({\n            label: item.label,\n            value: item.value.toString()\n          });\n        });\n        this.setState({\n          district: this.formData.district\n        });\n      });\n    }\n  }\n\n  submitPlacementDetails() {\n    if (this.state.placementData.interviewStatus === 'Placed' || this.state.placementData.interviewStatus === 'Offer Not Taken' || this.state.placementData.interviewStatus === 'Entrepreneurship') {\n      saveAddressDetails(JSON.stringify(this.state.address)).then(jsondata => {\n        let jsonobjects = JSON.parse(jsondata.data); //alert(jsonobjects[0].id);\n\n        this.setState({\n          placementData: { ...this.state.placementData,\n            'addressId': jsonobjects[0].id\n          }\n        }, () => {\n          this.saveAllDetails();\n        });\n        this.setState({\n          alertDialogFlag: false\n        });\n        alertDialogOptions.message = /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"green\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 787,\n            columnNumber: 33\n          }\n        }, \"Placement Details Saved Sucessfully\");\n        this.setState({\n          alertDialogFlag: true\n        });\n      });\n    } else {\n      this.saveAllDetails();\n    }\n  }\n\n  saveAllDetails() {\n    savePlacementDetails(this.state.placementData).then(jsondata => {\n      this.resetForm();\n      this.fetchPlacementdetailsFouUser(this.state.engagementId);\n\n      if (jsondata.appError == null) {\n        let jsonobjects = JSON.parse(jsondata.data);\n        this.setState({\n          alertDialogFlag: false\n        });\n        alertDialogOptions.message = /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"green\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 806,\n            columnNumber: 37\n          }\n        }, \"Placement Details Saved Sucessfully\");\n        this.setState({\n          alertDialogFlag: true\n        });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  }\n\n  render() {\n    const columns = [{\n      label: 'Interview Status',\n      name: 'interview_status',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Reason',\n      name: 'Reason',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Annual Salary',\n      name: 'annual_sal',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Action',\n      name: 'action',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }];\n    const options = {\n      filterType: \"dropdown\",\n      responsive: \"stacked\",\n      sortDirection: \"desc\",\n      selectableRows: 'single',\n      disableToolbarSelect: true,\n      rowsPerPage: 10,\n      selectableRowsOnClick: true\n    };\n    let button;\n    button = /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-end\",\n      id: \"btn\",\n      alignItems: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 857,\n        columnNumber: 12\n      }\n    }, \"  \", /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      type: \"submit\",\n      size: \"small\",\n      color: \"primary\",\n      disabled: this.state.status === \"Enrolled\" ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 857,\n        columnNumber: 97\n      }\n    }, \"Save\"));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 863,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.mySubmitHandler,\n      method: \"post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 864,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      id: \"roleBasedDisable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 865,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 866,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"interviewStatus\",\n      id: \"interviewStatus\",\n      label: \"Interview Status\",\n      onChange: this.handlePlacementSelectChange.bind(this, 'interviewStatus'),\n      value: this.state.placementData.interviewStatus || '',\n      helperText: this.state.errors.interviewStatus,\n      error: this.state.errors.interviewStatus === '' ? false : true,\n      options: this.state.intStatus,\n      key: this.state.placementData.interviewStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 867,\n        columnNumber: 2\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: this.state.placementData.interviewStatus === \"Placed\" || this.state.placementData.interviewStatus === \"Offer Not Taken\" ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 875,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      id: \"hideData\",\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 876,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 877,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 878,\n        columnNumber: 8\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 881,\n        columnNumber: 6\n      }\n    }), this.state.placementData.interviewStatus === \"Offer Not Taken\" && /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 884,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"reason\",\n      id: \"reason\",\n      label: \"Reason\",\n      onChange: this.handleSelectChange.bind(this, 'reason'),\n      value: this.state.placementData.reason || '',\n      options: this.state.offerNotTakenReason,\n      key: this.state.placementData.reason,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 885,\n        columnNumber: 3\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 892,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"empId\",\n      id: \"empId\",\n      label: \"Employer Name\",\n      onChange: this.handleSelectChange.bind(this, 'empId'),\n      value: this.state.placementData.empId || '',\n      helperText: this.state.errors.empId,\n      error: this.state.errors.empId === '' ? false : true,\n      options: this.state.center,\n      key: this.state.placementData.empId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 893,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      id: \"interviewRemark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 902,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 903,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      name: \"spocName\",\n      id: \"spocName\",\n      label: \"SPOC name\",\n      onChange: this.handleInputChange,\n      value: this.state.placementData.spocName || '',\n      helperText: this.state.errors.spocName,\n      error: this.state.errors.spocName === '' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 904,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      id: \"interviewRemark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 913,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 914,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      name: \"spocPhoneNumber\",\n      id: \"spocPhoneNumber\",\n      label: \"SPOC phone NO.\",\n      onInput: e => {\n        e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 10);\n      },\n      onChange: this.handleInputChange,\n      value: this.state.placementData.spocPhoneNumber || '',\n      helperText: this.state.errors.spocPhoneNumber,\n      error: this.state.errors.spocPhoneNumber === '' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 915,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 927,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"domainName\",\n      id: \"domainName\",\n      label: \"Domain\",\n      onChange: this.handleSelectChange.bind(this, 'domainName'),\n      value: this.state.placementData.domainName || '',\n      helperText: this.state.errors.domainName,\n      error: this.state.errors.domainName === '' ? false : true,\n      options: this.state.domains,\n      key: this.state.placementData.domainName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 928,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      id: \"interviewRemark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 935,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 936,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      name: \"designation\",\n      id: \"designation\",\n      label: \"Designation\",\n      onChange: this.handleInputChange,\n      value: this.state.placementData.designation || '',\n      helperText: this.state.errors.designation,\n      error: this.state.errors.designation === '' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 937,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      id: \"annualSal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 984,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 985,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      name: \"annualSal\",\n      id: \"annualSal\",\n      label: \"Salary\",\n      helperText: this.state.errors.annualSal,\n      error: this.state.errors.annualSal === '' ? false : true,\n      onChange: this.handleInputChange,\n      value: this.state.placementData.annualSal || '',\n      onInput: e => {\n        e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 6);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 986,\n        columnNumber: 10\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      id: \"offerDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1016,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"date\",\n      name: \"offerDate\",\n      id: \"offerDate\",\n      onChange: this.handleInputChange,\n      label: \"Offer Date\",\n      value: this.state.placementData.offerDate || '',\n      helperText: this.state.errors.offerDate,\n      error: this.state.errors.offerDate === '' ? false : true,\n      type: \"date\",\n      inputProps: {\n        max: new Date().toISOString().slice(0, 10)\n      },\n      InputLabelProps: {\n        shrink: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1017,\n        columnNumber: 10\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      id: \"joiningDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1030,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"date\",\n      name: \"joiningDate\",\n      id: \"joiningDate\",\n      onChange: this.handleInputChange,\n      label: \"Joining Date\",\n      value: this.state.placementData.joiningDate || '',\n      helperText: this.state.errors.joiningDate,\n      error: this.state.errors.joiningDate === '' ? false : true,\n      type: \"date\",\n      inputProps: {\n        max: new Date().toISOString().slice(0, 10)\n      },\n      InputLabelProps: {\n        shrink: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1031,\n        columnNumber: 10\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1042,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"joined\",\n      id: \"joined\",\n      label: \"Joined\",\n      onChange: this.handleSelectChange.bind(this, 'joined'),\n      value: this.state.placementData.joined || '',\n      options: this.state.join,\n      helperText: this.state.errors.joined,\n      error: this.state.errors.joined === '' ? false : true,\n      key: this.state.placementData.joined,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1043,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1055,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1056,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      style: {\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1057,\n        columnNumber: 17\n      }\n    }, \"Job Location\"))), /*#__PURE__*/React.createElement(AddressForPlacement, {\n      pincodeName: \"pincode\",\n      pincodeId: \"pincode\",\n      pincodeOnChange: this.getPincodeData.bind(this, 'pincode'),\n      pincodeValue: this.state.address.pincode || '',\n      pincodeHelperText: this.state.errors.pincode,\n      pincodeError: this.state.errors.pincode == '' ? false : true,\n      villageName: \"villageName\",\n      villageId: \"villageName\",\n      villageInputValue: this.handleAddressSelectChange.bind(this, 'villageName'),\n      villageData: this.state.village,\n      villageValue: this.state.address.villageName || '',\n      villageHelperText: this.state.errors.village,\n      villageError: this.state.errors.village == '' ? false : true,\n      cityName: \"cityName\",\n      cityId: \"cityName\",\n      cityValue: this.state.address.cityName || '',\n      cityData: this.state.city,\n      cityInputValue: this.handleAddressSelectChange.bind(this, 'cityName'),\n      cityNameHelperText: this.state.errors.cityName,\n      cityNameError: this.state.errors.cityName == '' ? false : true,\n      stateName: \"state\",\n      stateId: \"state\",\n      stateData: this.state.state,\n      stateValue: this.state.address.state || '',\n      stateInputValue: this.handleAddressSelectChange.bind(this, 'state'),\n      stateHelperText: this.state.errors.state,\n      stateError: this.state.errors.state == '' ? false : true,\n      districtName: \"district\",\n      districtId: \"district\",\n      districtValue: this.state.address.district || '',\n      districtData: this.state.district,\n      districtInputValue: this.handleAddressSelectChange.bind(this, 'district'),\n      districtHelperText: this.state.errors.district,\n      districtError: this.state.errors.district == '' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1061,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1070,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        onChange: this.handleCheckboxChange,\n        name: \"isDocumentsUploaded\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1073,\n          columnNumber: 11\n        }\n      }),\n      label: \"I have uploaded appropriate Evidence\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1071,\n        columnNumber: 1\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1082,\n        columnNumber: 1\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"notPlaced\",\n      style: {\n        display: this.state.placementData.interviewStatus === \"Not Placed\" ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1089,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1090,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1091,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1092,\n        columnNumber: 8\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1095,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1096,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"reason\",\n      id: \"reason\",\n      label: \"Reason\",\n      onChange: this.handleSelectChange.bind(this, 'reason'),\n      value: this.state.placementData.reason || '',\n      options: this.state.notPlacedReasons,\n      helperText: this.state.errors.reason,\n      error: this.state.errors.reason === '' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1097,\n        columnNumber: 6\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"notInterested\",\n      style: {\n        display: this.state.placementData.interviewStatus === \"Not Interested\" ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1108,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1109,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1110,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1111,\n        columnNumber: 8\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1114,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1115,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"reason\",\n      id: \"reason\",\n      label: \"Reason\",\n      onChange: this.handleSelectChange.bind(this, 'reason'),\n      value: this.state.placementData.reason || '',\n      options: this.state.notInterestedReason,\n      helperText: this.state.errors.reason,\n      error: this.state.errors.reason === '' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1116,\n        columnNumber: 6\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"entrepreneurship\",\n      style: {\n        display: this.state.placementData.interviewStatus === \"Entrepreneurship\" ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1127,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1128,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1129,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1130,\n        columnNumber: 8\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1133,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1135,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"domainName\",\n      id: \"domainName\",\n      label: \"Domain\",\n      onChange: this.handleSelectChange.bind(this, 'domainName'),\n      value: this.state.placementData.domainName || '',\n      options: this.state.domains,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1136,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      id: \"studentRemark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1141,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1142,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      name: \"noOfPeopleEmployed\",\n      id: \"noOfPeopleEmployed\",\n      label: \"No. of people employed\",\n      helperText: this.state.errors.noOfPeopleEmployed,\n      error: this.state.errors.noOfPeopleEmployed === '' ? false : true,\n      onChange: this.handleInputChange,\n      value: this.state.placementData.noOfPeopleEmployed || '',\n      onInput: e => {\n        e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 10);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1143,\n        columnNumber: 10\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1152,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1153,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      style: {\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1154,\n        columnNumber: 17\n      }\n    }, \"Job Location\"))), /*#__PURE__*/React.createElement(AddressForPlacement, {\n      pincodeName: \"pincode\",\n      pincodeId: \"pincode\",\n      pincodeOnChange: this.getPincodeData.bind(this, 'pincode'),\n      pincodeValue: this.state.address.pincode || '',\n      pincodeHelperText: this.state.errors.pincode,\n      pincodeError: this.state.errors.pincode == '' ? false : true,\n      villageName: \"villageName\",\n      villageId: \"villageName\",\n      villageInputValue: this.handleAddressSelectChange.bind(this, 'villageName'),\n      villageData: this.state.village,\n      villageValue: this.state.address.villageName || '',\n      villageHelperText: this.state.errors.village,\n      villageError: this.state.errors.village == '' ? false : true,\n      cityName: \"cityName\",\n      cityId: \"cityName\",\n      cityValue: this.state.address.cityName || '',\n      cityData: this.state.city,\n      cityInputValue: this.handleAddressSelectChange.bind(this, 'cityName'),\n      cityNameHelperText: this.state.errors.cityName,\n      cityNameError: this.state.errors.cityName == '' ? false : true,\n      stateName: \"stateName\",\n      stateId: \"stateName\",\n      stateData: this.state.state,\n      stateValue: this.state.address.state || '',\n      stateInputValue: this.handleAddressSelectChange.bind(this, 'state'),\n      stateHelperText: this.state.errors.state,\n      stateError: this.state.errors.state == '' ? false : true,\n      districtName: \"district\",\n      districtId: \"district\",\n      districtValue: this.state.address.district || '',\n      districtData: this.state.district,\n      districtInputValue: this.handleAddressSelectChange.bind(this, 'district'),\n      districtHelperText: this.state.errors.district,\n      districtError: this.state.errors.district == '' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1157,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1165,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        onChange: this.handleCheckboxChange,\n        name: \"isDocumentsUploaded\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1168,\n          columnNumber: 11\n        }\n      }),\n      label: \"I have uploaded appropriate Evidence\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1166,\n        columnNumber: 1\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1177,\n        columnNumber: 1\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"selfemployedform\",\n      style: {\n        display: this.state.placementData.interviewStatus === \"Self Employed\" ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1185,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: this.state.placementData.interviewStatus === \"Rejected\" ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1191,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      id: \"hideData\",\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1192,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1193,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1194,\n        columnNumber: 8\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1197,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1199,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"empId\",\n      id: \"empId\",\n      label: \"Employer Name\",\n      onChange: this.handleSelectChange.bind(this, 'empId'),\n      value: this.state.placementData.empId || '',\n      helperText: this.state.errors.empId,\n      error: this.state.errors.empId === '' ? false : true,\n      options: this.state.center,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1200,\n        columnNumber: 6\n      }\n    })))), button)), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.uploadDocuments,\n      method: \"post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1219,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      \"aria-label\": \"simple table\",\n      style: {\n        width: \"80%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1220,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1221,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1222,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        width: \"50%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1223,\n        columnNumber: 13\n      }\n    }, \"Type of Document\"), /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        width: \"30%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1224,\n        columnNumber: 13\n      }\n    }, \"Browse and Upload\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1227,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1228,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1229,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      isClearable: true,\n      name: \"typeOfDocument\",\n      id: \"typeOfDocument\",\n      options: this.state.typeOfDocumentData,\n      onChange: this.handleSelectChangeDoc.bind(this, 'typeOfDocument'),\n      value: this.state.typeOfDocument || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1231,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1239,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DropzoneArea, {\n      name: \"file\",\n      id: \"file\",\n      maxFileSize: 2000000,\n      filesLimit: 1,\n      showFileNames: true,\n      onChange: this.onFileChangeHandler // key={this.state.clearDropzoneArea}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1240,\n        columnNumber: 13\n      }\n    }))))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-end\",\n      alignItems: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1250,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"small\",\n      disabled: this.state.file == null || this.state.typeOfDocument == '' ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1251,\n        columnNumber: 14\n      }\n    }, \"Upload Document\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1259,\n        columnNumber: 2\n      }\n    }), /*#__PURE__*/React.createElement(MUIDataTable, {\n      id: \"dtb\",\n      title: \"List Of Placement Details\",\n      label: \"List of Placement Details \",\n      columns: columns,\n      data: this.state.info,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1260,\n        columnNumber: 2\n      }\n    }), this.state.documents != \"\" && /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1267,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      \"aria-label\": \"simple table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1268,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1269,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1270,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1271,\n        columnNumber: 11\n      }\n    }, \"Created On\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1272,\n        columnNumber: 11\n      }\n    }, \"Document Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1273,\n        columnNumber: 11\n      }\n    }, \"File Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1274,\n        columnNumber: 11\n      }\n    }, \"Download\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1275,\n        columnNumber: 11\n      }\n    }, \"Delete\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1278,\n        columnNumber: 9\n      }\n    }, this.state.documents.map(row => /*#__PURE__*/React.createElement(TableRow, {\n      key: row.basicDocId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1280,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1281,\n        columnNumber: 15\n      }\n    }, row.createdOn), /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1285,\n        columnNumber: 15\n      }\n    }, row.documentName), /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1288,\n        columnNumber: 15\n      }\n    }, row.documentPath.split(\"/\")[1]), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1291,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"small\",\n      name: \"download\",\n      id: \"download\",\n      onClick: this.downloadDocuments.bind(this, row.basicDocId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1292,\n        columnNumber: 15\n      }\n    }, \"Download\")), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1298,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"small\",\n      name: \"delete\",\n      id: \"delete\",\n      onClick: this.deleteDocument.bind(this, row.basicDocId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1299,\n        columnNumber: 15\n      }\n    }, \"Delete\"))))))), this.state.alertDialogFlag && /*#__PURE__*/React.createElement(AlertDialog, {\n      message: alertDialogOptions.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1315,\n        columnNumber: 35\n      }\n    }));\n  }\n\n}\n\nexport default PlacementDetails;","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/PlacementDetails.js"],"names":["React","Component","render","SingleSelect","callMerge","UserContext","FormControl","InputLabel","FormControlLabel","Input","Grid","RadioGroup","Radio","TextField","Button","isNotEmpty","isNotZero","roleBasedReadonly","checkButton","AlertDialog","Paper","savePlacementDetails","deleteDocumentById","fetchUserDocumentsByUserIdAndTypeOfDocument","fectAddressDetailsByAddressID","fetchAddressDetailsBasedOnPincode","fetchPlacementDetailsByEngagementId","fetchAllCenter","saveAddressDetails","uploadDocument","fetchEmployerDetails","MUIDataTable","AddressForPlacement","underscore","Table","TableBody","TableCell","TableHead","TableRow","DropzoneArea","EditIcon","serviceEndPoint","Checkbox","alertDialogOptions","message","PlacementDetails","constructor","props","handleChange","event","target","value","name","setState","placementData","state","deleteDocument","basicDocId","getDocuments","handleCheckboxChange","checked","mySubmitHandler","preventDefault","disabled","validate","interviewStatus","errors","validatePlacedAndOfferNotTaken","empId","domainName","spocName","designation","spocPhoneNumber","annualSal","offerDate","joiningDate","joined","validateAddress","address","pincode","villageName","cityName","district","errorsExist","Object","values","forEach","val","length","submitPlacementDetails","validateNotPlaced","reason","validateNotInterested","validateEntrepreneurship","noOfPeopleEmployed","validateRejected","village","downloadDocuments","formData","FormData","append","fetch","documentServiceEndPoint","method","headers","token","body","then","response","json","jsondata","jsonobjects","JSON","parse","data","url","downloadDocument","documentPath","window","open","uploadDocuments","e","levelOfDocument","localThis","reader","FileReader","readAsDataURL","file","onload","document","result","alertDialogFlag","dbUserId","engagementId","typeOfDocument","res","onFileChangeHandler","files","resetForm","status","flag","id","info","addressId","createdBy","userid","updatedBy","interviewDate","interviewRemark","isActive","isDocumentsUploaded","center","centerData","documents","intStatus","label","offerNotTakenReason","notPlacedReasons","notInterestedReason","studStatus","domains","join","typeOfProofData","typeOfDocumentData","entityId","addressLine1","addressLine2","pincodes","city","handleInputChange","bind","getEmployerDetails","undefined","fetchPlacementdetailsFouUser","componentDidMount","handleEditChange","obj","getAddressDetailsByAddressID","addressDetails","getAddressdataBasedOnPin","taluk","cityVillage","states","map","item","push","uniq","toString","console","log","handleSelectChangeDoc","selectname","handlePlacementSelectChange","handleSelectChange","placementInfo","placementDetailsOfUser","i","details","color","appError","accountName","getCenterMasters","ids","handleAddressInputChange","handleAddressSelectChange","handleTypeOfProofSelectChange","newVal","stateVal","documentType","indexOf","splice","getPincodeData","stringify","saveAllDetails","columns","headerStyle","options","filterType","responsive","sortDirection","selectableRows","disableToolbarSelect","rowsPerPage","selectableRowsOnClick","button","width","display","Math","max","parseInt","slice","Date","toISOString","shrink","fontWeight","row","createdOn","documentName","split"],"mappings":"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","sourcesContent":["/*!\r\n\r\n=========================================================\r\n* Material Dashboard React - v1.8.0\r\n=========================================================\r\n\r\n\r\n* Coded by Ashish S\r\n\r\n=========================================================\r\n\r\n\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport { render } from \"react-dom\";\r\nimport './../App.css';\r\nimport './../assets/css/login-style.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { SingleSelect } from \"react-select-material-ui\";\r\nimport callMerge from 'material-ui/svg-icons/communication/call-merge';\r\nimport UserContext from '../components/GolbalContext'\r\nimport { FormControl , InputLabel,FormControlLabel, Input, Grid , RadioGroup, Radio, TextField}  from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport {isNotEmpty,isNotZero} from './../util/validation';\r\nimport { roleBasedReadonly , checkButton } from '../util/validation';\r\nimport AlertDialog from '../util/AlertDialog';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {savePlacementDetails,deleteDocumentById,fetchUserDocumentsByUserIdAndTypeOfDocument,fectAddressDetailsByAddressID,fetchAddressDetailsBasedOnPincode,fetchPlacementDetailsByEngagementId,fetchAllCenter,saveAddressDetails,uploadDocument,fetchEmployerDetails} from '../util/api';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport AddressForPlacement from \"./AddressForPlacement\";\r\nimport underscore from 'underscore';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {DropzoneArea} from 'material-ui-dropzone';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { serviceEndPoint } from '../util/serviceEndPoint';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nconst alertDialogOptions = {\r\n  message: ''\r\n}\r\n\r\nclass PlacementDetails extends Component {\r\n    \r\n  constructor(props) {\r\n    super(props);\r\n     \r\n     this.state = {status:props.status,engagementId:props.engagementId,alertDialogFlag:false , disabled : false , flag : \"0\" , errors : {joiningDate:'',offerDate:'',annualSal:'',spocPhoneNumber:'',designation:'',pincode:'',noOfPeopleEmployed:'',spocName:''} , dbUserId : props.id,info:[], \r\n     placementData : {annualSal:'0',empId:0,noOfPeopleEmployed:'0',joined:'',spocPhoneNumber:'',spocName:'',designation:'',domainName:'',addressId : \"0\",createdBy : UserContext.userid, updatedBy : UserContext.userid ,engagementId:props.engagementId, dbUserId : props.id, interviewDate : \"\",\r\n     interviewStatus : \"\" , interviewRemark : \"\" , offerDate : \"\", joiningDate:\"\",isActive:\"Y\",isDocumentsUploaded:'',reason:'',\r\n\r\n         }, center : [],centerData:[],documents:[],\r\n         info:[{\"createdBy\" : UserContext.userid ,\"updatedBy\" : UserContext.userid , \"isActive\" : \"Y\" , \"dbUserId\" : props.id}],\r\n         intStatus : [\r\n          { value: 'Placed', label: 'Placed' },\r\n          { value: 'Offer Not Taken', label: 'Offer Not Taken'},\r\n          { value: 'Not Placed', label: 'Not Placed' },\r\n          { value: 'Not Interested', label: 'Not Interested'},\r\n          { value: 'Entrepreneurship', label: 'Entrepreneurship' },\r\n          { value: 'Self Employed', label: 'Self Employed' },\r\n          { value: 'Rejected', label: 'Rejected'}\r\n         ],\r\n         offerNotTakenReason : [\r\n          { value: 'Low salary', label: 'Low salary' },\r\n          { value: 'Migration', label: 'Migration' },\r\n          { value: 'Family problem', label: 'Family problem' },\r\n          { value: 'health issues', label: 'health issues' },\r\n          { value: 'further studies', label: 'further studies' },\r\n          { value: 'marriage', label: 'marriage' }\r\n         ],\r\n         notPlacedReasons : [\r\n          { value: 'Other', label: 'Other' } , \r\n          { value: 'Not Interested', label: 'Not Interested' },\r\n          { value: 'Got other job', label: 'Got other job' },\r\n          { value: 'Health Issues', label: 'Health Issues' },     \r\n          { value: 'Moved to other place', label: 'Moved to other place' },\r\n          { value: 'Not Eligible', label: 'Not Eligible' },\r\n          { value: 'Marriage', label: 'Marriage' },\r\n          { value: 'Higher Education', label: 'Higher Education' },\r\n          { value: 'Maternity', label: 'Maternity' }\r\n          ],\r\n          notInterestedReason  : [\r\n            { value: 'family issue', label: 'family issue' } , \r\n            { value: 'medical problem', label: 'medical problem' },\r\n            { value: 'higher studies', label: 'higher studies' }\r\n           ],  \r\n         studStatus : [\r\n          { value: 'Inter', label: 'Inter' },\r\n          { value: 'Joined', label: 'Joined' }\r\n         \r\n         ],\r\n         domains: [\r\n          { value: 'Banking', label: 'Banking'},\r\n          { value: 'Retails', label: 'Retails' },\r\n          { value: 'House Keeping', label: 'House Keeping'},\r\n          { value: 'F and B', label: 'F and B' },\r\n          { value: 'Android', label: 'Android'},\r\n          { value: 'QSR', label: 'QSR' },\r\n          { value: 'Electrical', label: 'Electrical' }\r\n         ],\r\n         join: [\r\n          { value: 'Yes', label: 'Yes'},\r\n          { value: 'No', label: 'No' }\r\n         ],\r\n         typeOfDocument:null,file:null,\r\n         typeOfProofData:[ \r\n          { value: 'AgeProof', label: 'Age Proof' },\r\n          { value: 'ApplicationForm', label: 'Application Form' },\r\n          { value: 'CasteCertificate', label: 'Caste Certificate' },\r\n          { value: 'ContributionReceipt', label: 'Contribution Receipt' },\r\n          { value: 'EducationProof', label: 'Education Proof' },\r\n          { value: 'FirstDayPicture', label: 'First Day Picture' },\r\n          { value: 'LastDayPicture', label: 'Last Day Picture' },\r\n          { value: 'Medicalfitnesscertificate', label: 'Medical fitness certificate' },\r\n          { value: 'PhotoProof', label: 'Photo Proof' },\r\n          { value: 'StudentPicture', label: 'Student Picture' },\r\n          { value: 'Studentsigned', label: 'Student signed' }\r\n        ],\r\n        typeOfDocumentData:[ \r\n          { value: 'Offer Letter', label: 'Offer Letter' },\r\n          { value: 'Joining Letter', label: 'Joining Letter' },\r\n          { value: 'Pay Slip', label: 'Pay Slip' },\r\n          { value: 'Student Declaration', label: 'Student Declaration' },\r\n          { value: 'Pic Of Business', label: 'Pic Of Business'},\r\n          { value: 'Registration Certificate', label: 'Registration Certificate' }\r\n        ],\r\n        address : {entityId : props.engagementId, createdBy : UserContext.userid,'isActive' : 'Y','type' : 'PD' ,'entityType' :'S', pincode : \"\" , addressLine1 : \"\" , addressLine2 : \"\" , district : \"\" , state : \"\" , cityName : \"\", villageName : \"\"}, state: [], district: [], pincodes: [], city: [],village: [],engagementId:props.engagementId};\r\n         this.formData = { state: [], district: [], pincodes: [], city: [],village: []  };\r\n     this.handleInputChange = this.handleInputChange.bind(this);\r\n     this.handleChange=this.handleChange.bind(this);\r\n     this.getEmployerDetails();\r\n    // this.getCenterMasters();\r\n     this.getDocuments();\r\n     //alert(this.state.engagementId);\r\n     if(props.id != null && props.id != undefined )\r\n     {\r\n       \r\n       this.fetchPlacementdetailsFouUser(props.engagementId);\r\n     }\r\n\r\n\r\n\r\n    \r\n     \r\n }\r\n componentDidMount()\r\n    {\r\n      roleBasedReadonly();\r\n    }\r\n\r\n  \r\n\r\n     handleChange = (event) => {\r\n      const target = event.target;\r\n      let value =  target.value;\r\n      const name = target.name;\r\n     \r\n      this.setState({\r\n        placementData: {\r\n     \r\n        ...this.state.placementData\r\n         }\r\n \r\n      });\r\n      \r\n    };\r\n\r\n    getDocuments(){\r\n\r\n      fetchUserDocumentsByUserIdAndTypeOfDocument(this.state.dbUserId,'PD').then((jsondata) => {   \r\n      let jsonobjects = JSON.parse(jsondata.data);          \r\n      this.setState({documents: [...this.state.documents,...jsonobjects]})    \r\n      });\r\n      \r\n      }\r\n      deleteDocument = (basicDocId) => {\r\n        deleteDocumentById(basicDocId);\r\n        this.getDocuments();\r\n      }\r\n    \r\n    handleEditChange(obj){\r\n       this.setState({\r\n         placementData : obj \r\n       },()=>{\r\n        if(this.state.placementData.interviewStatus==='Placed' \r\n        || this.state.placementData.interviewStatus==='Offer Not Taken'\r\n        || this.state.placementData.interviewStatus==='Entrepreneurship'){        \r\n        this.getAddressDetailsByAddressID(this.state.placementData.addressId)\r\n        }\r\n        });\r\n     }\r\n\r\n     getAddressDetailsByAddressID(addressId){\r\n      fectAddressDetailsByAddressID(addressId).then((jsondata)=>{    \r\n             let  addressDetails = JSON.parse(jsondata.data);        \r\n               this.setState({\r\n                   address: addressDetails[0]\r\n                 },()=>{this.getAddressdataBasedOnPin(this.state.address.pincode)});\r\n            })   \r\n    }\r\n\r\n     getAddressdataBasedOnPin(pincode){\r\n      fetchAddressDetailsBasedOnPincode(pincode).then((jsondata) => {\r\n        let jsonobjects = JSON.parse(jsondata.data);\r\n        let taluk = [];\r\n        let pincode = [];\r\n        let cityVillage = [];\r\n        let states = [];\r\n        let district = [];\r\n  \r\n        this.formData.village.length = 0;\r\n        this.formData.pincodes.length = 0;\r\n        this.formData.city.length = 0;\r\n        this.formData.state.length = 0;\r\n        this.formData.district.length = 0;\r\n  \r\n        jsonobjects.map(item => { cityVillage.push({ label: item.cityVillage, value: item.id }) });\r\n        cityVillage = underscore.uniq(cityVillage, true, \"label\");\r\n        cityVillage.map(item => { this.formData.village.push({ label: item.label, value: (item.label).toString() }) });\r\n        this.setState({village:this.formData.village});\r\n        \r\n        jsonobjects.map(item => { taluk.push({ label: item.taluk, value: item.id }) });\r\n        taluk = underscore.uniq(taluk, true, \"label\");\r\n        taluk.map(item => { this.formData.city.push({ label: item.label, value: (item.label).toString() }) });\r\n        this.setState({city:this.formData.city});\r\n  \r\n  \r\n  \r\n        jsonobjects.map(item => { states.push({ label: item.state, value: item.id }) });\r\n        states = underscore.uniq(states, true, \"label\");\r\n        states.map(item => { this.formData.state.push({ label: item.label, value: (item.value).toString() }) });\r\n        this.setState({state:this.formData.state},()=>{console.log(this.state.state)});\r\n  \r\n        jsonobjects.map(item => { district.push({ label: item.district, value: item.id }) });\r\n        district = underscore.uniq(district, true, \"label\");\r\n        district.map(item => { this.formData.district.push({ label: item.label, value: (item.value).toString() }) });\r\n        this.setState({district:this.formData.district});\r\n      })\r\n     }\r\n\r\n     \r\n     handleSelectChangeDoc(selectname, event) {\r\n      this.setState({[selectname]: event}); \r\n     }\r\n\r\n     handlePlacementSelectChange(selectname, event) {\r\n      this.setState({\r\n        placementData: {\r\n           ...this.state.placementData,\r\n           [selectname]: event\r\n         }\r\n       });\r\nthis.validate(selectname,event);\r\n     }\r\n\r\n\r\n    handleSelectChange(selectname, event) {\r\n      let value = 0 ;\r\n      let target = null;\r\n      try {\r\n        target = event.target;\r\n        value =  target.value;\r\n      }\r\n     catch(e)\r\n     {\r\n      value =  event;\r\n     }\r\n      \r\n        this.setState({\r\n          \"disabled\" : false\r\n        });\r\n\r\n        this.setState({\r\n            placementData: {\r\n              ...this.state.placementData,\r\n              [selectname]: event\r\n            }\r\n          })\r\n\r\n        //   this.setState({\r\n        //     errors: {\r\n        //       ...this.state.errors,\r\n        //       [selectname] : {\r\n        //         'label' : \"\" , \r\n        //         'value' : false\r\n        //       }\r\n        //     }\r\n        // });\r\n        \r\n        if(this.state.placementData.interviewStatus==='Not Placed'){\r\n          this.validateNotPlaced(selectname,event);\r\n        }\r\n        \r\n       else if(this.state.placementData.interviewStatus==='Not Interested'){\r\n          this.validateNotInterested(selectname,event);\r\n        }\r\n        else if(this.state.placementData.interviewStatus==='Placed' || this.state.placementData.interviewStatus==='Offer Not Taken'){\r\n          this.validatePlacedAndOfferNotTaken(selectname,event);\r\n        }\r\n     \r\n        else if(this.state.placementData.interviewStatus==='Rejected'){\r\n          this.validateRejected(selectname,event);\r\n        }\r\n        \r\n      \r\n}\r\n handleInputChange(event) {\r\n     \r\n     const target = event.target;\r\n     let value =  target.value;\r\n     const name = target.name;\r\n     this.setState({\r\n      \"disabled\" : false\r\n    });\r\n\r\n  //   this.setState({\r\n  //     errors: {\r\n  //       ...this.state.errors,\r\n  //       [name] : {\r\n  //         'label' : \"\" , \r\n  //         'value' : false\r\n  //       }\r\n  //     }\r\n  // });\r\n\r\n  this.setState({\r\n    placementData: {\r\n       ...this.state.placementData,\r\n       [name]: value\r\n     }\r\n   });\r\n   \r\n   if(this.state.placementData.interviewStatus==='Entrepreneurship'){\r\n    this.validateEntrepreneurship(name,value);\r\n  }\r\n\r\n  else if(this.state.placementData.interviewStatus==='Placed' || this.state.placementData.interviewStatus==='Offer Not Taken'){\r\n    this.validatePlacedAndOfferNotTaken(name,value);\r\n  } \r\n  \r\n   }\r\n\r\n  handleCheckboxChange = (event) => {\r\n    this.setState({\r\n      placementData: {\r\n         ...this.state.placementData,\r\n         [event.target.name]: event.target.checked\r\n       }\r\n     })\r\n};\r\n\r\n\r\n\r\n   fetchPlacementdetailsFouUser(engagementId){\r\n  \r\n    let placementInfo=[];\r\n\r\n    fetchPlacementDetailsByEngagementId(engagementId).then((jsondata)=>{    \r\n      //alert(JSON.stringify(jsondata));\r\n          let  placementDetailsOfUser = JSON.parse(jsondata.data); \r\n    \r\n                for(var i=0;i<placementDetailsOfUser.length;i++){\r\n                var  details =\r\n                {   // 'employer_name':placementDetailsOfUser[i].employerName, \r\n                    'interview_status':placementDetailsOfUser[i].interviewStatus,\r\n                    'Reason':placementDetailsOfUser[i].reason,\r\n                    'annual_sal' :placementDetailsOfUser[i].annualSal,\r\n                    'action':<EditIcon style={{color:\"blue\"}} onClick={this.handleEditChange.bind(this,placementDetailsOfUser[i])} />\r\n                     \r\n                }; \r\n                placementInfo.push(details);    \r\n            }    \r\n            this.setState({\r\n                info: placementInfo\r\n              });\r\n         }) \r\n       \r\n   \r\n}\r\n\r\n\r\n\r\ngetEmployerDetails(){\r\n  fetchEmployerDetails(\"Active Partner\",\"%Placement%\").then((jsondata)=>{\r\n    if(jsondata.appError==null){     \r\n        let jsonobjects = JSON.parse(jsondata.data);\r\n       jsonobjects.map(item => { this.state.center.push({label: item.accountName, value:item.id})\r\n       })    \r\n    } \r\n })\r\n}\r\n\r\n   getCenterMasters(ids){  \r\n    fetchAllCenter().then((jsondata)=>{\r\n            console.log(jsondata);\r\n            if(jsondata.appError==null){     \r\n                let jsonobjects = JSON.parse(jsondata.data);\r\n            // alert(JSON.stringify(jsonobjects));\r\n               jsonobjects.map(item => { this.state.center.push({label: item.name, value:item.id})\r\n               })\r\n              // this.setState({centerData : jsonobjects});\r\n              \r\n               \r\n            } \r\n            return (true);\r\n         }).then(response => response);\r\n        }\r\n \r\n  \r\n mySubmitHandler = (event) => {\r\n  // alert(\"check\");\r\n   event.preventDefault();\r\n   this.state.disabled = true;\r\n   this.validate(\"interviewStatus\",this.state.placementData.interviewStatus);\r\n   \r\n    if(this.state.errors.interviewStatus===''){\r\n\r\n      if(this.state.placementData.interviewStatus==='Placed' \r\n      || this.state.placementData.interviewStatus==='Offer Not Taken'\r\n    ){\r\n        this.validatePlacedAndOfferNotTaken(\"empId\",this.state.placementData.empId);\r\n        this.validatePlacedAndOfferNotTaken(\"domainName\",this.state.placementData.domainName);\r\n        this.validatePlacedAndOfferNotTaken(\"spocName\",this.state.placementData.spocName);\r\n        this.validatePlacedAndOfferNotTaken(\"designation\",this.state.placementData.designation);     \r\n        this.validatePlacedAndOfferNotTaken(\"spocPhoneNumber\",this.state.placementData.spocPhoneNumber);            \r\n        this.validatePlacedAndOfferNotTaken(\"annualSal\",this.state.placementData.annualSal); \r\n        this.validatePlacedAndOfferNotTaken(\"offerDate\",this.state.placementData.offerDate);     \r\n        this.validatePlacedAndOfferNotTaken(\"joiningDate\",this.state.placementData.joiningDate);            \r\n        this.validatePlacedAndOfferNotTaken(\"joined\",this.state.placementData.joined); \r\n        this.validateAddress(\"pincode\",this.state.address.pincode);\r\n        this.validateAddress(\"villageName\",this.state.address.villageName);\r\n        this.validateAddress(\"cityName\",this.state.address.cityName);\r\n        this.validateAddress(\"state\",this.state.address.state);\r\n        this.validateAddress(\"district\",this.state.address.district);\r\n\r\n        let errorsExist=true;\r\n          Object.values(this.state.errors).forEach(\r\n           (val)=>val.length>0 && (errorsExist=false)\r\n      ); \r\n         if(errorsExist){\r\n           this.submitPlacementDetails();\r\n          }       \r\n  }\r\n  else if(this.state.placementData.interviewStatus==='Not Placed'){\r\n    this.validateNotPlaced(\"reason\",this.state.placementData.reason);\r\n    \r\n    let errorsExist=true;\r\n    Object.values(this.state.errors).forEach(\r\n     (val)=>val.length>0 && (errorsExist=false)\r\n); \r\n   if(errorsExist){\r\n     this.submitPlacementDetails();\r\n    }    \r\n\r\n\r\n  }\r\n  else if(this.state.placementData.interviewStatus==='Not Interested'){\r\n    this.validateNotInterested(\"reason\",this.state.placementData.reason); \r\n    let errorsExist=true;\r\n    Object.values(this.state.errors).forEach(\r\n     (val)=>val.length>0 && (errorsExist=false)); \r\n   if(errorsExist){\r\n     this.submitPlacementDetails();\r\n    }    \r\n  }\r\n\r\n  else if(this.state.placementData.interviewStatus==='Entrepreneurship'){\r\n    this.validateAddress(\"pincode\",this.state.address.pincode);\r\n    this.validateAddress(\"villageName\",this.state.address.villageName);\r\n    this.validateAddress(\"cityName\",this.state.address.cityName);\r\n    this.validateAddress(\"state\",this.state.address.state);\r\n    this.validateAddress(\"district\",this.state.address.district);\r\n    this.validateEntrepreneurship(\"noOfPeopleEmployed\",this.state.placementData.noOfPeopleEmployed); \r\n    let errorsExist=true;\r\n    Object.values(this.state.errors).forEach(\r\n     (val)=>val.length>0 && (errorsExist=false)); \r\n   if(errorsExist){\r\n     this.submitPlacementDetails();\r\n    }    \r\n  }\r\n\r\n  else if(this.state.placementData.interviewStatus==='Rejected'){\r\n    this.validateRejected(\"empId\",this.state.placementData.empId); \r\n    let errorsExist=true;\r\n    Object.values(this.state.errors).forEach(\r\n     (val)=>val.length>0 && (errorsExist=false)); \r\n   if(errorsExist){\r\n     this.submitPlacementDetails();\r\n    }    \r\n  }\r\n\r\n\r\n\r\n  else{\r\n    this.submitPlacementDetails();\r\n  } \r\n  }\r\n\r\n   // authentication response and redirect to error or dashbaord page\r\n   this.setState({\r\n     errors : this.state.errors,\r\n    });\r\n    if(checkButton(this.state.errors))\r\n    {\r\n      \r\n    \r\n   \r\n    }\r\n    else\r\n    {\r\n      this.state.disabled = true;\r\n  } \r\n }\r\n\r\n\r\n\r\n\r\n validate = (name,value)=>{\r\nlet errors = this.state.errors;\r\n  switch (name) {\r\n    case 'interviewStatus':  errors.interviewStatus =  isNotEmpty(value);\r\n    break;\r\n    default:\r\n    break;\r\n}\r\n\r\n this.setState({errors});\r\n}\r\n\r\n\r\n\r\nvalidateNotInterested = (name,value)=>{\r\n  let errors = this.state.errors;\r\n    switch (name) {\r\n        case 'reason':  errors.reason =  isNotEmpty(value);\r\n        break;\r\n        default:\r\n        break;\r\n  } \r\n   this.setState({errors});\r\n}\r\n\r\n\r\nvalidateEntrepreneurship = (name,value)=>{\r\n  let errors = this.state.errors;\r\n    switch (name) {\r\n        case 'noOfPeopleEmployed':  errors.noOfPeopleEmployed =  isNotEmpty(value);\r\n        break;\r\n        default:\r\n        break;\r\n  } \r\n   this.setState({errors});\r\n}\r\n\r\nvalidateNotPlaced= (name,value)=>{\r\n  let errors = this.state.errors;\r\n    switch (name) {\r\n        case 'reason':  errors.reason =  isNotEmpty(value);\r\n        break;\r\n        default:\r\n        break;\r\n  }\r\n  \r\n   this.setState({errors});\r\n}\r\n\r\n\r\nvalidateRejected= (name,value)=>{\r\n  let errors = this.state.errors;\r\n    switch (name) {\r\n        case 'empId':  errors.empId =  isNotZero(value);\r\n        break;\r\n        default:\r\n        break;\r\n  }\r\n   this.setState({errors});\r\n}\r\n\r\n\r\nvalidatePlacedAndOfferNotTaken= (name,value)=>{\r\n  let errors = this.state.errors;\r\n    switch (name) {\r\n        case 'empId':  errors.empId =  isNotEmpty(value);\r\n        break;\r\n        case 'domainName':  errors.domainName =  isNotEmpty(value);\r\n        break;\r\n        case 'spocName':  errors.spocName =  isNotEmpty(value);\r\n        break;    \r\n        case 'designation':  errors.designation =  isNotEmpty(value);\r\n        break;    \r\n        case 'spocPhoneNumber':  errors.spocPhoneNumber =  isNotEmpty(value);\r\n        break;    \r\n        case 'annualSal':  errors.annualSal =  isNotEmpty(value);\r\n        break;       \r\n        case 'offerDate':  errors.offerDate =  isNotEmpty(value);\r\n        break;       \r\n        case 'joiningDate':  errors.joiningDate =  isNotEmpty(value);\r\n        break;       \r\n        case 'joined':  errors.joined =  isNotEmpty(value);\r\n        break;       \r\n        default:\r\n        break;\r\n  }\r\n  \r\n   this.setState({errors});\r\n}\r\n\r\n\r\nvalidateAddress = (name,value)=>{\r\n  let errors = this.state.errors;\r\n    switch (name) {\r\n        case 'pincode':  errors.pincode =  isNotEmpty(value);\r\n        break;\r\n        case 'villageName':  errors.village =  isNotEmpty(value);\r\n        break;\r\n        case 'cityName':  errors.cityName =  isNotEmpty(value);\r\n        break;\r\n        case 'state':   errors.state = isNotEmpty(value);\r\n        break;\r\n        case 'district':   errors.district = isNotEmpty(value);\r\n        break;\r\n       default:\r\n       break;\r\n  }\r\n  \r\n   this.setState({errors});\r\n  }\r\n\r\n\r\nhandleAddressInputChange(event) {\r\n  const target = event.target;\r\n  const value = target.value;\r\n  const name = target.name;\r\n  this.setState({\r\n    address: {\r\n      ...this.state.address,\r\n      [name]: value\r\n    }\r\n  })\r\n  this.validate(name,value);\r\n}\r\nhandleAddressSelectChange(selectname, event) {\r\n  this.setState({\r\n    address: {\r\n      ...this.state.address,\r\n      [selectname]: event\r\n    }\r\n  })\r\n\r\n  this.validateAddress(selectname,event);\r\n}\r\n\r\nhandleTypeOfProofSelectChange(selectname, event) {\r\n\r\n  let newVal = event;\r\n  let stateVal = this.state.documentType;\r\n\r\n  stateVal.indexOf(newVal) === -1\r\n    ? stateVal.push(newVal)\r\n    : stateVal.length === 1\r\n      ? (stateVal = [])\r\n      : stateVal.splice(stateVal.indexOf(newVal), 1)\r\n\r\n      this.setState({ documentType: stateVal });\r\n     \r\n }\r\n\r\n downloadDocuments = (value) => \r\n {\r\n let formData = new FormData();\r\n   formData.append('data', '{\"token\" : \"\", \"action\" : \"downloadDocument\", \"data\" : [{\"basicDocId\":'+value+'}]}');\r\n   fetch(serviceEndPoint.documentServiceEndPoint, {\r\n       method: 'post',\r\n       headers: {\r\n         'Authorization': 'Bearer '+UserContext.token\r\n     }, \r\n       body: formData\r\n   }).then(response => response.json()).then((jsondata)=>{\r\n     let jsonobjects = JSON.parse(jsondata.data);\r\n     var url=serviceEndPoint.downloadDocument+jsonobjects[0].documentPath+\"\"; \r\n     window.open(url, \"_blank\");\r\n    \r\n \r\n   });\r\n   }\r\n\r\n   uploadDocuments = (e) =>  {\r\n   e.preventDefault();\r\n var levelOfDocument=\"G\";\r\n \r\n let localThis=this;\r\n \r\n let reader = new FileReader();\r\n reader.readAsDataURL(this.state.file);\r\n reader.onload = function () {\r\n let  document = reader.result;\r\n\r\n localThis.setState({alertDialogFlag:false});\r\n uploadDocument(localThis.state.dbUserId,localThis.state.engagementId,localThis.state.typeOfDocument,'PD',localThis.state.typeOfDocument,document,\"\")\r\n \r\n   .then(res => {\r\n  \r\n   \r\n   });\r\n \r\n \r\n }\r\n    \r\n   }\r\n \r\n   onFileChangeHandler = (files) => {this.setState({file: files[0]});}\r\n\r\ngetPincodeData(selectname, event) {\r\n  const target = event.target;\r\n  const value = target.value;\r\n  const name = target.name;\r\n  this.setState({\r\n    address: {\r\n      ...this.state.address,\r\n      [name]: value\r\n    }\r\n  })\r\n  this.validateAddress(name,value);\r\n  if (value.length == 6) {\r\n   \r\n    fetchAddressDetailsBasedOnPincode(value).then((jsondata) => {\r\n      let jsonobjects = JSON.parse(jsondata.data);\r\n      let taluk = [];\r\n      let pincode = [];\r\n      let cityVillage = [];\r\n      let states = [];\r\n      let district = [];\r\n\r\n      this.formData.village.length = 0;\r\n      this.formData.pincodes.length = 0;\r\n      this.formData.city.length = 0;\r\n      this.formData.state.length = 0;\r\n      this.formData.district.length = 0;\r\n\r\n      jsonobjects.map(item => { cityVillage.push({ label: item.cityVillage, value: item.id }) });\r\n      cityVillage = underscore.uniq(cityVillage, true, \"label\");\r\n      cityVillage.map(item => { this.formData.village.push({ label: item.label, value: (item.label).toString() }) });\r\n      this.setState({village:this.formData.village});\r\n      \r\n      jsonobjects.map(item => { taluk.push({ label: item.taluk, value: item.id }) });\r\n      taluk = underscore.uniq(taluk, true, \"label\");\r\n      taluk.map(item => { this.formData.city.push({ label: item.label, value: (item.label).toString() }) });\r\n      this.setState({city:this.formData.city});\r\n\r\n\r\n\r\n      jsonobjects.map(item => { states.push({ label: item.state, value: item.id }) });\r\n      states = underscore.uniq(states, true, \"label\");\r\n      states.map(item => { this.formData.state.push({ label: item.label, value: (item.value).toString() }) });\r\n      this.setState({state:this.formData.state},()=>{console.log(this.state.state)});\r\n\r\n      jsonobjects.map(item => { district.push({ label: item.district, value: item.id }) });\r\n      district = underscore.uniq(district, true, \"label\");\r\n      district.map(item => { this.formData.district.push({ label: item.label, value: (item.value).toString() }) });\r\n      this.setState({district:this.formData.district});\r\n    })\r\n  }\r\n\r\n}\r\n\r\n \r\n\r\nsubmitPlacementDetails()\r\n{\r\n\r\n  if(this.state.placementData.interviewStatus==='Placed' || this.state.placementData.interviewStatus==='Offer Not Taken'\r\n  || this.state.placementData.interviewStatus==='Entrepreneurship'){\r\n  \r\n   saveAddressDetails(JSON.stringify(this.state.address)).then((jsondata) => {\r\n    let jsonobjects = JSON.parse(jsondata.data);\r\n    //alert(jsonobjects[0].id);\r\n    this.setState({\r\n      placementData: {\r\n         ...this.state.placementData,\r\n         'addressId': jsonobjects[0].id\r\n       }\r\n     },()=>{this.saveAllDetails()});\r\n     this.setState({alertDialogFlag:false});\r\n     alertDialogOptions.message=<span style={{color:\"green\"}}>Placement Details Saved Sucessfully</span>;\r\n     this.setState({alertDialogFlag:true});\r\n    });\r\n\r\n  }\r\n  else{\r\n    this.saveAllDetails();\r\n  }\r\n\r\n  \r\n}\r\nsaveAllDetails(){\r\n\r\n  savePlacementDetails(this.state.placementData).then((jsondata)=>{\r\n    this.resetForm();\r\n    this.fetchPlacementdetailsFouUser(this.state.engagementId);\r\n    if(jsondata.appError==null){   \r\n      let jsonobjects = JSON.parse(jsondata.data);\r\n        this.setState({alertDialogFlag:false});\r\n         alertDialogOptions.message=<span style={{color:\"green\"}}>Placement Details Saved Sucessfully</span>;\r\n         this.setState({alertDialogFlag:true});\r\n    }  else{\r\n        console.log(\"error\");\r\n    } \r\n })\r\n}\r\n\r\nresetForm = ()=> {\r\n  this.setState({\r\n    placementData: {\r\n    ...this.state.placementData,\r\n    interviewStatus: '',spocName:'',\r\n    spocPhoneNumber:'',domainName:'',\r\n    reason:'',designation:'',\r\n    annualSal:'',offerDate:'',\r\n    joiningDate:'',joined:'',empId:''\r\n}\r\n})\r\nthis.setState({\r\n  address: {\r\n  ...this.state.address,\r\n  pincode: '',villageName:'',\r\n  district : '', state : '',cityName : ''\r\n}\r\n})\r\n}\r\n\r\nrender()\r\n{\r\n  const columns = [\r\n  {label: 'Interview Status', name: 'interview_status',headerStyle: {color:'#FF9800'}},\r\n  {label: 'Reason', name: 'Reason',headerStyle: {color:'#FF9800'}},\r\n  {label: 'Annual Salary', name: 'annual_sal',headerStyle: {color:'#FF9800'}},\r\n  {label: 'Action', name: 'action',headerStyle: {color:'#FF9800'}}\r\n ]\r\n\r\n const options = {\r\n  filterType: \"dropdown\",\r\n  responsive: \"stacked\",\r\n  sortDirection: \"desc\",\r\n  selectableRows : 'single',\r\n  disableToolbarSelect:true,\r\n  rowsPerPage:10,\r\n  selectableRowsOnClick: true,\r\n \r\n\r\n \r\n};\r\n\r\n  let button;\r\n  button = <Grid container direction=\"row\" justify=\"flex-end\"  id=\"btn\" alignItems=\"flex-end\">  <Button  variant=\"contained\" type=\"submit\"  size=\"small\" color=\"primary\" disabled={this.state.status===\"Enrolled\"?false:true}>\r\n  Save \r\n </Button></Grid>\r\n \r\n\r\n return (\r\n<div style = {{ width : '100%' }}>\r\n <form onSubmit={this.mySubmitHandler} method=\"post\">\r\n <fieldset id = \"roleBasedDisable\">\r\n <Grid item xs={12} sm={4}>\r\n <SingleSelect  name=\"interviewStatus\" id=\"interviewStatus\" label=\"Interview Status\"\r\n     onChange={this.handlePlacementSelectChange.bind(this, 'interviewStatus')}\r\n                            value={this.state.placementData.interviewStatus || ''}\r\n                            helperText = {this.state.errors.interviewStatus} \r\n                            error = {this.state.errors.interviewStatus ===''?false:true}\r\n                            options={this.state.intStatus} key={this.state.placementData.interviewStatus}\r\n                            />\r\n</Grid>\r\n<div style={{display:(this.state.placementData.interviewStatus===\"Placed\" || this.state.placementData.interviewStatus===\"Offer Not Taken\"?\"block\":\"none\")}}>\r\n<Grid id=\"hideData\" container spacing={2}>\r\n <Grid item xs={12}>\r\n       <FormControl>\r\n         </FormControl>  \r\n     </Grid>\r\n     <br></br>\r\n     { \r\n  (this.state.placementData.interviewStatus===\"Offer Not Taken\") &&         \r\n  <Grid item xs={12} sm={4}>\r\n  <SingleSelect  name=\"reason\" id=\"reason\" label=\"Reason\"\r\n  onChange={this.handleSelectChange.bind(this, 'reason')}\r\n                         value={this.state.placementData.reason || ''}\r\n                         options={this.state.offerNotTakenReason} key={this.state.placementData.reason}\r\n                         /> \r\n  </Grid>\r\n}\r\n     <Grid item xs={12} sm={4}>\r\n     <SingleSelect  name=\"empId\" id=\"empId\" label=\"Employer Name\"\r\n     onChange={this.handleSelectChange.bind(this, 'empId')}\r\n                            value={this.state.placementData.empId || ''}\r\n                            helperText = {this.state.errors.empId} \r\n                            error = {this.state.errors.empId ===''?false:true}\r\n                            options={this.state.center} key={this.state.placementData.empId}\r\n                            /> \r\n\r\n     </Grid>\r\n     <Grid item xs={12} sm={4} id=\"interviewRemark\">\r\n          <FormControl>\r\n            <TextField type=\"text\" name=\"spocName\" id=\"spocName\"\r\n            label = \"SPOC name\"\r\n            onChange={this.handleInputChange} \r\n            value={this.state.placementData.spocName || ''} \r\n            helperText = {this.state.errors.spocName} \r\n            error = {this.state.errors.spocName ===''?false:true}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} sm={4} id=\"interviewRemark\">\r\n          <FormControl>\r\n            <TextField type=\"text\" name=\"spocPhoneNumber\" id=\"spocPhoneNumber\"\r\n            label = \"SPOC phone NO.\"\r\n            onInput = {(e) =>{\r\n              e.target.value = Math.max(0, parseInt(e.target.value) ).toString().slice(0,10)\r\n          }}\r\n            onChange={this.handleInputChange} \r\n            value={this.state.placementData.spocPhoneNumber || ''} \r\n            helperText = {this.state.errors.spocPhoneNumber} \r\n            error = {this.state.errors.spocPhoneNumber ===''?false:true}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n     <Grid item xs={12} sm={4}>\r\n     <SingleSelect  name=\"domainName\" id=\"domainName\" label=\"Domain\"\r\n     onChange={this.handleSelectChange.bind(this, 'domainName')}\r\n     value={this.state.placementData.domainName || ''}\r\n     helperText = {this.state.errors.domainName} \r\n     error = {this.state.errors.domainName ===''?false:true}\r\n     options={this.state.domains} key={this.state.placementData.domainName}/> \r\n     </Grid>\r\n        <Grid item xs={12} sm={4} id=\"interviewRemark\">\r\n          <FormControl>\r\n            <TextField type=\"text\" name=\"designation\" id=\"designation\"\r\n            label = \"Designation\"\r\n            onChange={this.handleInputChange} \r\n            value={this.state.placementData.designation || ''} \r\n            helperText = {this.state.errors.designation} \r\n            error = {this.state.errors.designation ===''?false:true}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n     {/* <Grid item xs={12} sm={3} id = \"interviewDate\">\r\n         <TextField id=\"date\" name = \"interviewDate\" id = \"interviewDate\" onChange={this.handleInputChange}\r\n         label=\"InterView Date\" value={this.state.placementData.interviewDate || ''}\r\n         helperText = {this.state.errors.placementData != undefined ? this.state.errors.placementData.label : '' } \r\n        error = {this.state.errors.placementData != undefined ? this.state.errors.placementData.value : '' }\r\n         type=\"date\"\r\n         inputProps={{ max: new Date().toISOString().slice(0,10)}}\r\n         InputLabelProps={{\r\n           shrink: true,\r\n         }} />\r\n     </Grid> */}\r\n\r\n         {/* <Grid item xs={12} sm={3} id=\"interviewRemark\">\r\n          <FormControl>\r\n            <TextField type=\"text\" name=\"interviewRemark\" id=\"interviewRemark\"\r\n            label = \"Interview Remark\"\r\n            helperText = {this.state.errors.interviewRemark != undefined ? this.state.errors.interviewRemark.label : '' } \r\n            error = {this.state.errors.interviewRemark != undefined ? this.state.errors.interviewRemark.value : '' }\r\n            onChange={this.handleInputChange} value={this.state.placementData.interviewRemark || ''} />\r\n          </FormControl>\r\n        </Grid>\r\n      */}\r\n    \r\n      {/* <Grid item xs={12} sm={3} id=\"monthlyGrossSal\">\r\n       <FormControl>\r\n         <TextField type=\"text\" name=\"monthlyGrossSal\" id=\"monthlyGrossSal\"\r\n         label = \"Salary\"\r\n         helperText = {this.state.errors.monthlyGrossSal != undefined ? this.state.errors.monthlyGrossSal.label : '' } \r\n         error = {this.state.errors.monthlyGrossSal != undefined ? this.state.errors.monthlyGrossSal.value : '' }\r\n         onChange={this.handleInputChange} value={this.state.placementData.monthlyGrossSal || ''}\r\n         onInput = {(e) =>{\r\n          e.target.value = Math.max(0, parseInt(e.target.value) ).toString().slice(0,5)\r\n      }}\r\n         \r\n         />\r\n       </FormControl>\r\n     </Grid> */}\r\n\r\n     <Grid item xs={12} sm={4} id=\"annualSal\">\r\n       <FormControl>\r\n         <TextField type=\"text\" name=\"annualSal\" id=\"annualSal\"\r\n         label = \"Salary\"\r\n         helperText = {this.state.errors.annualSal} \r\n         error = {this.state.errors.annualSal ===''?false:true}\r\n         onChange={this.handleInputChange} value={this.state.placementData.annualSal || ''}\r\n         onInput = {(e) =>{\r\n          e.target.value = Math.max(0, parseInt(e.target.value) ).toString().slice(0,6)\r\n      }}\r\n         />\r\n       </FormControl>\r\n     </Grid>\r\n     {/* <Grid item xs={12} sm={3}>\r\n     <SingleSelect  name=\"studentStatus\" id=\"studentStatus\" label=\"Student Status\"\r\n     onChange={this.handleSelectChange.bind(this, 'studentStatus')}\r\n                            value={this.state.placementData.studentStatus || ''}\r\n                            helperText = {this.state.errors.studentStatus != undefined ? this.state.errors.studentStatus.label : '' } \r\n                            error = {this.state.errors.studentStatus != undefined ? this.state.errors.studentStatus.value : '' }\r\n                            options={this.state.studStatus} \r\n                            /> \r\n     </Grid>\r\n      */}\r\n      {/* <Grid item xs={12} sm={3} id=\"studentRemark\">\r\n       <FormControl>\r\n         <TextField type=\"text\" name=\"studentRemark\" id=\"studentRemark\" label = \"Student Remark\"\r\n         helperText = {this.state.errors.studentRemark != undefined ? this.state.errors.studentRemark.label : '' } \r\n         error = {this.state.errors.studentRemark != undefined ? this.state.errors.studentRemark.value : '' }\r\n         onChange={this.handleInputChange} value={this.state.placementData.studentRemark || ''}  />\r\n       </FormControl>\r\n     </Grid> */}\r\n    \r\n     <Grid item xs={12} sm={4} id = \"offerDate\">\r\n         <TextField id=\"date\" name = \"offerDate\" id = \"offerDate\" onChange={this.handleInputChange}\r\n         label=\"Offer Date\" value={this.state.placementData.offerDate || ''}\r\n         helperText = {this.state.errors.offerDate} \r\n         error = {this.state.errors.offerDate ===''?false:true}\r\n            type=\"date\"\r\n         inputProps={{ max: new Date().toISOString().slice(0,10)}}\r\n         InputLabelProps={{\r\n           shrink: true,\r\n         }} />\r\n\r\n     </Grid>\r\n\r\n\r\n     <Grid item xs={12} sm={4} id = \"joiningDate\">\r\n         <TextField id=\"date\" name = \"joiningDate\" id = \"joiningDate\" onChange={this.handleInputChange}\r\n         label=\"Joining Date\" value={this.state.placementData.joiningDate || ''}\r\n         helperText = {this.state.errors.joiningDate} \r\n         error = {this.state.errors.joiningDate ===''?false:true}\r\n         type=\"date\"\r\n         inputProps={{ max: new Date().toISOString().slice(0,10)}}\r\n         InputLabelProps={{\r\n           shrink: true,\r\n         }} />\r\n\r\n     </Grid>\r\n     <Grid item xs={12} sm={4}>\r\n     <SingleSelect  name=\"joined\" id=\"joined\" label=\"Joined\"\r\n     onChange={this.handleSelectChange.bind(this, 'joined')}\r\n                            value={this.state.placementData.joined || ''}\r\n                            options={this.state.join} \r\n                            helperText = {this.state.errors.joined} \r\n                            error = {this.state.errors.joined ===''?false:true}\r\n                            key={this.state.placementData.joined}\r\n                            /> \r\n\r\n     </Grid>\r\n\r\n\r\n     <Grid item xs={12}>\r\n              <FormControl>\r\n                <h6 style={{fontWeight: 'bold'}}>Job Location</h6>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            <AddressForPlacement\r\n\r\n                pincodeName=\"pincode\" pincodeId=\"pincode\" pincodeOnChange={this.getPincodeData.bind(this, 'pincode')} pincodeValue={this.state.address.pincode || ''} pincodeHelperText={this.state.errors.pincode}  pincodeError={this.state.errors.pincode==''?false:true}\r\n                villageName=\"villageName\" villageId=\"villageName\" villageInputValue={this.handleAddressSelectChange.bind(this, 'villageName')} villageData={this.state.village} villageValue={this.state.address.villageName || ''}  villageHelperText={this.state.errors.village}  villageError={this.state.errors.village==''?false:true}\r\n                cityName=\"cityName\" cityId=\"cityName\" cityValue={this.state.address.cityName || ''} cityData={this.state.city} cityInputValue={this.handleAddressSelectChange.bind(this, 'cityName')} cityNameHelperText={this.state.errors.cityName}  cityNameError={this.state.errors.cityName==''?false:true}\r\n                stateName=\"state\" stateId=\"state\" stateData={this.state.state} stateValue={this.state.address.state|| ''} stateInputValue={this.handleAddressSelectChange.bind(this, 'state')} stateHelperText={this.state.errors.state}  stateError={this.state.errors.state==''?false:true}\r\n                districtName=\"district\" districtId=\"district\" districtValue={this.state.address.district || ''} districtData={this.state.district} districtInputValue={this.handleAddressSelectChange.bind(this, 'district')} districtHelperText={this.state.errors.district}  districtError={this.state.errors.district==''?false:true}         \r\n             />\r\n\r\n<Grid item xs={12} sm={6} >\r\n<FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            onChange={this.handleCheckboxChange}\r\n            name=\"isDocumentsUploaded\"\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"I have uploaded appropriate Evidence\"\r\n      />\r\n   </Grid>\r\n<br/>\r\n\r\n\r\n   </Grid>\r\n\r\n</div>\r\n\r\n<div id=\"notPlaced\" style={{display:(this.state.placementData.interviewStatus===\"Not Placed\"?\"block\":\"none\")}}>\r\n<Grid  container spacing={2}>\r\n <Grid item xs={12}>\r\n       <FormControl>\r\n         </FormControl>  \r\n     </Grid>\r\n     <br></br>\r\n     <Grid item xs={12} sm={4}>\r\n     <SingleSelect  name=\"reason\" id=\"reason\" label=\"Reason\"\r\n     onChange={this.handleSelectChange.bind(this, 'reason')}\r\n                            value={this.state.placementData.reason || ''}\r\n                            options={this.state.notPlacedReasons} \r\n                            helperText = {this.state.errors.reason} \r\n                            error = {this.state.errors.reason ===''?false:true}\r\n                            /> \r\n     </Grid>\r\n   </Grid>\r\n</div>\r\n\r\n<div id=\"notInterested\" style={{display:(this.state.placementData.interviewStatus===\"Not Interested\"?\"block\":\"none\")}}>\r\n<Grid  container spacing={2}>\r\n <Grid item xs={12}>\r\n       <FormControl>\r\n         </FormControl>  \r\n     </Grid>\r\n     <br></br>\r\n     <Grid item xs={12} sm={4}>\r\n     <SingleSelect  name=\"reason\" id=\"reason\" label=\"Reason\"\r\n     onChange={this.handleSelectChange.bind(this, 'reason')}\r\n                            value={this.state.placementData.reason || ''}\r\n                            options={this.state.notInterestedReason} \r\n                            helperText = {this.state.errors.reason} \r\n                            error = {this.state.errors.reason ===''?false:true}\r\n                            /> \r\n     </Grid>\r\n   </Grid>\r\n</div>\r\n\r\n<div id=\"entrepreneurship\" style={{display:(this.state.placementData.interviewStatus===\"Entrepreneurship\"?\"block\":\"none\")}}>\r\n<Grid  container spacing={2}>\r\n <Grid item xs={12}>\r\n       <FormControl>\r\n         </FormControl>  \r\n     </Grid>\r\n     <br></br>\r\n\r\n     <Grid item xs={12} sm={4}>\r\n     <SingleSelect  name=\"domainName\" id=\"domainName\" label=\"Domain\"\r\n     onChange={this.handleSelectChange.bind(this, 'domainName')}\r\n     value={this.state.placementData.domainName || ''}\r\n     options={this.state.domains} /> \r\n     </Grid>\r\n      <Grid item xs={12} sm={4} id=\"studentRemark\">\r\n       <FormControl>\r\n         <TextField type=\"text\" name=\"noOfPeopleEmployed\" id=\"noOfPeopleEmployed\" label = \"No. of people employed\"\r\n          helperText = {this.state.errors.noOfPeopleEmployed} \r\n          error = {this.state.errors.noOfPeopleEmployed ===''?false:true} \r\n         onChange={this.handleInputChange} value={this.state.placementData.noOfPeopleEmployed || ''} \r\n         onInput = {(e) =>{\r\n          e.target.value = Math.max(0, parseInt(e.target.value) ).toString().slice(0,10)\r\n         }}/>\r\n       </FormControl>\r\n     </Grid>\r\n     <Grid item xs={12}>\r\n              <FormControl>\r\n                <h6 style={{fontWeight: 'bold'}}>Job Location</h6>\r\n              </FormControl>\r\n            </Grid>\r\n            <AddressForPlacement\r\n                pincodeName=\"pincode\" pincodeId=\"pincode\" pincodeOnChange={this.getPincodeData.bind(this, 'pincode')} pincodeValue={this.state.address.pincode || ''} pincodeHelperText={this.state.errors.pincode}  pincodeError={this.state.errors.pincode==''?false:true}\r\n                villageName=\"villageName\" villageId=\"villageName\" villageInputValue={this.handleAddressSelectChange.bind(this, 'villageName')} villageData={this.state.village} villageValue={this.state.address.villageName || ''}  villageHelperText={this.state.errors.village}  villageError={this.state.errors.village==''?false:true}\r\n                cityName=\"cityName\" cityId=\"cityName\" cityValue={this.state.address.cityName || ''} cityData={this.state.city} cityInputValue={this.handleAddressSelectChange.bind(this, 'cityName')} cityNameHelperText={this.state.errors.cityName}  cityNameError={this.state.errors.cityName==''?false:true}\r\n                stateName=\"stateName\" stateId=\"stateName\" stateData={this.state.state} stateValue={this.state.address.state|| ''} stateInputValue={this.handleAddressSelectChange.bind(this, 'state')} stateHelperText={this.state.errors.state}  stateError={this.state.errors.state==''?false:true}\r\n                districtName=\"district\" districtId=\"district\" districtValue={this.state.address.district || ''} districtData={this.state.district} districtInputValue={this.handleAddressSelectChange.bind(this, 'district')} districtHelperText={this.state.errors.district}  districtError={this.state.errors.district==''?false:true}         \r\n             />\r\n\r\n<Grid item xs={12} sm={6} >\r\n<FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            onChange={this.handleCheckboxChange}\r\n            name=\"isDocumentsUploaded\"\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"I have uploaded appropriate Evidence\"\r\n      />\r\n   </Grid>\r\n<br/>\r\n\r\n\r\n   </Grid>\r\n\r\n\r\n</div>\r\n\r\n<div id=\"selfemployedform\" style={{display:(this.state.placementData.interviewStatus===\"Self Employed\"?\"block\":\"none\")}}>\r\n\r\n</div>\r\n\r\n\r\n\r\n<div style={{display:(this.state.placementData.interviewStatus===\"Rejected\"?\"block\":\"none\")}}>\r\n<Grid id=\"hideData\" container spacing={2}>\r\n <Grid item xs={12}>\r\n       <FormControl>\r\n         </FormControl>  \r\n     </Grid>\r\n     <br></br>\r\n\r\n     <Grid item xs={12} sm={4}>\r\n     <SingleSelect  name=\"empId\" id=\"empId\" label=\"Employer Name\"\r\n     onChange={this.handleSelectChange.bind(this, 'empId')}\r\n                            value={this.state.placementData.empId || ''}\r\n                            helperText = {this.state.errors.empId} \r\n                            error = {this.state.errors.empId ===''?false:true}\r\n                            options={this.state.center} \r\n                            /> \r\n\r\n     </Grid>\r\n\r\n   </Grid>\r\n\r\n</div>\r\n\r\n\r\n\r\n   {button}\r\n   </fieldset>\r\n </form>\r\n <form onSubmit={this.uploadDocuments} method=\"post\">\r\n <Table  aria-label=\"simple table\" style={{ width:\"80%\"}}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell style={{ width:\"50%\"}}>Type of Document</TableCell>\r\n            <TableCell style={{ width:\"30%\"}}>Browse and Upload</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n            <TableRow >               \r\n            <TableCell >  \r\n          \r\n            <SingleSelect  isClearable={true} \r\n               name=\"typeOfDocument\" id=\"typeOfDocument\"\r\n              options={this.state.typeOfDocumentData}\r\n              onChange={this.handleSelectChangeDoc.bind(this, 'typeOfDocument')}\r\n              value={this.state.typeOfDocument || ''}\r\n            />          \r\n            </TableCell>\r\n           \r\n            <TableCell>   \r\n            <DropzoneArea  \r\n              name=\"file\" id=\"file\"\r\n              maxFileSize={2000000} filesLimit={1} showFileNames={true} \r\n              onChange={this.onFileChangeHandler}\r\n             // key={this.state.clearDropzoneArea}\r\n              />\r\n            </TableCell>\r\n            </TableRow>            \r\n        </TableBody>\r\n      </Table>\r\n      <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"flex-end\">\r\n             <Button type=\"submit\" variant=\"contained\" color=\"primary\" size=\"small\" \r\n                    disabled={this.state.file==null || this.state.typeOfDocument==''?true:false}\r\n             >Upload Document</Button>\r\n             </Grid>\r\n</form>\r\n\r\n\r\n\r\n <br></br>\r\n <MUIDataTable id=\"dtb\" title={\"List Of Placement Details\"} label={\"List of Placement Details \"}  columns={columns} data={this.state.info} options={options}\r\n      />\r\n\r\n      \r\n{ \r\n  (this.state.documents!=\"\") &&\r\n\r\n<Paper>\r\n      <Table  aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n          <TableCell>Created On</TableCell>\r\n          <TableCell>Document Name</TableCell>\r\n          <TableCell>File Name</TableCell>\r\n          <TableCell >Download</TableCell>\r\n          <TableCell >Delete</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {this.state.documents.map(row => (\r\n            <TableRow key={row.basicDocId}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n          \r\n                {row.createdOn}\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.documentName}\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.documentPath.split(\"/\")[1]}\r\n              </TableCell>\r\n            <TableCell >                 \r\n              <Button variant=\"contained\" color=\"primary\" size=\"small\" name=\"download\" id=\"download\" \r\n             \r\n               onClick={this.downloadDocuments.bind(this,row.basicDocId)}\r\n              >Download</Button>\r\n            </TableCell>            \r\n\r\n            <TableCell >                 \r\n              <Button variant=\"contained\" color=\"primary\" size=\"small\" name=\"delete\" id=\"delete\" \r\n               onClick={this.deleteDocument.bind(this,row.basicDocId)}\r\n              >Delete</Button>\r\n            </TableCell>            \r\n\r\n\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n\r\n\r\n          }\r\n\r\n { \r\n  (this.state.alertDialogFlag) && <AlertDialog   message={alertDialogOptions.message}></AlertDialog>\r\n    }\r\n\r\n\r\n </div>\r\n\r\n );\r\n}\r\n\r\n}\r\n\r\nexport default PlacementDetails;"]},"metadata":{},"sourceType":"module"}