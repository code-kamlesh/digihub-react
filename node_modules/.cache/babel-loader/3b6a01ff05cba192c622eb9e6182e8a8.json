{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\PlacementDetailsSubNP.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { savePlacementDetails, fetchUserDocumentsByUserIdAndTypeOfDocument, fectAddressDetailsByAddressID, fetchAddressDetailsBasedOnPincode, fetchPlacementDetailsByEngagementId, fetchAllCenter, saveAddressDetails, fetchEmployerDetails } from '../util/api';\nimport { SingleSelect } from \"react-select-material-ui\";\nimport UserContext from '../components/GolbalContext';\nimport { FormControl, InputLabel, FormControlLabel, Input, Grid, RadioGroup, Radio, TextField } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nconst domains = [{\n  value: 'Agriculture',\n  label: 'Agriculture'\n}, {\n  value: 'Apparel, made ups and Furnishing',\n  label: 'Apparel, made ups and Furnishing'\n}, {\n  value: 'Automotive',\n  label: 'Automotive'\n}, {\n  value: 'Beauty and Wellness',\n  label: 'Beauty and Wellness'\n}, {\n  value: 'BFSI',\n  label: 'BFSI'\n}, {\n  value: 'Construction',\n  label: 'Construction'\n}, {\n  value: 'Electronics',\n  label: 'Electronics'\n}, {\n  value: 'Furniture and Fittings',\n  label: 'Furniture and Fittings'\n}, {\n  value: 'Healthcare',\n  label: 'Healthcare'\n}, {\n  value: 'IT-ITeS',\n  label: 'IT-ITeS'\n}, {\n  value: 'Management, Entrepreneurship and Preofessional Courses',\n  label: 'Management, Entrepreneurship and Preofessional Courses'\n}, {\n  value: 'Retail',\n  label: 'Retail'\n}, {\n  value: 'Green Jobs',\n  label: 'Green Jobs'\n}, {\n  value: 'Telecom',\n  label: 'Telecom'\n}, {\n  value: 'Tourism and Hospitality',\n  label: 'Tourism and Hospitality'\n}];\nconst yesOrNo = [{\n  value: 'Yes',\n  label: 'Yes'\n}, {\n  value: 'No',\n  label: 'No'\n}];\nconst notPlacedReason = [{\n  value: 'Rejected By Employer',\n  label: 'Rejected By Employer'\n}, {\n  value: 'Not Avaliable Opportunity',\n  label: 'Not Avaliable Opportunity'\n}];\nconst notAvlOppReason = [{\n  value: 'No Employment Opportuntities',\n  label: 'No Employment Opportuntities'\n}, {\n  value: 'Others',\n  label: 'Others'\n}];\n\nclass PlacementDetailsSubEntNP extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSelectChange = (selectname, event) => {\n      this.setState({\n        placementData: { ...this.state.placementData,\n          [selectname]: event\n        }\n      });\n      console.log(\"value ====> \", this.state);\n    };\n\n    this.handleInputChange = event => {\n      const target = event.target;\n      let value = target.value;\n      const name = target.name;\n      this.setState({\n        placementData: { ...this.state.placementData,\n          [name]: value\n        }\n      });\n      console.log(\"value ====> \", this.state);\n    };\n\n    console.log(props.props.placementData);\n    this.state = {\n      placementData: {\n        domainName: '',\n        noOfPeopleEmployed: '',\n        familyBusiness: '',\n        availedLoan: '',\n        monthlyGrossSal: '',\n        reason: '',\n        empId: '',\n        reasonForNoOpportunity: '',\n        otherReasonInBrief: '',\n\n        /*Address here*/\n        joiningPin: '',\n        joiningCity: '',\n        addressId: '',\n\n        /*General data*/\n        createdBy: UserContext.userid,\n        updatedBy: UserContext.userid,\n        engagementId: props.props.engagementId,\n        dbUserId: props.props.id,\n        isActive: \"Y\",\n        interviewStatus: 'Not Placed'\n      },\n      employersDetails: [],\n      interviewStatus: props.props.placementData.interviewStatus\n    };\n    /*fetch employer details*/\n\n    fetchEmployerDetails('Active Partner', '%Placement Partner%').then(jsondata => {\n      console.log(\"employer data ===> \", jsondata);\n\n      if (jsondata.appError == null) {\n        let jsonObjects = JSON.parse(jsondata.data);\n        jsonObjects.map(item => {\n          this.state.employersDetails.push({\n            label: item.accountName,\n            value: item.id\n          });\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.mySubmitHandler,\n      method: \"post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      id: \"hideData\",\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"reason\",\n      id: \"reason\",\n      label: \"Reason\",\n      onChange: this.handleSelectChange.bind(this, 'reason'),\n      value: this.state.placementData.reason || '',\n      options: notPlacedReason // helperText={this.state.errors.reason}\n      // error={this.state.errors.reason === '' ? false : true}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 37\n      }\n    }), this.state.placementData.reason == 'Rejected By Employer' && /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"empId\",\n      id: \"empId\",\n      label: \"Employer Name\",\n      onChange: this.handleSelectChange.bind(this, 'empId'),\n      value: this.state.placementData.empId || '' // helperText={this.state.errors.empId}\n      // error={this.state.errors.empId === '' ? false : true}\n      ,\n      options: this.state.employersDetails,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 45\n      }\n    })), this.state.placementData.reason == 'Not Avaliable Opportunity' && /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"reasonForNoOpportunity\",\n      id: \"reasonForNoOpportunity\",\n      label: \"Reason for No Opportunites\",\n      onChange: this.handleSelectChange.bind(this, 'reasonForNoOpportunity'),\n      value: this.state.placementData.reasonForNoOpportunity || '' // helperText={this.state.errors.reasonForNoOpportunity}\n      // error={this.state.errors.reasonForNoOpportunity === '' ? false : true}\n      ,\n      options: notAvlOppReason,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 45\n      }\n    })), (this.state.placementData.reasonForNoOpportunity == 'Others' || this.state.placementData.reasonForNoOpportunity == 'No Employment Opportuntities') && /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      name: \"otherReasonInBrief\",\n      id: \"otherReasonInBrief\",\n      label: \"Please state/ brief the reason for No Opportunities\" // helperText={this.state.errors.otherReasonInBrief}\n      // error={this.state.errors.otherReasonInBrief === '' ? false : true}\n      ,\n      onChange: this.handleInputChange,\n      value: this.state.placementData.otherReasonInBrief || '',\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 49\n      }\n    })))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-end\",\n      id: \"btn\",\n      alignItems: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      type: \"submit\",\n      size: \"small\",\n      color: \"primary\" // disabled={(this.state.buttonStatus == \"Enrolled\") ? false : true}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 33\n      }\n    }, \"Save\"))))));\n  }\n\n}\n\nexport default PlacementDetailsSubEntNP;","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/PlacementDetailsSubNP.js"],"names":["React","ReactDOM","savePlacementDetails","fetchUserDocumentsByUserIdAndTypeOfDocument","fectAddressDetailsByAddressID","fetchAddressDetailsBasedOnPincode","fetchPlacementDetailsByEngagementId","fetchAllCenter","saveAddressDetails","fetchEmployerDetails","SingleSelect","UserContext","FormControl","InputLabel","FormControlLabel","Input","Grid","RadioGroup","Radio","TextField","Button","domains","value","label","yesOrNo","notPlacedReason","notAvlOppReason","PlacementDetailsSubEntNP","Component","constructor","props","handleSelectChange","selectname","event","setState","placementData","state","console","log","handleInputChange","target","name","domainName","noOfPeopleEmployed","familyBusiness","availedLoan","monthlyGrossSal","reason","empId","reasonForNoOpportunity","otherReasonInBrief","joiningPin","joiningCity","addressId","createdBy","userid","updatedBy","engagementId","dbUserId","id","isActive","interviewStatus","employersDetails","then","jsondata","appError","jsonObjects","JSON","parse","data","map","item","push","accountName","render","width","mySubmitHandler","bind"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { savePlacementDetails, fetchUserDocumentsByUserIdAndTypeOfDocument, fectAddressDetailsByAddressID, fetchAddressDetailsBasedOnPincode, fetchPlacementDetailsByEngagementId, fetchAllCenter, saveAddressDetails, fetchEmployerDetails, } from '../util/api';\r\nimport { SingleSelect } from \"react-select-material-ui\";\r\nimport UserContext from '../components/GolbalContext'\r\nimport { FormControl, InputLabel, FormControlLabel, Input, Grid, RadioGroup, Radio, TextField } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst domains = [\r\n    { value: 'Agriculture', label: 'Agriculture' },\r\n    { value: 'Apparel, made ups and Furnishing', label: 'Apparel, made ups and Furnishing' },\r\n    { value: 'Automotive', label: 'Automotive' },\r\n    { value: 'Beauty and Wellness', label: 'Beauty and Wellness' },\r\n    { value: 'BFSI', label: 'BFSI' },\r\n    { value: 'Construction', label: 'Construction' },\r\n    { value: 'Electronics', label: 'Electronics' },\r\n    { value: 'Furniture and Fittings', label: 'Furniture and Fittings' },\r\n    { value: 'Healthcare', label: 'Healthcare' },\r\n    { value: 'IT-ITeS', label: 'IT-ITeS' },\r\n    { value: 'Management, Entrepreneurship and Preofessional Courses', label: 'Management, Entrepreneurship and Preofessional Courses' },\r\n    { value: 'Retail', label: 'Retail' },\r\n    { value: 'Green Jobs', label: 'Green Jobs' },\r\n    { value: 'Telecom', label: 'Telecom' },\r\n    { value: 'Tourism and Hospitality', label: 'Tourism and Hospitality' }\r\n]\r\nconst yesOrNo = [\r\n    { value: 'Yes', label: 'Yes' },\r\n    { value: 'No', label: 'No' }\r\n]\r\nconst notPlacedReason = [\r\n    { value: 'Rejected By Employer', label: 'Rejected By Employer' },\r\n    { value: 'Not Avaliable Opportunity', label: 'Not Avaliable Opportunity' }\r\n]\r\nconst notAvlOppReason = [\r\n    { value: 'No Employment Opportuntities', label: 'No Employment Opportuntities' },\r\n    { value: 'Others', label: 'Others' }\r\n]\r\n\r\nclass PlacementDetailsSubEntNP extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(props.props.placementData)\r\n        this.state = {\r\n            placementData: {\r\n                domainName: '', noOfPeopleEmployed: '', familyBusiness: '', availedLoan: '',\r\n                monthlyGrossSal: '', reason: '', empId: '', reasonForNoOpportunity: '',\r\n                otherReasonInBrief: '',\r\n                /*Address here*/\r\n                joiningPin: '', joiningCity: '', addressId: '',\r\n                /*General data*/\r\n                createdBy: UserContext.userid, updatedBy: UserContext.userid, engagementId: props.props.engagementId,\r\n                dbUserId: props.props.id, isActive: \"Y\", interviewStatus: 'Not Placed',\r\n            },\r\n            employersDetails: [], interviewStatus: props.props.placementData.interviewStatus,\r\n\r\n        };\r\n\r\n        /*fetch employer details*/\r\n        fetchEmployerDetails('Active Partner', '%Placement Partner%').then((jsondata) => {\r\n            console.log(\"employer data ===> \", jsondata)\r\n            if (jsondata.appError == null) {\r\n                let jsonObjects = JSON.parse(jsondata.data);\r\n                jsonObjects.map(item => {\r\n                    this.state.employersDetails.push({ label: item.accountName, value: item.id })\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    handleSelectChange = (selectname, event) => {\r\n        this.setState({\r\n            placementData: {\r\n                ...this.state.placementData,\r\n                [selectname]: event\r\n            }\r\n        });\r\n        console.log(\"value ====> \", this.state)\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const target = event.target;\r\n        let value = target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            placementData: {\r\n                ...this.state.placementData,\r\n                [name]: value\r\n            }\r\n        });\r\n        console.log(\"value ====> \", this.state)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div style={{ width: '100%' }}>\r\n                    <form onSubmit={this.mySubmitHandler} method=\"post\">\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                                <FormControl>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <br></br>\r\n\r\n                            { /*Incase candidate is Not Placed*/}\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={12}>\r\n                                        <FormControl>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <br></br>\r\n\r\n                                <Grid id=\"hideData\" container spacing={2}>\r\n                                    <Grid item xs={12} sm={3}>\r\n                                        <SingleSelect name=\"reason\" id=\"reason\" label=\"Reason\"\r\n                                            onChange={this.handleSelectChange.bind(this, 'reason')}\r\n                                            value={this.state.placementData.reason || ''}\r\n                                            options={notPlacedReason}\r\n                                        // helperText={this.state.errors.reason}\r\n                                        // error={this.state.errors.reason === '' ? false : true}\r\n                                        />\r\n                                    </Grid>\r\n                                    <br></br>\r\n                                    {\r\n                                        (this.state.placementData.reason == 'Rejected By Employer') &&\r\n                                        <Grid item xs={12} sm={3}>\r\n                                            <SingleSelect name=\"empId\" id=\"empId\" label=\"Employer Name\"\r\n                                                onChange={this.handleSelectChange.bind(this, 'empId')}\r\n                                                value={this.state.placementData.empId || ''}\r\n                                                // helperText={this.state.errors.empId}\r\n                                                // error={this.state.errors.empId === '' ? false : true}\r\n                                                options={this.state.employersDetails}\r\n                                            />\r\n                                        </Grid>\r\n                                    }\r\n\r\n                                    {\r\n                                        (this.state.placementData.reason == 'Not Avaliable Opportunity') &&\r\n                                        <Grid item xs={12} sm={3}>\r\n                                            <SingleSelect name=\"reasonForNoOpportunity\" id=\"reasonForNoOpportunity\" label=\"Reason for No Opportunites\"\r\n                                                onChange={this.handleSelectChange.bind(this, 'reasonForNoOpportunity')}\r\n                                                value={this.state.placementData.reasonForNoOpportunity || ''}\r\n                                                // helperText={this.state.errors.reasonForNoOpportunity}\r\n                                                // error={this.state.errors.reasonForNoOpportunity === '' ? false : true}\r\n                                                options={notAvlOppReason}\r\n                                            />\r\n                                        </Grid>\r\n                                    }\r\n\r\n\r\n                                    {\r\n                                        (this.state.placementData.reasonForNoOpportunity == 'Others' || this.state.placementData.reasonForNoOpportunity == 'No Employment Opportuntities') &&\r\n                                        <Grid item xs={12} sm={3}>\r\n                                            <FormControl>\r\n                                                <TextField type=\"text\" name=\"otherReasonInBrief\" id=\"otherReasonInBrief\" label=\"Please state/ brief the reason for No Opportunities\"\r\n                                                    // helperText={this.state.errors.otherReasonInBrief}\r\n                                                    // error={this.state.errors.otherReasonInBrief === '' ? false : true}\r\n                                                    onChange={this.handleInputChange}\r\n                                                    value={this.state.placementData.otherReasonInBrief || ''} required\r\n                                                />\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                    }\r\n                                </Grid>\r\n\r\n                            <Grid container direction=\"row\" justify=\"flex-end\" id=\"btn\" alignItems=\"flex-end\">\r\n                                <Button variant=\"contained\" type=\"submit\" size=\"small\" color=\"primary\"\r\n                                // disabled={(this.state.buttonStatus == \"Enrolled\") ? false : true}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default PlacementDetailsSubEntNP;"]},"metadata":{},"sourceType":"module"}