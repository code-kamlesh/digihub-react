{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\AllBatches.js\";\nimport React, { Component } from 'react';\nimport MUIDataTable from \"mui-datatables\";\nimport UserContext from '../components/GolbalContext';\nimport { Grid } from '@material-ui/core';\nimport { SingleSelect } from \"react-select-material-ui\";\nimport { fetchBatchDetails, fetchEnrollmentDetailsByBatchId, fetchAllStudentDataByEngagementId, fetchBatchDetailsByBatchId } from './../util/api';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport ErrorBoundary from './../util/ErrorBoundary';\n\nclass AllBatches extends Component {\n  constructor() {\n    super();\n\n    this.getMuiTheme = () => createMuiTheme({\n      overrides: {\n        MuiTableBody: {\n          root: {}\n        }\n      },\n      typography: {\n        \"fontSize\": 12\n      }\n    });\n\n    this.state = {\n      studentDetails: [],\n      selectedStudentId: '',\n      selectedEngagementId: '',\n      selectedBatchDetails: [],\n      selectedBeneficiaryName: ''\n    };\n    this.formData = {\n      course: [],\n      activebatches: [],\n      engagementId: [],\n      alertDialogFlag: false\n    };\n    this.state = {\n      batches: []\n    };\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n    fetchBatchDetails(UserContext.centerId).then(jsondata => {\n      let activeB = JSON.parse(jsondata.data);\n      activeB.map(item => {\n        this.formData.activebatches.push({\n          label: item.batchName,\n          value: item.batchId\n        });\n      });\n    }).then(response => response);\n  }\n\n  handleSelectChange(selectname, batchId) {\n    fetchBatchDetailsByBatchId(batchId).then(batchData => {\n      let batchJsonObjects = JSON.parse(batchData.data);\n      this.setState({\n        selectedBatchDetails: batchJsonObjects\n      });\n    });\n    fetchEnrollmentDetailsByBatchId(batchId).then(jsondata => {\n      let enrollmentDetails = JSON.parse(jsondata.data);\n      this.formData.engagementId.length = 0;\n      enrollmentDetails.map(item => {\n        this.formData.engagementId.push({\n          engagementId: item.engagementId\n        });\n      });\n      fetchAllStudentDataByEngagementId(JSON.stringify(this.formData.engagementId)).then(jsondata => {\n        let studentInfo = [];\n\n        if (jsondata.data) {\n          let studentDetails = JSON.parse(jsondata.data);\n\n          for (var i = 0; i < studentDetails.length; i++) {\n            var details = {\n              'student_id': studentDetails[i].dbUserId,\n              'engagement_id': studentDetails[i].engagementId,\n              'name': studentDetails[i].firstName + \" \" + studentDetails[i].lastName,\n              'status': studentDetails[i].status,\n              'dob': studentDetails[i].dob\n            };\n            studentInfo.push(details);\n          }\n        }\n\n        this.setState({\n          studentDetails: []\n        }, () => {\n          this.setState({\n            studentDetails: studentInfo\n          });\n        });\n        studentInfo = null;\n      });\n    });\n  }\n\n  render() {\n    const columns = [{\n      label: 'Student Id',\n      name: 'student_id',\n      options: {\n        sortDirection: 'desc'\n      },\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Engagement Id',\n      name: 'engagement_id',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Name',\n      name: 'name',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Date Of Birth',\n      name: 'dob',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Status',\n      name: 'status',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }];\n    const options = {\n      filterType: \"dropdown\",\n      responsive: \"stacked\",\n      sortDirection: \"desc\",\n      selectableRows: \"single\",\n      rowsPerPage: 10,\n      selectableRowsOnClick: true,\n      disableToolbarSelect: true,\n      textLabels: {\n        body: {\n          noMatch: /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: \"blue\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 20\n            }\n          }, \"Please select batch/ another batch to load students here\")\n        }\n      }\n    };\n    return /*#__PURE__*/React.createElement(ErrorBoundary, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      alignContent: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      onChange: this.handleSelectChange.bind(this, 'batchName'),\n      name: \"batchName\",\n      id: \"batchName\",\n      placeholder: \"Select Batch\",\n      options: this.formData.activebatches,\n      fullWidth: true,\n      style: {\n        \"fontSize\": 11\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }), this.state.selectedBatchDetails != null && /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      \"aria-label\": \"simple table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }\n    }, \"Batch Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }\n    }, \"Batch Description\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }\n    }, \"Start Date\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    }, \"End Date\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }\n    }, \"OJT Start Date\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }\n    }, \"OJT End Date\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }\n    }, this.state.selectedBatchDetails[0].batchName), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }\n    }, this.state.selectedBatchDetails[0].batchDescription), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }\n    }, this.state.selectedBatchDetails[0].startDate), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }\n    }, this.state.selectedBatchDetails[0].endDate), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }\n    }, this.state.selectedBatchDetails[0].ojtStartDate), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }\n    }, this.state.selectedBatchDetails[0].ojtEndDate))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(MuiThemeProvider, {\n      theme: this.getMuiTheme(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(MUIDataTable, {\n      title: \"Enrolled Student list\",\n      label: \"List of Students\",\n      data: this.state.studentDetails,\n      columns: columns,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 12\n      }\n    })));\n  }\n\n}\n\nexport default AllBatches;","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/AllBatches.js"],"names":["React","Component","MUIDataTable","UserContext","Grid","SingleSelect","fetchBatchDetails","fetchEnrollmentDetailsByBatchId","fetchAllStudentDataByEngagementId","fetchBatchDetailsByBatchId","createMuiTheme","MuiThemeProvider","Table","TableBody","TableCell","TableHead","TableRow","Paper","ErrorBoundary","AllBatches","constructor","getMuiTheme","overrides","MuiTableBody","root","typography","state","studentDetails","selectedStudentId","selectedEngagementId","selectedBatchDetails","selectedBeneficiaryName","formData","course","activebatches","engagementId","alertDialogFlag","batches","handleSelectChange","bind","centerId","then","jsondata","activeB","JSON","parse","data","map","item","push","label","batchName","value","batchId","response","selectname","batchData","batchJsonObjects","setState","enrollmentDetails","length","stringify","studentInfo","i","details","dbUserId","firstName","lastName","status","dob","render","columns","name","options","sortDirection","headerStyle","color","filterType","responsive","selectableRows","rowsPerPage","selectableRowsOnClick","disableToolbarSelect","textLabels","body","noMatch","batchDescription","startDate","endDate","ojtStartDate","ojtEndDate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport UserContext from '../components/GolbalContext';\r\nimport {  Grid}  from '@material-ui/core';\r\nimport { SingleSelect } from \"react-select-material-ui\";\r\nimport { fetchBatchDetails ,fetchEnrollmentDetailsByBatchId,fetchAllStudentDataByEngagementId,fetchBatchDetailsByBatchId} from './../util/api';\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ErrorBoundary from  './../util/ErrorBoundary';\r\n\r\nclass AllBatches extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {studentDetails:[],selectedStudentId:'',selectedEngagementId:'',selectedBatchDetails:[],selectedBeneficiaryName:''};  \r\n    this.formData = { course : [], activebatches : [],engagementId:[],alertDialogFlag:false};    \r\n       this.state = {batches:[]};\r\n       this.handleSelectChange = this.handleSelectChange.bind(this);   \r\n       fetchBatchDetails(UserContext.centerId).then((jsondata) => {     \r\n         let activeB = JSON.parse(jsondata.data);\r\n         activeB.map(item => {this.formData.activebatches.push({label: item.batchName, value: item.batchId }) });\r\n       }).then(response => response);    \r\n}\r\n\r\ngetMuiTheme = () => createMuiTheme({\r\n  overrides: {\r\n    MuiTableBody: {\r\n      root: {\r\n      \r\n      }\r\n    }\r\n  },\r\n  typography: {\r\n    \"fontSize\":12,\r\n   }\r\n})\r\n\r\nhandleSelectChange(selectname, batchId) {\r\n\r\n  fetchBatchDetailsByBatchId(batchId).then((batchData) => { \r\n    let batchJsonObjects = JSON.parse(batchData.data);\r\n      this.setState({selectedBatchDetails :batchJsonObjects});\r\n    \r\n\r\n   });\r\n\r\nfetchEnrollmentDetailsByBatchId(batchId).then((jsondata) => {\r\n  let enrollmentDetails = JSON.parse(jsondata.data);\r\n  this.formData.engagementId.length=0;\r\n  enrollmentDetails.map(item => {this.formData.engagementId.push({engagementId:item.engagementId}) });\r\n  fetchAllStudentDataByEngagementId(JSON.stringify(this.formData.engagementId)).then((jsondata) => {\r\n    let studentInfo=[];\r\nif(jsondata.data){\r\n    let studentDetails = JSON.parse(jsondata.data);   \r\n    for(var i=0;i<studentDetails.length;i++){\r\n      var  details =\r\n      {    'student_id':studentDetails[i].dbUserId,\r\n          'engagement_id':studentDetails[i].engagementId,\r\n          'name' :studentDetails[i].firstName+\" \"+studentDetails[i].lastName,\r\n          'status':studentDetails[i].status,\r\n          'dob':studentDetails[i].dob\r\n      }; \r\n      studentInfo.push(details);    \r\n  } \r\n\r\n}    \r\n\r\nthis.setState({studentDetails:[]},()=>{this.setState({studentDetails:studentInfo})});\r\nstudentInfo=null;\r\n}); \r\n});\r\n  \r\n}\r\n\r\n\r\n\r\n  render() {\r\n    const columns = [{label: 'Student Id', name: 'student_id',options: { sortDirection: 'desc' },headerStyle: {color:'#FF9800'}},\r\n    {label: 'Engagement Id', name: 'engagement_id',headerStyle: {color:'#FF9800'}},\r\n    {label: 'Name', name: 'name',headerStyle: {color:'#FF9800'}},\r\n    {label: 'Date Of Birth', name: 'dob',headerStyle: {color:'#FF9800'}},\r\n    {label: 'Status', name: 'status',headerStyle: {color:'#FF9800'}}  \r\n   ]\r\n\r\n  \r\n    const options = {\r\n      filterType: \"dropdown\",\r\n      responsive: \"stacked\",\r\n      sortDirection: \"desc\",\r\n      selectableRows:\"single\",\r\n      rowsPerPage:10,\r\n      selectableRowsOnClick: true,\r\n      disableToolbarSelect:true,\r\n      textLabels: {\r\n        body: {\r\n          noMatch: <span style={{color:\"blue\"}}>Please select batch/ another batch to load students here</span>\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <ErrorBoundary>\r\n      <div>\r\n    \r\n     <Grid item xs={12} sm={4} alignContent=\"center\" >\r\n     <SingleSelect onChange={this.handleSelectChange.bind(this, 'batchName')} name=\"batchName\" id=\"batchName\"\r\n              placeholder = \"Select Batch\"              \r\n              options={this.formData.activebatches}\r\n              fullWidth={true}\r\n              style={{ \"fontSize\":11}}\r\n            />\r\n            </Grid>\r\n            <br/>\r\n\r\n\r\n            { (this.state.selectedBatchDetails!=null) && \r\n\r\n<Paper >\r\n<Table  aria-label=\"simple table\">\r\n  <TableHead>\r\n    <TableRow>\r\n      <TableCell>Batch Name</TableCell>\r\n      <TableCell>Batch Description</TableCell>\r\n      <TableCell>Start Date</TableCell>\r\n      <TableCell>End Date</TableCell>\r\n      <TableCell>OJT Start Date</TableCell>\r\n      <TableCell>OJT End Date</TableCell>\r\n    </TableRow>\r\n  </TableHead>\r\n  <TableBody>\r\n      <TableRow >               \r\n      <TableCell >   \r\n      {this.state.selectedBatchDetails[0].batchName}\r\n      </TableCell>\r\n      <TableCell >   \r\n      {this.state.selectedBatchDetails[0].batchDescription}\r\n      </TableCell>\r\n      <TableCell >   \r\n      {this.state.selectedBatchDetails[0].startDate}\r\n      </TableCell>\r\n      <TableCell >   \r\n      {this.state.selectedBatchDetails[0].endDate}\r\n      </TableCell>\r\n      <TableCell >   \r\n      {this.state.selectedBatchDetails[0].ojtStartDate}\r\n      </TableCell>\r\n      <TableCell >   \r\n      {this.state.selectedBatchDetails[0].ojtEndDate}\r\n      </TableCell>\r\n      </TableRow>\r\n      \r\n  </TableBody>\r\n</Table>\r\n</Paper> \r\n\r\n\r\n            }   \r\n\r\n               <br/> \r\n    <MuiThemeProvider theme={this.getMuiTheme()}>          \r\n      <MUIDataTable\r\n       title={\"Enrolled Student list\"} label={\"List of Students\"}\r\n        data={this.state.studentDetails} columns={columns} \r\n        options={options} \r\n        />\r\n    </MuiThemeProvider>\r\n      <br/><br/>\r\n\r\n\r\n</div>\r\n</ErrorBoundary>   \r\n    );\r\n  }\r\n}\r\n\r\nexport default AllBatches ;\r\n"]},"metadata":{},"sourceType":"module"}