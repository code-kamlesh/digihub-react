{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\VirtualToPhysical.js\";\nimport React, { Component } from 'react';\nimport UserContext from '../components/GolbalContext';\nimport { SingleSelect } from \"react-select-material-ui\";\nimport { Checkbox, InputLabel, Input, Grid, Button } from '@material-ui/core';\nimport { fetchAllStateDetails, fetchStudentDetailsBaisedOnChannel, fetchVirtualData } from './../util/api';\nexport default class VitualToPhysical extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      channelCreation: \"\",\n      statelist: [],\n      Selectedstate: \"\"\n    };\n    this.handleStateChange = this.handleStateChange.bind(this);\n    fetchAllStateDetails().then(jsondata => {\n      let res = JSON.parse(jsondata.data);\n      console.log(res);\n      res.forEach(element => {\n        this.state.statelist.push({\n          'value': element.name,\n          'label': element.name\n        });\n      });\n    }); // Fetch student details baised on strive chaneel\n\n    fetchStudentDetailsBaisedOnChannel(\"SR-STRIVE\").then(jsondata => {\n      let res = JSON.parse(jsondata.data);\n      console.log(jsondata);\n      console.log(res);\n    });\n  } // Dropdown for state\n\n\n  handleStateChange(selectname, event) {\n    console.log(event); // this.setState({Selectedstate: event.label})\n\n    console.log(selectname);\n    console.log(\"Hello \"); // console.log(event.target.value)\n  } //Getting the info of the table data\n\n\n  getDetails() {\n    fetchVirtualData(\"3049\", \"Uttar Pradesh\").then(jsondata => {\n      let res = JSON.parse(jsondata.data);\n      console.log(res[0]);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, \"State\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"Selectedstate\",\n      id: \"Selectedstate\" //   key={this.state.Selectedstate || ''}\n      ,\n      options: this.state.statelist,\n      value: this.state.Selectedstate || '',\n      onChange: this.handleStateChange.bind(this, 'Selectedstate') //   helperText={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.label : ''}\n      //   error={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.value : ''}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.getDetails.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, \"Get Details\"))));\n  }\n\n}","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/VirtualToPhysical.js"],"names":["React","Component","UserContext","SingleSelect","Checkbox","InputLabel","Input","Grid","Button","fetchAllStateDetails","fetchStudentDetailsBaisedOnChannel","fetchVirtualData","VitualToPhysical","constructor","props","state","channelCreation","statelist","Selectedstate","handleStateChange","bind","then","jsondata","res","JSON","parse","data","console","log","forEach","element","push","name","selectname","event","getDetails","render","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport UserContext from '../components/GolbalContext'\r\nimport { SingleSelect } from \"react-select-material-ui\";\r\nimport { Checkbox, InputLabel, Input, Grid, Button } from '@material-ui/core';\r\nimport {fetchAllStateDetails,fetchStudentDetailsBaisedOnChannel,fetchVirtualData } from './../util/api';\r\n\r\nexport default class VitualToPhysical extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n           channelCreation:\"\",\r\n           statelist:[],\r\n           Selectedstate:\"\",\r\n           \r\n        }\r\n        this.handleStateChange= this.handleStateChange.bind(this);\r\n       fetchAllStateDetails().then((jsondata)=>{\r\n                let res = JSON.parse(jsondata.data)\r\n                console.log(res)\r\n                res.forEach(element => {\r\n                    this.state.statelist.push({\r\n                        'value':element.name,\r\n                        'label':element.name,\r\n                    })\r\n                });\r\n            })\r\n\r\n            // Fetch student details baised on strive chaneel\r\n            fetchStudentDetailsBaisedOnChannel(\"SR-STRIVE\").then((jsondata)=>{\r\n                let res = JSON.parse(jsondata.data)\r\n                console.log(jsondata)\r\n                console.log(res)\r\n            })\r\n        \r\n    }\r\n\r\n    // Dropdown for state\r\n    handleStateChange(selectname,event){\r\n        console.log(event)\r\n\r\n        // this.setState({Selectedstate: event.label})\r\n        console.log(selectname)\r\n        console.log(\"Hello \")\r\n\r\n        // console.log(event.target.value)\r\n    }\r\n\r\n    //Getting the info of the table data\r\n    getDetails(){\r\n        fetchVirtualData(\"3049\", \"Uttar Pradesh\").then((jsondata)=>{\r\n            let res = JSON.parse(jsondata.data)\r\n            console.log(res[0])\r\n        })\r\n    }\r\n\r\n    \r\n    render(){\r\n        return(\r\n            <div style={{ width: '100%' }}>\r\n            <Grid container>\r\n            <Grid item xs={12}> </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} >State</InputLabel>\r\n            <SingleSelect\r\n              name=\"Selectedstate\" id=\"Selectedstate\"\r\n            //   key={this.state.Selectedstate || ''}\r\n              options={this.state.statelist}\r\n              value={this.state.Selectedstate || ''}\r\n              onChange={this.handleStateChange.bind(this, 'Selectedstate')}\r\n            //   helperText={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.label : ''}\r\n            //   error={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.value : ''}\r\n            />\r\n            </Grid>\r\n            <Grid item xs={12} sm={1}></Grid>\r\n            <Grid item xs={12} sm={4}>\r\n            <Button color=\"primary\" onClick={this.getDetails.bind(this)}>\r\n               Get Details\r\n             </Button>\r\n          </Grid>\r\n          </Grid>\r\n\r\n            </div>\r\n           \r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}