{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\BulkUpload.js\";\nimport React, { Component } from 'react';\nimport * as XLSX from \"xlsx\";\nimport { InputLabel, Input, Grid, Button } from '@material-ui/core';\nimport { SingleSelect } from \"react-select-material-ui\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport UserContext from '../components/GolbalContext';\nimport { fetchNotCompletedBatchDetails, saveBulkMetaData, saveBulkStudentData, saveBulkMetaDataAgain } from '../util/api';\nimport Student_Template1 from \"./../assets/document/Student_Template1.xlsx\";\nlet today = new Date();\nlet dd = String(today.getDate()).padStart(2, '0');\nlet mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n\nlet yyyy = today.getFullYear();\nvar time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\ntoday = yyyy + '-' + mm + '-' + dd + ' ' + time;\nexport default class bulkUpload extends Component {\n  constructor(props) {\n    super(props);\n\n    this.readExcel = file => {\n      // \n      let file_name = file.name;\n      this.setState({\n        fileName: file_name\n      });\n      const fileReader = new FileReader();\n      fileReader.readAsArrayBuffer(file);\n\n      fileReader.onload = e => {\n        //  console.log(e)\n        const bufferArray = e.target.result;\n        const wb = XLSX.read(bufferArray, {\n          type: \"buffer\"\n        });\n        const wsname = wb.SheetNames[0];\n        const ws = wb.Sheets[wsname]; // To get the header details of excel\n\n        const data = XLSX.utils.sheet_to_json(ws, {\n          header: 1\n        }); //  console.log(\"Header file \",data[0])\n\n        let student_data = XLSX.utils.sheet_to_json(ws); //  console.log(\"data \",student_data)\n\n        this.setState({\n          studentInfo: student_data\n        }); // Checking the duplicate aadhar in same file\n\n        for (var i = 0; i < this.state.student_count; i++) {\n          for (var j = i + 1; j < this.state.student_count; j++) {\n            console.log(studentInfo[i].Aadhar_Number);\n\n            if (studentInfo[i].Aadhar_Number === studentInfo[j].Aadhar_Number) {\n              alert(studentInfo[i].First_Name + \" has duplicate Addhar Number\");\n              this.setState({\n                upload_button: true\n              });\n              return;\n            }\n          }\n        }\n\n        this.setState({\n          student_count: data.length - 1\n        }); //  console.log(\"DataCount : \",this.state.student_count )\n\n        const requiredHeader = ['Aadhar_Number', 'First_Name', 'Middle_Name', 'Last_Name', 'Date_of_Birth', 'Gender', 'Qualification', 'Passing_year', 'Religion', 'Address_Line_1', 'Village', 'District', 'State', 'Pincode', 'Category', 'Primary_Contact_Number', 'Primary_Mail_ID', 'College_register_no', 'Iti_grade', 'Iti_trade'];\n        let flag = true; // var x= requiredHeader.findIndex(element =>{\n        //   element == \"Created_by\"\n        // })\n        // console.log(x)\n        // console.log(data[0] )\n\n        requiredHeader.map((element, id) => {\n          // console.log(\"header comparison \",element, \"data : \",data[0][id])\n          if (flag) {\n            if (element == data[0][id]) {\n              if (id + 1 == requiredHeader.length) {\n                // Activating the upload button\n                this.setState({\n                  upload_button: false\n                });\n              }\n            } else {\n              flag = false;\n              alert(\"Plese use the correct template for upload.The coloumn in the upload file and sample template does not match.\"); // Plese use the correct template for upload.\n\n              this.setState({\n                upload_button: true\n              });\n              return;\n            }\n          }\n        });\n      };\n    };\n\n    this.state = {\n      user_unique_id: 0,\n      batchList: [],\n      Selectedoption: \"\",\n      student_count: 0,\n      fileName: \"\",\n      studentInfo: [],\n      batchName: null,\n      batchId: 0,\n      flag: false,\n      upload_button: true,\n      errors: {},\n      register_number: 0,\n      options: UserContext.modelId == 3 || UserContext.modelId === 18 || UserContext.modelId === 19 || UserContext.modelId === 20 || UserContext.modelId === 21 || UserContext.modelId === 22 || UserContext.modelId === 23 ? [{\n        value: \"Mobilization\",\n        label: \"Mobilization\"\n      }, {\n        value: \"Enrollment\",\n        label: \"Enrollment\"\n      }] : [{\n        value: \"Mobilization\",\n        label: \"Mobilization\"\n      }]\n    };\n    this.handleOptionsChange = this.handleOptionsChange.bind(this); // Binding the method\n  } // optind change handler\n\n\n  handleOptionsChange(selectname, event) {\n    const value = event; // console.log(value)\n\n    this.setState({\n      Selectedoption: value,\n      batchName: \"\",\n      batchId: 0,\n      errors: { ...this.state.errors,\n        SelectedBatch: {\n          'label': '',\n          'value': false\n        }\n      }\n    });\n    this.setState({\n      batchList: []\n    });\n\n    if (event === \"Enrollment\") {\n      this.setState({\n        errors: { ...this.state.errors,\n          SelectedBatch: {\n            'label': 'Please select some option',\n            'value': true\n          }\n        }\n      }); // setDisabled(false)\n\n      fetchNotCompletedBatchDetails(UserContext.centerId).then(jsondata => {\n        let result = JSON.parse(jsondata.data); // console.log(\"center : \",result)\n\n        result.forEach(element => {\n          //  console.log(\"Condition for date \" , element.freezeDate > today)\n          if (element.freezeDate > today) {\n            this.state.batchList.push({\n              \"value\": element.batchId,\n              \"label\": element.batchName\n            });\n          }\n        });\n      });\n    } else {// setDisabled(true)\n    }\n  } // Hhandle batch changes\n\n\n  handleBatchChange(selectname, event) {\n    // console.log(\"selected optins : \",this.state.Selectedoption)\n    let value = event; // console.log(event)\n\n    let index = this.state.batchList.findIndex(object => object.value == value);\n    let batchname = this.state.batchList[index].label; // console.log(this.state.batcheList)\n\n    this.setState({\n      batchId: event,\n      batchName: batchname,\n      errors: { ...this.state.errors,\n        SelectedBatch: {\n          'label': '',\n          'value': false\n        }\n      }\n    });\n  } // Handle for excel file change\n\n\n  // Uploadinh the doumnet\n  // this.setState({metaData})\n  async uploadDocuments() {\n    let x = 0; // alert(\"hello\")\n    // console.log(UserContext.modelId)\n    // console.log(this.state.student_count)\n    // console.log(this.state.studentInfo)\n    // console.log(this.state.fileName)\n\n    const response = await saveBulkMetaData(this.state.fileName, today, this.state.Selectedoption, this.state.batchName, this.state.batchId, this.state.student_count, \"L\", UserContext.centerName, UserContext.centerId, UserContext.modelId, UserContext.userid, \"  \").then(jsondata => {\n      let result = JSON.parse(jsondata.data); // console.log(\"Mpdel id : \",result[0].modelId)\n\n      this.state.register_number = result[0].regId; // console.log(this.state.register_number)\n\n      if (result[0].regId == 0) {\n        alert(\"Data Not saved\"); // changes\n\n        return;\n      } // Changes at 20 october\n      else {\n        this.state.user_unique_id = result[0].regId;\n        this.uploadStudentData();\n      }\n    });\n  }\n\n  async uploadStudentData() {\n    let flag = false;\n    let studentInfo = this.state.studentInfo; // // Checking the duplicate aadhar in same file\n    // for(var i = 0; i <this.state.student_count; i++) {  \n    //   for(var j = i + 1; j <this.state.student_count; j++) {  \n    //     console.log(studentInfo[i].Aadhar_Number)\n    //       if(studentInfo[i].Aadhar_Number === studentInfo[j].Aadhar_Number) {\n    //         alert(studentInfo[i].First_Name +\" has duplicate Addhar Number\") \n    //         this.setState({upload_button:true})\n    //         return; \n    //       }        \n    //   }  \n    //   }  \n    // console.log(\"Bulk Student data : \",studentInfo)\n\n    for (var i = 0; i < this.state.student_count; i++) {\n      const response1 = await saveBulkStudentData(this.state.user_unique_id, studentInfo[i].First_Name || null, studentInfo[i].Last_Name || null, studentInfo[i].Middle_Name || null, studentInfo[i].Date_of_Birth || null, studentInfo[i].Aadhar_Number || null, this.state.batchName || null, studentInfo[i].Qualification || null, studentInfo[i].Passing_year || null, studentInfo[i].Gender || null, studentInfo[i].Religion || null, studentInfo[i].Category || null, studentInfo[i].Primary_Contact_Number || null, studentInfo[i].Primary_Mail_ID || null, studentInfo[i].College_register_no || null, studentInfo[i].Iti_grade || null, studentInfo[i].Iti_trade || null, studentInfo[i].Address_Line_1 || null, studentInfo[i].Village || null, studentInfo[i].District || null, studentInfo[i].State || null, studentInfo[i].Pincode || null, today, // remove every place\n      UserContext.userid, \"P\", \"::\", \"::\").then(jsondata => {\n        let result = JSON.parse(jsondata.data); //  console.log(result)\n\n        flag = true;\n      });\n    }\n\n    if (flag == true) {\n      alert(\"Data Saved Successfully and Registration ID is : \" + this.state.user_unique_id);\n    } else {\n      alert(\"Data Not Saved\");\n      return;\n    } // to change the status from L to P\n\n\n    saveBulkMetaDataAgain(this.state.register_number, this.state.fileName, today, this.state.Selectedoption, this.state.batchName, this.state.batchId, this.state.student_count, \"P\", UserContext.centerName, UserContext.centerId, UserContext.modelId, UserContext.userid, \" \").then(jsondata => {\n      let result = JSON.parse(jsondata.data); // console.log(result)\n    });\n  } // Download file\n\n\n  downloadFile() {\n    const url = Student_Template1;\n    window.open(url);\n  } // Routes Change\n\n\n  routeChange() {\n    this.props.history.push({\n      pathname: '/dashboard/History',\n      state: {}\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-end\",\n      alignItems: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.downloadFile.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 14\n      }\n    }, \"Download template\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 7\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 13\n      }\n    }, \"Options\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"Selectedoption\",\n      id: \"Selectedoption\",\n      options: this.state.options,\n      value: this.state.Selectedoption || '',\n      key: this.state.Selectedoption || '',\n      onChange: this.handleOptionsChange.bind(this, 'Selectedoption'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 13\n      }\n    }, \"Batches\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"SelectedBatch\",\n      id: \"SelectedBatch\",\n      key: this.state.SelectedBatch || '',\n      options: this.state.batchList,\n      value: this.state.SelectedBatch || '',\n      onChange: this.handleBatchChange.bind(this, 'SelectedBatch'),\n      disabled: this.state.Selectedoption == \"Mobilization\" ? true : false,\n      helperText: this.state.errors.SelectedBatch != undefined ? this.state.errors.SelectedBatch.label : '',\n      error: this.state.errors.SelectedBatch != undefined ? this.state.errors.SelectedBatch.value : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Table, {\n      \"aria-label\": \"simple table\",\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      name: \"upload-photo\",\n      type: \"file\",\n      accept: \".xlsx/*, .xls/*\",\n      onClick: e => {\n        e.target.value = null; // setDisabled(true)\n      },\n      onChange: e => {\n        const file = e.target.files[0];\n        var substr1 = file.name.substring(file.name.length - 4, file.name.length);\n        var substr2 = file.name.substring(file.name.length - 3, file.name.length);\n\n        if (substr1 == \"xlsx\" || substr2 == \"xls\") {\n          this.readExcel(file);\n        } else {\n          alert(\"Please Upload Excel file\");\n          return;\n        }\n      },\n      maxFileSize: 5000000,\n      filesLimit: 1,\n      showFileNames: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 15\n      }\n    }, \"Note-:Please upload Excel file\"), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 15\n      }\n    }, \"and size should not be greater than 5MB.\"))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 13\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 20\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      alignItems: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"small\",\n      onClick: this.uploadDocuments.bind(this),\n      disabled: this.state.upload_button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 15\n      }\n    }, \"Upload Document\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 14\n      }\n    }), \"  \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 22\n      }\n    }), \"  \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 30\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-end\",\n      alignItems: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.routeChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 14\n      }\n    }, \"History Details\")));\n  }\n\n}","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/BulkUpload.js"],"names":["React","Component","XLSX","InputLabel","Input","Grid","Button","SingleSelect","Table","TableBody","TableCell","TableRow","UserContext","fetchNotCompletedBatchDetails","saveBulkMetaData","saveBulkStudentData","saveBulkMetaDataAgain","Student_Template1","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","time","getHours","getMinutes","getSeconds","bulkUpload","constructor","props","readExcel","file","file_name","name","setState","fileName","fileReader","FileReader","readAsArrayBuffer","onload","e","bufferArray","target","result","wb","read","type","wsname","SheetNames","ws","Sheets","data","utils","sheet_to_json","header","student_data","studentInfo","i","state","student_count","j","console","log","Aadhar_Number","alert","First_Name","upload_button","length","requiredHeader","flag","map","element","id","user_unique_id","batchList","Selectedoption","batchName","batchId","errors","register_number","options","modelId","value","label","handleOptionsChange","bind","selectname","event","SelectedBatch","centerId","then","jsondata","JSON","parse","forEach","freezeDate","push","handleBatchChange","index","findIndex","object","batchname","uploadDocuments","x","response","centerName","userid","regId","uploadStudentData","response1","Last_Name","Middle_Name","Date_of_Birth","Qualification","Passing_year","Gender","Religion","Category","Primary_Contact_Number","Primary_Mail_ID","College_register_no","Iti_grade","Iti_trade","Address_Line_1","Village","District","State","Pincode","downloadFile","url","window","open","routeChange","history","pathname","render","width","undefined","files","substr1","substring","substr2","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport * as XLSX from \"xlsx\";\r\nimport {  InputLabel, Input, Grid, Button } from '@material-ui/core';\r\nimport { SingleSelect } from \"react-select-material-ui\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport UserContext from '../components/GolbalContext'\r\nimport {fetchNotCompletedBatchDetails,saveBulkMetaData,saveBulkStudentData,saveBulkMetaDataAgain} from '../util/api';\r\nimport Student_Template1 from \"./../assets/document/Student_Template1.xlsx\";\r\nlet today = new Date();\r\nlet dd = String(today.getDate()).padStart(2, '0');\r\nlet mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\nlet yyyy = today.getFullYear();\r\nvar time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\ntoday = yyyy + '-' + mm + '-' + dd+ ' '+time;\r\n\r\n\r\nexport default class bulkUpload extends Component{\r\n  \r\n  constructor(props){\r\n   \r\n    super(props)\r\n    this.state={\r\n      user_unique_id:0,\r\n      batchList:[],\r\n      Selectedoption:\"\",\r\n      student_count:0,\r\n      fileName:\"\",\r\n      studentInfo:[],\r\n      batchName:null,\r\n      batchId:0,\r\n      flag : false,\r\n      upload_button:true,\r\n      errors: {},\r\n      register_number:0,\r\n      options: (UserContext.modelId== 3 || UserContext.modelId === 18 ||UserContext.modelId === 19||UserContext.modelId === 20||UserContext.modelId === 21||UserContext.modelId === 22||UserContext.modelId === 23)\r\n      ?[ {value:\"Mobilization\", label:\"Mobilization\"},{value:\"Enrollment\" ,label:\"Enrollment\"}]:[{value:\"Mobilization\", label:\"Mobilization\"}],\r\n    \r\n    }\r\n    this.handleOptionsChange = this.handleOptionsChange.bind(this) // Binding the method\r\n  }\r\n \r\n// optind change handler\r\n  handleOptionsChange(selectname,event){\r\n   \r\n    const value = event\r\n    // console.log(value)\r\n    this.setState({\r\n      Selectedoption: value,\r\n      batchName:\"\",\r\n      batchId:0,\r\n      errors:{\r\n        ...this.state.errors,\r\n        SelectedBatch: {\r\n          'label': '',\r\n          'value': false\r\n        },\r\n      }\r\n    })\r\n    this.setState({batchList:[]})\r\n\r\n    if(event === \"Enrollment\"){\r\n      this.setState({\r\n        errors:{\r\n          ...this.state.errors,\r\n          SelectedBatch: {\r\n            'label': 'Please select some option',\r\n            'value': true\r\n          },\r\n        }\r\n      })\r\n      // setDisabled(false)\r\n      fetchNotCompletedBatchDetails(UserContext.centerId).then((jsondata) => {\r\n        let result = JSON.parse(jsondata.data);\r\n        // console.log(\"center : \",result)\r\n       result.forEach(element => {\r\n        //  console.log(\"Condition for date \" , element.freezeDate > today)\r\n          if(element.freezeDate > today ){\r\n            this.state.batchList.push({\r\n              \"value\": element.batchId,\r\n              \"label\": element.batchName\r\n            })\r\n          }\r\n       });\r\n      })\r\n    }\r\n    else{\r\n      // setDisabled(true)\r\n    }\r\n  }\r\n   // Hhandle batch changes\r\n   handleBatchChange(selectname,event){\r\n    // console.log(\"selected optins : \",this.state.Selectedoption)\r\n    let value = event\r\n    // console.log(event)\r\n    let index = this.state.batchList.findIndex((object) => object.value == value)\r\n    let batchname = this.state.batchList[index].label\r\n    // console.log(this.state.batcheList)\r\n    this.setState({\r\n      batchId:event,\r\n      batchName: batchname,\r\n      errors:{\r\n        ...this.state.errors,\r\n        SelectedBatch: {\r\n          'label': '',\r\n          'value': false\r\n        },\r\n      }\r\n    })\r\n  }\r\n\r\n  // Handle for excel file change\r\n  readExcel = (file) => {\r\n    // \r\n    let file_name = file.name\r\n    this.setState({fileName :file_name })\r\n   const fileReader = new FileReader();\r\n   fileReader.readAsArrayBuffer(file);\r\n\r\n   fileReader.onload = (e) => {\r\n    //  console.log(e)\r\n     const bufferArray = e.target.result;\r\n\r\n     const wb = XLSX.read(bufferArray, { type: \"buffer\" });\r\n\r\n     const wsname = wb.SheetNames[0];\r\n\r\n     const ws = wb.Sheets[wsname];\r\n    \r\n    // To get the header details of excel\r\n     const data = XLSX.utils.sheet_to_json(ws,{header:1});\r\n    //  console.log(\"Header file \",data[0])\r\n     let student_data = XLSX.utils.sheet_to_json(ws);\r\n    //  console.log(\"data \",student_data)\r\n     this.setState({studentInfo:student_data })\r\n     // Checking the duplicate aadhar in same file\r\n  for(var i = 0; i <this.state.student_count; i++) {  \r\n    for(var j = i + 1; j <this.state.student_count; j++) {  \r\n      console.log(studentInfo[i].Aadhar_Number)\r\n        if(studentInfo[i].Aadhar_Number === studentInfo[j].Aadhar_Number) {\r\n          alert(studentInfo[i].First_Name +\" has duplicate Addhar Number\") \r\n          this.setState({upload_button:true})\r\n          return; \r\n        }        \r\n    }  \r\n    }  \r\n    \r\n    this.setState({student_count :data.length-1})\r\n    //  console.log(\"DataCount : \",this.state.student_count )\r\n\r\n    const requiredHeader =['Aadhar_Number', 'First_Name', 'Middle_Name', 'Last_Name', 'Date_of_Birth', 'Gender', 'Qualification', 'Passing_year', 'Religion', 'Address_Line_1', 'Village', 'District', 'State', 'Pincode', 'Category', 'Primary_Contact_Number', 'Primary_Mail_ID', 'College_register_no', 'Iti_grade', 'Iti_trade']\r\n    let flag = true\r\n    // var x= requiredHeader.findIndex(element =>{\r\n    //   element == \"Created_by\"\r\n    // })\r\n    // console.log(x)\r\n    // console.log(data[0] )\r\n    requiredHeader.map((element,id) =>{\r\n      // console.log(\"header comparison \",element, \"data : \",data[0][id])\r\n    \r\n      if(flag){\r\n        if(element==data[0][id]){\r\n            if(id+1 == requiredHeader.length)\r\n            {     \r\n              // Activating the upload button\r\n              this.setState({upload_button:false})      \r\n            }\r\n      }\r\n        else{\r\n          flag = false\r\n           \r\n          alert(\"Plese use the correct template for upload.The coloumn in the upload file and sample template does not match.\")\r\n          // Plese use the correct template for upload.\r\n          this.setState({upload_button:true})\r\n          return;\r\n        }\r\n      }\r\n    })\r\n   }\r\n}\r\n// Uploadinh the doumnet\r\n// this.setState({metaData})\r\n async uploadDocuments(){\r\n  let x = 0\r\n  // alert(\"hello\")\r\n  // console.log(UserContext.modelId)\r\n  // console.log(this.state.student_count)\r\n  // console.log(this.state.studentInfo)\r\n  // console.log(this.state.fileName)\r\n    const response = await saveBulkMetaData(this.state.fileName,today,this.state.Selectedoption,this.state.batchName,this.state.batchId,this.state.student_count,\"L\",UserContext.centerName,UserContext.centerId,UserContext.modelId, UserContext.userid,\"  \").then((jsondata)=>{\r\n      let result = JSON.parse(jsondata.data)\r\n      // console.log(\"Mpdel id : \",result[0].modelId)\r\n    \r\n      this.state.register_number = result[0].regId\r\n      // console.log(this.state.register_number)\r\n      if(result[0].regId ==0){\r\n        alert(\"Data Not saved\")\r\n       // changes\r\n        return;\r\n      }\r\n\r\n      // Changes at 20 october\r\n     else{\r\n      this.state.user_unique_id = result[0].regId\r\n      this.uploadStudentData();\r\n     }\r\n    })\r\n    \r\n  } \r\n async uploadStudentData(){\r\n  let flag = false\r\n  let studentInfo =  this.state.studentInfo\r\n\r\n  // // Checking the duplicate aadhar in same file\r\n  // for(var i = 0; i <this.state.student_count; i++) {  \r\n  //   for(var j = i + 1; j <this.state.student_count; j++) {  \r\n  //     console.log(studentInfo[i].Aadhar_Number)\r\n  //       if(studentInfo[i].Aadhar_Number === studentInfo[j].Aadhar_Number) {\r\n  //         alert(studentInfo[i].First_Name +\" has duplicate Addhar Number\") \r\n  //         this.setState({upload_button:true})\r\n  //         return; \r\n  //       }        \r\n  //   }  \r\n  //   }  \r\n\r\n  // console.log(\"Bulk Student data : \",studentInfo)\r\n    for(var i=0;i<this.state.student_count;i++){\r\n        const response1 = await saveBulkStudentData(this.state.user_unique_id,\r\n          studentInfo[i].First_Name || null,\r\n           studentInfo[i].Last_Name || null,\r\n           studentInfo[i].Middle_Name || null,\r\n           studentInfo[i].Date_of_Birth|| null,\r\n  \r\n           studentInfo[i].Aadhar_Number || null,\r\n           this.state.batchName || null,\r\n           studentInfo[i].Qualification || null,\r\n           studentInfo[i].Passing_year|| null, \r\n           studentInfo[i].Gender || null,\r\n           studentInfo[i].Religion || null,\r\n           studentInfo[i].Category || null,\r\n           studentInfo[i].Primary_Contact_Number || null,\r\n           studentInfo[i].Primary_Mail_ID || null,\r\n           \r\n           studentInfo[i].College_register_no|| null,\r\n           studentInfo[i].Iti_grade || null,\r\n           studentInfo[i].Iti_trade || null,\r\n          \r\n           studentInfo[i].Address_Line_1 || null,\r\n           studentInfo[i].Village || null,\r\n          \r\n           studentInfo[i].District || null,\r\n           studentInfo[i].State || null,\r\n           studentInfo[i].Pincode || null,\r\n         \r\n          today, // remove every place\r\n           UserContext.userid,\r\n           \"P\",\r\n           \"::\",\r\n           \"::\").then((jsondata)=>{\r\n           let result =JSON.parse(jsondata.data)\r\n          //  console.log(result)\r\n           flag = true\r\n         })\r\n   }\r\n\r\n\r\n  if(flag == true){\r\n    alert(\"Data Saved Successfully and Registration ID is : \" + this.state.user_unique_id)\r\n  }\r\n  else{\r\n    alert(\"Data Not Saved\")\r\n    return;\r\n  }\r\n\r\n  // to change the status from L to P\r\n  saveBulkMetaDataAgain(this.state.register_number,this.state.fileName,today,this.state.Selectedoption,\r\n    this.state.batchName,this.state.batchId,this.state.student_count,\"P\",UserContext.centerName,\r\n    UserContext.centerId,UserContext.modelId, UserContext.userid,\" \" ).then((jsondata)=>{\r\n  let result = JSON.parse(jsondata.data)\r\n  // console.log(result)\r\n  })\r\n}\r\n\r\n// Download file\r\ndownloadFile(){\r\n  const url = Student_Template1;\r\n  window.open(url);\r\n}\r\n\r\n// Routes Change\r\nrouteChange(){\r\n  this.props.history.push(({ pathname: '/dashboard/History',state: {} }));\r\n \r\n}\r\n\r\n\r\n  render(){\r\n    return(\r\n      <div style={{ width: '100%' }}>\r\n         <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"flex-end\">\r\n             <Button color=\"primary\"  onClick={this.downloadFile.bind(this)}>\r\n               Download template\r\n             </Button>\r\n        </Grid>\r\n        <br/>\r\n      <Grid container>\r\n      <Grid item xs={12}> </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} >Options</InputLabel>\r\n            <SingleSelect\r\n              name=\"Selectedoption\" id=\"Selectedoption\"\r\n              options={this.state.options}\r\n              value={this.state.Selectedoption || ''}\r\n              key={this.state.Selectedoption || ''}\r\n              onChange={this.handleOptionsChange.bind(this, 'Selectedoption')}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={2}></Grid>\r\n\r\n          <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} >Batches</InputLabel>\r\n            <SingleSelect\r\n              name=\"SelectedBatch\" id=\"SelectedBatch\"\r\n              key={this.state.SelectedBatch || ''}\r\n              options={this.state.batchList}\r\n              value={this.state.SelectedBatch || ''}\r\n              onChange={this.handleBatchChange.bind(this, 'SelectedBatch')}\r\n              disabled={this.state.Selectedoption==\"Mobilization\"?true:false}\r\n              helperText={this.state.errors.SelectedBatch != undefined ? this.state.errors.SelectedBatch.label : ''}\r\n              error={this.state.errors.SelectedBatch != undefined ? this.state.errors.SelectedBatch.value : ''}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <br />\r\n        <Table  aria-label=\"simple table\" style={{ width:\"100%\"}}>\r\n          <TableBody>\r\n          <TableRow>\r\n            <TableCell> \r\n            <Input \r\n               name=\"upload-photo\"\r\n               type=\"file\"\r\n               accept='.xlsx/*, .xls/*'\r\n               onClick={e => {\r\n                (e.target.value = null)\r\n                // setDisabled(true)\r\n              }\r\n               }\r\n               onChange={(e) => {\r\n                \r\n                const file = e.target.files[0];\r\n                var substr1 = file.name.substring(file.name.length-4, file.name.length);\r\n                var substr2 = file.name.substring(file.name.length-3, file.name.length);\r\n                if(substr1== \"xlsx\" || substr2 == \"xls\"){\r\n                  this.readExcel(file); \r\n                }\r\n                else{\r\n                  alert(\"Please Upload Excel file\")\r\n                  return;\r\n                }\r\n               \r\n              }}\r\n              maxFileSize={5000000} filesLimit={1} showFileNames={true}\r\n              />\r\n              <p  style={{color:\"red\"}}>Note-:Please upload Excel file</p>\r\n              <p  style={{color:\"red\"}}>and size should not be greater than 5MB.</p>\r\n            </TableCell>\r\n            </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n            <br /> <br />\r\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\" size=\"small\"  onClick={this.uploadDocuments.bind(this)}\r\n                    disabled={this.state.upload_button}\r\n             >Upload Document</Button>\r\n             </Grid>\r\n             <br />  <br />  <br />\r\n             <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"flex-end\">\r\n             <Button variant=\"contained\"  color=\"primary\" onClick={this.routeChange.bind(this)}>\r\n               History Details\r\n             </Button>\r\n             </Grid>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}