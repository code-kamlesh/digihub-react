{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\EnrollmentDetails.js\";\nimport React, { Component } from 'react';\nimport { fetchBatchDetails, enrollStudent, changeStudentStatus, fectEnrollmentDetails, fetchBatchDetailsByBatchId, fetchNotCompletedBatchDetails, fetchCourseDetailsByIds, fetchAllStudentEngagementForUser, fectEnrollmentDetailsByIds } from './../util/api';\nimport { properties } from './../util/properties';\nimport UserContext from '../components/GolbalContext';\nimport { Button, Grid } from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport AlertDialog from './../util/AlertDialog';\nimport Box from '@material-ui/core/Box';\nimport MUIDataTable from \"mui-datatables\";\nimport { createMuiTheme, MuiThemeProvider, withStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport Link from '@material-ui/core/Link';\nimport { calculateBatchFreezeDate } from './../util/util';\nimport { checkButton, validateToRecommend, getBusinessCaseDocument, getInterestInventory, getExperienceDetails, getBasicDetails, getAddressData, getFamilyData, getObservationData, getBusinessCaseData, getExistingBusiness, validateInterestInventory, getSocioEconomicData, validateEducationData, validateCounselData } from './../util/validation';\nconst alertDialogOptions = {\n  message: ''\n};\nconst customStyles = {\n  BusinessAnalystRow: {\n    '& td': {\n      backgroundColor: \"#FAA\"\n    }\n  },\n  NameCell: {\n    fontWeight: 900\n  }\n};\n\nclass EnrollmentDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getMuiTheme = () => createMuiTheme({\n      overrides: {\n        MUIDataTable: {\n          root: {\n            backgroundColor: \"#AAF\"\n          },\n          paper: {\n            boxShadow: \"none\"\n          }\n        },\n        MUIDataTableBodyCell: {\n          root: {\n            backgroundColor: \"#FFF\"\n          }\n        }\n      }\n    });\n\n    this.loadCourseDetails = event => {\n      let batchInfo = [];\n      fetchNotCompletedBatchDetails(UserContext.centerId).then(jsondata => {\n        let batchDetails = JSON.parse(jsondata.data);\n\n        for (var i = 0; i < batchDetails.length; i++) {\n          let courseId = [];\n          let startDate = batchDetails[i].startDate;\n          let batchId = batchDetails[i].batchId;\n          let batchName = batchDetails[i].batchName;\n          let batchDescription = batchDetails[i].batchDescription;\n          let endDate = batchDetails[i].endDate;\n          let ojtStartDate = batchDetails[i].ojtStartDate;\n          let ojtEndDate = batchDetails[i].ojtEndDate;\n          let freezeDate = batchDetails[i].freezeDate;\n          courseId.push({\n            id: batchDetails[i].courseId\n          });\n          fetchCourseDetailsByIds(JSON.stringify(courseId)).then(courseDetailsJsonData => {\n            let courseDetails = JSON.parse(courseDetailsJsonData.data);\n\n            if (new Date(new Date(freezeDate).toDateString()) >= new Date(new Date().toDateString()) || new Date(new Date(startDate).toDateString()) >= new Date(new Date().toDateString())) {\n              var details = {\n                'batchId': batchId,\n                'batchName': batchName,\n                'batchDescription': batchDescription,\n                'startDate': startDate,\n                'endDate': endDate,\n                'ojtStartDate': ojtStartDate,\n                'ojtEndDate': ojtEndDate,\n                'freezeDate': freezeDate\n              };\n              batchInfo.push(details);\n            }\n          });\n        }\n\n        this.setState({\n          rows: batchInfo\n        });\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        selectedBatchId: event.target.value\n      });\n    };\n\n    this.enroll = event => {\n      let batchId = this.state.selectedBatchId; // Checking the batch id is null or not\n\n      if (batchId === 0 || batchId === undefined) {\n        alert(\"Please select batch\");\n        return;\n      } else {\n        var createdBy = 0;\n        this.state.enrollmentDetails.map(details => createdBy = details.batchId === this.state.selectedBatchId ? details.createdBy : UserContext.userid);\n        let enrollmentData = '\"engagementId\":' + this.state.engagementId + ',\"batchId\":' + this.state.selectedBatchId + ',\"updatedBy\":' + UserContext.userid + ',\"createdBy\":' + createdBy + '';\n        let statusChangeData = '\"engagementId\":' + this.state.engagementId + ',\"status\":\"enrolled\",\"updatedBy\":0';\n        this.setState({\n          alertDialogFlag: false\n        });\n        enrollStudent(enrollmentData).then(jsondata => {\n          changeStudentStatus(statusChangeData).then(jsondata => {\n            alertDialogOptions.message = \"Data Saved Sucessfully\";\n            this.setState({\n              alertDialogFlag: true\n            });\n          });\n        });\n      }\n    };\n\n    this.state = {\n      rows: [],\n      dbUserId: '',\n      selectedBatchId: 0,\n      alertDialogFlag: false,\n      enrollmentDetails: [],\n      toggleButton: 'none',\n      res: {},\n      freezeDate: '',\n      linkedEngagementId: props.linkedEngagementId\n    };\n\n    if (props.id != null && props.id != undefined) {\n      this.state.engagementId = props.engagementId;\n      this.state.dbUserId = props.id;\n      this.getEnrollmentDetailsByEngagementId(props.engagementId);\n      let engagementId = [];\n\n      if (UserContext.defaultProgramId != 1) {\n        this.validateData();\n      }\n\n      let enrollmentDetailsHistory = [];\n      fetchAllStudentEngagementForUser(props.id).then(jsondata => {\n        let jsonObjects = JSON.parse(jsondata.data);\n        jsonObjects.map(item => {\n          engagementId.push({\n            engagementId: item.engagementId\n          });\n        });\n        fectEnrollmentDetailsByIds(JSON.stringify(engagementId)).then(jsondata => {\n          let jsonobjects = JSON.parse(jsondata.data);\n\n          for (var i = 0; i < jsonobjects.length; i++) {\n            var createdBy = jsonobjects[i].createdBy;\n            this.setState({\n              selectedBatchId: jsonobjects[i].batchId\n            }, () => {\n              fetchBatchDetailsByBatchId(jsonobjects[i].batchId).then(jsondata => {\n                let batchJsonObjects = JSON.parse(jsondata.data);\n\n                if (jsonobjects != null) {\n                  batchJsonObjects.map(item => {\n                    enrollmentDetailsHistory.push({\n                      batchName: item.batchName,\n                      startDate: item.startDate,\n                      endDate: item.endDate,\n                      ojtStartDate: item.ojtStartDate,\n                      ojtEndDate: item.ojtEndDate,\n                      batchDescription: item.batchDescription,\n                      batchId: item.batchId,\n                      createdBy: createdBy,\n                      freezeDate: item.freezeDate\n                    });\n                  });\n                  this.setState({\n                    enrollmentDetails: enrollmentDetailsHistory\n                  });\n                }\n              });\n            });\n          }\n        });\n      });\n    }\n\n    this.loadCourseDetails();\n  }\n\n  getEnrollmentDetailsByEngagementId(id) {\n    let engagementId = [];\n    engagementId.push({\n      engagementId: id\n    });\n    fectEnrollmentDetailsByIds(JSON.stringify(engagementId)).then(jsondata => {\n      let jsonobjects = JSON.parse(jsondata.data);\n\n      if (jsonobjects != null && jsonobjects != '') {\n        this.setState({\n          selectedBatchId: jsonobjects[0].batchId\n        }, () => {\n          fetchBatchDetailsByBatchId(jsonobjects[0].batchId).then(jsondata => {\n            let batchObject = JSON.parse(jsondata.data);\n\n            if (typeof batchObject[0].freezeDate != \"undefined\" || batchObject[0].freezeDate != '') {\n              this.setState({\n                freezeDate: batchObject[0].freezeDate\n              });\n            }\n          });\n        });\n      }\n    });\n  }\n\n  validateData() {\n    getFamilyData(this.state.engagementId, this.state.dbUserId).then(result => this.setState({\n      res: { ...this.state.res,\n        ['family']: result\n      }\n    }));\n    getExperienceDetails(this.state.engagementId, this.state.dbUserId).then(result => this.setState({\n      res: { ...this.state.res,\n        ['experience']: result\n      }\n    }));\n    getBasicDetails(this.state.engagementId, this.state.dbUserId).then(result => this.setState({\n      res: { ...this.state.res,\n        ['basic']: result\n      }\n    }));\n    validateInterestInventory(UserContext.defaultProgramId === 1 || UserContext.defaultProgramId === 9 ? this.state.linkedEngagementId : this.state.engagementId).then(result => this.setState({\n      res: { ...this.state.res,\n        ['inventory']: result\n      }\n    }));\n    getAddressData(this.state.engagementId, this.state.dbUserId).then(result => this.setState({\n      res: { ...this.state.res,\n        ['address']: result\n      }\n    })); //observation is only mandatory for existing student of TS not for outside TS\n\n    if (UserContext.defaultProgramId != 7) {\n      if (this.state.linkedEngagementId != 0) {//  alert(this.state.linkedEngagementId)\n        // getObservationData((UserContext.defaultProgramId === 1 || UserContext.defaultProgramId === 9) ? this.state.linkedEngagementId:this.state.engagementId , this.state.dbUserId).then(result => this.setState({\n        //   res : {\n        //     ...this.state.res , ['ob'] : result\n        // }\n        // }))\n      }\n\n      ;\n      getBusinessCaseData(UserContext.defaultProgramId === 1 || UserContext.defaultProgramId === 9 ? this.state.linkedEngagementId : this.state.engagementId, this.state.dbUserId).then(result => this.setState({\n        res: { ...this.state.res,\n          ['bc']: result\n        }\n      }));\n      getBusinessCaseDocument(UserContext.defaultProgramId === 1 || UserContext.defaultProgramId === 9 ? this.state.linkedEngagementId : this.state.engagementId).then(result => this.setState({\n        res: { ...this.state.res,\n          ['document']: result\n        }\n      }));\n      getExistingBusiness(UserContext.defaultProgramId === 1 || UserContext.defaultProgramId === 9 ? this.state.linkedEngagementId : this.state.engagementId).then(result => this.setState({\n        res: { ...this.state.res,\n          ['existingBusiness']: result\n        }\n      }));\n    }\n\n    getSocioEconomicData(this.state.engagementId, this.state.dbUserId).then(result => this.setState({\n      res: { ...this.state.res,\n        ['socio']: result\n      }\n    }));\n    validateEducationData(this.state.engagementId, this.state.dbUserId).then(result => this.setState({\n      res: { ...this.state.res,\n        ['education']: result\n      }\n    }));\n\n    if (UserContext.defaultProgramId != 1 && UserContext.defaultProgramId != 9) {\n      validateCounselData(this.state.engagementId).then(result => this.setState({\n        res: { ...this.state.res,\n          ['Counselling']: result\n        }\n      }));\n    }\n  }\n\n  render() {\n    let res = [];\n\n    if (this.state.res.basic) {\n      res.push(\"Basic details\");\n    }\n\n    if (this.state.res.address) {\n      res.push(\"Address details\");\n    }\n\n    if (this.state.res.family) {\n      res.push(\"Family details\");\n    }\n\n    if (this.state.res.experience) {\n      res.push(\"Experience details\");\n    }\n\n    if (this.state.res.bc) {\n      res.push(\"Business case details\");\n    }\n\n    if (this.state.res.document) {\n      res.push(\"Business case document not uploaded\");\n    }\n\n    if (this.state.res.ob) {\n      res.push(\"Observations details\");\n    }\n\n    if (this.state.res.inventory) {\n      res.push(\"Interest Inventory details\");\n    }\n\n    if (this.state.res.existingBusiness) {\n      res.push(\"Existing Business details\");\n    }\n\n    if (this.state.res.socio) {\n      res.push(\"SocioEconomic details\");\n    }\n\n    if (this.state.res.education) {\n      res.push(\"Education details\");\n    }\n\n    if (this.state.res.Counselling) {\n      res.push(\"Counselling details\");\n    }\n\n    const columns = [//{label: 'Select A Batch', name: 'selectBatch' },\n    {\n      label: 'Batch Name',\n      name: 'batchName'\n    }, {\n      label: 'Batch Description',\n      name: 'batchDescription'\n    }, {\n      label: 'Start Date',\n      name: 'startDate'\n    }, {\n      label: 'End Date',\n      name: 'endDate'\n    }, {\n      label: 'OJT Start Date',\n      name: 'ojtStartDate'\n    }, {\n      label: 'OJT End Date',\n      name: 'ojtEndDate'\n    }, {\n      label: 'Freeze Date',\n      name: 'freezeDate'\n    }];\n    const options = {\n      filterType: \"dropdown\",\n      responsive: \"stacked\",\n      sortDirection: \"desc\",\n      selectableRows: \"single\",\n      rowsPerPage: 20,\n      selectableRowsOnClick: true,\n      disableToolbarSelect: true,\n      // textLabels: {\n      //   body: {\n      //     noMatch: <span style={{color:\"blue\"}}>Please wait data is loading</span>\n      //   }\n      // },\n      onRowsSelect: (currentRowsSelected, allRows) => {\n        var index = currentRowsSelected[0].dataIndex;\n        this.state.selectedBatchId = this.state.rows[index].batchId;\n      },\n      setRowProps: row => {\n        for (var i = 0; i < this.state.enrollmentDetails.length; i++) {\n          return {\n            className: classnames({\n              [this.props.classes.BusinessAnalystRow]: row[0] === this.state.enrollmentDetails[i].batchName\n            })\n          };\n        }\n      }\n    };\n\n    const ToggleHistoricalBatchDetails = event => {\n      event.preventDefault();\n      let value = 'none';\n\n      if (this.state.toggleButton == 'none') {\n        value = 'block';\n        this.setState({\n          toggleButton: value\n        });\n      } else {\n        this.setState({\n          toggleButton: value\n        });\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 13\n      }\n    }, res.length != 0 && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 24\n      }\n    }, \"Below details are incomplete\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 1\n      }\n    }, \" \", res.map(item => /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        fontWeight: \"600\",\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }\n    }, \" \", item)))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-end\",\n      alignItems: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      href: \"#\",\n      onClick: ToggleHistoricalBatchDetails,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 1\n      }\n    }, \"View/Hide Enrolled Batch Details\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      component: \"div\",\n      style: {\n        display: this.state.toggleButton\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      \"aria-label\": \"simple table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 13\n      }\n    }, \"Batch Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 13\n      }\n    }, \"Batch Description\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 13\n      }\n    }, \"Start Date\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 13\n      }\n    }, \"End Date\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 13\n      }\n    }, \"OJT Start Date\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 13\n      }\n    }, \"OJT End Date\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 13\n      }\n    }, \"Freeze Date\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }\n    }, this.state.enrollmentDetails.map(row => /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 13\n      }\n    }, row.batchName), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 13\n      }\n    }, row.batchDescription), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 13\n      }\n    }, row.startDate), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 13\n      }\n    }, row.endDate), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 13\n      }\n    }, row.ojtStartDate), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 13\n      }\n    }, row.ojtEndDate), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 13\n      }\n    }, row.freezeDate))))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(MUIDataTable, {\n      title: \"List Of Active Batches\",\n      data: this.state.rows,\n      columns: columns,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 1\n      }\n    }), UserContext.roleid != 4 && /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-end\",\n      alignItems: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"small\",\n      onClick: this.enroll,\n      disabled: res.length != 0 ? true : this.state.freezeDate === '' ? false : new Date(new Date(this.state.freezeDate).toDateString()) < new Date(new Date().toDateString()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 1\n      }\n    }, \"Enroll\")), this.state.alertDialogFlag && /*#__PURE__*/React.createElement(AlertDialog, {\n      message: alertDialogOptions.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 35\n      }\n    }));\n  }\n\n}\n\nexport default withStyles(customStyles, {\n  name: \"EnrollmentDetails.js\"\n})(EnrollmentDetails);","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/EnrollmentDetails.js"],"names":["React","Component","fetchBatchDetails","enrollStudent","changeStudentStatus","fectEnrollmentDetails","fetchBatchDetailsByBatchId","fetchNotCompletedBatchDetails","fetchCourseDetailsByIds","fetchAllStudentEngagementForUser","fectEnrollmentDetailsByIds","properties","UserContext","Button","Grid","Table","TableBody","TableCell","TableHead","TableRow","Paper","AlertDialog","Box","MUIDataTable","createMuiTheme","MuiThemeProvider","withStyles","classnames","Link","calculateBatchFreezeDate","checkButton","validateToRecommend","getBusinessCaseDocument","getInterestInventory","getExperienceDetails","getBasicDetails","getAddressData","getFamilyData","getObservationData","getBusinessCaseData","getExistingBusiness","validateInterestInventory","getSocioEconomicData","validateEducationData","validateCounselData","alertDialogOptions","message","customStyles","BusinessAnalystRow","backgroundColor","NameCell","fontWeight","EnrollmentDetails","constructor","props","getMuiTheme","overrides","root","paper","boxShadow","MUIDataTableBodyCell","loadCourseDetails","event","batchInfo","centerId","then","jsondata","batchDetails","JSON","parse","data","i","length","courseId","startDate","batchId","batchName","batchDescription","endDate","ojtStartDate","ojtEndDate","freezeDate","push","id","stringify","courseDetailsJsonData","courseDetails","Date","toDateString","details","setState","rows","handleChange","selectedBatchId","target","value","enroll","state","undefined","alert","createdBy","enrollmentDetails","map","userid","enrollmentData","engagementId","statusChangeData","alertDialogFlag","dbUserId","toggleButton","res","linkedEngagementId","getEnrollmentDetailsByEngagementId","defaultProgramId","validateData","enrollmentDetailsHistory","jsonObjects","item","jsonobjects","batchJsonObjects","batchObject","result","render","basic","address","family","experience","bc","document","ob","inventory","existingBusiness","socio","education","Counselling","columns","label","name","options","filterType","responsive","sortDirection","selectableRows","rowsPerPage","selectableRowsOnClick","disableToolbarSelect","onRowsSelect","currentRowsSelected","allRows","index","dataIndex","setRowProps","row","className","classes","ToggleHistoricalBatchDetails","preventDefault","color","display","roleid"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { fetchBatchDetails,enrollStudent,changeStudentStatus,fectEnrollmentDetails,\r\n  fetchBatchDetailsByBatchId,fetchNotCompletedBatchDetails,fetchCourseDetailsByIds,fetchAllStudentEngagementForUser,fectEnrollmentDetailsByIds } from './../util/api';\r\nimport { properties } from './../util/properties';\r\nimport UserContext from '../components/GolbalContext'\r\nimport {Button,Grid} from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport AlertDialog from './../util/AlertDialog';\r\nimport Box from '@material-ui/core/Box';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport {createMuiTheme, MuiThemeProvider, withStyles} from '@material-ui/core/styles';\r\nimport classnames from 'classnames';\r\nimport Link from '@material-ui/core/Link';\r\nimport {calculateBatchFreezeDate} from './../util/util';\r\n\r\nimport {checkButton,validateToRecommend, getBusinessCaseDocument , getInterestInventory,getExperienceDetails, getBasicDetails, getAddressData , getFamilyData, getObservationData, getBusinessCaseData,getExistingBusiness,\r\n  validateInterestInventory,getSocioEconomicData,validateEducationData,validateCounselData} from './../util/validation';\r\n\r\n\r\n\r\nconst alertDialogOptions = {\r\n  message: ''\r\n}\r\n\r\nconst customStyles = {\r\n  BusinessAnalystRow: {\r\n    '& td': {backgroundColor: \"#FAA\"}\r\n  },\r\n  NameCell: {\r\n    fontWeight: 900\r\n  },\r\n};\r\n\r\nclass EnrollmentDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {rows: [],dbUserId:'',selectedBatchId:0,alertDialogFlag:false,\r\n                     enrollmentDetails:[],toggleButton:'none',res : {},freezeDate:'',linkedEngagementId:props.linkedEngagementId};\r\n       if(props.id != null && props.id != undefined)\r\n       {\r\n          this.state.engagementId=props.engagementId;\r\n          this.state.dbUserId=props.id;\r\n          this.getEnrollmentDetailsByEngagementId(props.engagementId);\r\n          let engagementId=[];\r\n          if(UserContext.defaultProgramId!=1){\r\n          this.validateData(); \r\n        }\r\n\r\n          let enrollmentDetailsHistory=[];\r\n          fetchAllStudentEngagementForUser(props.id).then((jsondata) => {\r\n            let jsonObjects = JSON.parse(jsondata.data);\r\n            jsonObjects.map(item => { engagementId.push({engagementId: item.engagementId})});        \r\n            fectEnrollmentDetailsByIds(JSON.stringify(engagementId)).then((jsondata) => { \r\n              let jsonobjects = JSON.parse(jsondata.data); \r\n       for (var i = 0; i < jsonobjects.length; i++) {\r\n        var createdBy=jsonobjects[i].createdBy;     \r\n              this.setState({selectedBatchId:jsonobjects[i].batchId},()=>{\r\n                fetchBatchDetailsByBatchId(jsonobjects[i].batchId).then((jsondata) => { \r\n                  let batchJsonObjects = JSON.parse(jsondata.data);\r\n                  if(jsonobjects!=null){\r\n                    batchJsonObjects.map(item => {enrollmentDetailsHistory.push({batchName: item.batchName, startDate: item.startDate,\r\n                    endDate:item.endDate,ojtStartDate:item.ojtStartDate,ojtEndDate:item.ojtEndDate,batchDescription:item.batchDescription,batchId:item.batchId,createdBy:createdBy,freezeDate:item.freezeDate})});\r\n                    this.setState({enrollmentDetails:enrollmentDetailsHistory});\r\n                  }   \r\n                 });\r\n              });               \r\n              } \r\n        });\r\n          });\r\n    }\r\n    this.loadCourseDetails();\r\n    }\r\n\r\n\r\ngetEnrollmentDetailsByEngagementId(id){\r\n  let engagementId =[];\r\n  engagementId.push({engagementId:id});\r\n  fectEnrollmentDetailsByIds(JSON.stringify(engagementId)).then((jsondata) => { \r\n    let jsonobjects = JSON.parse(jsondata.data); \r\nif(jsonobjects!=null && jsonobjects!=''){\r\n    this.setState({selectedBatchId:jsonobjects[0].batchId},()=>{\r\n      fetchBatchDetailsByBatchId(jsonobjects[0].batchId).then((jsondata) => { \r\n        let batchObject = JSON.parse(jsondata.data);\r\n        if (typeof(batchObject[0].freezeDate) != \"undefined\" || batchObject[0].freezeDate!=''){\r\n         this.setState({freezeDate:batchObject[0].freezeDate});        \r\n        }\r\n       });\r\n    });               \r\n}  \r\n});\r\n}\r\n\r\n    getMuiTheme = () => createMuiTheme({\r\n      overrides: {\r\n        MUIDataTable: {\r\n          root: {\r\n            backgroundColor: \"#AAF\",\r\n          },\r\n          paper: {\r\n            boxShadow: \"none\",\r\n          }\r\n        },\r\n        MUIDataTableBodyCell: {\r\n          root: {\r\n            backgroundColor: \"#FFF\"\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n\r\n    loadCourseDetails = (event) => {\r\n        let batchInfo = [];\r\n        fetchNotCompletedBatchDetails(UserContext.centerId).then((jsondata) => {\r\n            let batchDetails = JSON.parse(jsondata.data);\r\n            for (var i = 0; i < batchDetails.length; i++) {                                        \r\n                  let courseId=[];\r\n                  let startDate=batchDetails[i].startDate;\r\n                  let batchId=batchDetails[i].batchId;\r\n                  let batchName=batchDetails[i].batchName;\r\n                  let  batchDescription= batchDetails[i].batchDescription;\r\n                  let  endDate= batchDetails[i].endDate;\r\n                  let  ojtStartDate = batchDetails[i].ojtStartDate;\r\n                  let  ojtEndDate =  batchDetails[i].ojtEndDate;\r\n                  let freezeDate=batchDetails[i].freezeDate;\r\n                  courseId.push({ id: batchDetails[i].courseId });\r\n                  fetchCourseDetailsByIds(JSON.stringify(courseId)).then((courseDetailsJsonData)=>{\r\n                    let courseDetails = JSON.parse(courseDetailsJsonData.data)\r\n                         if(new Date(new Date(freezeDate).toDateString()) >= new Date(new Date().toDateString()) || new Date(new Date(startDate).toDateString())>=new Date(new Date().toDateString())) {\r\n                          var details =\r\n                          {\r\n                              'batchId':batchId,\r\n                              'batchName': batchName,\r\n                              'batchDescription': batchDescription,\r\n                              'startDate': startDate,\r\n                              'endDate': endDate,\r\n                              'ojtStartDate': ojtStartDate,\r\n                              'ojtEndDate': ojtEndDate,\r\n                              'freezeDate':freezeDate\r\n                          };\r\n                          batchInfo.push(details);\r\n                        }\r\n                        });\r\n                }\r\n                this.setState({ rows: batchInfo });\r\n            })\r\n    }\r\n\r\n    handleChange = event => {\r\n     this.setState({selectedBatchId:event.target.value});\r\n    };  \r\n\r\n/* Commentd this to handle the Batch Id Nul probelm. In case of bacth NOT selected an alert to be shown . SO created same function with the chnages\r\nenroll = (event) => {\r\n  var createdBy=0;\r\n  this.state.enrollmentDetails.map(details => (\r\n    createdBy=details.batchId===this.state.selectedBatchId?details.createdBy:UserContext.userid\r\n    ));\r\n\r\n    let enrollmentData='\"engagementId\":'+this.state.engagementId+',\"batchId\":'+this.state.selectedBatchId+',\"updatedBy\":'+UserContext.userid+',\"createdBy\":'+createdBy+'';\r\n      let statusChangeData='\"engagementId\":'+this.state.engagementId+',\"status\":\"enrolled\",\"updatedBy\":'+ UserContext.userid+'';\r\n      this.setState({alertDialogFlag:false});\r\n    enrollStudent(enrollmentData).then((jsondata) => { \r\n        changeStudentStatus(statusChangeData).then((jsondata) => { \r\n          alertDialogOptions.message=\"Data Saved Sucessfully\";\r\n          this.setState({alertDialogFlag:true});\r\n setTimeout(() => {this.props.history.push({pathname: '/dashboard/managebeneficiary',state: {}}) },3000)\r\n\t\t\t\t  \r\n        });\r\n\t\t\r\n\t\t\r\n    });\r\n    }\r\n\t\r\n\t*/\r\n\t\r\n\t/* Enroll event will be called on submit.In case of bacth NOT selected an alert to be shown . SO created same function with the chnages*/\r\n\t\r\nenroll = (event) => {\r\n  let batchId = this.state.selectedBatchId;\r\n  // Checking the batch id is null or not\r\nif(batchId === 0 || batchId === undefined){\r\n \r\n  alert(\"Please select batch\");\r\n  return;\r\n}\r\n  else{\r\n    var createdBy=0;\r\n    this.state.enrollmentDetails.map(details => (\r\n      createdBy=details.batchId===this.state.selectedBatchId?details.createdBy:UserContext.userid\r\n      ));\r\n  \r\n      let enrollmentData='\"engagementId\":'+this.state.engagementId+',\"batchId\":'+this.state.selectedBatchId+',\"updatedBy\":'+UserContext.userid+',\"createdBy\":'+createdBy+'';\r\n      let statusChangeData='\"engagementId\":'+this.state.engagementId+',\"status\":\"enrolled\",\"updatedBy\":0';\r\n        this.setState({alertDialogFlag:false});\r\n      enrollStudent(enrollmentData).then((jsondata) => { \r\n          changeStudentStatus(statusChangeData).then((jsondata) => { \r\n            alertDialogOptions.message=\"Data Saved Sucessfully\";\r\n            this.setState({alertDialogFlag:true});\r\n          });\r\n      });\r\n  }\r\n}\r\n\t\r\n\r\n    validateData()\r\n    {   \r\n        getFamilyData(this.state.engagementId , this.state.dbUserId).then(result => this.setState({\r\n          res : {\r\n            ...this.state.res , ['family'] : result\r\n          }\r\n        }));\r\n\r\n        getExperienceDetails(this.state.engagementId , this.state.dbUserId).then(result => this.setState({\r\n          res : {\r\n            ...this.state.res , ['experience'] : result\r\n          }\r\n        }));\r\n        getBasicDetails(this.state.engagementId , this.state.dbUserId).then(result => this.setState({\r\n          res : {\r\n            ...this.state.res , ['basic'] : result\r\n          }\r\n        }));\r\n        validateInterestInventory((UserContext.defaultProgramId === 1 || UserContext.defaultProgramId === 9) ? this.state.linkedEngagementId:this.state.engagementId).then(result => this.setState({\r\n          res : {\r\n            ...this.state.res , ['inventory'] : result\r\n          }\r\n        }));\r\n        getAddressData(this.state.engagementId , this.state.dbUserId).then(result => this.setState({\r\n          res : {\r\n            ...this.state.res , ['address'] : result\r\n          }\r\n        }));\r\n\r\n        //observation is only mandatory for existing student of TS not for outside TS\r\n        if(UserContext.defaultProgramId!=7){\r\n        if(this.state.linkedEngagementId != 0 ){\r\n        //  alert(this.state.linkedEngagementId)\r\n        // getObservationData((UserContext.defaultProgramId === 1 || UserContext.defaultProgramId === 9) ? this.state.linkedEngagementId:this.state.engagementId , this.state.dbUserId).then(result => this.setState({\r\n        //   res : {\r\n        //     ...this.state.res , ['ob'] : result\r\n        // }\r\n        // }))\r\n      };   \r\n        getBusinessCaseData((UserContext.defaultProgramId === 1 || UserContext.defaultProgramId === 9) ? this.state.linkedEngagementId:this.state.engagementId , this.state.dbUserId).then(result => this.setState({\r\n          res : {\r\n            ...this.state.res , ['bc'] : result\r\n          }\r\n        }));\r\n        getBusinessCaseDocument((UserContext.defaultProgramId === 1 || UserContext.defaultProgramId === 9) ? this.state.linkedEngagementId:this.state.engagementId).then(result => this.setState({\r\n          res : {\r\n            ...this.state.res , ['document'] : result\r\n          }\r\n        }));\r\n        getExistingBusiness((UserContext.defaultProgramId === 1 || UserContext.defaultProgramId === 9) ? this.state.linkedEngagementId:this.state.engagementId).then(result => this.setState({\r\n          res : {\r\n            ...this.state.res , ['existingBusiness'] : result\r\n          }\r\n        }));\r\n      }\r\n        getSocioEconomicData(this.state.engagementId , this.state.dbUserId).then(result => this.setState({\r\n          res : {\r\n            ...this.state.res , ['socio'] : result\r\n          }\r\n        }));\r\n\r\n        validateEducationData(this.state.engagementId , this.state.dbUserId).then(result => this.setState({\r\n          res : {\r\n            ...this.state.res , ['education'] : result\r\n          }\r\n        }));\r\n\r\n\r\n\r\n\r\nif(UserContext.defaultProgramId!=1 && UserContext.defaultProgramId!=9){\r\n        validateCounselData(this.state.engagementId).then(result => this.setState({\r\n          res : {\r\n            ...this.state.res , ['Counselling'] : result\r\n          }\r\n        }));\r\n\r\n      }\r\n    \r\n      }\r\n\r\n\r\n    render() {     \r\n      \r\n      let res = [];\r\n      \r\n        if(this.state.res.basic)\r\n        {\r\n          res.push(\"Basic details\");\r\n        }\r\n        if(this.state.res.address)\r\n        {\r\n          res.push(\"Address details\");\r\n        }\r\n        if(this.state.res.family)\r\n        {\r\n          res.push(\"Family details\");\r\n        }\r\n        if(this.state.res.experience)\r\n        {\r\n          res.push(\"Experience details\");\r\n        }\r\n        if(this.state.res.bc)\r\n        {\r\n          res.push(\"Business case details\");\r\n        }\r\n        if(this.state.res.document)\r\n        {\r\n          res.push(\"Business case document not uploaded\");\r\n        }\r\n        if(this.state.res.ob)\r\n        {\r\n          res.push(\"Observations details\");\r\n        }\r\n        if(this.state.res.inventory)\r\n        {\r\n          res.push(\"Interest Inventory details\");\r\n        }\r\n        if(this.state.res.existingBusiness)\r\n        {\r\n          res.push(\"Existing Business details\");\r\n        }\r\n    \r\n        if(this.state.res.socio)\r\n        {\r\n          res.push(\"SocioEconomic details\");\r\n        }\r\n    \r\n        if(this.state.res.education)\r\n        {\r\n          res.push(\"Education details\");\r\n        }\r\n    \r\n        if(this.state.res.Counselling)\r\n        {\r\n          res.push(\"Counselling details\");\r\n        }\r\n\r\n        const columns = [\r\n          //{label: 'Select A Batch', name: 'selectBatch' },\r\n        { label: 'Batch Name', name: 'batchName' },\r\n        { label: 'Batch Description', name: 'batchDescription' },\r\n        { label: 'Start Date', name: 'startDate' },\r\n        { label: 'End Date', name: 'endDate' },\r\n        { label: 'OJT Start Date', name: 'ojtStartDate' },\r\n        { label: 'OJT End Date', name: 'ojtEndDate' },\r\n        { label: 'Freeze Date', name: 'freezeDate' }\r\n        ];\r\n\r\n        const options = {\r\n          filterType: \"dropdown\",\r\n          responsive: \"stacked\",\r\n          sortDirection: \"desc\",\r\n          selectableRows:\"single\",\r\n          rowsPerPage:20,\r\n          selectableRowsOnClick: true,\r\n          disableToolbarSelect:true,\r\n          // textLabels: {\r\n          //   body: {\r\n          //     noMatch: <span style={{color:\"blue\"}}>Please wait data is loading</span>\r\n          //   }\r\n          // },\r\n          onRowsSelect: (currentRowsSelected,allRows) => {\r\n            var index=currentRowsSelected[0].dataIndex;\r\n            this.state.selectedBatchId=this.state.rows[index].batchId;\r\n         },\r\n         setRowProps: (row) => {\r\nfor(var i=0;i<this.state.enrollmentDetails.length;i++){\r\n  return {         \r\n    className: classnames(\r\n      {[this.props.classes.BusinessAnalystRow]: row[0] === this.state.enrollmentDetails[i].batchName\r\n      }),\r\n  };\r\n}\r\n        },\r\n        };\r\n\r\n        const ToggleHistoricalBatchDetails = event =>\r\n        { event.preventDefault();\r\n          let value='none';\r\n          if(this.state.toggleButton=='none'){\r\n           value='block';\r\n           this.setState({toggleButton:value});}\r\n           else{this.setState({toggleButton:value});}\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n{ (res.length != 0) && <div>Below details are incomplete</div>}\r\n<ul> {res.map((item) => (\r\n    <li><h4 style = {{fontWeight : \"600\" , color : \"red\"}}> {item}</h4></li>\r\n)) }\r\n</ul>\r\n\r\n\r\n<Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"flex-end\">\r\n<Link href=\"#\" onClick={ToggleHistoricalBatchDetails}>\r\n    View/Hide Enrolled Batch Details\r\n  </Link>\r\n  </Grid>\r\n\r\n<br/>\r\n    <Box component=\"div\"  style={{display:this.state.toggleButton}}>\r\n    <Paper >\r\n      <Table  aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Batch Name</TableCell>\r\n            <TableCell>Batch Description</TableCell>\r\n            <TableCell>Start Date</TableCell>\r\n            <TableCell>End Date</TableCell>\r\n            <TableCell>OJT Start Date</TableCell>\r\n            <TableCell>OJT End Date</TableCell>\r\n            <TableCell>Freeze Date</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n        {this.state.enrollmentDetails.map(row => (\r\n            <TableRow >               \r\n            <TableCell >   \r\n            {row.batchName}\r\n            </TableCell>\r\n            <TableCell >   \r\n            {row.batchDescription}\r\n            </TableCell>\r\n            <TableCell >   \r\n            {row.startDate}\r\n            </TableCell>\r\n            <TableCell >   \r\n            {row.endDate}\r\n            </TableCell>\r\n            <TableCell >   \r\n            {row.ojtStartDate}\r\n            </TableCell>\r\n            <TableCell >   \r\n            {row.ojtEndDate}\r\n            </TableCell>\r\n            <TableCell >   \r\n            {row.freezeDate}\r\n            </TableCell>\r\n            </TableRow>\r\n             ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper> \r\n    </Box>  \r\n<br/>\r\n\r\n<MUIDataTable\r\n       title={\"List Of Active Batches\"}\r\n        data={this.state.rows} columns={columns} \r\n        options={options} \r\n        />    \r\n<br/>\r\n                { \r\n  (UserContext.roleid!=4) &&         \r\n\r\n                <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"flex-end\">\r\n<Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={this.enroll} \r\n disabled={res.length!=0?true:this.state.freezeDate===''?false:(new Date(new Date(this.state.freezeDate).toDateString()) < new Date(new Date().toDateString()))} \r\n>Enroll</Button>\r\n</Grid>\r\n\r\n}\r\n\r\n\r\n{ \r\n  (this.state.alertDialogFlag) && <AlertDialog   message={alertDialogOptions.message}></AlertDialog>\r\n    }\r\n\r\n\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(customStyles, {name: \"EnrollmentDetails.js\"})(EnrollmentDetails);"]},"metadata":{},"sourceType":"module"}