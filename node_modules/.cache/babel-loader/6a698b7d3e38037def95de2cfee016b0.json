{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\MyBatches.js\";\nimport React, { Component } from 'react';\nimport MUIDataTable from \"mui-datatables\";\nimport Button from '@material-ui/core/Button';\nimport UserContext from '../components/GolbalContext';\nimport { Grid } from '@material-ui/core';\nimport { SingleSelect } from \"react-select-material-ui\";\nimport GridContainer from \"./../components/Grid/GridContainer.js\";\nimport { fetchBatchDetailsForBatchOwner, fetchEnrollmentDetailsByBatchId, fetchAllStudentDataByEngagementId, fetchAllEngagementForStudent, captureStudentEngagementDetails, captureStudentEngagementDetailsB, fetchBatchDetailsByBatchId } from './../util/api';\nimport AlertDialog from './../util/AlertDialog';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport ErrorBoundary from './../util/ErrorBoundary';\nimport { checkEligibleForShortlist } from './../util/validation.js';\nimport Card from \"./../components/Card/Card.js\";\nimport { Link } from 'react-router-dom';\nimport GridItem from \"./../components/Grid/GridItem.js\";\nconst alertDialogOptions = {\n  message: ''\n};\n\nclass MyBatches extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getMuiTheme = () => createMuiTheme({\n      overrides: {\n        MuiTableBody: {\n          root: {}\n        }\n      },\n      typography: {\n        \"fontSize\": 12\n      }\n    });\n\n    this.shortList = e => {\n      e.preventDefault();\n      this.setState({\n        alertDialogFlag: false\n      });\n      var dbUserId = this.state.selectedStudentId;\n\n      if (dbUserId) {\n        //alert(checkEligibleForShortlist(dbUserId))\n        checkEligibleForShortlist(dbUserId).then(result => result == 'true' ? this.alertNotEligible() : captureStudentEngagementDetailsB(dbUserId, UserContext.centerId, UserContext.userid, this.state.selectedEngagementId).then(jsondata => {\n          alertDialogOptions.message = /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: \"green\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 34\n            }\n          }, this.state.selectedBeneficiaryName, \"  shortlisted successfully\");\n          this.setState({\n            alertDialogFlag: true\n          });\n          this.setState({\n            selectedStudentId: ''\n          });\n          this.setState({\n            selectedEngagementI: ''\n          });\n          this.setState({\n            selectedBeneficiaryName: ''\n          });\n        }));\n      } else {\n        this.setState({\n          alertDialogFlag: false\n        }, () => {\n          alertDialogOptions.message = '';\n          alertDialogOptions.message = /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: \"red\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 32\n            }\n          }, \"Please select a  beneficiary\");\n          this.setState({\n            alertDialogFlag: true\n          });\n        });\n      } // code for change engId for shorlisting student\n\n    };\n\n    this.state = {\n      studentDetails: [],\n      selectedStudentId: '',\n      engagementId: props.engagementId,\n      linkedEngagementId: props.linkedEngagementId,\n      selectedEngagementId: '',\n      selectedBatchDetails: [],\n      selectedBeneficiaryName: '',\n      status: ''\n    };\n    this.formData = {\n      course: [],\n      activebatches: [],\n      engagementId: [],\n      alertDialogFlag: false\n    };\n    this.state = {\n      batches: []\n    };\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n    fetchBatchDetailsForBatchOwner(UserContext.userid, UserContext.centerId).then(jsondata => {\n      let activeB = JSON.parse(jsondata.data);\n      activeB.map(item => {\n        this.formData.activebatches.push({\n          label: item.batchName,\n          value: item.batchId\n        });\n      });\n    }).then(response => response);\n  }\n\n  handleSelectChange(selectname, batchId) {\n    fetchBatchDetailsByBatchId(batchId).then(batchData => {\n      let batchJsonObjects = JSON.parse(batchData.data);\n      this.setState({\n        selectedBatchDetails: batchJsonObjects\n      });\n    });\n    fetchEnrollmentDetailsByBatchId(batchId).then(jsondata => {\n      let enrollmentDetails = JSON.parse(jsondata.data);\n      this.formData.engagementId.length = 0;\n      enrollmentDetails.map(item => {\n        this.formData.engagementId.push({\n          engagementId: item.engagementId\n        });\n      });\n      fetchAllStudentDataByEngagementId(JSON.stringify(this.formData.engagementId)).then(jsondata => {\n        let studentInfo = [];\n\n        if (jsondata.data) {\n          let studentDetails = JSON.parse(jsondata.data);\n\n          for (var i = 0; i < studentDetails.length; i++) {\n            var details = {\n              'student_id': studentDetails[i].dbUserId,\n              'engagement_id': studentDetails[i].engagementId,\n              'name': studentDetails[i].firstName + \" \" + studentDetails[i].lastName,\n              'status': studentDetails[i].status,\n              'dob': studentDetails[i].dob\n            };\n            studentInfo.push(details);\n          }\n        }\n\n        this.setState({\n          studentDetails: []\n        }, () => {\n          this.setState({\n            studentDetails: studentInfo\n          });\n        });\n        studentInfo = null;\n      });\n    });\n  }\n\n  // alert for already shortlisted student\n  alertNotEligible() {\n    alertDialogOptions.message = /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 30\n      }\n    }, this.state.selectedBeneficiaryName, \"  already shortlisted for another program.\");\n    this.setState({\n      alertDialogFlag: true\n    });\n  }\n\n  render() {\n    const columns = [{\n      label: 'Student Id',\n      name: 'student_id',\n      options: {\n        sortDirection: 'desc'\n      },\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Engagement Id',\n      name: 'engagement_id',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Name',\n      name: 'name',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Date Of Birth',\n      name: 'dob',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Status',\n      name: 'status',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }];\n    const options = {\n      filterType: \"dropdown\",\n      responsive: \"stacked\",\n      sortDirection: \"desc\",\n      selectableRows: \"single\",\n      rowsPerPage: 10,\n      selectableRowsOnClick: true,\n      disableToolbarSelect: true,\n      textLabels: {\n        body: {\n          noMatch: /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: \"blue\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 20\n            }\n          }, \"Please select batch/ another batch to load students here\")\n        }\n      },\n      // elevation:0,\n      onRowsSelect: (currentRowsSelected, allRows) => {\n        var index = currentRowsSelected[0].dataIndex;\n\n        if (this.state.selectedStudentId) {\n          this.state.selectedStudentId = '';\n          this.state.selectedEngagementId = '';\n          this.state.selectedBeneficiaryName = '';\n          this.state.status = '';\n        } else {\n          this.state.selectedStudentId = this.state.studentDetails[index].student_id;\n          this.state.selectedEngagementId = this.state.studentDetails[index].engagement_id;\n          this.state.selectedBeneficiaryName = this.state.studentDetails[index].name;\n          this.setState({\n            status: this.state.studentDetails[index].status\n          });\n        }\n      }\n    };\n    return /*#__PURE__*/React.createElement(ErrorBoundary, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      alignContent: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      onChange: this.handleSelectChange.bind(this, 'batchName'),\n      name: \"batchName\",\n      id: \"batchName\",\n      placeholder: \"Select Batch\",\n      options: this.formData.activebatches,\n      fullWidth: true,\n      style: {\n        \"fontSize\": 11\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 4\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 4\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 4\n      }\n    }), this.state.selectedBatchDetails != null && /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      \"aria-label\": \"simple table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 7\n      }\n    }, \"Batch Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 7\n      }\n    }, \"Batch Description\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 7\n      }\n    }, \"Start Date\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 7\n      }\n    }, \"End Date\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 7\n      }\n    }, \"OJT Start Date\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 7\n      }\n    }, \"OJT End Date\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 7\n      }\n    }, this.state.selectedBatchDetails[0].batchName), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 7\n      }\n    }, this.state.selectedBatchDetails[0].batchDescription), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 7\n      }\n    }, this.state.selectedBatchDetails[0].startDate), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 7\n      }\n    }, this.state.selectedBatchDetails[0].endDate), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 7\n      }\n    }, this.state.selectedBatchDetails[0].ojtStartDate), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 7\n      }\n    }, this.state.selectedBatchDetails[0].ojtEndDate))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 4\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 4\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 4\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 4\n      }\n    }), /*#__PURE__*/React.createElement(MUIDataTable, {\n      title: \"Enrolled Student list\",\n      label: \"List of Students\",\n      data: this.state.studentDetails,\n      columns: columns,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 12\n      }\n    }), UserContext.defaultProgramId == 6 && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GridContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-end\",\n      alignItems: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"small\",\n      onClick: this.shortList,\n      disabled: this.state.studentDetails ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 1\n      }\n    }, \" Shortlist\"), \"\\xA0\\xA0\"))), this.state.alertDialogFlag && /*#__PURE__*/React.createElement(AlertDialog, {\n      message: alertDialogOptions.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 35\n      }\n    })));\n  }\n\n}\n\nexport default MyBatches;","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/MyBatches.js"],"names":["React","Component","MUIDataTable","Button","UserContext","Grid","SingleSelect","GridContainer","fetchBatchDetailsForBatchOwner","fetchEnrollmentDetailsByBatchId","fetchAllStudentDataByEngagementId","fetchAllEngagementForStudent","captureStudentEngagementDetails","captureStudentEngagementDetailsB","fetchBatchDetailsByBatchId","AlertDialog","createMuiTheme","MuiThemeProvider","Table","TableBody","TableCell","TableHead","TableRow","Paper","ErrorBoundary","checkEligibleForShortlist","Card","Link","GridItem","alertDialogOptions","message","MyBatches","constructor","props","getMuiTheme","overrides","MuiTableBody","root","typography","shortList","e","preventDefault","setState","alertDialogFlag","dbUserId","state","selectedStudentId","then","result","alertNotEligible","centerId","userid","selectedEngagementId","jsondata","color","selectedBeneficiaryName","selectedEngagementI","studentDetails","engagementId","linkedEngagementId","selectedBatchDetails","status","formData","course","activebatches","batches","handleSelectChange","bind","activeB","JSON","parse","data","map","item","push","label","batchName","value","batchId","response","selectname","batchData","batchJsonObjects","enrollmentDetails","length","stringify","studentInfo","i","details","firstName","lastName","dob","render","columns","name","options","sortDirection","headerStyle","filterType","responsive","selectableRows","rowsPerPage","selectableRowsOnClick","disableToolbarSelect","textLabels","body","noMatch","onRowsSelect","currentRowsSelected","allRows","index","dataIndex","student_id","engagement_id","batchDescription","startDate","endDate","ojtStartDate","ojtEndDate","defaultProgramId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport Button from '@material-ui/core/Button';\r\nimport UserContext from '../components/GolbalContext';\r\nimport {  Grid}  from '@material-ui/core';\r\nimport { SingleSelect } from \"react-select-material-ui\";\r\nimport GridContainer from \"./../components/Grid/GridContainer.js\";\r\nimport { fetchBatchDetailsForBatchOwner ,fetchEnrollmentDetailsByBatchId,\r\n  fetchAllStudentDataByEngagementId,fetchAllEngagementForStudent,captureStudentEngagementDetails,captureStudentEngagementDetailsB,fetchBatchDetailsByBatchId} from './../util/api';\r\nimport AlertDialog from './../util/AlertDialog';\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ErrorBoundary from  './../util/ErrorBoundary';\r\nimport { checkEligibleForShortlist} from './../util/validation.js';\r\nimport Card from \"./../components/Card/Card.js\";\r\nimport {Link} from 'react-router-dom';\r\nimport GridItem from \"./../components/Grid/GridItem.js\";\r\n  const alertDialogOptions = {\r\n    message: ''\r\n  }\r\n\r\nclass MyBatches extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {studentDetails:[],selectedStudentId:'',engagementId : props.engagementId,linkedEngagementId: props.linkedEngagementId,selectedEngagementId:'',selectedBatchDetails:[],selectedBeneficiaryName:'',status:''};  \r\n    this.formData = { course : [], activebatches : [],engagementId:[],alertDialogFlag:false};    \r\n       this.state = {batches:[]};\r\n       this.handleSelectChange = this.handleSelectChange.bind(this);   \r\n      fetchBatchDetailsForBatchOwner(UserContext.userid,UserContext.centerId).then((jsondata) => {     \r\n         let activeB = JSON.parse(jsondata.data);\r\n         activeB.map(item => {this.formData.activebatches.push({label: item.batchName, value: item.batchId }) });\r\n       }).then(response => response);    \r\n}\r\n\r\ngetMuiTheme = () => createMuiTheme({\r\n  overrides: {\r\n    MuiTableBody: {\r\n      root: {\r\n      \r\n      }\r\n    }\r\n  },\r\n  typography: {\r\n    \"fontSize\":12,\r\n   }\r\n})\r\n\r\nhandleSelectChange(selectname, batchId) {\r\n\r\n  fetchBatchDetailsByBatchId(batchId).then((batchData) => { \r\n    let batchJsonObjects = JSON.parse(batchData.data);\r\n      this.setState({selectedBatchDetails :batchJsonObjects});\r\n    \r\n\r\n   });\r\n\r\nfetchEnrollmentDetailsByBatchId(batchId).then((jsondata) => {\r\n  let enrollmentDetails = JSON.parse(jsondata.data);\r\n  this.formData.engagementId.length=0;\r\n  enrollmentDetails.map(item => {this.formData.engagementId.push({engagementId:item.engagementId}) });\r\n  fetchAllStudentDataByEngagementId(JSON.stringify(this.formData.engagementId)).then((jsondata) => {\r\n    let studentInfo=[];\r\nif(jsondata.data){\r\n    let studentDetails = JSON.parse(jsondata.data);   \r\n    for(var i=0;i<studentDetails.length;i++){\r\n      var  details =\r\n      {    'student_id':studentDetails[i].dbUserId,\r\n          'engagement_id':studentDetails[i].engagementId,\r\n          'name' :studentDetails[i].firstName+\" \"+studentDetails[i].lastName,\r\n          'status':studentDetails[i].status,\r\n          'dob':studentDetails[i].dob\r\n      }; \r\n      studentInfo.push(details);    \r\n  } \r\n\r\n}    \r\n\r\nthis.setState({studentDetails:[]},()=>{this.setState({studentDetails:studentInfo})});\r\nstudentInfo=null;\r\n}); \r\n});\r\n  \r\n}\r\n\r\nshortList = (e) => {\r\n  e.preventDefault();\r\n this.setState({alertDialogFlag: false });\r\n  var dbUserId=this.state.selectedStudentId;\r\n  if(dbUserId){\r\n    //alert(checkEligibleForShortlist(dbUserId))\r\n    checkEligibleForShortlist(dbUserId).then(result => result == 'true' ? this.alertNotEligible() : captureStudentEngagementDetailsB(dbUserId,UserContext.centerId,UserContext.userid,this.state.selectedEngagementId).then((jsondata) => { \r\n      alertDialogOptions.message=<span style={{color:\"green\"}}>{this.state.selectedBeneficiaryName}  shortlisted successfully</span>;\r\n      this.setState({alertDialogFlag:true});\r\n      this.setState({selectedStudentId:''});\r\n      this.setState({selectedEngagementI:''}); \r\n      this.setState({selectedBeneficiaryName:''});\r\n   }))\r\n  }else { \r\n   this.setState({alertDialogFlag: false },()=>{\r\n    alertDialogOptions.message='';\r\n    alertDialogOptions.message=<span style={{color:\"red\"}}>Please select a  beneficiary</span>;\r\n      this.setState({alertDialogFlag: true });\r\n\r\n   });\r\n \r\n \r\n     }\r\n// code for change engId for shorlisting student\r\n    \r\n}\r\n\r\n// alert for already shortlisted student\r\nalertNotEligible()\r\n{\r\n  alertDialogOptions.message=<span style={{color:\"red\"}}>{this.state.selectedBeneficiaryName}  already shortlisted for another program.</span>;\r\n      this.setState({alertDialogFlag:true});\r\n}\r\n\r\n  render() {\r\n\r\n\r\n    const columns = [{label: 'Student Id', name: 'student_id',options: { sortDirection: 'desc' },headerStyle: {color:'#FF9800'}},\r\n    {label: 'Engagement Id', name: 'engagement_id',headerStyle: {color:'#FF9800'}},\r\n    {label: 'Name', name: 'name',headerStyle: {color:'#FF9800'}},\r\n    {label: 'Date Of Birth', name: 'dob',headerStyle: {color:'#FF9800'}},\r\n    {label: 'Status', name: 'status',headerStyle: {color:'#FF9800'}}  \r\n   ]\r\n\r\n  \r\n    const options = {\r\n      filterType: \"dropdown\",\r\n      responsive: \"stacked\",\r\n      sortDirection: \"desc\",\r\n      selectableRows:\"single\",\r\n      rowsPerPage:10,\r\n      selectableRowsOnClick: true,\r\n      disableToolbarSelect:true,\r\n      textLabels: {\r\n        body: {\r\n          noMatch: <span style={{color:\"blue\"}}>Please select batch/ another batch to load students here</span>\r\n        }\r\n      },\r\n      // elevation:0,\r\n      onRowsSelect: (currentRowsSelected,allRows) => {\r\n      var index=currentRowsSelected[0].dataIndex;\r\n      if(this.state.selectedStudentId){\r\n        this.state.selectedStudentId='';\r\n        this.state.selectedEngagementId=''; \r\n        this.state.selectedBeneficiaryName='';\r\n        this.state.status='';\r\n      }\r\n      else{\r\n        this.state.selectedStudentId=this.state.studentDetails[index].student_id;\r\n        this.state.selectedEngagementId=this.state.studentDetails[index].engagement_id; \r\n        this.state.selectedBeneficiaryName=this.state.studentDetails[index].name;\r\n        this.setState({status:this.state.studentDetails[index].status});\r\n      }\r\n\r\n     },\r\n    };\r\n\r\n    return (\r\n      <ErrorBoundary>\r\n      <div>\r\n    \r\n     <Grid item xs={12} sm={4} alignContent=\"center\" >\r\n     <SingleSelect onChange={this.handleSelectChange.bind(this, 'batchName')} name=\"batchName\" id=\"batchName\"\r\n              placeholder = \"Select Batch\"              \r\n              options={this.formData.activebatches}\r\n              fullWidth={true}\r\n              style={{ \"fontSize\":11}}\r\n            />\r\n            </Grid>\r\n            <br/>\r\n            <br></br>\r\n   <br></br>\r\n   <br></br>\r\n   <br></br>\r\n   \r\n   \r\n\r\n            { (this.state.selectedBatchDetails!=null) && \r\n\r\n<Paper >\r\n<Table  aria-label=\"simple table\">\r\n  <TableHead>\r\n    <TableRow>\r\n      <TableCell>Batch Name</TableCell>\r\n      <TableCell>Batch Description</TableCell>\r\n      <TableCell>Start Date</TableCell>\r\n      <TableCell>End Date</TableCell>\r\n      <TableCell>OJT Start Date</TableCell>\r\n      <TableCell>OJT End Date</TableCell>\r\n    </TableRow>\r\n  </TableHead>\r\n  <TableBody>\r\n      <TableRow >               \r\n      <TableCell >   \r\n      {this.state.selectedBatchDetails[0].batchName}\r\n      </TableCell>\r\n      <TableCell >   \r\n      {this.state.selectedBatchDetails[0].batchDescription}\r\n      </TableCell>\r\n      <TableCell >   \r\n      {this.state.selectedBatchDetails[0].startDate}\r\n      </TableCell>\r\n      <TableCell >   \r\n      {this.state.selectedBatchDetails[0].endDate}\r\n      </TableCell>\r\n      <TableCell >   \r\n      {this.state.selectedBatchDetails[0].ojtStartDate}\r\n      </TableCell>\r\n      <TableCell >   \r\n      {this.state.selectedBatchDetails[0].ojtEndDate}\r\n      </TableCell>\r\n      </TableRow>\r\n      \r\n  </TableBody>\r\n</Table>\r\n</Paper> \r\n\r\n\r\n            }   \r\n\r\n               <br/> \r\n               <br></br>\r\n   <br></br>\r\n   <br></br>\r\n   <br></br>\r\n   <br></br>\r\n   \r\n    {/* <MuiThemeProvider theme={this.getMuiTheme()}>           */}\r\n      <MUIDataTable\r\n       title={\"Enrolled Student list\"} label={\"List of Students\"}\r\n        data={this.state.studentDetails} columns={columns} \r\n        options={options} \r\n        />\r\n    {/* </MuiThemeProvider> */}\r\n      <br/><br/>\r\n      { \r\n  (UserContext.defaultProgramId==6) &&\r\n      <div>\r\n\r\n<GridContainer>\r\n<Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"flex-end\">\r\n<Button variant=\"contained\" color=\"primary\" size=\"small\"\r\nonClick={this.shortList}\r\ndisabled={(this.state.studentDetails)?false:true}> Shortlist</Button>&nbsp;&nbsp;\r\n\r\n{/* <Button variant=\"contained\" color=\"primary\" size=\"small\" disabled={this.state.selectedEngagementId!=null &&  (this.state.status =='Enrolled')?false:true}>  \r\n<Link style = {{color : 'white'}}\r\nto={{pathname:\"/dashboard/updatebeneficiary\", state: { tab:14,status : this.state.status, dbUserId:this.state.selectedStudentId,engagementId:this.state.selectedEngagementId,name:this.state.selectedBeneficiaryName}}}>  Placement </Link>\r\n</Button> */}\r\n\r\n</Grid>\r\n</GridContainer>\r\n</div>\r\n  }\r\n\r\n{ \r\n  (this.state.alertDialogFlag) && <AlertDialog   message={alertDialogOptions.message}></AlertDialog>\r\n    }\r\n\r\n\r\n</div>\r\n</ErrorBoundary>   \r\n    );\r\n  }\r\n}\r\n\r\nexport default MyBatches ;\r\n"]},"metadata":{},"sourceType":"module"}