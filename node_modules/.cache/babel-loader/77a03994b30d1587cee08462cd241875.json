{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\StudentMigration.js\";\nimport React, { Component } from 'react';\nimport UserContext from '../components/GolbalContext';\nimport { SingleSelect } from \"react-select-material-ui\";\nimport { Checkbox, InputLabel, Input, Grid, Button } from '@material-ui/core';\nimport { fetchAllStateDetails, fetchCenterByStateName, fetchVirtualData, fetchStudentDetailsByEngagementId, updateStudentData } from './../util/api';\nimport MUIDataTable from \"mui-datatables\";\nimport { forEach } from 'underscore';\nimport { serviceEndPoint } from './../util/serviceEndPoint';\nimport { isSessionValid, isTokenValid } from './../util/session.js';\nimport { regenerateToken } from './../util/validation';\nexport default class StudentMigration extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      channelCreation: \"\",\n      statelist: [],\n      centerList: [],\n      Selectedstate: \"\",\n      selectedCenterId: \"\",\n      studentInfo: [],\n      selectedIndex: [],\n      rowsSelected: [],\n      rowsSelected: {\n        'engagementId': '',\n        'name': ''\n      } // studentsToDisplay: [],\n      // engDetailsTable: [],\n      // engMasterTable: [],\n\n    }; // this.handleStateChange = this.handleStateChange.bind(this);\n    // this.saveStudentDetails = this.saveStudentDetails.bind(this);\n    // this.discardUnwantedList = this.discardUnwantedList.bind(this);\n\n    fetchAllStateDetails().then(jsondata => {\n      let res = JSON.parse(jsondata.data);\n      console.log(res);\n      res.forEach(element => {\n        this.state.statelist.push({\n          'value': element.name,\n          'label': element.name\n        });\n      });\n    });\n  } // Dropdown for state\n\n\n  handleStateChange(selectname, event) {\n    const state = event;\n    this.setState({\n      selectedstate: state\n    });\n    fetchCenterByStateName(event).then(jsondata => {\n      let result = JSON.parse(jsondata.data);\n      var center = result.filter(key => key.isActive == \"Y\"); // console.log(center)\n\n      center.forEach(element => {\n        this.state.centerList.push({\n          \"value\": element.id,\n          \"label\": element.name\n        });\n      });\n    });\n  } // center List handler\n\n\n  handleCenterChange(selectname, event) {\n    this.setState({\n      selectedCenterId: event\n    });\n    fetchVirtualData(3049, \"Karnataka\", \"SR-STRIVE\").then(jsondata => {\n      let result = JSON.parse(jsondata.data);\n      this.setState({\n        studentInfo: result\n      });\n      this.fillStudentTable();\n    });\n  }\n\n  fillStudentTable() {\n    console.log(this.state.studentInfo);\n  } //saving table data in student_details_table\n  // saveStudentDetails(engId) {\n  //   let index = this.state.studentInfo.findIndex((data) => data.EngagementId == engId);\n  //   let studentToBeUpdated = this.state.studentInfo[index];\n  //   console.log(studentToBeUpdated)\n  //   fetchStudentDetailsByEngagementId(engId).then((jsondata) => {\n  //     let res = JSON.parse(jsondata.data);\n  //     console.log(res[0])\n  //     if (res[0].centerId == 3049) {\n  //       updateStudentData(res[0].engagementId, res[0].dbUserId, UserContext.centerId, res[0].createdBy, res[0].updatedBy, \"Updated center from Virtual\", res[0].status, 0, \"\").then((jsondata) => {\n  //         let savedData = JSON.parse(jsondata.data);\n  //         if (savedData[0].engagementId == res[0].engagementId && savedData[0].centerId != '3049') {\n  //           alert(\"Student successfully migrated to !\" + UserContext.centerName)\n  //         }\n  //       });\n  //     }\n  //     else {\n  //       alert('Student is already assigned to some other Center')\n  //     }\n  //   })\n  // }\n  // remove unwanted table data \n\n\n  async discardUnwantedList(master) {\n    var dataToBeDisplayed = [];\n    var studentDetails = [];\n    console.log('Checkpoint 1');\n    await master.map((data, id) => {\n      console.log('Checkpoint 2');\n      fetchStudentDetailsByEngagementId(data.EngagementId).then(jsondata => {\n        console.log('Checkpoint 2.5');\n        let result = JSON.parse(jsondata.data);\n\n        if (result[0].centerId == '3049') {\n          console.log(\"data to be saved ===> \", data);\n          var details = {\n            \"EngagementId\": data.EngagementId,\n            \"Name\": data.Name,\n            \"Dob\": data.Dob,\n            \"PrimaryContactNumber\": data.PrimaryContactNumber,\n            \"PermAddressLine1\": data.PermAddressLine1,\n            \"PermCityName\": data.PermCityName,\n            \"PermPincode\": data.PermPincode,\n            \"Action\": /*#__PURE__*/React.createElement(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: () => this.saveStudentDetails(data.EngagementId),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 23\n              }\n            }, \"Save\")\n          };\n          dataToBeDisplayed.push(details); // this.state.studentInfo.push(details);\n        } else {\n          console.log(\"this data is to be deleted ===> \", data);\n          studentDetails.push(result[0]); // this.state.engDetailsTable.push(data)\n        }\n      });\n    });\n    this.setState({\n      studentInfo: dataToBeDisplayed,\n      studentsToDisplay: dataToBeDisplayed\n    });\n    console.log(this.state);\n    console.log('Checkpoint 3');\n  }\n\n  render() {\n    const columns = [{\n      label: 'Engagement Id',\n      name: 'EngagementId',\n      options: {\n        sortDirection: 'desc'\n      },\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, // {label: 'Name', name: 'first_name',options : {    // not showing the value on fromt end\n    //   sortDirection : 'desc',display: false\n    // },headerStyle: {color:'#FF9800'}},\n    {\n      label: 'Name',\n      name: 'Name',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Date Of Birth',\n      name: 'Dob',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Contact Number',\n      name: 'PrimaryContactNumber',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'City',\n      name: 'PermCityName',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Pin code',\n      name: 'PermPincode',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }];\n    const options = {\n      selectableRows: 'multiple',\n      filterType: \"dropdown\",\n      responsive: \"stacked\",\n      sortDirection: \"desc\",\n      disableToolbarSelect: true,\n      rowsPerPage: 15,\n      selectableRowsOnClick: true,\n      rowsSelected: this.state.selectedIndex,\n      onRowsSelect: allRows => {\n        let rows = this.state.selectedIndex;\n        rows[0] = allRows[0].dataIndex;\n        this.setState({\n          rowsSelected: this.state.studentInfo[allRows[0].dataIndex],\n          selectedIndex: rows,\n          name: this.state.info[allRows[0].dataIndex].name\n        });\n        console.log(this.state.selectedIndex);\n        console; // console.log(rowsSelected)\n        // let rows = this.state.selectedIndex;\n        // rows[0] = allRows[0].dataIndex;\n        // console.log(rows[0])\n        // this.setState({\n        //   rowsSelected : this.state.info[allRows[0].dataIndex],\n        //   selectedIndex : rows,\n        //   name:this.state.info[allRows[0].dataIndex].name\n        // }) // this is the row in your data source       \n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }\n    }, \"State\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"Selectedstate\",\n      id: \"Selectedstate\" //   key={this.state.Selectedstate || ''}\n      ,\n      options: this.state.statelist,\n      value: this.state.Selectedstate || '',\n      onChange: this.handleStateChange.bind(this, 'Selectedstate') //   helperText={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.label : ''}\n      //   error={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.value : ''}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"selectedcenter\",\n      id: \"centerId\",\n      options: this.state.centerList,\n      value: this.state.selectedcenter || '',\n      onChange: this.handleCenterChange.bind(this, 'Selectedstate'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MUIDataTable, {\n      title: \"Students\",\n      label: \"List of Students\",\n      data: this.state.studentInfo,\n      columns: columns,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/StudentMigration.js"],"names":["React","Component","UserContext","SingleSelect","Checkbox","InputLabel","Input","Grid","Button","fetchAllStateDetails","fetchCenterByStateName","fetchVirtualData","fetchStudentDetailsByEngagementId","updateStudentData","MUIDataTable","forEach","serviceEndPoint","isSessionValid","isTokenValid","regenerateToken","StudentMigration","constructor","props","state","channelCreation","statelist","centerList","Selectedstate","selectedCenterId","studentInfo","selectedIndex","rowsSelected","then","jsondata","res","JSON","parse","data","console","log","element","push","name","handleStateChange","selectname","event","setState","selectedstate","result","center","filter","key","isActive","id","handleCenterChange","fillStudentTable","discardUnwantedList","master","dataToBeDisplayed","studentDetails","map","EngagementId","centerId","details","Name","Dob","PrimaryContactNumber","PermAddressLine1","PermCityName","PermPincode","saveStudentDetails","studentsToDisplay","render","columns","label","options","sortDirection","headerStyle","color","selectableRows","filterType","responsive","disableToolbarSelect","rowsPerPage","selectableRowsOnClick","onRowsSelect","allRows","rows","dataIndex","info","width","bind","selectedcenter"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport UserContext from '../components/GolbalContext'\r\nimport { SingleSelect } from \"react-select-material-ui\";\r\nimport { Checkbox, InputLabel, Input, Grid, Button } from '@material-ui/core';\r\nimport { fetchAllStateDetails, fetchCenterByStateName, fetchVirtualData, fetchStudentDetailsByEngagementId, updateStudentData } from './../util/api';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { forEach } from 'underscore';\r\nimport { serviceEndPoint } from './../util/serviceEndPoint';\r\nimport { isSessionValid, isTokenValid } from './../util/session.js';\r\nimport { regenerateToken } from './../util/validation';\r\n\r\n\r\nexport default class StudentMigration extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      channelCreation: \"\",\r\n      statelist: [],\r\n      centerList: [],\r\n      Selectedstate: \"\",\r\n      selectedCenterId: \"\",\r\n      studentInfo: [],\r\n      selectedIndex:[],\r\n      rowsSelected:[],\r\n      rowsSelected:{'engagementId':'','name':''}\r\n      // studentsToDisplay: [],\r\n      // engDetailsTable: [],\r\n      // engMasterTable: [],\r\n    }\r\n    // this.handleStateChange = this.handleStateChange.bind(this);\r\n    // this.saveStudentDetails = this.saveStudentDetails.bind(this);\r\n    // this.discardUnwantedList = this.discardUnwantedList.bind(this);\r\n    fetchAllStateDetails().then((jsondata) => {\r\n      let res = JSON.parse(jsondata.data)\r\n      console.log(res)\r\n      res.forEach(element => {\r\n        this.state.statelist.push({\r\n          'value': element.name,\r\n          'label': element.name,\r\n        })\r\n      });\r\n    })\r\n  }\r\n\r\n  // Dropdown for state\r\n  handleStateChange(selectname, event) {\r\n\r\n    const state = event\r\n    this.setState({ selectedstate: state })\r\n    fetchCenterByStateName(event).then((jsondata) => {\r\n      let result = JSON.parse(jsondata.data)\r\n      var center = result.filter((key) => key.isActive == \"Y\")\r\n      // console.log(center)\r\n      center.forEach(element => {\r\n        this.state.centerList.push({\r\n          \"value\": element.id,\r\n          \"label\": element.name\r\n        })\r\n      })\r\n    })\r\n  }\r\n  // center List handler\r\n  handleCenterChange(selectname, event) {\r\n    this.setState({ selectedCenterId: event })\r\n    fetchVirtualData(3049,\"Karnataka\",\"SR-STRIVE\").then((jsondata)=>{\r\n      let result = JSON.parse(jsondata.data)\r\n      this.setState({studentInfo: result})\r\n      this.fillStudentTable();\r\n    })\r\n  }\r\n\r\n  fillStudentTable(){\r\n    console.log(this.state.studentInfo)\r\n  }\r\n  //saving table data in student_details_table\r\n  // saveStudentDetails(engId) {\r\n  //   let index = this.state.studentInfo.findIndex((data) => data.EngagementId == engId);\r\n  //   let studentToBeUpdated = this.state.studentInfo[index];\r\n  //   console.log(studentToBeUpdated)\r\n  //   fetchStudentDetailsByEngagementId(engId).then((jsondata) => {\r\n  //     let res = JSON.parse(jsondata.data);\r\n  //     console.log(res[0])\r\n  //     if (res[0].centerId == 3049) {\r\n  //       updateStudentData(res[0].engagementId, res[0].dbUserId, UserContext.centerId, res[0].createdBy, res[0].updatedBy, \"Updated center from Virtual\", res[0].status, 0, \"\").then((jsondata) => {\r\n  //         let savedData = JSON.parse(jsondata.data);\r\n  //         if (savedData[0].engagementId == res[0].engagementId && savedData[0].centerId != '3049') {\r\n  //           alert(\"Student successfully migrated to !\" + UserContext.centerName)\r\n  //         }\r\n  //       });\r\n  //     }\r\n  //     else {\r\n  //       alert('Student is already assigned to some other Center')\r\n  //     }\r\n  //   })\r\n  // }\r\n\r\n  // remove unwanted table data \r\n  async discardUnwantedList(master) {\r\n    var dataToBeDisplayed = [];\r\n    var studentDetails = [];\r\n    console.log('Checkpoint 1');\r\n    await master.map((data, id) => {\r\n      console.log('Checkpoint 2');\r\n      fetchStudentDetailsByEngagementId(data.EngagementId).then((jsondata) => {\r\n        console.log('Checkpoint 2.5');\r\n        let result = JSON.parse(jsondata.data)\r\n        if (result[0].centerId == '3049') {\r\n          console.log(\"data to be saved ===> \", data)\r\n          var details =\r\n          {\r\n            \"EngagementId\": data.EngagementId,\r\n            \"Name\": data.Name,\r\n            \"Dob\": data.Dob,\r\n            \"PrimaryContactNumber\": data.PrimaryContactNumber,\r\n            \"PermAddressLine1\": data.PermAddressLine1,\r\n            \"PermCityName\": data.PermCityName,\r\n            \"PermPincode\": data.PermPincode,\r\n            \"Action\": <Button variant=\"contained\" color=\"primary\" onClick={() => this.saveStudentDetails(data.EngagementId)}>Save</Button>\r\n          }\r\n          dataToBeDisplayed.push(details);\r\n          // this.state.studentInfo.push(details);\r\n        }\r\n        else {\r\n          console.log(\"this data is to be deleted ===> \", data)\r\n          studentDetails.push(result[0]);\r\n          // this.state.engDetailsTable.push(data)\r\n        }\r\n      })\r\n    })\r\n\r\n    this.setState({ studentInfo: dataToBeDisplayed, studentsToDisplay: dataToBeDisplayed });\r\n    console.log(this.state)\r\n    console.log('Checkpoint 3');\r\n\r\n  }\r\n\r\n\r\n      \r\n  render() {\r\n    const columns = [\r\n      {\r\n        label: 'Engagement Id', name: 'EngagementId', options: {\r\n          sortDirection: 'desc'\r\n        }, headerStyle: { color: '#FF9800' }\r\n      },\r\n      // {label: 'Name', name: 'first_name',options : {    // not showing the value on fromt end\r\n      //   sortDirection : 'desc',display: false\r\n      // },headerStyle: {color:'#FF9800'}},\r\n      { label: 'Name', name: 'Name', headerStyle: { color: '#FF9800' } },\r\n      { label: 'Date Of Birth', name: 'Dob', headerStyle: { color: '#FF9800' } },\r\n      { label: 'Contact Number', name: 'PrimaryContactNumber', headerStyle: { color: '#FF9800' } },\r\n      { label: 'City', name: 'PermCityName', headerStyle: { color: '#FF9800' } },\r\n      { label: 'Pin code', name: 'PermPincode', headerStyle: { color: '#FF9800' } },\r\n      \r\n    ]\r\n    \r\n    const options = {\r\n    \r\n      selectableRows: 'multiple',\r\n    \r\n      filterType: \"dropdown\",\r\n      responsive: \"stacked\",\r\n      sortDirection: \"desc\",\r\n      disableToolbarSelect: true,\r\n      rowsPerPage: 15,\r\n      selectableRowsOnClick: true,\r\n          rowsSelected : this.state.selectedIndex,\r\n          onRowsSelect: (allRows) => {\r\n            let rows = this.state.selectedIndex;\r\n            rows[0] = allRows[0].dataIndex;\r\n            this.setState({\r\n            rowsSelected : this.state.studentInfo[allRows[0].dataIndex],\r\n            selectedIndex : rows,\r\n            name:this.state.info[allRows[0].dataIndex].name\r\n            })\r\n            console.log(this.state.selectedIndex)\r\n            console\r\n            // console.log(rowsSelected)\r\n              // let rows = this.state.selectedIndex;\r\n              // rows[0] = allRows[0].dataIndex;\r\n              // console.log(rows[0])\r\n              // this.setState({\r\n              //   rowsSelected : this.state.info[allRows[0].dataIndex],\r\n              //   selectedIndex : rows,\r\n              //   name:this.state.info[allRows[0].dataIndex].name\r\n              // }) // this is the row in your data source       \r\n         },\r\n    };\r\n    return (\r\n      <div style={{ width: '100%' }}>\r\n        <Grid container>\r\n          <Grid item xs={12}> </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} >State</InputLabel>\r\n            <SingleSelect\r\n              name=\"Selectedstate\" id=\"Selectedstate\"\r\n              //   key={this.state.Selectedstate || ''}\r\n              options={this.state.statelist}\r\n              value={this.state.Selectedstate || ''}\r\n              onChange={this.handleStateChange.bind(this, 'Selectedstate')}\r\n            //   helperText={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.label : ''}\r\n            //   error={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.value : ''}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}></Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <SingleSelect\r\n              name=\"selectedcenter\" id=\"centerId\"\r\n              options={this.state.centerList}\r\n              value={this.state.selectedcenter || ''}\r\n              onChange={this.handleCenterChange.bind(this, 'Selectedstate')}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <br /> <br />\r\n        <br />\r\n        <Grid>\r\n          <MUIDataTable title={\"Students\"} label={\"List of Students\"} data={this.state.studentInfo}\r\n            columns={columns} options={options}\r\n          />\r\n        </Grid>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}