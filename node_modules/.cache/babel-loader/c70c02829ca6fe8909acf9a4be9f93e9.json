{"ast":null,"code":"import { getWorkbookProperties, getSheets } from '../xml/xlsx'; // I guess `xl/workbook.xml` file should always be present inside the *.xlsx archive.\n\nexport default function parseProperties(content, xml) {\n  var book = xml.createDocument(content);\n  var properties = {}; // Read `<workbookPr/>` element to detect whether dates are 1900-based or 1904-based.\n  // https://support.microsoft.com/en-gb/help/214330/differences-between-the-1900-and-the-1904-date-system-in-excel\n  // http://webapp.docx4java.org/OnlineDemo/ecma376/SpreadsheetML/workbookPr.html\n\n  var workbookProperties = getWorkbookProperties(book);\n\n  if (workbookProperties && workbookProperties.getAttribute('date1904') === '1') {\n    properties.epoch1904 = true;\n  } // Get sheets info (indexes, names, if they're available).\n  // Example:\n  // <sheets>\n  //   <sheet\n  //     xmlns:ns=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\"\n  //     name=\"Sheet1\"\n  //     sheetId=\"1\"\n  //     ns:id=\"rId3\"/>\n  // </sheets>\n  // http://www.datypic.com/sc/ooxml/e-ssml_sheet-1.html\n\n\n  properties.sheets = [];\n\n  var addSheetInfo = function addSheetInfo(sheet) {\n    if (sheet.getAttribute('name')) {\n      properties.sheets.push({\n        id: sheet.getAttribute('sheetId'),\n        name: sheet.getAttribute('name'),\n        relationId: sheet.getAttribute('r:id')\n      });\n    }\n  };\n\n  getSheets(book).forEach(addSheetInfo);\n  return properties;\n}","map":{"version":3,"sources":["../../source/read/parseProperties.js"],"names":["book","xml","properties","workbookProperties","getWorkbookProperties","addSheetInfo","sheet","id","name","relationId","getSheets"],"mappings":"AAAA,SAAA,qBAAA,EAAA,SAAA,QAAA,aAAA,C,CAKA;;AACA,eAAe,SAAA,eAAA,CAAA,OAAA,EAAA,GAAA,EAAuC;AACpD,MAAMA,IAAI,GAAGC,GAAG,CAAHA,cAAAA,CAAb,OAAaA,CAAb;AAEA,MAAMC,UAAU,GAHoC,EAGpD,CAHoD,CAKpD;AACA;AACA;;AAEA,MAAMC,kBAAkB,GAAGC,qBAAqB,CAAhD,IAAgD,CAAhD;;AAEA,MAAID,kBAAkB,IAAIA,kBAAkB,CAAlBA,YAAAA,CAAAA,UAAAA,MAA1B,GAAA,EAA+E;AAC7ED,IAAAA,UAAU,CAAVA,SAAAA,GAAAA,IAAAA;AAZkD,GAAA,CAepD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAA,EAAAA,UAAU,CAAVA,MAAAA,GAAAA,EAAAA;;AAEA,MAAMG,YAAY,GAAG,SAAfA,YAAe,CAAA,KAAA,EAAW;AAC9B,QAAIC,KAAK,CAALA,YAAAA,CAAJ,MAAIA,CAAJ,EAAgC;AAC9BJ,MAAAA,UAAU,CAAVA,MAAAA,CAAAA,IAAAA,CAAuB;AACrBK,QAAAA,EAAE,EAAED,KAAK,CAALA,YAAAA,CADiB,SACjBA,CADiB;AAErBE,QAAAA,IAAI,EAAEF,KAAK,CAALA,YAAAA,CAFe,MAEfA,CAFe;AAGrBG,QAAAA,UAAU,EAAEH,KAAK,CAALA,YAAAA,CAAAA,MAAAA;AAHS,OAAvBJ;AAKD;AAPH,GAAA;;AAUAQ,EAAAA,SAAS,CAATA,IAAS,CAATA,CAAAA,OAAAA,CAAAA,YAAAA;AAEA,SAAA,UAAA;AACD","sourcesContent":["import {\r\n  getWorkbookProperties,\r\n  getSheets\r\n} from '../xml/xlsx'\r\n\r\n// I guess `xl/workbook.xml` file should always be present inside the *.xlsx archive.\r\nexport default function parseProperties(content, xml) {\r\n  const book = xml.createDocument(content)\r\n\r\n  const properties = {};\r\n\r\n  // Read `<workbookPr/>` element to detect whether dates are 1900-based or 1904-based.\r\n  // https://support.microsoft.com/en-gb/help/214330/differences-between-the-1900-and-the-1904-date-system-in-excel\r\n  // http://webapp.docx4java.org/OnlineDemo/ecma376/SpreadsheetML/workbookPr.html\r\n\r\n  const workbookProperties = getWorkbookProperties(book)\r\n\r\n  if (workbookProperties && workbookProperties.getAttribute('date1904') === '1') {\r\n    properties.epoch1904 = true\r\n  }\r\n\r\n  // Get sheets info (indexes, names, if they're available).\r\n  // Example:\r\n  // <sheets>\r\n  //   <sheet\r\n  //     xmlns:ns=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\"\r\n  //     name=\"Sheet1\"\r\n  //     sheetId=\"1\"\r\n  //     ns:id=\"rId3\"/>\r\n  // </sheets>\r\n  // http://www.datypic.com/sc/ooxml/e-ssml_sheet-1.html\r\n\r\n  properties.sheets = []\r\n\r\n  const addSheetInfo = (sheet) => {\r\n    if (sheet.getAttribute('name')) {\r\n      properties.sheets.push({\r\n        id: sheet.getAttribute('sheetId'),\r\n        name: sheet.getAttribute('name'),\r\n        relationId: sheet.getAttribute('r:id')\r\n      })\r\n    }\r\n  }\r\n\r\n  getSheets(book).forEach(addSheetInfo)\r\n\r\n  return properties;\r\n}"]},"metadata":{},"sourceType":"module"}