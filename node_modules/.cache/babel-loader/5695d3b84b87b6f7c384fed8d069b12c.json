{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\PlacementDetails.js\";\n\n/*!\r\n\r\n=========================================================\r\n* Material Dashboard React - v1.8.0\r\n=========================================================\r\n\r\n\r\n* Coded by Ashish S\r\n\r\n=========================================================\r\n\r\n\r\n*/\nimport React, { Component } from 'react';\nimport { render } from \"react-dom\";\nimport './../App.css';\nimport './../assets/css/login-style.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { SingleSelect } from \"react-select-material-ui\";\nimport callMerge from 'material-ui/svg-icons/communication/call-merge';\nimport UserContext from '../components/GolbalContext';\nimport { FormControl, InputLabel, FormControlLabel, Input, Grid, RadioGroup, Radio, TextField } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport { isNotEmpty, isNotZero } from './../util/validation';\nimport { roleBasedReadonly, checkButton } from '../util/validation';\nimport AlertDialog from '../util/AlertDialog';\nimport Paper from '@material-ui/core/Paper';\nimport { savePlacementDetails, deleteDocumentById, fetchUserDocumentsByUserIdAndTypeOfDocument, fectAddressDetailsByAddressID, fetchAddressDetailsBasedOnPincode, fetchPlacementDetailsByEngagementId, fetchAllCenter, saveAddressDetails, uploadDocument, fetchEmployerDetails } from '../util/api';\nimport MUIDataTable from \"mui-datatables\";\nimport AddressForPlacement from \"./AddressForPlacement\";\nimport underscore from 'underscore';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { DropzoneArea } from 'material-ui-dropzone';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { serviceEndPoint } from '../util/serviceEndPoint';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Label } from 'recharts';\nconst alertDialogOptions = {\n  message: ''\n};\n\nclass PlacementDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const target = event.target;\n      let value = target.value;\n      const name = target.name;\n      this.setState({\n        placementData: { ...this.state.placementData\n        }\n      });\n    };\n\n    this.deleteDocument = basicDocId => {\n      //**For deleting a particular element if deleted then check for the updated row */\n      deleteDocumentById(basicDocId).then(jsondata => {\n        if (jsondata.status == \"success\") {\n          let data = JSON.parse(jsondata.data); // console.log(data)\n          //** uncomment the below if an alert for deleting the document is required */\n          // this.setState({ alertDialogFlag: false });\n          //       alertDialogOptions.message = <span style={{ color: \"green\" }}>Document is Deleted Sucessfully</span>;\n          // this.setState({ alertDialogFlag: true });\n\n          this.getDocuments();\n        } else {\n          this.setState({\n            alertDialogFlag: false\n          });\n          alertDialogOptions.message = /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: \"red\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 38\n            }\n          }, \"Document cannot be deleted, please try again!\");\n          this.setState({\n            alertDialogFlag: true\n          });\n        }\n      });\n    };\n\n    this.handleCheckboxChange = event => {\n      // console.log('name ===> ', event.target.name)\n      // console.log('checked ===> ', event.target.checked)\n      // console.log('target ===> ', event.target)\n      let target = event.target;\n      let name = target.name;\n      let idName = target.id;\n      console.log(idName); // if (event.target.name == 'documentsUploaded') {\n      //   this.state.errors.documentsUploaded = '';\n      // }\n      // else if (name == 'authenticationAndConsent') {\n      //   this.state.errors.documentsUploaded = '';\n      //   this.state.errors.authenticationAndConsent = '';\n      // }\n      // else if (name == 'familyConsent') {\n      //   this.state.errors.familyConsent = '';\n      // }\n\n      this.validateAppropriateCheckBoxes(idName);\n      this.setState({\n        placementData: { ...this.state.placementData,\n          [event.target.name]: event.target.checked\n        }\n      });\n    };\n\n    this.validateAppropriateCheckBoxes = name => {\n      console.log('here');\n      let errors = this.state.errors;\n      console.log(this.state.documents); //*Check if any documents are uploaded if not send to the else part if yes check the type and then check the appropriate documents*//\n\n      if (this.state.documents.length > 0) {\n        if (name == \"documentsUploadedPlaced\") {\n          // console.log('placed documents to be checked here')\n          // this.state.documents.map((element, id) => {\n          //   // console.log(element)\n          //   var isPresent = (element.documentType == \"Offer Letter\" || element.documentType == \"Joining Letter\" || element.documentType == \"Pay Slip\" || element.documentType == \"Bank Statement\" || element.documentType == \"Email From Employer\" || element.documentType == \"Workplace Picture\" || element.documentType == \"ID card\" || element.documentType == \"Letter from HR\")\n          //   let errors = this.state.errors;\n          //   if (isPresent) {\n          //     errors.documentsUploaded = '';\n          //   }\n          //   else {\n          //     errors.documentsUploaded = 'Please upload the document before clicking the checkbox!';\n          //   }\n          // })\n          let docList = ['Offer Letter', 'Joining Letter', 'Pay Slip', 'Bank Statement', 'Email From Employer', 'Workplace Picture', 'ID card', 'Letter from HR'];\n          docList.map(element => {\n            let ans = this.CheckForDocuments(element);\n            console.log(\"some value here ===> \", ans);\n\n            if (this.CheckForDocuments(element)) {\n              this.state.errors.documentsUploaded = '';\n            } else if (element == 'Letter from HR') {\n              this.state.errors.documentsUploaded = 'Please upload the document before clicking the checkbox!';\n            }\n          });\n        } else if (name == \"authenticationAndConsent\") {\n          // console.log('placed documents to be checked here')\n          if (errors.documentsUploaded) {\n            errors.authenticationAndConsent = 'Please upload the document before clicking the checkbox!';\n          } else {\n            errors.authenticationAndConsent = '';\n          }\n        } else if (name == \"familyConsent\") {\n          // console.log('family consent documents to be checked here')\n          // this.state.documents.map((element, id) => {\n          //   // console.log(element)\n          //   var isPresent = (element.documentType == \"Consent Letter\")\n          //   // console.log(isPresent)\n          //   let errors = this.state.errors;\n          //   if (isPresent) {\n          //     errors.documentsUploaded = '';\n          //   }\n          //   else {\n          //     errors.documentsUploaded = 'Please upload the document before clicking the checkbox!';\n          //   }\n          // })\n          if (this.CheckForDocuments('Student Declaration')) {\n            errors.documentsUploaded = '';\n          } else {\n            errors.documentsUploaded = 'Please upload the document before clicking the checkbox!';\n          }\n        } else if (name == \"documentsUploadedEntrepreneurship\") {\n          // console.log('entrepreneurship documents to be checked here')\n          // this.state.documents.map((element, id) => {\n          //   // console.log(element)\n          //   var isPresent = (element.documentType == \"Registration Certificate\")\n          //   let errors = this.state.errors;\n          //   if (isPresent) {\n          //     errors.documentsUploaded = '';\n          //   }\n          //   else {\n          //     errors.documentsUploaded = 'Please upload the document before clicking the checkbox!';\n          //   }\n          // })\n          if (this.CheckForDocuments('Registration Certificate')) {\n            errors.documentsUploaded = '';\n          } else {\n            errors.documentsUploaded = 'Please upload the document before clicking the checkbox!';\n          }\n        }\n      } else {\n        // alert('Please upload the document before clicking the checkbox!');\n        errors.name = 'Please upload documents before proceeding here!';\n      }\n\n      this.setState({\n        errors\n      });\n    };\n\n    this.mySubmitHandler = event => {\n      // alert(\"check\");\n      event.preventDefault();\n      this.state.disabled = true;\n      this.validate(\"interviewStatus\", this.state.placementData.interviewStatus);\n\n      if (this.state.errors.interviewStatus === '') {\n        if (this.state.placementData.interviewStatus === 'Placed' || this.state.placementData.interviewStatus === 'Offer Not Taken') {\n          // console.log('should be here')\n          this.validatePlacedAndOfferNotTaken(\"empId\", this.state.placementData.empId);\n          this.validatePlacedAndOfferNotTaken(\"domainName\", this.state.placementData.domainName);\n          this.validatePlacedAndOfferNotTaken(\"spocName\", this.state.placementData.spocName);\n          this.validatePlacedAndOfferNotTaken(\"designation\", this.state.placementData.designation);\n          this.validatePlacedAndOfferNotTaken(\"spocPhoneNumber\", this.state.placementData.spocPhoneNumber);\n          this.validatePlacedAndOfferNotTaken(\"annualSal\", this.state.placementData.annualSal);\n          this.validatePlacedAndOfferNotTaken(\"offerDate\", this.state.placementData.offerDate); // this.validatePlacedAndOfferNotTaken(\"joiningDate\", this.state.placementData.joiningDate);\n\n          this.validatePlacedAndOfferNotTaken(\"joined\", this.state.placementData.joined);\n          this.validatePlacedAndOfferNotTaken(\"documentsUploaded\", this.state.placementData.documentsUploaded);\n          this.validatePlacedAndOfferNotTaken(\"authenticationAndConsent\", this.state.placementData.authenticationAndConsent); // this.validateAppropriateCheckBoxes(\"documentsUploaded\");\n          // this.validateAppropriateCheckBoxes(\"authenticationAndConsent\");\n\n          this.validateAddress(\"pincode\", this.state.address.pincode);\n          this.validateAddress(\"villageName\", this.state.address.villageName);\n          this.validateAddress(\"cityName\", this.state.address.cityName);\n          this.validateAddress(\"state\", this.state.address.state);\n          this.validateAddress(\"district\", this.state.address.district);\n          let errorsExist = true;\n          Object.values(this.state.errors).forEach(val => val.length > 0 && (errorsExist = false));\n\n          if (errorsExist) {\n            this.submitPlacementDetails();\n          } else {\n            alert('Please upload the document before clicking the checkbox!');\n          }\n        } //**If Not placed then check reason if provided then submit details else alert  */\n        else if (this.state.placementData.interviewStatus === 'Not Placed') {\n          this.validateNotPlaced(\"reason\", this.state.placementData.reason);\n          let errorsExist = true;\n          Object.values(this.state.errors).forEach(val => val.length > 0 && (errorsExist = false));\n\n          if (errorsExist) {\n            this.submitPlacementDetails();\n          } else {\n            alert('Please upload the document before clicking the checkbox!');\n          }\n        } //**If Not Interested then check if reason is family issue then check if appropriate documents are uploaded*/\n        else if (this.state.placementData.interviewStatus === 'Not Interested') {\n          this.validateNotInterested(\"reason\", this.state.placementData.reason);\n\n          if (this.state.placementData.reason == \"family issue\") {\n            this.validateNotInterested(\"familyConsent\", this.state.placementData.familyConsent); // this.validateAppropriateCheckBoxes(\"familyConsent\")\n          }\n\n          let errorsExist = true; // console.log('details ===> ', this.state.placementData)\n\n          Object.values(this.state.errors).forEach(val => val.length > 0 && (errorsExist = false));\n\n          if (errorsExist) {\n            this.submitPlacementDetails();\n          } else {\n            alert('Please upload the document before clicking the checkbox!');\n          }\n        } //**If the status is Entrepreneurship check the checkboxes for documents uploaded*/\n        else if (this.state.placementData.interviewStatus === 'Entrepreneurship') {\n          this.validateAddress(\"pincode\", this.state.address.pincode);\n          this.validateAddress(\"villageName\", this.state.address.villageName);\n          this.validateAddress(\"cityName\", this.state.address.cityName);\n          this.validateAddress(\"state\", this.state.address.state);\n          this.validateAddress(\"district\", this.state.address.district);\n          this.validateEntrepreneurship(\"noOfPeopleEmployed\", this.state.placementData.noOfPeopleEmployed); // this.validateEntrepreneurship(\"documentsUploaded\", this.state.placementData.documentsUploaded);\n\n          this.validateAppropriateCheckBoxes(\"documentsUploadedEntrepreneurship\");\n          let errorsExist = true;\n          Object.values(this.state.errors).forEach(val => val.length > 0 && (errorsExist = false));\n\n          if (errorsExist) {\n            this.submitPlacementDetails();\n          } else {\n            alert('Please upload the document before clicking the checkbox!');\n          }\n        } //**If the status us rejected then we just need to check the value reason if provided*/\n        else if (this.state.placementData.interviewStatus === 'Rejected') {\n          this.validateRejected(\"empId\", this.state.placementData.empId);\n          let errorsExist = true;\n          Object.values(this.state.errors).forEach(val => val.length > 0 && (errorsExist = false));\n\n          if (errorsExist) {\n            this.submitPlacementDetails();\n          }\n        } //**Else if nothing is from the selected try to save the data for the same if possible (this condition may not be arising ever but just in case) */\n        else {\n          this.submitPlacementDetails();\n        }\n      } //*authentication response and redirect to error or dashbaord page*/\n\n\n      this.setState({\n        errors: this.state.errors\n      });\n\n      if (checkButton(this.state.errors)) {} else {\n        this.state.disabled = true;\n      }\n    };\n\n    this.validate = (name, value) => {\n      let errors = this.state.errors;\n\n      switch (name) {\n        case 'interviewStatus':\n          errors.interviewStatus = isNotEmpty(value);\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors\n      });\n    };\n\n    this.validateNotInterested = (name, value) => {\n      let errors = this.state.errors;\n\n      switch (name) {\n        case 'reason':\n          errors.reason = isNotEmpty(value);\n          break;\n\n        case 'familyConsent':\n          {\n            if (value) {\n              // this.state.documents == \"\";\n              errors.authenticationAndConsent = \"\";\n              this.CheckForDocuments('familyConsent');\n            } else {\n              errors.authenticationAndConsent = 'Please upload the appropriate documents to continue';\n            }\n\n            break;\n          }\n\n        default:\n          break;\n      }\n    };\n\n    this.validateEntrepreneurship = (name, value) => {\n      let errors = this.state.errors;\n\n      switch (name) {\n        case 'noOfPeopleEmployed':\n          errors.noOfPeopleEmployed = isNotEmpty(value);\n          break;\n\n        case 'documentsUploaded':\n          {\n            if (value) {\n              // this.state.documents == \"\";\n              errors.documentsUploaded = \"\";\n              this.CheckForDocuments('documentsUploadedEntrepreneurship');\n            } else {\n              errors.documentsUploaded = 'Please upload the appropriate documents to continue';\n            }\n\n            break;\n          }\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors\n      });\n    };\n\n    this.validateNotPlaced = (name, value) => {\n      let errors = this.state.errors;\n\n      switch (name) {\n        case 'reason':\n          errors.reason = isNotEmpty(value);\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors\n      });\n    };\n\n    this.validateRejected = (name, value) => {\n      let errors = this.state.errors;\n\n      switch (name) {\n        case 'empId':\n          errors.empId = isNotZero(value);\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors\n      });\n    };\n\n    this.validatePlacedAndOfferNotTaken = (name, value) => {\n      let errors = this.state.errors;\n\n      switch (name) {\n        case 'empId':\n          errors.empId = isNotEmpty(value);\n          break;\n\n        case 'domainName':\n          errors.domainName = isNotEmpty(value);\n          break;\n\n        case 'spocName':\n          errors.spocName = isNotEmpty(value);\n          break;\n\n        case 'designation':\n          errors.designation = isNotEmpty(value);\n          break;\n\n        case 'spocPhoneNumber':\n          errors.spocPhoneNumber = isNotEmpty(value);\n          break;\n\n        case 'annualSal':\n          errors.annualSal = isNotEmpty(value);\n          break;\n\n        case 'offerDate':\n          errors.offerDate = isNotEmpty(value);\n          break;\n\n        case 'joiningDate':\n          errors.joiningDate = isNotEmpty(value);\n          break;\n\n        case 'joined':\n          errors.joined = isNotEmpty(value);\n          break;\n\n        case 'documentsUploaded':\n          {\n            if (value) {\n              // this.state.documents == \"\";\n              errors.documentsUploaded = \"\";\n              this.CheckForDocuments('documentsUploadedPlaced');\n            } else {\n              errors.documentsUploaded = 'Please upload the appropriate documents to continue';\n            }\n\n            break;\n          }\n\n        case 'authenticationAndConsent':\n          {\n            if (value) {\n              // this.state.documents == \"\";\n              errors.authenticationAndConsent = \"\";\n              this.CheckForDocuments('authenticationAndConsent');\n            } else {\n              errors.authenticationAndConsent = 'Please upload the appropriate documents to continue';\n            }\n\n            break;\n          }\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors\n      });\n    };\n\n    this.validateAddress = (name, value) => {\n      let errors = this.state.errors;\n\n      switch (name) {\n        case 'pincode':\n          errors.pincode = isNotEmpty(value);\n          break;\n\n        case 'villageName':\n          errors.village = isNotEmpty(value);\n          break;\n\n        case 'cityName':\n          errors.cityName = isNotEmpty(value);\n          break;\n\n        case 'state':\n          errors.state = isNotEmpty(value);\n          break;\n\n        case 'district':\n          errors.district = isNotEmpty(value);\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors\n      });\n    };\n\n    this.downloadDocuments = value => {\n      let formData = new FormData();\n      formData.append('data', '{\"token\" : \"\", \"action\" : \"downloadDocument\", \"data\" : [{\"basicDocId\":' + value + '}]}');\n      fetch(serviceEndPoint.documentServiceEndPoint, {\n        method: 'post',\n        headers: {\n          'Authorization': 'Bearer ' + UserContext.token\n        },\n        body: formData\n      }).then(response => response.json()).then(jsondata => {\n        let jsonobjects = JSON.parse(jsondata.data);\n        var url = serviceEndPoint.downloadDocument + jsonobjects[0].documentPath + \"\";\n        window.open(url, \"_blank\");\n      });\n    };\n\n    this.uploadDocuments = e => {\n      e.preventDefault();\n      var levelOfDocument = \"G\"; // console.log('dample here')\n\n      let localThis = this;\n      let reader = new FileReader();\n      reader.readAsDataURL(this.state.file);\n\n      reader.onload = function () {\n        let document = reader.result;\n        localThis.setState({\n          alertDialogFlag: false\n        });\n        uploadDocument(localThis.state.dbUserId, localThis.state.engagementId, localThis.state.typeOfDocument, 'PD', localThis.state.typeOfDocument, document, \"\").then(jsondata => {\n          //**Only if the student's data is successfully saved then display the message and update the documents list else display NOT uploaded message */\n          if (jsondata.status == \"success\") {\n            localThis.setState({\n              alertDialogFlag: false\n            });\n            alertDialogOptions.message = /*#__PURE__*/React.createElement(\"span\", {\n              style: {\n                color: \"green\"\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 966,\n                columnNumber: 40\n              }\n            }, \"Document is Saved Sucessfully\");\n            localThis.setState({\n              alertDialogFlag: true\n            });\n            localThis.getDocuments();\n          } else {\n            localThis.setState({\n              alertDialogFlag: false\n            });\n            alertDialogOptions.message = /*#__PURE__*/React.createElement(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 972,\n                columnNumber: 40\n              }\n            }, \"Document is NOT SAVED Please Check the uploaded Documents\");\n            localThis.setState({\n              alertDialogFlag: true\n            });\n          }\n        });\n      };\n    };\n\n    this.onFileChangeHandler = files => {\n      this.setState({\n        file: files[0]\n      });\n    };\n\n    console.log(props.status);\n    this.state = {\n      buttonStatus: props.status,\n      engagementId: props.engagementId,\n      alertDialogFlag: false,\n      disabled: false,\n      flag: \"0\",\n      errors: {\n        joiningDate: '',\n        offerDate: '',\n        annualSal: '',\n        spocPhoneNumber: '',\n        designation: '',\n        pincode: '',\n        noOfPeopleEmployed: '',\n        spocName: '',\n        documentsUploaded: '',\n        authenticationAndConsent: '',\n        familyConsent: '',\n        additionalDocuments: ''\n      },\n      dbUserId: props.id,\n      info: [],\n      placementData: {\n        annualSal: '0',\n        empId: 0,\n        noOfPeopleEmployed: '0',\n        joined: '',\n        spocPhoneNumber: '',\n        spocName: '',\n        designation: '',\n        domainName: '',\n        addressId: \"0\",\n        createdBy: UserContext.userid,\n        updatedBy: UserContext.userid,\n        engagementId: props.engagementId,\n        dbUserId: props.id,\n        interviewDate: \"\",\n        interviewStatus: \"\",\n        interviewRemark: \"\",\n        offerDate: \"\",\n        joiningDate: \"\",\n        isActive: \"Y\",\n        documentsUploaded: false,\n        reason: '',\n        authenticationAndConsent: false,\n        foodProvided: '',\n        accommodationProvided: '',\n        familyConsent: false\n      },\n      center: [],\n      centerData: [],\n      documents: [],\n      info: [{\n        \"createdBy\": UserContext.userid,\n        \"updatedBy\": UserContext.userid,\n        \"isActive\": \"Y\",\n        \"dbUserId\": props.id\n      }],\n      intStatus: [{\n        value: 'Placed',\n        label: 'Placed'\n      }, // { value: 'Offer Not Taken', label: 'Offer Not Taken'},\n      // { value: 'Not Placed', label: 'Not Placed' },\n      {\n        value: 'Not Interested',\n        label: 'Not Interested'\n      }, {\n        value: 'Entrepreneurship',\n        label: 'Entrepreneurship'\n      }, {\n        value: 'Self Employed',\n        label: 'Self Employed'\n      }, {\n        value: 'Rejected',\n        label: 'Rejected'\n      }],\n      // offerNotTakenReason: [\n      //   { value: 'Low salary', label: 'Low salary' },\n      //   { value: 'Migration', label: 'Migration' },\n      //   { value: 'Family problem', label: 'Family problem' },\n      //   { value: 'health issues', label: 'health issues' },\n      //   { value: 'further studies', label: 'further studies' },\n      //   { value: 'marriage', label: 'marriage' }\n      // ],\n      // notPlacedReasons: [\n      //   { value: 'Other', label: 'Other' },\n      //   { value: 'Not Interested', label: 'Not Interested' },\n      //   { value: 'Got other job', label: 'Got other job' },\n      //   { value: 'Health Issues', label: 'Health Issues' },\n      //   { value: 'Moved to other place', label: 'Moved to other place' },\n      //   { value: 'Not Eligible', label: 'Not Eligible' },\n      //   { value: 'Marriage', label: 'Marriage' },\n      //   { value: 'Higher Education', label: 'Higher Education' },\n      //   { value: 'Maternity', label: 'Maternity' }\n      // ],\n      notInterestedReason: [{\n        value: 'family issue',\n        label: 'family issue'\n      }, {\n        value: 'medical problem',\n        label: 'medical problem'\n      }, {\n        value: 'higher studies',\n        label: 'higher studies'\n      }],\n      studStatus: [{\n        value: 'Inter',\n        label: 'Inter'\n      }, {\n        value: 'Joined',\n        label: 'Joined'\n      }],\n      domains: [{\n        value: 'Agriculture',\n        label: 'Agriculture'\n      }, {\n        value: 'Apparel, made ups and Furnishing',\n        label: 'Apparel, made ups and Furnishing'\n      }, {\n        value: 'Automotive',\n        label: 'Automotive'\n      }, {\n        value: 'Beauty and Wellness',\n        label: 'Beauty and Wellness'\n      }, {\n        value: 'BFSI',\n        label: 'BFSI'\n      }, {\n        value: 'Construction',\n        label: 'Construction'\n      }, {\n        value: 'Electronics',\n        label: 'Electronics'\n      }, {\n        value: 'Furniture and Fittings',\n        label: 'Furniture and Fittings'\n      }, {\n        value: 'Healthcare',\n        label: 'Healthcare'\n      }, {\n        value: 'IT-ITeS',\n        label: 'IT-ITeS'\n      }, {\n        value: 'Management, Entrepreneurship and Preofessional Courses',\n        label: 'Management, Entrepreneurship and Preofessional Courses'\n      }, {\n        value: 'Retail',\n        label: 'Retail'\n      }, {\n        value: 'Green Jobs',\n        label: 'Green Jobs'\n      }, {\n        value: 'Telecom',\n        label: 'Telecom'\n      }, {\n        value: 'Tourism and Hospitality',\n        label: 'Tourism and Hospitality'\n      }],\n      yesOrNo: [{\n        value: 'Yes',\n        label: 'Yes'\n      }, {\n        value: 'No',\n        label: 'No'\n      }],\n      typeOfDocument: null,\n      file: null,\n      typeOfDocumentData: [{\n        value: 'Offer Letter',\n        label: 'Offer Letter'\n      }, {\n        value: 'Joining Letter',\n        label: 'Joining Letter'\n      }, {\n        value: 'Pay Slip',\n        label: 'Pay Slip'\n      }, {\n        value: 'Bank Statement',\n        label: 'Bank Statement'\n      }, {\n        value: 'Email From Employer',\n        label: 'Email From Employer'\n      }, {\n        value: 'Workplace Picture',\n        label: 'Workplace Picture'\n      }, {\n        value: 'ID card',\n        label: 'ID card'\n      }, {\n        value: 'Letter from HR',\n        label: 'Letter from HR'\n      }, {\n        value: 'Student Declaration',\n        label: 'Student Declaration'\n      }, {\n        value: 'Pic Of Business',\n        label: 'Pic Of Business'\n      }, {\n        value: 'Registration Certificate',\n        label: 'Registration Certificate'\n      }],\n      address: {\n        entityId: props.engagementId,\n        createdBy: UserContext.userid,\n        'isActive': 'Y',\n        'type': 'PD',\n        'entityType': 'S',\n        pincode: \"\",\n        addressLine1: \"\",\n        addressLine2: \"\",\n        district: \"\",\n        state: \"\",\n        cityName: \"\",\n        villageName: \"\"\n      },\n      state: [],\n      district: [],\n      pincodes: [],\n      city: [],\n      village: [],\n      engagementId: props.engagementId\n    };\n    this.formData = {\n      state: [],\n      district: [],\n      pincodes: [],\n      city: [],\n      village: []\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.getCenterMasters();\n    this.getDocuments();\n    this.validateAppropriateCheckBoxes = this.validateAppropriateCheckBoxes.bind(this);\n    this.CheckForDocuments = this.CheckForDocuments.bind(this); //alert(this.state.engagementId);\n\n    if (props.id != null && props.id != undefined) {\n      this.fetchPlacementdetailsFouUser(props.engagementId);\n    }\n  }\n\n  componentDidMount() {\n    roleBasedReadonly();\n  }\n\n  getDocuments() {\n    //**Set the state as empty or null initially to be refilled back so as not to create multiple copies of the same user Docs */\n    this.setState({\n      documents: []\n    });\n    fetchUserDocumentsByUserIdAndTypeOfDocument(this.state.dbUserId, 'PD').then(jsondata => {\n      let jsonobjects = JSON.parse(jsondata.data); // console.log(jsonobjects)\n\n      this.setState({\n        documents: [...this.state.documents, ...jsonobjects]\n      });\n    });\n  }\n\n  handleEditChange(obj) {\n    obj.familyConsent = (obj === null || obj === void 0 ? void 0 : obj.familyConsent) == \"true\" ? true : false;\n    obj.authenticationAndConsent = (obj === null || obj === void 0 ? void 0 : obj.authenticationAndConsent) == \"true\" ? true : false;\n    obj.documentsUploaded = (obj === null || obj === void 0 ? void 0 : obj.documentsUploaded) == \"true\" ? true : false; // console.log(\"placement data here ===> \", obj)\n\n    this.setState({\n      placementData: obj\n    }, () => {\n      if (this.state.placementData.interviewStatus === 'Placed' || this.state.placementData.interviewStatus === 'Offer Not Taken' || this.state.placementData.interviewStatus === 'Entrepreneurship') {\n        this.getAddressDetailsByAddressID(this.state.placementData.addressId);\n\n        if (this.state.placementData.interviewStatus === 'Placed') {\n          // console.log('check the boxes here placed')\n          if (this.state.placementData.documentsUploaded) {\n            document.getElementById('documentsUploadedPlaced').click();\n          }\n\n          if (this.state.placementData.authenticationAndConsent) {\n            document.getElementById('authenticationAndConsent').click();\n          }\n        } else if (this.state.placementData.interviewStatus === 'Entrepreneurship') {// console.log('check the boxes here entreprenerurship')\n          // if (this.state.placementData.documentsUploaded) {\n          //   document.getElementById('documentsUploadedEntrepreneurship').click();\n          // }\n        }\n      } else if (this.state.placementData.interviewStatus === 'Not Interested' && this.state.placementData.reason === \"family issue\") {\n        // console.log('check the boxes here not interested if reason is family')\n        // this.handleCheckboxChange();\n        if (this.state.placementData.familyConsent) {\n          document.getElementById('familyConsent').click();\n        }\n      }\n    });\n  }\n\n  getAddressDetailsByAddressID(addressId) {\n    fectAddressDetailsByAddressID(addressId).then(jsondata => {\n      let addressDetails = JSON.parse(jsondata.data);\n      this.setState({\n        address: addressDetails[0]\n      }, () => {\n        this.getAddressdataBasedOnPin(this.state.address.pincode);\n      });\n    });\n  }\n\n  getAddressdataBasedOnPin(pincode) {\n    fetchAddressDetailsBasedOnPincode(pincode).then(jsondata => {\n      let jsonobjects = JSON.parse(jsondata.data);\n      let taluk = [];\n      let pincode = [];\n      let cityVillage = [];\n      let states = [];\n      let district = [];\n      this.formData.village.length = 0;\n      this.formData.pincodes.length = 0;\n      this.formData.city.length = 0;\n      this.formData.state.length = 0;\n      this.formData.district.length = 0;\n      jsonobjects.map(item => {\n        cityVillage.push({\n          label: item.cityVillage,\n          value: item.id\n        });\n      });\n      cityVillage = underscore.uniq(cityVillage, true, \"label\");\n      cityVillage.map(item => {\n        this.formData.village.push({\n          label: item.label,\n          value: item.label.toString()\n        });\n      });\n      this.setState({\n        village: this.formData.village\n      });\n      jsonobjects.map(item => {\n        taluk.push({\n          label: item.taluk,\n          value: item.id\n        });\n      });\n      taluk = underscore.uniq(taluk, true, \"label\");\n      taluk.map(item => {\n        this.formData.city.push({\n          label: item.label,\n          value: item.label.toString()\n        });\n      });\n      this.setState({\n        city: this.formData.city\n      });\n      jsonobjects.map(item => {\n        states.push({\n          label: item.state,\n          value: item.id\n        });\n      });\n      states = underscore.uniq(states, true, \"label\");\n      states.map(item => {\n        this.formData.state.push({\n          label: item.label,\n          value: item.value.toString()\n        });\n      });\n      this.setState({\n        state: this.formData.state\n      }, () => {\n        /*console.log(this.state.state)*/\n      });\n      jsonobjects.map(item => {\n        district.push({\n          label: item.district,\n          value: item.id\n        });\n      });\n      district = underscore.uniq(district, true, \"label\");\n      district.map(item => {\n        this.formData.district.push({\n          label: item.label,\n          value: item.value.toString()\n        });\n      });\n      this.setState({\n        district: this.formData.district\n      });\n    });\n  }\n\n  handleSelectChangeDoc(selectname, event) {\n    this.setState({\n      [selectname]: event\n    });\n  }\n\n  handlePlacementSelectChange(selectname, event) {\n    this.setState({\n      placementData: { ...this.state.placementData,\n        [selectname]: event\n      }\n    });\n    this.validate(selectname, event);\n  }\n\n  handleSelectChange(selectname, event) {\n    let value = 0;\n    let target = null;\n\n    try {\n      target = event.target;\n      value = target.value;\n    } catch (e) {\n      value = event;\n    }\n\n    this.setState({\n      \"disabled\": false\n    });\n    this.setState({\n      placementData: { ...this.state.placementData,\n        [selectname]: event\n      }\n    });\n\n    if (this.state.placementData.interviewStatus === 'Not Placed') {\n      this.validateNotPlaced(selectname, event);\n    } else if (this.state.placementData.interviewStatus === 'Entrepreneurship') {\n      let typeOfDocumentData = [{\n        value: 'Pic Of Business',\n        label: 'Pic Of Business'\n      }, {\n        value: 'Registration Certificate',\n        label: 'Registration Certificate'\n      }];\n      this.setState({\n        typeOfDocumentData\n      });\n    } else if (this.state.placementData.interviewStatus === 'Not Interested') {\n      this.validateNotInterested(selectname, event);\n      let typeOfDocumentData = [{\n        value: 'Student Declaration',\n        label: 'Student Declaration'\n      }];\n      this.setState({\n        typeOfDocumentData\n      });\n    } else if (this.state.placementData.interviewStatus === 'Placed' || this.state.placementData.interviewStatus === 'Offer Not Taken') {\n      this.validatePlacedAndOfferNotTaken(selectname, event);\n      let typeOfDocumentData = [{\n        value: 'Offer Letter',\n        label: 'Offer Letter'\n      }, {\n        value: 'Joining Letter',\n        label: 'Joining Letter'\n      }, {\n        value: 'Pay Slip',\n        label: 'Pay Slip'\n      }, {\n        value: 'Bank Statement',\n        label: 'Bank Statement'\n      }, {\n        value: 'Email From Employer',\n        label: 'Email From Employer'\n      }, {\n        value: 'Workplace Picture',\n        label: 'Workplace Picture'\n      }, {\n        value: 'ID card',\n        label: 'ID card'\n      }, {\n        value: 'Letter from HR',\n        label: 'Letter from HR'\n      }];\n      this.setState({\n        typeOfDocumentData\n      });\n\n      if (selectname == \"joined\" && event == \"Yes\") {\n        let DocToBeChecked = ['Joining Letter', 'Pay Slip', 'Bank Statement', 'Email From Employer', 'Workplace Picture', 'ID card', 'Letter From HR'];\n        let raiseError = true;\n        DocToBeChecked.map((element, id) => {\n          this.state.documents.map((document, id) => {\n            console.log(raiseError);\n\n            if (document.documentName == element) {\n              this.state.errors.additionalDocuments = '';\n              raiseError = false;\n            } else if (element == 'Letter From HR' && raiseError) {\n              this.state.errors.additionalDocuments = 'Please upload appropriate Documents to continue';\n            }\n          });\n        });\n      }\n    } else if (this.state.placementData.interviewStatus === 'Rejected') {\n      this.validateRejected(selectname, event);\n    }\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    let value = target.value;\n    const name = target.name;\n    this.setState({\n      \"disabled\": false\n    }); //   this.setState({\n    //     errors: {\n    //       ...this.state.errors,\n    //       [name] : {\n    //         'label' : \"\" , \n    //         'value' : false\n    //       }\n    //     }\n    // });\n    //**uncomment the below if anytime joining date is needed the same as offer date**// \n    // if(name==='offerDate'){\n    //   // console.log('offer data change here')\n    //   this.state.placementData.joiningDate = value;\n    // }\n\n    this.setState({\n      placementData: { ...this.state.placementData,\n        [name]: value\n      }\n    });\n\n    if (this.state.placementData.interviewStatus === 'Entrepreneurship') {\n      this.validateEntrepreneurship(name, value);\n    } else if (this.state.placementData.interviewStatus === 'Placed' || this.state.placementData.interviewStatus === 'Offer Not Taken') {\n      this.validatePlacedAndOfferNotTaken(name, value);\n    }\n  }\n\n  CheckForDocuments(docName) {\n    this.state.documents.map((element, id) => {\n      if (element.documentType == docName) return true;else return false;\n    });\n  }\n\n  fetchPlacementdetailsFouUser(engagementId) {\n    let placementInfo = []; // console.log('point here')\n\n    fetchPlacementDetailsByEngagementId(engagementId).then(jsondata => {\n      //alert(JSON.stringify(jsondata));\n      let placementDetailsOfUser = JSON.parse(jsondata.data); // console.log('reached here')\n\n      for (var i = 0; i < placementDetailsOfUser.length; i++) {\n        var details = {\n          // 'employer_name':placementDetailsOfUser[i].employerName, \n          'interview_status': placementDetailsOfUser[i].interviewStatus,\n          'Reason': placementDetailsOfUser[i].reason,\n          'annual_sal': placementDetailsOfUser[i].annualSal,\n          'action': /*#__PURE__*/React.createElement(EditIcon, {\n            style: {\n              color: \"blue\"\n            },\n            onClick: this.handleEditChange.bind(this, placementDetailsOfUser[i]),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 21\n            }\n          })\n        }; // console.log('placement details here ===> ', placementDetailsOfUser[i])\n\n        placementInfo.push(details);\n      } // console.log('plcament Info ===> ', placementInfo)\n\n\n      this.setState({\n        info: placementInfo\n      });\n    });\n  }\n\n  getCenterMasters(ids) {\n    //** Fetch employer details based on placement partner*//\n    fetchEmployerDetails('Active Partner', '%Placement Partner%').then(jsondata => {\n      // console.log(\"employer data ===> \",jsondata)\n      if (jsondata.appError == null) {\n        let jsonObjects = JSON.parse(jsondata.data);\n        jsonObjects.map(item => {\n          this.state.center.push({\n            label: item.accountName,\n            value: item.id\n          });\n        });\n      }\n\n      return true;\n    }).then(response => response);\n  }\n\n  handleAddressInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      address: { ...this.state.address,\n        [name]: value\n      }\n    });\n    this.validate(name, value);\n  }\n\n  handleAddressSelectChange(selectname, event) {\n    this.setState({\n      address: { ...this.state.address,\n        [selectname]: event\n      }\n    });\n    this.validateAddress(selectname, event);\n  }\n\n  handleTypeOfProofSelectChange(selectname, event) {\n    let newVal = event;\n    let stateVal = this.state.documentType;\n    stateVal.indexOf(newVal) === -1 ? stateVal.push(newVal) : stateVal.length === 1 ? stateVal = [] : stateVal.splice(stateVal.indexOf(newVal), 1);\n    this.setState({\n      documentType: stateVal\n    });\n  }\n\n  getPincodeData(selectname, event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      address: { ...this.state.address,\n        [name]: value\n      }\n    });\n    this.validateAddress(name, value);\n\n    if (value.length == 6) {\n      fetchAddressDetailsBasedOnPincode(value).then(jsondata => {\n        let jsonobjects = JSON.parse(jsondata.data);\n        let taluk = [];\n        let pincode = [];\n        let cityVillage = [];\n        let states = [];\n        let district = [];\n        this.formData.village.length = 0;\n        this.formData.pincodes.length = 0;\n        this.formData.city.length = 0;\n        this.formData.state.length = 0;\n        this.formData.district.length = 0;\n        jsonobjects.map(item => {\n          cityVillage.push({\n            label: item.cityVillage,\n            value: item.id\n          });\n        });\n        cityVillage = underscore.uniq(cityVillage, true, \"label\");\n        cityVillage.map(item => {\n          this.formData.village.push({\n            label: item.label,\n            value: item.label.toString()\n          });\n        });\n        this.setState({\n          village: this.formData.village\n        });\n        jsonobjects.map(item => {\n          taluk.push({\n            label: item.taluk,\n            value: item.id\n          });\n        });\n        taluk = underscore.uniq(taluk, true, \"label\");\n        taluk.map(item => {\n          this.formData.city.push({\n            label: item.label,\n            value: item.label.toString()\n          });\n        });\n        this.setState({\n          city: this.formData.city\n        });\n        jsonobjects.map(item => {\n          states.push({\n            label: item.state,\n            value: item.id\n          });\n        });\n        states = underscore.uniq(states, true, \"label\");\n        states.map(item => {\n          this.formData.state.push({\n            label: item.label,\n            value: item.value.toString()\n          });\n        });\n        this.setState({\n          state: this.formData.state\n        }, () => {\n          /*console.log(this.state.state)*/\n        });\n        jsonobjects.map(item => {\n          district.push({\n            label: item.district,\n            value: item.id\n          });\n        });\n        district = underscore.uniq(district, true, \"label\");\n        district.map(item => {\n          this.formData.district.push({\n            label: item.label,\n            value: item.value.toString()\n          });\n        });\n        this.setState({\n          district: this.formData.district\n        });\n      });\n    }\n  }\n\n  submitPlacementDetails() {\n    if (this.state.placementData.interviewStatus === 'Placed' || this.state.placementData.interviewStatus === 'Offer Not Taken' || this.state.placementData.interviewStatus === 'Entrepreneurship') {\n      // console.log(\" checkpoint 2 \")\n      saveAddressDetails(JSON.stringify(this.state.address)).then(jsondata => {\n        let jsonobjects = JSON.parse(jsondata.data); //alert(jsonobjects[0].id);\n\n        this.setState({\n          placementData: { ...this.state.placementData,\n            'addressId': jsonobjects[0].id\n          }\n        }, () => {\n          this.saveAllDetails();\n        });\n        this.setState({\n          alertDialogFlag: false\n        });\n        alertDialogOptions.message = /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"green\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1052,\n            columnNumber: 38\n          }\n        }, \"Placement Details Saved Sucessfully\");\n        this.setState({\n          alertDialogFlag: true\n        });\n      });\n    } else {\n      this.saveAllDetails();\n    }\n  }\n\n  saveAllDetails() {\n    // console.log(\" checkpoint 3 \")\n    // console.log(this.state.placementData)\n    savePlacementDetails(this.state.placementData).then(jsondata => {\n      this.fetchPlacementdetailsFouUser(this.state.engagementId);\n\n      if (jsondata.appError == null || jsondata.status == 'success') {\n        let jsonobjects = JSON.parse(jsondata.data); //alert(JSON.stringify(jsonobjects));   \n        // console.log(jsonobjects);\n\n        this.setState({\n          alertDialogFlag: false\n        });\n        alertDialogOptions.message = /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"green\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1072,\n            columnNumber: 38\n          }\n        }, \"Placement Details Saved Sucessfully\");\n        this.setState({\n          alertDialogFlag: true\n        });\n      } else {\n        // console.log('error')\n        this.setState({\n          alertDialogFlag: false\n        });\n        alertDialogOptions.message = /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1079,\n            columnNumber: 38\n          }\n        }, \"Please upload the appropriate documents for saving the placement details!\");\n        this.setState({\n          alertDialogFlag: true\n        });\n      }\n    });\n  }\n\n  render() {\n    const columns = [{\n      label: 'Interview Status',\n      name: 'interview_status',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Reason',\n      name: 'Reason',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Annual Salary',\n      name: 'annual_sal',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Action',\n      name: 'action',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }];\n    const options = {\n      filterType: \"dropdown\",\n      responsive: \"stacked\",\n      sortDirection: \"desc\",\n      selectableRows: 'single',\n      disableToolbarSelect: true,\n      rowsPerPage: 10,\n      selectableRowsOnClick: true\n    };\n    let button;\n    button = /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-end\",\n      id: \"btn\",\n      alignItems: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1109,\n        columnNumber: 14\n      }\n    }, \"  \", /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      type: \"submit\",\n      size: \"small\",\n      color: \"primary\",\n      disabled: this.state.buttonStatus == \"Enrolled\" ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1109,\n        columnNumber: 98\n      }\n    }, \"Save\"));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1115,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.mySubmitHandler,\n      method: \"post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1116,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      id: \"roleBasedDisable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1117,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1118,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"interviewStatus\",\n      id: \"interviewStatus\",\n      label: \"Interview Status\",\n      onChange: this.handlePlacementSelectChange.bind(this, 'interviewStatus'),\n      value: this.state.placementData.interviewStatus || '',\n      helperText: this.state.errors.interviewStatus,\n      error: this.state.errors.interviewStatus === '' ? false : true,\n      options: this.state.intStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1119,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: this.state.placementData.interviewStatus === \"Placed\" || this.state.placementData.interviewStatus === \"Offer Not Taken\" ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1127,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      id: \"hideData\",\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1128,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1129,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1130,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1133,\n        columnNumber: 17\n      }\n    }), this.state.placementData.interviewStatus === \"Offer Not Taken\" && /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1137,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"reason\",\n      id: \"reason\",\n      label: \"Reason\",\n      onChange: this.handleSelectChange.bind(this, 'reason'),\n      value: this.state.placementData.reason || '',\n      options: this.state.offerNotTakenReason,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1138,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1148,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"empId\",\n      id: \"empId\",\n      label: \"employerName\",\n      onChange: this.handleSelectChange.bind(this, 'empId'),\n      value: this.state.placementData.empId || '',\n      helperText: this.state.errors.empId,\n      error: this.state.errors.empId === '' ? false : true,\n      options: this.state.center,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1149,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1158,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"domainName\",\n      id: \"domainName\",\n      label: \"Domain\",\n      onChange: this.handleSelectChange.bind(this, 'domainName'),\n      value: this.state.placementData.domainName || '',\n      helperText: this.state.errors.domainName,\n      error: this.state.errors.domainName === '' ? false : true,\n      options: this.state.domains,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1159,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      id: \"interviewRemark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1167,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1168,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      name: \"spocName\",\n      id: \"spocName\",\n      label: \"supervisor/SPOC name employer\",\n      onChange: this.handleInputChange,\n      value: this.state.placementData.spocName || '',\n      helperText: this.state.errors.spocName,\n      error: this.state.errors.spocName === '' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1169,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      id: \"interviewRemark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1178,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1179,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      name: \"designation\",\n      id: \"designation\",\n      label: \"Designation\",\n      onChange: this.handleInputChange,\n      value: this.state.placementData.designation || '',\n      helperText: this.state.errors.designation,\n      error: this.state.errors.designation === '' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1180,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      id: \"interviewRemark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1189,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1190,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"number\",\n      name: \"spocPhoneNumber\",\n      id: \"spocPhoneNumber\",\n      label: \"SPOC phone NO.\",\n      onInput: e => {\n        e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 10);\n      },\n      onChange: this.handleInputChange,\n      value: this.state.placementData.spocPhoneNumber || '',\n      helperText: this.state.errors.spocPhoneNumber,\n      error: this.state.errors.spocPhoneNumber === '' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1191,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      id: \"annualSal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1241,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1242,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"number\",\n      name: \"annualSal\",\n      id: \"annualSal\",\n      label: \"Monthly Gross Salary\",\n      helperText: this.state.errors.annualSal,\n      error: this.state.errors.annualSal === '' ? false : true,\n      onChange: this.handleInputChange,\n      value: this.state.placementData.annualSal || '',\n      onInput: e => {\n        e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 6);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1243,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      id: \"offerDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1273,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"date\",\n      name: \"offerDate\",\n      id: \"offerDate\",\n      onChange: this.handleInputChange,\n      label: \"Offer Date\",\n      value: this.state.placementData.offerDate || '',\n      helperText: this.state.errors.offerDate,\n      error: this.state.errors.offerDate === '' ? false : true,\n      type: \"date\",\n      inputProps: {\n        max: new Date().toISOString().slice(0, 10)\n      },\n      InputLabelProps: {\n        shrink: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1274,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1300,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"joined\",\n      id: \"joined\",\n      label: \"Joined\",\n      onChange: this.handleSelectChange.bind(this, 'joined'),\n      value: this.state.placementData.joined || '',\n      options: this.state.yesOrNo,\n      helperText: this.state.errors.joined,\n      error: this.state.errors.joined === '' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1301,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1309,\n        columnNumber: 17\n      }\n    }, this.state.errors.additionalDocuments || ''), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1313,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"accommodationProvided\",\n      id: \"accommodationProvided\",\n      label: \"Accommodation Provided\",\n      onChange: this.handleSelectChange.bind(this, 'accommodationProvided'),\n      value: this.state.placementData.accommodationProvided || '',\n      options: this.state.yesOrNo,\n      helperText: this.state.errors.joined,\n      error: this.state.errors.joined === '' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1314,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1324,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"foodProvided\",\n      id: \"foodProvided\",\n      label: \"Food Provided\",\n      onChange: this.handleSelectChange.bind(this, 'foodProvided'),\n      value: this.state.placementData.foodProvided || '',\n      options: this.state.yesOrNo,\n      helperText: this.state.errors.joined,\n      error: this.state.errors.joined === '' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1325,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1336,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1337,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      style: {\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1338,\n        columnNumber: 21\n      }\n    }, \"Job Location\"))), /*#__PURE__*/React.createElement(AddressForPlacement, {\n      pincodeName: \"pincode\",\n      pincodeId: \"pincode\",\n      pincodeOnChange: this.getPincodeData.bind(this, 'pincode'),\n      pincodeValue: this.state.address.pincode || '',\n      pincodeHelperText: this.state.errors.pincode,\n      pincodeError: this.state.errors.pincode == '' ? false : true,\n      villageName: \"villageName\",\n      villageId: \"villageName\",\n      villageInputValue: this.handleAddressSelectChange.bind(this, 'villageName'),\n      villageData: this.state.village,\n      villageValue: this.state.address.villageName || '',\n      villageHelperText: this.state.errors.village,\n      villageError: this.state.errors.village == '' ? false : true,\n      cityName: \"cityName\",\n      cityId: \"cityName\",\n      cityValue: this.state.address.cityName || '',\n      cityData: this.state.city,\n      cityInputValue: this.handleAddressSelectChange.bind(this, 'cityName'),\n      cityNameHelperText: this.state.errors.cityName,\n      cityNameError: this.state.errors.cityName == '' ? false : true,\n      stateName: \"state\",\n      stateId: \"state\",\n      stateData: this.state.state,\n      stateValue: this.state.address.state || '',\n      stateInputValue: this.handleAddressSelectChange.bind(this, 'state'),\n      stateHelperText: this.state.errors.state,\n      stateError: this.state.errors.state == '' ? false : true,\n      districtName: \"district\",\n      districtId: \"district\",\n      districtValue: this.state.address.district || '',\n      districtData: this.state.district,\n      districtInputValue: this.handleAddressSelectChange.bind(this, 'district'),\n      districtHelperText: this.state.errors.district,\n      districtError: this.state.errors.district == '' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1344,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1353,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        onChange: this.handleCheckboxChange,\n        name: \"documentsUploaded\",\n        id: \"documentsUploadedPlaced\",\n        color: \"primary\" // checked={(this.state.placementData.documentsUploaded == \"true\" || this.state.placementData.documentsUploaded) ? true : false}\n        // required={true}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1356,\n          columnNumber: 23\n        }\n      }),\n      label: \"I have uploaded appropriate Evidence\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1354,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1367,\n        columnNumber: 19\n      }\n    }, this.state.errors.documentsUploaded || ''), /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        onChange: this.handleCheckboxChange,\n        name: \"authenticationAndConsent\",\n        id: \"authenticationAndConsent\",\n        color: \"primary\" // value={(this.state.placementData.authenticationAndConsent == \"true\" || this.state.placementData.authenticationAndConsent) ? true : false}\n        // required={true}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1373,\n          columnNumber: 23\n        }\n      }),\n      label: \"Have gone though the placement evidence and Authentic for both data and evidence\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1371,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1384,\n        columnNumber: 19\n      }\n    }, this.state.errors.authenticationAndConsent || '')), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1390,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"notPlaced\",\n      style: {\n        display: this.state.placementData.interviewStatus === \"Not Placed\" ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1397,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1398,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1399,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1400,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1403,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1404,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"reason\",\n      id: \"reason\",\n      label: \"Reason\",\n      onChange: this.handleSelectChange.bind(this, 'reason'),\n      value: this.state.placementData.reason || '',\n      options: this.state.notPlacedReasons,\n      helperText: this.state.errors.reason,\n      error: this.state.errors.reason === '' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1405,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"notInterested\",\n      style: {\n        display: this.state.placementData.interviewStatus === \"Not Interested\" ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1416,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1417,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1418,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1419,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1422,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1423,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"reason\",\n      id: \"reason\",\n      label: \"Reason\",\n      onChange: this.handleSelectChange.bind(this, 'reason'),\n      value: this.state.placementData.reason || '',\n      options: this.state.notInterestedReason,\n      helperText: this.state.errors.reason,\n      error: this.state.errors.reason === '' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1424,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1433,\n        columnNumber: 17\n      }\n    }, this.state.placementData.reason == \"family issue\" && /*#__PURE__*/React.createElement(FormControlLabel //incase only family issue\n    , {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        onChange: this.handleCheckboxChange,\n        name: \"familyConsent\",\n        id: \"familyConsent\",\n        color: \"primary\" // checked={(this.state.placementData.familyConsent == \"true\" || this.state.placementData.familyConsent) ? true : false}\n        // required={true}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1439,\n          columnNumber: 29\n        }\n      }),\n      label: \"Spoken to parents/ guardian \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1436,\n        columnNumber: 80\n      }\n    })), /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1454,\n        columnNumber: 23\n      }\n    }, this.state.errors.familyConsent || ''))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"entrepreneurship\",\n      style: {\n        display: this.state.placementData.interviewStatus === \"Entrepreneurship\" ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1461,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1462,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1463,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1464,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1467,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1469,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"domainName\",\n      id: \"domainName\",\n      label: \"Domain\",\n      onChange: this.handleSelectChange.bind(this, 'domainName'),\n      value: this.state.placementData.domainName || '',\n      options: this.state.domains,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1470,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      id: \"studentRemark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1475,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1476,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      name: \"noOfPeopleEmployed\",\n      id: \"noOfPeopleEmployed\",\n      label: \"No. of people employed\",\n      helperText: this.state.errors.noOfPeopleEmployed,\n      error: this.state.errors.noOfPeopleEmployed === '' ? false : true,\n      onChange: this.handleInputChange,\n      value: this.state.placementData.noOfPeopleEmployed || '',\n      onInput: e => {\n        e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 10);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1477,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1486,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1487,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      style: {\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1488,\n        columnNumber: 21\n      }\n    }, \"Job Location\"))), /*#__PURE__*/React.createElement(AddressForPlacement, {\n      pincodeName: \"pincode\",\n      pincodeId: \"pincode\",\n      pincodeOnChange: this.getPincodeData.bind(this, 'pincode'),\n      pincodeValue: this.state.address.pincode || '',\n      pincodeHelperText: this.state.errors.pincode,\n      pincodeError: this.state.errors.pincode == '' ? false : true,\n      villageName: \"villageName\",\n      villageId: \"villageName\",\n      villageInputValue: this.handleAddressSelectChange.bind(this, 'villageName'),\n      villageData: this.state.village,\n      villageValue: this.state.address.villageName || '',\n      villageHelperText: this.state.errors.village,\n      villageError: this.state.errors.village == '' ? false : true,\n      cityName: \"cityName\",\n      cityId: \"cityName\",\n      cityValue: this.state.address.cityName || '',\n      cityData: this.state.city,\n      cityInputValue: this.handleAddressSelectChange.bind(this, 'cityName'),\n      cityNameHelperText: this.state.errors.cityName,\n      cityNameError: this.state.errors.cityName == '' ? false : true,\n      stateName: \"stateName\",\n      stateId: \"stateName\",\n      stateData: this.state.state,\n      stateValue: this.state.address.state || '',\n      stateInputValue: this.handleAddressSelectChange.bind(this, 'state'),\n      stateHelperText: this.state.errors.state,\n      stateError: this.state.errors.state == '' ? false : true,\n      districtName: \"district\",\n      districtId: \"district\",\n      districtValue: this.state.address.district || '',\n      districtData: this.state.district,\n      districtInputValue: this.handleAddressSelectChange.bind(this, 'district'),\n      districtHelperText: this.state.errors.district,\n      districtError: this.state.errors.district == '' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1491,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1499,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        onChange: this.handleCheckboxChange,\n        name: \"documentsUploaded\",\n        id: \"documentsUploadedEntrepreneurship\",\n        color: \"primary\" // value={(this.state.placementData.documentsUploaded == \"true\" || this.state.placementData.documentsUploaded) ? true : false}\n        // required={true}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1502,\n          columnNumber: 23\n        }\n      }),\n      label: \"I have uploaded appropriate Evidence\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1500,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1513,\n        columnNumber: 19\n      }\n    }, this.state.errors.documentsUploaded || '')), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1517,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"selfemployedform\",\n      style: {\n        display: this.state.placementData.interviewStatus === \"Self Employed\" ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1525,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: this.state.placementData.interviewStatus === \"Rejected\" ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1531,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      id: \"hideData\",\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1532,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1533,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1534,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1537,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1539,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"empId\",\n      id: \"empId\",\n      label: \"employerName\",\n      onChange: this.handleSelectChange.bind(this, 'empId'),\n      value: this.state.placementData.empId || '',\n      helperText: this.state.errors.empId,\n      error: this.state.errors.empId === '' ? false : true,\n      options: this.state.center,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1540,\n        columnNumber: 19\n      }\n    })))), button)), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.uploadDocuments,\n      method: \"post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1559,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      \"aria-label\": \"simple table\",\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1560,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1561,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1562,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        width: \"25%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1563,\n        columnNumber: 17\n      }\n    }, \"Type of Document\"), /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        width: \"20%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1565,\n        columnNumber: 17\n      }\n    }, \"Browse and Upload\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1568,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      style: {\n        color: \"GrayText\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1569,\n        columnNumber: 13\n      }\n    }, \"*Note : After Uploading the document if the checkbox still does not works, return to the screen after visiting some other screen!\"), /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1572,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1573,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      isClearable: true,\n      name: \"typeOfDocument\",\n      id: \"typeOfDocument\",\n      options: this.state.typeOfDocumentData,\n      onChange: this.handleSelectChangeDoc.bind(this, 'typeOfDocument'),\n      value: this.state.typeOfDocument || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1575,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1583,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DropzoneArea, {\n      name: \"file\",\n      id: \"file\",\n      maxFileSize: 200000,\n      filesLimit: 1,\n      showFileNames: true,\n      onChange: this.onFileChangeHandler // key={this.state.clearDropzoneArea}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1584,\n        columnNumber: 19\n      }\n    }))))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-end\",\n      alignItems: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1594,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"small\",\n      disabled: this.state.file == null || this.state.typeOfDocument == '' ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1595,\n        columnNumber: 13\n      }\n    }, \"Upload Document\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1603,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1603,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1603,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1603,\n        columnNumber: 36\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1603,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1603,\n        columnNumber: 54\n      }\n    }), /*#__PURE__*/React.createElement(MUIDataTable, {\n      id: \"dtb\",\n      title: \"List Of Placement Details\",\n      label: \"List of Placement Details \",\n      columns: columns,\n      data: this.state.info,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1604,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1606,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1606,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(InputLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1607,\n        columnNumber: 9\n      }\n    }, \"List Of Uploaded Document\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1608,\n        columnNumber: 9\n      }\n    }), this.state.documents != \"\" && /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1612,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      \"aria-label\": \"simple table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1613,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1614,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1615,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1616,\n        columnNumber: 19\n      }\n    }, \"Created On\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1617,\n        columnNumber: 19\n      }\n    }, \"Document Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1618,\n        columnNumber: 19\n      }\n    }, \"File Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1619,\n        columnNumber: 19\n      }\n    }, \"Download\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1620,\n        columnNumber: 19\n      }\n    }, \"Delete\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1623,\n        columnNumber: 15\n      }\n    }, this.state.documents.map(row => /*#__PURE__*/React.createElement(TableRow, {\n      key: row.basicDocId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1625,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1626,\n        columnNumber: 21\n      }\n    }, row.createdOn), /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1630,\n        columnNumber: 21\n      }\n    }, row.documentName), /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1633,\n        columnNumber: 21\n      }\n    }, row.documentPath.split(\"/\")[1]), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1636,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"small\",\n      name: \"download\",\n      id: \"download\",\n      onClick: this.downloadDocuments.bind(this, row.basicDocId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1637,\n        columnNumber: 23\n      }\n    }, \"Download\")), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1643,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"small\",\n      name: \"delete\",\n      id: \"delete\",\n      onClick: this.deleteDocument.bind(this, row.basicDocId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1644,\n        columnNumber: 23\n      }\n    }, \"Delete\"))))))), this.state.alertDialogFlag && /*#__PURE__*/React.createElement(AlertDialog, {\n      message: alertDialogOptions.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1660,\n        columnNumber: 43\n      }\n    }));\n  }\n\n}\n\nexport default PlacementDetails;","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/PlacementDetails.js"],"names":["React","Component","render","SingleSelect","callMerge","UserContext","FormControl","InputLabel","FormControlLabel","Input","Grid","RadioGroup","Radio","TextField","Button","isNotEmpty","isNotZero","roleBasedReadonly","checkButton","AlertDialog","Paper","savePlacementDetails","deleteDocumentById","fetchUserDocumentsByUserIdAndTypeOfDocument","fectAddressDetailsByAddressID","fetchAddressDetailsBasedOnPincode","fetchPlacementDetailsByEngagementId","fetchAllCenter","saveAddressDetails","uploadDocument","fetchEmployerDetails","MUIDataTable","AddressForPlacement","underscore","Table","TableBody","TableCell","TableHead","TableRow","DropzoneArea","EditIcon","serviceEndPoint","Checkbox","Label","alertDialogOptions","message","PlacementDetails","constructor","props","handleChange","event","target","value","name","setState","placementData","state","deleteDocument","basicDocId","then","jsondata","status","data","JSON","parse","getDocuments","alertDialogFlag","color","handleCheckboxChange","idName","id","console","log","validateAppropriateCheckBoxes","checked","errors","documents","length","docList","map","element","ans","CheckForDocuments","documentsUploaded","authenticationAndConsent","mySubmitHandler","preventDefault","disabled","validate","interviewStatus","validatePlacedAndOfferNotTaken","empId","domainName","spocName","designation","spocPhoneNumber","annualSal","offerDate","joined","validateAddress","address","pincode","villageName","cityName","district","errorsExist","Object","values","forEach","val","submitPlacementDetails","alert","validateNotPlaced","reason","validateNotInterested","familyConsent","validateEntrepreneurship","noOfPeopleEmployed","validateRejected","joiningDate","village","downloadDocuments","formData","FormData","append","fetch","documentServiceEndPoint","method","headers","token","body","response","json","jsonobjects","url","downloadDocument","documentPath","window","open","uploadDocuments","e","levelOfDocument","localThis","reader","FileReader","readAsDataURL","file","onload","document","result","dbUserId","engagementId","typeOfDocument","onFileChangeHandler","files","buttonStatus","flag","additionalDocuments","info","addressId","createdBy","userid","updatedBy","interviewDate","interviewRemark","isActive","foodProvided","accommodationProvided","center","centerData","intStatus","label","notInterestedReason","studStatus","domains","yesOrNo","typeOfDocumentData","entityId","addressLine1","addressLine2","pincodes","city","handleInputChange","bind","getCenterMasters","undefined","fetchPlacementdetailsFouUser","componentDidMount","handleEditChange","obj","getAddressDetailsByAddressID","getElementById","click","addressDetails","getAddressdataBasedOnPin","taluk","cityVillage","states","item","push","uniq","toString","handleSelectChangeDoc","selectname","handlePlacementSelectChange","handleSelectChange","DocToBeChecked","raiseError","documentName","docName","documentType","placementInfo","placementDetailsOfUser","i","details","ids","appError","jsonObjects","accountName","handleAddressInputChange","handleAddressSelectChange","handleTypeOfProofSelectChange","newVal","stateVal","indexOf","splice","getPincodeData","stringify","saveAllDetails","columns","headerStyle","options","filterType","responsive","sortDirection","selectableRows","disableToolbarSelect","rowsPerPage","selectableRowsOnClick","button","width","display","offerNotTakenReason","Math","max","parseInt","slice","Date","toISOString","shrink","fontWeight","notPlacedReasons","row","createdOn","split"],"mappings":"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","sourcesContent":["/*!\r\n\r\n=========================================================\r\n* Material Dashboard React - v1.8.0\r\n=========================================================\r\n\r\n\r\n* Coded by Ashish S\r\n\r\n=========================================================\r\n\r\n\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport { render } from \"react-dom\";\r\nimport './../App.css';\r\nimport './../assets/css/login-style.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { SingleSelect } from \"react-select-material-ui\";\r\nimport callMerge from 'material-ui/svg-icons/communication/call-merge';\r\nimport UserContext from '../components/GolbalContext'\r\nimport { FormControl, InputLabel, FormControlLabel, Input, Grid, RadioGroup, Radio, TextField } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport { isNotEmpty, isNotZero } from './../util/validation';\r\nimport { roleBasedReadonly, checkButton } from '../util/validation';\r\nimport AlertDialog from '../util/AlertDialog';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { savePlacementDetails, deleteDocumentById, fetchUserDocumentsByUserIdAndTypeOfDocument, fectAddressDetailsByAddressID, fetchAddressDetailsBasedOnPincode, fetchPlacementDetailsByEngagementId, fetchAllCenter, saveAddressDetails, uploadDocument, fetchEmployerDetails } from '../util/api';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport AddressForPlacement from \"./AddressForPlacement\";\r\nimport underscore from 'underscore';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { serviceEndPoint } from '../util/serviceEndPoint';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Label } from 'recharts';\r\n\r\n\r\nconst alertDialogOptions = {\r\n  message: ''\r\n}\r\n\r\nclass PlacementDetails extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props.status);\r\n    this.state = {\r\n      buttonStatus: props.status,\r\n      engagementId: props.engagementId, alertDialogFlag: false, disabled: false, flag: \"0\", errors: { joiningDate: '', offerDate: '', annualSal: '', spocPhoneNumber: '', designation: '', pincode: '', noOfPeopleEmployed: '', spocName: '', documentsUploaded: '', authenticationAndConsent: '', familyConsent: '', additionalDocuments: '' }, dbUserId: props.id, info: [],\r\n      placementData: {\r\n        annualSal: '0', empId: 0, noOfPeopleEmployed: '0', joined: '', spocPhoneNumber: '', spocName: '', designation: '', domainName: '', addressId: \"0\", createdBy: UserContext.userid, updatedBy: UserContext.userid, engagementId: props.engagementId, dbUserId: props.id, interviewDate: \"\",\r\n        interviewStatus: \"\", interviewRemark: \"\", offerDate: \"\", joiningDate: \"\", isActive: \"Y\", documentsUploaded: false, reason: '', authenticationAndConsent: false, foodProvided: '', accommodationProvided: '', familyConsent: false,\r\n      }, center: [], centerData: [], documents: [],\r\n      info: [{ \"createdBy\": UserContext.userid, \"updatedBy\": UserContext.userid, \"isActive\": \"Y\", \"dbUserId\": props.id }],\r\n      intStatus: [\r\n        { value: 'Placed', label: 'Placed' },\r\n        // { value: 'Offer Not Taken', label: 'Offer Not Taken'},\r\n        // { value: 'Not Placed', label: 'Not Placed' },\r\n        { value: 'Not Interested', label: 'Not Interested' },\r\n        { value: 'Entrepreneurship', label: 'Entrepreneurship' },\r\n        { value: 'Self Employed', label: 'Self Employed' },\r\n        { value: 'Rejected', label: 'Rejected' }\r\n      ],\r\n      // offerNotTakenReason: [\r\n      //   { value: 'Low salary', label: 'Low salary' },\r\n      //   { value: 'Migration', label: 'Migration' },\r\n      //   { value: 'Family problem', label: 'Family problem' },\r\n      //   { value: 'health issues', label: 'health issues' },\r\n      //   { value: 'further studies', label: 'further studies' },\r\n      //   { value: 'marriage', label: 'marriage' }\r\n      // ],\r\n      // notPlacedReasons: [\r\n      //   { value: 'Other', label: 'Other' },\r\n      //   { value: 'Not Interested', label: 'Not Interested' },\r\n      //   { value: 'Got other job', label: 'Got other job' },\r\n      //   { value: 'Health Issues', label: 'Health Issues' },\r\n      //   { value: 'Moved to other place', label: 'Moved to other place' },\r\n      //   { value: 'Not Eligible', label: 'Not Eligible' },\r\n      //   { value: 'Marriage', label: 'Marriage' },\r\n      //   { value: 'Higher Education', label: 'Higher Education' },\r\n      //   { value: 'Maternity', label: 'Maternity' }\r\n      // ],\r\n      notInterestedReason: [\r\n        { value: 'family issue', label: 'family issue' },\r\n        { value: 'medical problem', label: 'medical problem' },\r\n        { value: 'higher studies', label: 'higher studies' }\r\n      ],\r\n      studStatus: [\r\n        { value: 'Inter', label: 'Inter' },\r\n        { value: 'Joined', label: 'Joined' }\r\n\r\n      ],\r\n      domains: [\r\n        { value: 'Agriculture', label: 'Agriculture' },\r\n        { value: 'Apparel, made ups and Furnishing', label: 'Apparel, made ups and Furnishing' },\r\n        { value: 'Automotive', label: 'Automotive' },\r\n        { value: 'Beauty and Wellness', label: 'Beauty and Wellness' },\r\n        { value: 'BFSI', label: 'BFSI' },\r\n        { value: 'Construction', label: 'Construction' },\r\n        { value: 'Electronics', label: 'Electronics' },\r\n        { value: 'Furniture and Fittings', label: 'Furniture and Fittings' },\r\n        { value: 'Healthcare', label: 'Healthcare' },\r\n        { value: 'IT-ITeS', label: 'IT-ITeS' },\r\n        { value: 'Management, Entrepreneurship and Preofessional Courses', label: 'Management, Entrepreneurship and Preofessional Courses' },\r\n        { value: 'Retail', label: 'Retail' },\r\n        { value: 'Green Jobs', label: 'Green Jobs' },\r\n        { value: 'Telecom', label: 'Telecom' },\r\n        { value: 'Tourism and Hospitality', label: 'Tourism and Hospitality' }\r\n      ],\r\n      yesOrNo: [\r\n        { value: 'Yes', label: 'Yes' },\r\n        { value: 'No', label: 'No' }\r\n      ],\r\n      typeOfDocument: null, file: null,\r\n      typeOfDocumentData: [\r\n        { value: 'Offer Letter', label: 'Offer Letter' },\r\n        { value: 'Joining Letter', label: 'Joining Letter' },\r\n        { value: 'Pay Slip', label: 'Pay Slip' },\r\n        { value: 'Bank Statement', label: 'Bank Statement' },\r\n        { value: 'Email From Employer', label: 'Email From Employer' },\r\n        { value: 'Workplace Picture', label: 'Workplace Picture' },\r\n        { value: 'ID card', label: 'ID card' },\r\n        { value: 'Letter from HR', label: 'Letter from HR' },\r\n        { value: 'Student Declaration', label: 'Student Declaration' },\r\n        { value: 'Pic Of Business', label: 'Pic Of Business' },\r\n        { value: 'Registration Certificate', label: 'Registration Certificate' }\r\n      ],\r\n      address: { entityId: props.engagementId, createdBy: UserContext.userid, 'isActive': 'Y', 'type': 'PD', 'entityType': 'S', pincode: \"\", addressLine1: \"\", addressLine2: \"\", district: \"\", state: \"\", cityName: \"\", villageName: \"\" }, state: [], district: [], pincodes: [], city: [], village: [], engagementId: props.engagementId\r\n    };\r\n    this.formData = { state: [], district: [], pincodes: [], city: [], village: [] };\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.getCenterMasters();\r\n    this.getDocuments();\r\n    this.validateAppropriateCheckBoxes = this.validateAppropriateCheckBoxes.bind(this);\r\n    this.CheckForDocuments = this.CheckForDocuments.bind(this);\r\n    //alert(this.state.engagementId);\r\n    if (props.id != null && props.id != undefined) {\r\n\r\n      this.fetchPlacementdetailsFouUser(props.engagementId);\r\n    }\r\n\r\n\r\n  }\r\n  componentDidMount() {\r\n    roleBasedReadonly();\r\n  }\r\n\r\n\r\n\r\n  handleChange = (event) => {\r\n    const target = event.target;\r\n    let value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      placementData: {\r\n\r\n        ...this.state.placementData\r\n      }\r\n\r\n    });\r\n\r\n  };\r\n\r\n  getDocuments() {\r\n    //**Set the state as empty or null initially to be refilled back so as not to create multiple copies of the same user Docs */\r\n    this.setState({ documents: [] })\r\n    fetchUserDocumentsByUserIdAndTypeOfDocument(this.state.dbUserId, 'PD').then((jsondata) => {\r\n      let jsonobjects = JSON.parse(jsondata.data);\r\n      // console.log(jsonobjects)\r\n      this.setState({ documents: [...this.state.documents, ...jsonobjects] })\r\n    });\r\n\r\n  }\r\n\r\n  deleteDocument = (basicDocId) => {\r\n    //**For deleting a particular element if deleted then check for the updated row */\r\n    deleteDocumentById(basicDocId).then((jsondata) => {\r\n      if (jsondata.status == \"success\") {\r\n        let data = JSON.parse(jsondata.data)\r\n        // console.log(data)\r\n        //** uncomment the below if an alert for deleting the document is required */\r\n        // this.setState({ alertDialogFlag: false });\r\n        //       alertDialogOptions.message = <span style={{ color: \"green\" }}>Document is Deleted Sucessfully</span>;\r\n        // this.setState({ alertDialogFlag: true });\r\n        this.getDocuments();\r\n      }\r\n      else {\r\n        this.setState({ alertDialogFlag: false });\r\n        alertDialogOptions.message = <span style={{ color: \"red\" }}>Document cannot be deleted, please try again!</span>;\r\n        this.setState({ alertDialogFlag: true });\r\n      }\r\n\r\n    })\r\n\r\n  }\r\n\r\n  handleEditChange(obj) {\r\n\r\n    obj.familyConsent = (obj?.familyConsent == \"true\") ? true : false;\r\n    obj.authenticationAndConsent = (obj?.authenticationAndConsent == \"true\") ? true : false;\r\n    obj.documentsUploaded = (obj?.documentsUploaded == \"true\") ? true : false;\r\n    // console.log(\"placement data here ===> \", obj)\r\n    this.setState({\r\n      placementData: obj\r\n    }, () => {\r\n      if (this.state.placementData.interviewStatus === 'Placed'\r\n        || this.state.placementData.interviewStatus === 'Offer Not Taken'\r\n        || this.state.placementData.interviewStatus === 'Entrepreneurship') {\r\n        this.getAddressDetailsByAddressID(this.state.placementData.addressId)\r\n        if (this.state.placementData.interviewStatus === 'Placed') {\r\n          // console.log('check the boxes here placed')\r\n          if (this.state.placementData.documentsUploaded) {\r\n            document.getElementById('documentsUploadedPlaced').click();\r\n          }\r\n          if (this.state.placementData.authenticationAndConsent) {\r\n            document.getElementById('authenticationAndConsent').click();\r\n          }\r\n        }\r\n        else if (this.state.placementData.interviewStatus === 'Entrepreneurship') {\r\n          // console.log('check the boxes here entreprenerurship')\r\n          // if (this.state.placementData.documentsUploaded) {\r\n          //   document.getElementById('documentsUploadedEntrepreneurship').click();\r\n          // }\r\n        }\r\n      }\r\n      else if (this.state.placementData.interviewStatus === 'Not Interested' && this.state.placementData.reason === \"family issue\") {\r\n        // console.log('check the boxes here not interested if reason is family')\r\n        // this.handleCheckboxChange();\r\n        if (this.state.placementData.familyConsent) {\r\n          document.getElementById('familyConsent').click();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getAddressDetailsByAddressID(addressId) {\r\n    fectAddressDetailsByAddressID(addressId).then((jsondata) => {\r\n      let addressDetails = JSON.parse(jsondata.data);\r\n      this.setState({\r\n        address: addressDetails[0]\r\n      }, () => { this.getAddressdataBasedOnPin(this.state.address.pincode) });\r\n    })\r\n  }\r\n\r\n  getAddressdataBasedOnPin(pincode) {\r\n    fetchAddressDetailsBasedOnPincode(pincode).then((jsondata) => {\r\n      let jsonobjects = JSON.parse(jsondata.data);\r\n      let taluk = [];\r\n      let pincode = [];\r\n      let cityVillage = [];\r\n      let states = [];\r\n      let district = [];\r\n\r\n      this.formData.village.length = 0;\r\n      this.formData.pincodes.length = 0;\r\n      this.formData.city.length = 0;\r\n      this.formData.state.length = 0;\r\n      this.formData.district.length = 0;\r\n\r\n      jsonobjects.map(item => { cityVillage.push({ label: item.cityVillage, value: item.id }) });\r\n      cityVillage = underscore.uniq(cityVillage, true, \"label\");\r\n      cityVillage.map(item => { this.formData.village.push({ label: item.label, value: (item.label).toString() }) });\r\n      this.setState({ village: this.formData.village });\r\n\r\n      jsonobjects.map(item => { taluk.push({ label: item.taluk, value: item.id }) });\r\n      taluk = underscore.uniq(taluk, true, \"label\");\r\n      taluk.map(item => { this.formData.city.push({ label: item.label, value: (item.label).toString() }) });\r\n      this.setState({ city: this.formData.city });\r\n\r\n\r\n\r\n      jsonobjects.map(item => { states.push({ label: item.state, value: item.id }) });\r\n      states = underscore.uniq(states, true, \"label\");\r\n      states.map(item => { this.formData.state.push({ label: item.label, value: (item.value).toString() }) });\r\n      this.setState({ state: this.formData.state }, () => { /*console.log(this.state.state)*/ });\r\n\r\n      jsonobjects.map(item => { district.push({ label: item.district, value: item.id }) });\r\n      district = underscore.uniq(district, true, \"label\");\r\n      district.map(item => { this.formData.district.push({ label: item.label, value: (item.value).toString() }) });\r\n      this.setState({ district: this.formData.district });\r\n    })\r\n  }\r\n\r\n\r\n  handleSelectChangeDoc(selectname, event) {\r\n    this.setState({ [selectname]: event });\r\n  }\r\n\r\n  handlePlacementSelectChange(selectname, event) {\r\n    this.setState({\r\n      placementData: {\r\n        ...this.state.placementData,\r\n        [selectname]: event\r\n      }\r\n    });\r\n    this.validate(selectname, event);\r\n  }\r\n\r\n\r\n  handleSelectChange(selectname, event) {\r\n    let value = 0;\r\n    let target = null;\r\n    try {\r\n      target = event.target;\r\n      value = target.value;\r\n    }\r\n    catch (e) {\r\n      value = event;\r\n    }\r\n\r\n    this.setState({\r\n      \"disabled\": false\r\n    });\r\n\r\n    this.setState({\r\n      placementData: {\r\n        ...this.state.placementData,\r\n        [selectname]: event\r\n      }\r\n    })\r\n\r\n    if (this.state.placementData.interviewStatus === 'Not Placed') {\r\n      this.validateNotPlaced(selectname, event);\r\n    }\r\n\r\n    else if(this.state.placementData.interviewStatus === 'Entrepreneurship') {\r\n      let typeOfDocumentData = [ { value: 'Pic Of Business', label: 'Pic Of Business' },\r\n      { value: 'Registration Certificate', label: 'Registration Certificate' } ];\r\n\r\n      this.setState({\r\n        typeOfDocumentData\r\n      }); \r\n    }\r\n\r\n    else if (this.state.placementData.interviewStatus === 'Not Interested') {\r\n      this.validateNotInterested(selectname, event);\r\n\r\n      let typeOfDocumentData = [ { value: 'Student Declaration', label: 'Student Declaration' } ];\r\n\r\n      this.setState({\r\n        typeOfDocumentData\r\n      });      \r\n    }\r\n\r\n    else if (this.state.placementData.interviewStatus === 'Placed' || this.state.placementData.interviewStatus === 'Offer Not Taken') {\r\n      this.validatePlacedAndOfferNotTaken(selectname, event);\r\n      \r\n      let typeOfDocumentData = [{ value: 'Offer Letter', label: 'Offer Letter' },\r\n      { value: 'Joining Letter', label: 'Joining Letter' },\r\n      { value: 'Pay Slip', label: 'Pay Slip' },\r\n      { value: 'Bank Statement', label: 'Bank Statement' },\r\n      { value: 'Email From Employer', label: 'Email From Employer' },\r\n      { value: 'Workplace Picture', label: 'Workplace Picture' },\r\n      { value: 'ID card', label: 'ID card' },\r\n      { value: 'Letter from HR', label: 'Letter from HR' }]; \r\n      \r\n      this.setState({\r\n        typeOfDocumentData\r\n      });\r\n\r\n      if(selectname==\"joined\" && event==\"Yes\"){\r\n        let DocToBeChecked = ['Joining Letter','Pay Slip','Bank Statement','Email From Employer', 'Workplace Picture', 'ID card', 'Letter From HR'];\r\n        let raiseError = true;\r\n        DocToBeChecked.map((element, id)=>{\r\n          this.state.documents.map((document, id)=>{\r\n            console.log(raiseError)\r\n            if(document.documentName == element){\r\n              this.state.errors.additionalDocuments = '';\r\n              raiseError = false\r\n            }\r\n            else if(element == 'Letter From HR' && raiseError){\r\n              this.state.errors.additionalDocuments = 'Please upload appropriate Documents to continue';\r\n            }\r\n          })\r\n        })\r\n      }\r\n    }\r\n\r\n    else if (this.state.placementData.interviewStatus === 'Rejected') {\r\n      this.validateRejected(selectname, event);\r\n    }\r\n    \r\n\r\n  }\r\n\r\n  handleInputChange(event) {\r\n\r\n    const target = event.target;\r\n    let value = target.value;\r\n    const name = target.name;\r\n    this.setState({\r\n      \"disabled\": false\r\n    });\r\n\r\n    //   this.setState({\r\n    //     errors: {\r\n    //       ...this.state.errors,\r\n    //       [name] : {\r\n    //         'label' : \"\" , \r\n    //         'value' : false\r\n    //       }\r\n    //     }\r\n    // });\r\n    //**uncomment the below if anytime joining date is needed the same as offer date**// \r\n    // if(name==='offerDate'){\r\n    //   // console.log('offer data change here')\r\n    //   this.state.placementData.joiningDate = value;\r\n    // }\r\n    this.setState({\r\n      placementData: {\r\n        ...this.state.placementData,\r\n        [name]: value\r\n      }\r\n    });\r\n\r\n    if (this.state.placementData.interviewStatus === 'Entrepreneurship') {\r\n      this.validateEntrepreneurship(name, value);\r\n    }\r\n\r\n    else if (this.state.placementData.interviewStatus === 'Placed' || this.state.placementData.interviewStatus === 'Offer Not Taken') {\r\n      this.validatePlacedAndOfferNotTaken(name, value);\r\n    }\r\n  }\r\n\r\n  handleCheckboxChange = (event) => {\r\n    // console.log('name ===> ', event.target.name)\r\n    // console.log('checked ===> ', event.target.checked)\r\n    // console.log('target ===> ', event.target)\r\n    let target = event.target;\r\n    let name = target.name;\r\n    let idName = target.id;\r\n    console.log(idName)\r\n\r\n    // if (event.target.name == 'documentsUploaded') {\r\n    //   this.state.errors.documentsUploaded = '';\r\n    // }\r\n    // else if (name == 'authenticationAndConsent') {\r\n    //   this.state.errors.documentsUploaded = '';\r\n    //   this.state.errors.authenticationAndConsent = '';\r\n    // }\r\n    // else if (name == 'familyConsent') {\r\n    //   this.state.errors.familyConsent = '';\r\n    // }\r\n\r\n    this.validateAppropriateCheckBoxes(idName)\r\n\r\n    this.setState({\r\n      placementData: {\r\n        ...this.state.placementData,\r\n        [event.target.name]: event.target.checked     }\r\n    })\r\n\r\n  };\r\n\r\n  CheckForDocuments(docName){\r\n      this.state.documents.map((element, id)=>{\r\n          if(element.documentType == docName)\r\n              return true;\r\n          else\r\n              return false;\r\n      })\r\n  }\r\n\r\n  validateAppropriateCheckBoxes = (name) => {\r\n    console.log('here')\r\n    let errors = this.state.errors;\r\n    console.log(this.state.documents)\r\n    //*Check if any documents are uploaded if not send to the else part if yes check the type and then check the appropriate documents*//\r\n    if (this.state.documents.length > 0) {\r\n\r\n      if (name == \"documentsUploadedPlaced\") {\r\n        // console.log('placed documents to be checked here')\r\n        // this.state.documents.map((element, id) => {\r\n        //   // console.log(element)\r\n        //   var isPresent = (element.documentType == \"Offer Letter\" || element.documentType == \"Joining Letter\" || element.documentType == \"Pay Slip\" || element.documentType == \"Bank Statement\" || element.documentType == \"Email From Employer\" || element.documentType == \"Workplace Picture\" || element.documentType == \"ID card\" || element.documentType == \"Letter from HR\")\r\n        //   let errors = this.state.errors;\r\n        //   if (isPresent) {\r\n        //     errors.documentsUploaded = '';\r\n        //   }\r\n        //   else {\r\n        //     errors.documentsUploaded = 'Please upload the document before clicking the checkbox!';\r\n        //   }\r\n        // })\r\n        let docList = ['Offer Letter', 'Joining Letter', 'Pay Slip', 'Bank Statement', 'Email From Employer', 'Workplace Picture', 'ID card', 'Letter from HR'];\r\n          docList.map((element)=>{\r\n            let ans = this.CheckForDocuments(element);\r\n            console.log(\"some value here ===> \",ans)\r\n            if(this.CheckForDocuments(element)){\r\n              this.state.errors.documentsUploaded = '';\r\n            }\r\n            else if((element == 'Letter from HR')){\r\n              this.state.errors.documentsUploaded = 'Please upload the document before clicking the checkbox!';\r\n            }\r\n          })\r\n      }\r\n\r\n      else if (name == \"authenticationAndConsent\") {\r\n        // console.log('placed documents to be checked here')\r\n        if (errors.documentsUploaded) {\r\n          errors.authenticationAndConsent = 'Please upload the document before clicking the checkbox!';\r\n        }\r\n        else {\r\n          errors.authenticationAndConsent = '';\r\n        }\r\n\r\n      }\r\n\r\n      else if (name == \"familyConsent\") {\r\n        // console.log('family consent documents to be checked here')\r\n\r\n        // this.state.documents.map((element, id) => {\r\n        //   // console.log(element)\r\n        //   var isPresent = (element.documentType == \"Consent Letter\")\r\n        //   // console.log(isPresent)\r\n        //   let errors = this.state.errors;\r\n        //   if (isPresent) {\r\n        //     errors.documentsUploaded = '';\r\n        //   }\r\n        //   else {\r\n        //     errors.documentsUploaded = 'Please upload the document before clicking the checkbox!';\r\n        //   }\r\n        // })\r\n        if(this.CheckForDocuments('Student Declaration')){\r\n            errors.documentsUploaded = '';\r\n        }\r\n        else {\r\n            errors.documentsUploaded = 'Please upload the document before clicking the checkbox!';\r\n        }\r\n      }\r\n      else if (name == \"documentsUploadedEntrepreneurship\") {\r\n        // console.log('entrepreneurship documents to be checked here')\r\n\r\n        // this.state.documents.map((element, id) => {\r\n        //   // console.log(element)\r\n        //   var isPresent = (element.documentType == \"Registration Certificate\")\r\n        //   let errors = this.state.errors;\r\n        //   if (isPresent) {\r\n        //     errors.documentsUploaded = '';\r\n        //   }\r\n        //   else {\r\n        //     errors.documentsUploaded = 'Please upload the document before clicking the checkbox!';\r\n        //   }\r\n        // })\r\n        if(this.CheckForDocuments('Registration Certificate')){\r\n          errors.documentsUploaded = '';\r\n        }\r\n        else {\r\n          errors.documentsUploaded = 'Please upload the document before clicking the checkbox!';\r\n        }\r\n        \r\n\r\n      }\r\n\r\n    }\r\n    else {\r\n      // alert('Please upload the document before clicking the checkbox!');\r\n      errors.name = 'Please upload documents before proceeding here!';\r\n    }\r\n    this.setState({ errors });\r\n\r\n  }\r\n\r\n\r\n  fetchPlacementdetailsFouUser(engagementId) {\r\n\r\n    let placementInfo = [];\r\n    // console.log('point here')\r\n    fetchPlacementDetailsByEngagementId(engagementId).then((jsondata) => {\r\n      //alert(JSON.stringify(jsondata));\r\n      let placementDetailsOfUser = JSON.parse(jsondata.data);\r\n      // console.log('reached here')\r\n      for (var i = 0; i < placementDetailsOfUser.length; i++) {\r\n        var details =\r\n        {   // 'employer_name':placementDetailsOfUser[i].employerName, \r\n          'interview_status': placementDetailsOfUser[i].interviewStatus,\r\n          'Reason': placementDetailsOfUser[i].reason,\r\n          'annual_sal': placementDetailsOfUser[i].annualSal,\r\n          'action': <EditIcon style={{ color: \"blue\" }} onClick={this.handleEditChange.bind(this, placementDetailsOfUser[i])} />\r\n\r\n        };\r\n        // console.log('placement details here ===> ', placementDetailsOfUser[i])\r\n        placementInfo.push(details);\r\n      }\r\n      // console.log('plcament Info ===> ', placementInfo)\r\n      this.setState({\r\n        info: placementInfo\r\n      });\r\n    })\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  getCenterMasters(ids) {\r\n    //** Fetch employer details based on placement partner*//\r\n    fetchEmployerDetails('Active Partner', '%Placement Partner%').then((jsondata) => {\r\n      // console.log(\"employer data ===> \",jsondata)\r\n      if (jsondata.appError == null) {\r\n        let jsonObjects = JSON.parse(jsondata.data);\r\n        jsonObjects.map(item => {\r\n          this.state.center.push({ label: item.accountName, value: item.id })\r\n        })\r\n      }\r\n      return (true);\r\n    }).then(response => response);\r\n  }\r\n\r\n\r\n  mySubmitHandler = (event) => {\r\n    // alert(\"check\");\r\n    event.preventDefault();\r\n    this.state.disabled = true;\r\n    this.validate(\"interviewStatus\", this.state.placementData.interviewStatus);\r\n    if (this.state.errors.interviewStatus === '') {\r\n\r\n      if (this.state.placementData.interviewStatus === 'Placed'\r\n        || this.state.placementData.interviewStatus === 'Offer Not Taken'\r\n      ) {\r\n        // console.log('should be here')\r\n        this.validatePlacedAndOfferNotTaken(\"empId\", this.state.placementData.empId);\r\n        this.validatePlacedAndOfferNotTaken(\"domainName\", this.state.placementData.domainName);\r\n        this.validatePlacedAndOfferNotTaken(\"spocName\", this.state.placementData.spocName);\r\n        this.validatePlacedAndOfferNotTaken(\"designation\", this.state.placementData.designation);\r\n        this.validatePlacedAndOfferNotTaken(\"spocPhoneNumber\", this.state.placementData.spocPhoneNumber);\r\n        this.validatePlacedAndOfferNotTaken(\"annualSal\", this.state.placementData.annualSal);\r\n        this.validatePlacedAndOfferNotTaken(\"offerDate\", this.state.placementData.offerDate);\r\n        // this.validatePlacedAndOfferNotTaken(\"joiningDate\", this.state.placementData.joiningDate);\r\n        this.validatePlacedAndOfferNotTaken(\"joined\", this.state.placementData.joined);\r\n        this.validatePlacedAndOfferNotTaken(\"documentsUploaded\", this.state.placementData.documentsUploaded);\r\n        this.validatePlacedAndOfferNotTaken(\"authenticationAndConsent\", this.state.placementData.authenticationAndConsent);\r\n        // this.validateAppropriateCheckBoxes(\"documentsUploaded\");\r\n        // this.validateAppropriateCheckBoxes(\"authenticationAndConsent\");\r\n        this.validateAddress(\"pincode\", this.state.address.pincode);\r\n        this.validateAddress(\"villageName\", this.state.address.villageName);\r\n        this.validateAddress(\"cityName\", this.state.address.cityName);\r\n        this.validateAddress(\"state\", this.state.address.state);\r\n        this.validateAddress(\"district\", this.state.address.district);\r\n\r\n        let errorsExist = true;\r\n        Object.values(this.state.errors).forEach(\r\n          (val) => val.length > 0 && (errorsExist = false)\r\n        );\r\n        if (errorsExist) {\r\n          this.submitPlacementDetails();\r\n        }\r\n        else {\r\n          alert('Please upload the document before clicking the checkbox!');\r\n        }\r\n      }\r\n      //**If Not placed then check reason if provided then submit details else alert  */\r\n      else if (this.state.placementData.interviewStatus === 'Not Placed') {\r\n        this.validateNotPlaced(\"reason\", this.state.placementData.reason);\r\n        let errorsExist = true;\r\n        Object.values(this.state.errors).forEach(\r\n          (val) => val.length > 0 && (errorsExist = false)\r\n        );\r\n        if (errorsExist) {\r\n          this.submitPlacementDetails();\r\n        }\r\n        else {\r\n          alert('Please upload the document before clicking the checkbox!');\r\n        }\r\n      }\r\n      //**If Not Interested then check if reason is family issue then check if appropriate documents are uploaded*/\r\n      else if (this.state.placementData.interviewStatus === 'Not Interested') {\r\n        this.validateNotInterested(\"reason\", this.state.placementData.reason);\r\n        if (this.state.placementData.reason == \"family issue\") {\r\n          this.validateNotInterested(\"familyConsent\", this.state.placementData.familyConsent);\r\n          // this.validateAppropriateCheckBoxes(\"familyConsent\")\r\n        }\r\n        let errorsExist = true;\r\n        // console.log('details ===> ', this.state.placementData)\r\n        Object.values(this.state.errors).forEach(\r\n          (val) => val.length > 0 && (errorsExist = false));\r\n        if (errorsExist) {\r\n          this.submitPlacementDetails();\r\n        }\r\n        else {\r\n          alert('Please upload the document before clicking the checkbox!');\r\n        }\r\n      }\r\n      //**If the status is Entrepreneurship check the checkboxes for documents uploaded*/\r\n      else if (this.state.placementData.interviewStatus === 'Entrepreneurship') {\r\n        this.validateAddress(\"pincode\", this.state.address.pincode);\r\n        this.validateAddress(\"villageName\", this.state.address.villageName);\r\n        this.validateAddress(\"cityName\", this.state.address.cityName);\r\n        this.validateAddress(\"state\", this.state.address.state);\r\n        this.validateAddress(\"district\", this.state.address.district);\r\n        this.validateEntrepreneurship(\"noOfPeopleEmployed\", this.state.placementData.noOfPeopleEmployed);\r\n        // this.validateEntrepreneurship(\"documentsUploaded\", this.state.placementData.documentsUploaded);\r\n        this.validateAppropriateCheckBoxes(\"documentsUploadedEntrepreneurship\");\r\n        let errorsExist = true;\r\n        Object.values(this.state.errors).forEach(\r\n          (val) => val.length > 0 && (errorsExist = false));\r\n        if (errorsExist) {\r\n          this.submitPlacementDetails();\r\n        }\r\n        else {\r\n          alert('Please upload the document before clicking the checkbox!');\r\n        }\r\n      }\r\n      //**If the status us rejected then we just need to check the value reason if provided*/\r\n      else if (this.state.placementData.interviewStatus === 'Rejected') {\r\n        this.validateRejected(\"empId\", this.state.placementData.empId);\r\n        let errorsExist = true;\r\n        Object.values(this.state.errors).forEach(\r\n          (val) => val.length > 0 && (errorsExist = false));\r\n        if (errorsExist) {\r\n          this.submitPlacementDetails();\r\n        }\r\n      }\r\n      //**Else if nothing is from the selected try to save the data for the same if possible (this condition may not be arising ever but just in case) */\r\n      else {\r\n        this.submitPlacementDetails();\r\n      }\r\n    }\r\n    //*authentication response and redirect to error or dashbaord page*/\r\n    this.setState({\r\n      errors: this.state.errors,\r\n    });\r\n    if (checkButton(this.state.errors)) {\r\n\r\n    }\r\n    else {\r\n      this.state.disabled = true;\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  validate = (name, value) => {\r\n    let errors = this.state.errors;\r\n    switch (name) {\r\n      case 'interviewStatus': errors.interviewStatus = isNotEmpty(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors });\r\n  }\r\n\r\n\r\n\r\n  validateNotInterested = (name, value) => {\r\n    let errors = this.state.errors;\r\n    switch (name) {\r\n      case 'reason': errors.reason = isNotEmpty(value);\r\n        break;\r\n      case 'familyConsent': {\r\n        if(value){\r\n            // this.state.documents == \"\";\r\n            errors.authenticationAndConsent = \"\";\r\n            this.CheckForDocuments('familyConsent');\r\n        }\r\n        else{\r\n          errors.authenticationAndConsent = 'Please upload the appropriate documents to continue';\r\n        }\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  validateEntrepreneurship = (name, value) => {\r\n    let errors = this.state.errors;\r\n    switch (name) {\r\n      case 'noOfPeopleEmployed': errors.noOfPeopleEmployed = isNotEmpty(value);\r\n        break;\r\n      case 'documentsUploaded':  {\r\n        if(value){\r\n            // this.state.documents == \"\";\r\n            errors.documentsUploaded = \"\";\r\n            this.CheckForDocuments('documentsUploadedEntrepreneurship');\r\n        }\r\n        else{\r\n          errors.documentsUploaded = 'Please upload the appropriate documents to continue';\r\n        }\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({ errors });\r\n  }\r\n\r\n  validateNotPlaced = (name, value) => {\r\n    let errors = this.state.errors;\r\n    switch (name) {\r\n      case 'reason': errors.reason = isNotEmpty(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors });\r\n  }\r\n\r\n\r\n  validateRejected = (name, value) => {\r\n    let errors = this.state.errors;\r\n    switch (name) {\r\n      case 'empId': errors.empId = isNotZero(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({ errors });\r\n  }\r\n\r\n\r\n  validatePlacedAndOfferNotTaken = (name, value) => {\r\n    let errors = this.state.errors;\r\n    switch (name) {\r\n      case 'empId': errors.empId = isNotEmpty(value);\r\n        break;\r\n      case 'domainName': errors.domainName = isNotEmpty(value);\r\n        break;\r\n      case 'spocName': errors.spocName = isNotEmpty(value);\r\n        break;\r\n      case 'designation': errors.designation = isNotEmpty(value);\r\n        break;\r\n      case 'spocPhoneNumber': errors.spocPhoneNumber = isNotEmpty(value);\r\n        break;\r\n      case 'annualSal': errors.annualSal = isNotEmpty(value);\r\n        break;\r\n      case 'offerDate': errors.offerDate = isNotEmpty(value);\r\n        break;\r\n      case 'joiningDate': errors.joiningDate = isNotEmpty(value);\r\n        break;\r\n      case 'joined': errors.joined = isNotEmpty(value);\r\n        break;\r\n      case 'documentsUploaded': {\r\n        if(value){\r\n            // this.state.documents == \"\";\r\n            errors.documentsUploaded = \"\";\r\n            this.CheckForDocuments('documentsUploadedPlaced');\r\n        }\r\n        else{\r\n          errors.documentsUploaded = 'Please upload the appropriate documents to continue';\r\n        }\r\n        break;\r\n      }\r\n      case 'authenticationAndConsent': {\r\n        if(value){\r\n            // this.state.documents == \"\";\r\n            errors.authenticationAndConsent = \"\";\r\n            this.CheckForDocuments('authenticationAndConsent');\r\n        }\r\n        else{\r\n          errors.authenticationAndConsent = 'Please upload the appropriate documents to continue';\r\n        }\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors });\r\n  }\r\n\r\n\r\n  validateAddress = (name, value) => {\r\n    let errors = this.state.errors;\r\n    switch (name) {\r\n      case 'pincode': errors.pincode = isNotEmpty(value);\r\n        break;\r\n      case 'villageName': errors.village = isNotEmpty(value);\r\n        break;\r\n      case 'cityName': errors.cityName = isNotEmpty(value);\r\n        break;\r\n      case 'state': errors.state = isNotEmpty(value);\r\n        break;\r\n      case 'district': errors.district = isNotEmpty(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({ errors });\r\n  }\r\n\r\n\r\n  handleAddressInputChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    this.setState({\r\n      address: {\r\n        ...this.state.address,\r\n        [name]: value\r\n      }\r\n    })\r\n    this.validate(name, value);\r\n  }\r\n  handleAddressSelectChange(selectname, event) {\r\n    this.setState({\r\n      address: {\r\n        ...this.state.address,\r\n        [selectname]: event\r\n      }\r\n    })\r\n\r\n    this.validateAddress(selectname, event);\r\n  }\r\n\r\n  handleTypeOfProofSelectChange(selectname, event) {\r\n\r\n    let newVal = event;\r\n    let stateVal = this.state.documentType;\r\n\r\n    stateVal.indexOf(newVal) === -1\r\n      ? stateVal.push(newVal)\r\n      : stateVal.length === 1\r\n        ? (stateVal = [])\r\n        : stateVal.splice(stateVal.indexOf(newVal), 1)\r\n\r\n    this.setState({ documentType: stateVal });\r\n\r\n  }\r\n\r\n  downloadDocuments = (value) => {\r\n    let formData = new FormData();\r\n    formData.append('data', '{\"token\" : \"\", \"action\" : \"downloadDocument\", \"data\" : [{\"basicDocId\":' + value + '}]}');\r\n    fetch(serviceEndPoint.documentServiceEndPoint, {\r\n      method: 'post',\r\n      headers: {\r\n        'Authorization': 'Bearer ' + UserContext.token\r\n      },\r\n      body: formData\r\n    }).then(response => response.json()).then((jsondata) => {\r\n      let jsonobjects = JSON.parse(jsondata.data);\r\n      var url = serviceEndPoint.downloadDocument + jsonobjects[0].documentPath + \"\";\r\n      window.open(url, \"_blank\");\r\n    });\r\n  }\r\n\r\n  uploadDocuments = (e) => {\r\n    e.preventDefault();\r\n    var levelOfDocument = \"G\";\r\n    // console.log('dample here')\r\n    let localThis = this;\r\n\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(this.state.file);\r\n    reader.onload = function () {\r\n      let document = reader.result;\r\n\r\n      localThis.setState({ alertDialogFlag: false });\r\n      uploadDocument(localThis.state.dbUserId, localThis.state.engagementId, localThis.state.typeOfDocument, 'PD', localThis.state.typeOfDocument, document, \"\").then((jsondata) => {\r\n        //**Only if the student's data is successfully saved then display the message and update the documents list else display NOT uploaded message */\r\n        if (jsondata.status == \"success\") {\r\n          localThis.setState({ alertDialogFlag: false });\r\n          alertDialogOptions.message = <span style={{ color: \"green\" }}>Document is Saved Sucessfully</span>;\r\n          localThis.setState({ alertDialogFlag: true });\r\n          localThis.getDocuments();\r\n        }\r\n        else {\r\n          localThis.setState({ alertDialogFlag: false });\r\n          alertDialogOptions.message = <span style={{ color: \"red\" }}>Document is NOT SAVED Please Check the uploaded Documents</span>;\r\n          localThis.setState({ alertDialogFlag: true });\r\n        }\r\n      });\r\n\r\n    }\r\n\r\n  }\r\n\r\n  onFileChangeHandler = (files) => { this.setState({ file: files[0] }); }\r\n\r\n  getPincodeData(selectname, event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    this.setState({\r\n      address: {\r\n        ...this.state.address,\r\n        [name]: value\r\n      }\r\n    })\r\n    this.validateAddress(name, value);\r\n    if (value.length == 6) {\r\n\r\n      fetchAddressDetailsBasedOnPincode(value).then((jsondata) => {\r\n        let jsonobjects = JSON.parse(jsondata.data);\r\n        let taluk = [];\r\n        let pincode = [];\r\n        let cityVillage = [];\r\n        let states = [];\r\n        let district = [];\r\n\r\n        this.formData.village.length = 0;\r\n        this.formData.pincodes.length = 0;\r\n        this.formData.city.length = 0;\r\n        this.formData.state.length = 0;\r\n        this.formData.district.length = 0;\r\n\r\n        jsonobjects.map(item => { cityVillage.push({ label: item.cityVillage, value: item.id }) });\r\n        cityVillage = underscore.uniq(cityVillage, true, \"label\");\r\n        cityVillage.map(item => { this.formData.village.push({ label: item.label, value: (item.label).toString() }) });\r\n        this.setState({ village: this.formData.village });\r\n\r\n        jsonobjects.map(item => { taluk.push({ label: item.taluk, value: item.id }) });\r\n        taluk = underscore.uniq(taluk, true, \"label\");\r\n        taluk.map(item => { this.formData.city.push({ label: item.label, value: (item.label).toString() }) });\r\n        this.setState({ city: this.formData.city });\r\n\r\n\r\n\r\n        jsonobjects.map(item => { states.push({ label: item.state, value: item.id }) });\r\n        states = underscore.uniq(states, true, \"label\");\r\n        states.map(item => { this.formData.state.push({ label: item.label, value: (item.value).toString() }) });\r\n        this.setState({ state: this.formData.state }, () => { /*console.log(this.state.state)*/ });\r\n\r\n        jsonobjects.map(item => { district.push({ label: item.district, value: item.id }) });\r\n        district = underscore.uniq(district, true, \"label\");\r\n        district.map(item => { this.formData.district.push({ label: item.label, value: (item.value).toString() }) });\r\n        this.setState({ district: this.formData.district });\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  submitPlacementDetails() {\r\n    if (this.state.placementData.interviewStatus === 'Placed' || this.state.placementData.interviewStatus === 'Offer Not Taken'\r\n      || this.state.placementData.interviewStatus === 'Entrepreneurship') {\r\n      // console.log(\" checkpoint 2 \")\r\n      saveAddressDetails(JSON.stringify(this.state.address)).then((jsondata) => {\r\n        let jsonobjects = JSON.parse(jsondata.data);\r\n        //alert(jsonobjects[0].id);\r\n        this.setState({\r\n          placementData: {\r\n            ...this.state.placementData,\r\n            'addressId': jsonobjects[0].id\r\n          }\r\n        }, () => { this.saveAllDetails() });\r\n        this.setState({ alertDialogFlag: false });\r\n        alertDialogOptions.message = <span style={{ color: \"green\" }}>Placement Details Saved Sucessfully</span>;\r\n        this.setState({ alertDialogFlag: true });\r\n      });\r\n\r\n    }\r\n    else {\r\n      this.saveAllDetails();\r\n    }\r\n  }\r\n\r\n  saveAllDetails() {\r\n    // console.log(\" checkpoint 3 \")\r\n    // console.log(this.state.placementData)\r\n    savePlacementDetails(this.state.placementData).then((jsondata) => {\r\n      this.fetchPlacementdetailsFouUser(this.state.engagementId);\r\n      if (jsondata.appError == null || jsondata.status == 'success') {\r\n        let jsonobjects = JSON.parse(jsondata.data);\r\n        //alert(JSON.stringify(jsonobjects));   \r\n        // console.log(jsonobjects);\r\n        this.setState({ alertDialogFlag: false });\r\n        alertDialogOptions.message = <span style={{ color: \"green\" }}>Placement Details Saved Sucessfully</span>;\r\n        this.setState({ alertDialogFlag: true });\r\n\r\n      }\r\n      else {\r\n        // console.log('error')\r\n        this.setState({ alertDialogFlag: false });\r\n        alertDialogOptions.message = <span style={{ color: \"red\" }}>Please upload the appropriate documents for saving the placement details!</span>;\r\n        this.setState({ alertDialogFlag: true });\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const columns = [\r\n      { label: 'Interview Status', name: 'interview_status', headerStyle: { color: '#FF9800' } },\r\n      { label: 'Reason', name: 'Reason', headerStyle: { color: '#FF9800' } },\r\n      { label: 'Annual Salary', name: 'annual_sal', headerStyle: { color: '#FF9800' } },\r\n      { label: 'Action', name: 'action', headerStyle: { color: '#FF9800' } }\r\n    ]\r\n\r\n    const options = {\r\n      filterType: \"dropdown\",\r\n      responsive: \"stacked\",\r\n      sortDirection: \"desc\",\r\n      selectableRows: 'single',\r\n      disableToolbarSelect: true,\r\n      rowsPerPage: 10,\r\n      selectableRowsOnClick: true,\r\n\r\n\r\n\r\n    };\r\n\r\n    let button;\r\n    button = <Grid container direction=\"row\" justify=\"flex-end\" id=\"btn\" alignItems=\"flex-end\">  <Button variant=\"contained\" type=\"submit\" size=\"small\" color=\"primary\" disabled={(this.state.buttonStatus==\"Enrolled\") ? false : true}>\r\n      Save\r\n    </Button></Grid>\r\n\r\n\r\n    return (\r\n      <div style={{ width: '100%' }}>\r\n        <form onSubmit={this.mySubmitHandler} method=\"post\">\r\n          <fieldset id=\"roleBasedDisable\">\r\n            <Grid item xs={12} sm={3}>\r\n              <SingleSelect name=\"interviewStatus\" id=\"interviewStatus\" label=\"Interview Status\"\r\n                onChange={this.handlePlacementSelectChange.bind(this, 'interviewStatus')}\r\n                value={this.state.placementData.interviewStatus || ''}\r\n                helperText={this.state.errors.interviewStatus}\r\n                error={this.state.errors.interviewStatus === '' ? false : true}\r\n                options={this.state.intStatus}\r\n              />\r\n            </Grid>\r\n            <div style={{ display: (this.state.placementData.interviewStatus === \"Placed\" || this.state.placementData.interviewStatus === \"Offer Not Taken\" ? \"block\" : \"none\") }}>\r\n              <Grid id=\"hideData\" container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <FormControl>\r\n                  </FormControl>\r\n                </Grid>\r\n                <br></br>\r\n\r\n                {\r\n                  (this.state.placementData.interviewStatus === \"Offer Not Taken\") &&\r\n                  <Grid item xs={12} sm={3}>\r\n                    <SingleSelect name=\"reason\" id=\"reason\" label=\"Reason\"\r\n                      onChange={this.handleSelectChange.bind(this, 'reason')}\r\n                      value={this.state.placementData.reason || ''}\r\n                      options={this.state.offerNotTakenReason}\r\n                    />\r\n                  </Grid>\r\n\r\n                }\r\n\r\n\r\n                <Grid item xs={12} sm={3}>\r\n                  <SingleSelect name=\"empId\" id=\"empId\" label=\"employerName\"\r\n                    onChange={this.handleSelectChange.bind(this, 'empId')}\r\n                    value={this.state.placementData.empId || ''}\r\n                    helperText={this.state.errors.empId}\r\n                    error={this.state.errors.empId === '' ? false : true}\r\n                    options={this.state.center}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={3}>\r\n                  <SingleSelect name=\"domainName\" id=\"domainName\" label=\"Domain\"\r\n                    onChange={this.handleSelectChange.bind(this, 'domainName')}\r\n                    value={this.state.placementData.domainName || ''}\r\n                    helperText={this.state.errors.domainName}\r\n                    error={this.state.errors.domainName === '' ? false : true}\r\n                    options={this.state.domains} />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={3} id=\"interviewRemark\">\r\n                  <FormControl>\r\n                    <TextField type=\"text\" name=\"spocName\" id=\"spocName\"\r\n                      label=\"supervisor/SPOC name employer\"\r\n                      onChange={this.handleInputChange}\r\n                      value={this.state.placementData.spocName || ''}\r\n                      helperText={this.state.errors.spocName}\r\n                      error={this.state.errors.spocName === '' ? false : true}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} sm={3} id=\"interviewRemark\">\r\n                  <FormControl>\r\n                    <TextField type=\"text\" name=\"designation\" id=\"designation\"\r\n                      label=\"Designation\"\r\n                      onChange={this.handleInputChange}\r\n                      value={this.state.placementData.designation || ''}\r\n                      helperText={this.state.errors.designation}\r\n                      error={this.state.errors.designation === '' ? false : true}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} sm={3} id=\"interviewRemark\">\r\n                  <FormControl>\r\n                    <TextField type=\"number\" name=\"spocPhoneNumber\" id=\"spocPhoneNumber\"\r\n                      label=\"SPOC phone NO.\"\r\n                      onInput={(e) => {\r\n                        e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 10)\r\n                      }}\r\n                      onChange={this.handleInputChange}\r\n                      value={this.state.placementData.spocPhoneNumber || ''}\r\n                      helperText={this.state.errors.spocPhoneNumber}\r\n                      error={this.state.errors.spocPhoneNumber === '' ? false : true}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                {/* <Grid item xs={12} sm={3} id = \"interviewDate\">\r\n         <TextField id=\"date\" name = \"interviewDate\" id = \"interviewDate\" onChange={this.handleInputChange}\r\n         label=\"InterView Date\" value={this.state.placementData.interviewDate || ''}\r\n         helperText = {this.state.errors.placementData != undefined ? this.state.errors.placementData.label : '' } \r\n        error = {this.state.errors.placementData != undefined ? this.state.errors.placementData.value : '' }\r\n         type=\"date\"\r\n         inputProps={{ max: new Date().toISOString().slice(0,10)}}\r\n         InputLabelProps={{\r\n           shrink: true,\r\n         }} />\r\n     </Grid> */}\r\n\r\n                {/* <Grid item xs={12} sm={3} id=\"interviewRemark\">\r\n          <FormControl>\r\n            <TextField type=\"text\" name=\"interviewRemark\" id=\"interviewRemark\"\r\n            label = \"Interview Remark\"\r\n            helperText = {this.state.errors.interviewRemark != undefined ? this.state.errors.interviewRemark.label : '' } \r\n            error = {this.state.errors.interviewRemark != undefined ? this.state.errors.interviewRemark.value : '' }\r\n            onChange={this.handleInputChange} value={this.state.placementData.interviewRemark || ''} />\r\n          </FormControl>\r\n        </Grid>\r\n      */}\r\n\r\n                {/* <Grid item xs={12} sm={3} id=\"monthlyGrossSal\">\r\n       <FormControl>\r\n         <TextField type=\"text\" name=\"monthlyGrossSal\" id=\"monthlyGrossSal\"\r\n         label = \"Salary\"\r\n         helperText = {this.state.errors.monthlyGrossSal != undefined ? this.state.errors.monthlyGrossSal.label : '' } \r\n         error = {this.state.errors.monthlyGrossSal != undefined ? this.state.errors.monthlyGrossSal.value : '' }\r\n         onChange={this.handleInputChange} value={this.state.placementData.monthlyGrossSal || ''}\r\n         onInput = {(e) =>{\r\n          e.target.value = Math.max(0, parseInt(e.target.value) ).toString().slice(0,5)\r\n      }}\r\n         \r\n         />\r\n       </FormControl>\r\n     </Grid> */}\r\n\r\n                <Grid item xs={12} sm={3} id=\"annualSal\">\r\n                  <FormControl>\r\n                    <TextField type=\"number\" name=\"annualSal\" id=\"annualSal\"\r\n                      label=\"Monthly Gross Salary\"\r\n                      helperText={this.state.errors.annualSal}\r\n                      error={this.state.errors.annualSal === '' ? false : true}\r\n                      onChange={this.handleInputChange} value={this.state.placementData.annualSal || ''}\r\n                      onInput={(e) => {\r\n                        e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 6)\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                {/* <Grid item xs={12} sm={3}>\r\n     <SingleSelect  name=\"studentStatus\" id=\"studentStatus\" label=\"Student Status\"\r\n     onChange={this.handleSelectChange.bind(this, 'studentStatus')}\r\n                            value={this.state.placementData.studentStatus || ''}\r\n                            helperText = {this.state.errors.studentStatus != undefined ? this.state.errors.studentStatus.label : '' } \r\n                            error = {this.state.errors.studentStatus != undefined ? this.state.errors.studentStatus.value : '' }\r\n                            options={this.state.studStatus} \r\n                            /> \r\n     </Grid>\r\n      */}\r\n                {/* <Grid item xs={12} sm={3} id=\"studentRemark\">\r\n       <FormControl>\r\n         <TextField type=\"text\" name=\"studentRemark\" id=\"studentRemark\" label = \"Student Remark\"\r\n         helperText = {this.state.errors.studentRemark != undefined ? this.state.errors.studentRemark.label : '' } \r\n         error = {this.state.errors.studentRemark != undefined ? this.state.errors.studentRemark.value : '' }\r\n         onChange={this.handleInputChange} value={this.state.placementData.studentRemark || ''}  />\r\n       </FormControl>\r\n     </Grid> */}\r\n\r\n                <Grid item xs={12} sm={3} id=\"offerDate\">\r\n                  <TextField id=\"date\" name=\"offerDate\" id=\"offerDate\" onChange={this.handleInputChange}\r\n                    label=\"Offer Date\" value={this.state.placementData.offerDate || ''}\r\n                    helperText={this.state.errors.offerDate}\r\n                    error={this.state.errors.offerDate === '' ? false : true}\r\n                    type=\"date\"\r\n                    inputProps={{ max: new Date().toISOString().slice(0, 10) }}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }} />\r\n\r\n                </Grid>\r\n\r\n                {/*removing joining date as per sudhakar's review comments */}\r\n                {/* <Grid item xs={12} sm={3} id = \"joiningDate\">\r\n         <TextField id=\"date\" name = \"joiningDate\" id = \"joiningDate\" onChange={this.handleInputChange}\r\n         label=\"Joining Date\" value={this.state.placementData.joiningDate || ''}\r\n         helperText = {this.state.errors.joiningDate} \r\n         error = {this.state.errors.joiningDate ===''?false:true}\r\n         type=\"date\"\r\n         inputProps={{ max: new Date().toISOString().slice(0,10)}}\r\n         InputLabelProps={{\r\n           shrink: true,\r\n         }} />\r\n\r\n     </Grid> */}\r\n\r\n                <Grid item xs={12} sm={3}>\r\n                  <SingleSelect name=\"joined\" id=\"joined\" label=\"Joined\"\r\n                    onChange={this.handleSelectChange.bind(this, 'joined')}\r\n                    value={this.state.placementData.joined || ''}\r\n                    options={this.state.yesOrNo}\r\n                    helperText={this.state.errors.joined}\r\n                    error={this.state.errors.joined === '' ? false : true}\r\n                  />\r\n                </Grid>\r\n                <InputLabel shrink={true} style={{ color: \"red\" }} >\r\n                    {(this.state.errors.additionalDocuments || '')}\r\n                </InputLabel>\r\n\r\n                <Grid item xs={12} sm={3}>\r\n                  <SingleSelect name=\"accommodationProvided\" id=\"accommodationProvided\" label=\"Accommodation Provided\"\r\n                    onChange={this.handleSelectChange.bind(this, 'accommodationProvided')}\r\n                    value={this.state.placementData.accommodationProvided || ''}\r\n                    options={this.state.yesOrNo}\r\n                    helperText={this.state.errors.joined}\r\n                    error={this.state.errors.joined === '' ? false : true}\r\n\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={3}>\r\n                  <SingleSelect name=\"foodProvided\" id=\"foodProvided\" label=\"Food Provided\"\r\n                    onChange={this.handleSelectChange.bind(this, 'foodProvided')}\r\n                    value={this.state.placementData.foodProvided || ''}\r\n                    options={this.state.yesOrNo}\r\n                    helperText={this.state.errors.joined}\r\n                    error={this.state.errors.joined === '' ? false : true}\r\n\r\n                  />\r\n                </Grid>\r\n\r\n\r\n                <Grid item xs={12}>\r\n                  <FormControl>\r\n                    <h6 style={{ fontWeight: 'bold' }}>Job Location</h6>\r\n                  </FormControl>\r\n\r\n\r\n                </Grid>\r\n\r\n                <AddressForPlacement\r\n\r\n                  pincodeName=\"pincode\" pincodeId=\"pincode\" pincodeOnChange={this.getPincodeData.bind(this, 'pincode')} pincodeValue={this.state.address.pincode || ''} pincodeHelperText={this.state.errors.pincode} pincodeError={this.state.errors.pincode == '' ? false : true}\r\n                  villageName=\"villageName\" villageId=\"villageName\" villageInputValue={this.handleAddressSelectChange.bind(this, 'villageName')} villageData={this.state.village} villageValue={this.state.address.villageName || ''} villageHelperText={this.state.errors.village} villageError={this.state.errors.village == '' ? false : true}\r\n                  cityName=\"cityName\" cityId=\"cityName\" cityValue={this.state.address.cityName || ''} cityData={this.state.city} cityInputValue={this.handleAddressSelectChange.bind(this, 'cityName')} cityNameHelperText={this.state.errors.cityName} cityNameError={this.state.errors.cityName == '' ? false : true}\r\n                  stateName=\"state\" stateId=\"state\" stateData={this.state.state} stateValue={this.state.address.state || ''} stateInputValue={this.handleAddressSelectChange.bind(this, 'state')} stateHelperText={this.state.errors.state} stateError={this.state.errors.state == '' ? false : true}\r\n                  districtName=\"district\" districtId=\"district\" districtValue={this.state.address.district || ''} districtData={this.state.district} districtInputValue={this.handleAddressSelectChange.bind(this, 'district')} districtHelperText={this.state.errors.district} districtError={this.state.errors.district == '' ? false : true}\r\n                />\r\n\r\n                <Grid item xs={12} sm={6} >\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        onChange={this.handleCheckboxChange}\r\n                        name=\"documentsUploaded\"\r\n                        id=\"documentsUploadedPlaced\"\r\n                        color=\"primary\"\r\n                        // checked={(this.state.placementData.documentsUploaded == \"true\" || this.state.placementData.documentsUploaded) ? true : false}\r\n                      // required={true}\r\n                      />\r\n                    }\r\n                    label=\"I have uploaded appropriate Evidence\"\r\n                  />\r\n                  <InputLabel shrink={true} style={{ color: \"red\" }} >\r\n                    {(this.state.errors.documentsUploaded || '')}\r\n                  </InputLabel>\r\n\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        onChange={this.handleCheckboxChange}\r\n                        name=\"authenticationAndConsent\"\r\n                        id=\"authenticationAndConsent\"\r\n                        color=\"primary\"\r\n                      // value={(this.state.placementData.authenticationAndConsent == \"true\" || this.state.placementData.authenticationAndConsent) ? true : false}\r\n                      // required={true}\r\n                      />\r\n                    }\r\n                    label=\"Have gone though the placement evidence and Authentic for both data and evidence\"\r\n                  />\r\n                  <InputLabel shrink={true} style={{ color: \"red\" }} >\r\n                    {(this.state.errors.authenticationAndConsent || '')}\r\n                  </InputLabel>\r\n                </Grid>\r\n\r\n\r\n                <br />\r\n\r\n\r\n              </Grid>\r\n\r\n            </div>\r\n\r\n            <div id=\"notPlaced\" style={{ display: (this.state.placementData.interviewStatus === \"Not Placed\" ? \"block\" : \"none\") }}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <FormControl>\r\n                  </FormControl>\r\n                </Grid>\r\n                <br></br>\r\n                <Grid item xs={12} sm={3}>\r\n                  <SingleSelect name=\"reason\" id=\"reason\" label=\"Reason\"\r\n                    onChange={this.handleSelectChange.bind(this, 'reason')}\r\n                    value={this.state.placementData.reason || ''}\r\n                    options={this.state.notPlacedReasons}\r\n                    helperText={this.state.errors.reason}\r\n                    error={this.state.errors.reason === '' ? false : true}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n\r\n            <div id=\"notInterested\" style={{ display: (this.state.placementData.interviewStatus === \"Not Interested\" ? \"block\" : \"none\") }}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <FormControl>\r\n                  </FormControl>\r\n                </Grid>\r\n                <br></br>\r\n                <Grid item xs={12} sm={3}>\r\n                  <SingleSelect name=\"reason\" id=\"reason\" label=\"Reason\"\r\n                    onChange={this.handleSelectChange.bind(this, 'reason')}\r\n                    value={this.state.placementData.reason || ''}\r\n                    options={this.state.notInterestedReason}\r\n                    helperText={this.state.errors.reason}\r\n                    error={this.state.errors.reason === '' ? false : true}\r\n                  />\r\n\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n\r\n                        {\r\n                        (this.state.placementData.reason == \"family issue\") && <FormControlLabel\r\n                          //incase only family issue\r\n                          control={\r\n                            <Checkbox\r\n                              onChange={this.handleCheckboxChange}\r\n                              name=\"familyConsent\"\r\n                              id=\"familyConsent\"\r\n                              color=\"primary\"\r\n                              // checked={(this.state.placementData.familyConsent == \"true\" || this.state.placementData.familyConsent) ? true : false}\r\n                            // required={true}\r\n                            />\r\n                          }\r\n                          label=\"Spoken to parents/ guardian \"\r\n                        />\r\n                        \r\n                        }\r\n                        \r\n                </Grid>\r\n                      <InputLabel shrink={true} style={{ color: \"red\" }} >\r\n                            {(this.state.errors.familyConsent || '')}\r\n                        </InputLabel>\r\n\r\n              </Grid>\r\n            </div>\r\n\r\n            <div id=\"entrepreneurship\" style={{ display: (this.state.placementData.interviewStatus === \"Entrepreneurship\" ? \"block\" : \"none\") }}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <FormControl>\r\n                  </FormControl>\r\n                </Grid>\r\n                <br></br>\r\n\r\n                <Grid item xs={12} sm={3}>\r\n                  <SingleSelect name=\"domainName\" id=\"domainName\" label=\"Domain\"\r\n                    onChange={this.handleSelectChange.bind(this, 'domainName')}\r\n                    value={this.state.placementData.domainName || ''}\r\n                    options={this.state.domains} />\r\n                </Grid>\r\n                <Grid item xs={12} sm={3} id=\"studentRemark\">\r\n                  <FormControl>\r\n                    <TextField type=\"text\" name=\"noOfPeopleEmployed\" id=\"noOfPeopleEmployed\" label=\"No. of people employed\"\r\n                      helperText={this.state.errors.noOfPeopleEmployed}\r\n                      error={this.state.errors.noOfPeopleEmployed === '' ? false : true}\r\n                      onChange={this.handleInputChange} value={this.state.placementData.noOfPeopleEmployed || ''}\r\n                      onInput={(e) => {\r\n                        e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 10)\r\n                      }} />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControl>\r\n                    <h6 style={{ fontWeight: 'bold' }}>Job Location</h6>\r\n                  </FormControl>\r\n                </Grid>\r\n                <AddressForPlacement\r\n                  pincodeName=\"pincode\" pincodeId=\"pincode\" pincodeOnChange={this.getPincodeData.bind(this, 'pincode')} pincodeValue={this.state.address.pincode || ''} pincodeHelperText={this.state.errors.pincode} pincodeError={this.state.errors.pincode == '' ? false : true}\r\n                  villageName=\"villageName\" villageId=\"villageName\" villageInputValue={this.handleAddressSelectChange.bind(this, 'villageName')} villageData={this.state.village} villageValue={this.state.address.villageName || ''} villageHelperText={this.state.errors.village} villageError={this.state.errors.village == '' ? false : true}\r\n                  cityName=\"cityName\" cityId=\"cityName\" cityValue={this.state.address.cityName || ''} cityData={this.state.city} cityInputValue={this.handleAddressSelectChange.bind(this, 'cityName')} cityNameHelperText={this.state.errors.cityName} cityNameError={this.state.errors.cityName == '' ? false : true}\r\n                  stateName=\"stateName\" stateId=\"stateName\" stateData={this.state.state} stateValue={this.state.address.state || ''} stateInputValue={this.handleAddressSelectChange.bind(this, 'state')} stateHelperText={this.state.errors.state} stateError={this.state.errors.state == '' ? false : true}\r\n                  districtName=\"district\" districtId=\"district\" districtValue={this.state.address.district || ''} districtData={this.state.district} districtInputValue={this.handleAddressSelectChange.bind(this, 'district')} districtHelperText={this.state.errors.district} districtError={this.state.errors.district == '' ? false : true}\r\n                />\r\n\r\n                <Grid item xs={12} sm={6} >\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        onChange={this.handleCheckboxChange}\r\n                        name=\"documentsUploaded\"\r\n                        id=\"documentsUploadedEntrepreneurship\"\r\n                        color=\"primary\"\r\n                      // value={(this.state.placementData.documentsUploaded == \"true\" || this.state.placementData.documentsUploaded) ? true : false}\r\n                      // required={true}\r\n                      />\r\n                    }\r\n                    label=\"I have uploaded appropriate Evidence\"\r\n                  />\r\n                  <InputLabel shrink={true} style={{ color: \"red\" }} >\r\n                    {(this.state.errors.documentsUploaded || '')}\r\n                  </InputLabel>\r\n                </Grid>\r\n                <br />\r\n\r\n\r\n              </Grid>\r\n\r\n\r\n            </div>\r\n\r\n            <div id=\"selfemployedform\" style={{ display: (this.state.placementData.interviewStatus === \"Self Employed\" ? \"block\" : \"none\") }}>\r\n\r\n            </div>\r\n\r\n\r\n\r\n            <div style={{ display: (this.state.placementData.interviewStatus === \"Rejected\" ? \"block\" : \"none\") }}>\r\n              <Grid id=\"hideData\" container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <FormControl>\r\n                  </FormControl>\r\n                </Grid>\r\n                <br></br>\r\n\r\n                <Grid item xs={12} sm={3}>\r\n                  <SingleSelect name=\"empId\" id=\"empId\" label=\"employerName\"\r\n                    onChange={this.handleSelectChange.bind(this, 'empId')}\r\n                    value={this.state.placementData.empId || ''}\r\n                    helperText={this.state.errors.empId}\r\n                    error={this.state.errors.empId === '' ? false : true}\r\n                    options={this.state.center}\r\n                  />\r\n\r\n                </Grid>\r\n\r\n              </Grid>\r\n\r\n            </div>\r\n\r\n\r\n\r\n            {button}\r\n          </fieldset>\r\n        </form>\r\n        <form onSubmit={this.uploadDocuments} method=\"post\">\r\n          <Table aria-label=\"simple table\" style={{ width: \"100%\" }}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell style={{ width: \"25%\" }}>Type of Document</TableCell>\r\n\r\n                <TableCell style={{ width: \"20%\" }}>Browse and Upload</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n            <InputLabel shrink={true} style={{ color: \"GrayText\" }} >\r\n                  *Note : After Uploading the document if the checkbox still does not works, return to the screen after visiting some other screen!\r\n            </InputLabel>\r\n              <TableRow >\r\n                <TableCell >\r\n\r\n                  <SingleSelect isClearable={true}\r\n                    name=\"typeOfDocument\" id=\"typeOfDocument\"\r\n                    options={this.state.typeOfDocumentData}\r\n                    onChange={this.handleSelectChangeDoc.bind(this, 'typeOfDocument')}\r\n                    value={this.state.typeOfDocument || ''}\r\n                  />\r\n                </TableCell>\r\n\r\n                <TableCell>\r\n                  <DropzoneArea\r\n                    name=\"file\" id=\"file\"\r\n                    maxFileSize={200000} filesLimit={1} showFileNames={true}\r\n                    onChange={this.onFileChangeHandler}\r\n                  // key={this.state.clearDropzoneArea}\r\n                  />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n          <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"flex-end\">\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" size=\"small\"\r\n              disabled={this.state.file == null || this.state.typeOfDocument == '' ? true : false}\r\n            >Upload Document</Button>\r\n          </Grid>\r\n        </form>\r\n\r\n\r\n\r\n        <br></br><br></br><br></br><br></br><br></br><br></br>\r\n        <MUIDataTable id=\"dtb\" title={\"List Of Placement Details\"} label={\"List of Placement Details \"} columns={columns} data={this.state.info} options={options}\r\n        />\r\n        <br /><br />\r\n        <InputLabel>List Of Uploaded Document</InputLabel>\r\n        <br />\r\n        {\r\n          (this.state.documents != \"\") &&\r\n\r\n          <Paper>\r\n            <Table aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Created On</TableCell>\r\n                  <TableCell>Document Name</TableCell>\r\n                  <TableCell>File Name</TableCell>\r\n                  <TableCell >Download</TableCell>\r\n                  <TableCell >Delete</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {this.state.documents.map(row => (\r\n                  <TableRow key={row.basicDocId}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n\r\n                      {row.createdOn}\r\n                    </TableCell>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.documentName}\r\n                    </TableCell>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.documentPath.split(\"/\")[1]}\r\n                    </TableCell>\r\n                    <TableCell >\r\n                      <Button variant=\"contained\" color=\"primary\" size=\"small\" name=\"download\" id=\"download\"\r\n\r\n                        onClick={this.downloadDocuments.bind(this, row.basicDocId)}\r\n                      >Download</Button>\r\n                    </TableCell>\r\n\r\n                    <TableCell >\r\n                      <Button variant=\"contained\" color=\"primary\" size=\"small\" name=\"delete\" id=\"delete\"\r\n                        onClick={this.deleteDocument.bind(this, row.basicDocId)}\r\n                      >Delete</Button>\r\n                    </TableCell>\r\n\r\n\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </Paper>\r\n\r\n\r\n        }\r\n\r\n        {\r\n          (this.state.alertDialogFlag) && <AlertDialog message={alertDialogOptions.message}></AlertDialog>\r\n        }\r\n\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default PlacementDetails;"]},"metadata":{},"sourceType":"module"}