{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\StudentMigration.js\";\nimport React, { Component } from 'react';\nimport UserContext from '../components/GolbalContext';\nimport { SingleSelect } from \"react-select-material-ui\";\nimport { Checkbox, InputLabel, Input, Grid, Button } from '@material-ui/core';\nimport { fetchAllStateDetails, fetchCenterByStateName, fetchVirtualData, fetchStudentDetailsByEngagementId, updateStudentData } from './../util/api';\nimport MUIDataTable from \"mui-datatables\";\nimport { forEach } from 'underscore';\nimport { serviceEndPoint } from './../util/serviceEndPoint';\nimport { isSessionValid, isTokenValid } from './../util/session.js';\nimport { regenerateToken } from './../util/validation';\nconst columns = [{\n  label: 'Engagement Id',\n  name: 'EngagementId',\n  options: {\n    sortDirection: 'desc'\n  },\n  headerStyle: {\n    color: '#FF9800'\n  }\n}, // {label: 'Name', name: 'first_name',options : {    // not showing the value on fromt end\n//   sortDirection : 'desc',display: false\n// },headerStyle: {color:'#FF9800'}},\n{\n  label: 'Name',\n  name: 'Name',\n  headerStyle: {\n    color: '#FF9800'\n  }\n}, {\n  label: 'Date Of Birth',\n  name: 'Dob',\n  headerStyle: {\n    color: '#FF9800'\n  }\n}, {\n  label: 'Contact Number',\n  name: 'PrimaryContactNumber',\n  headerStyle: {\n    color: '#FF9800'\n  }\n}, {\n  label: 'Address',\n  name: 'PermAddressLine1',\n  headerStyle: {\n    color: '#FF9800'\n  }\n}, {\n  label: 'City',\n  name: 'PermCityName',\n  headerStyle: {\n    color: '#FF9800'\n  }\n}, {\n  label: 'Pin code',\n  name: 'PermPincode',\n  headerStyle: {\n    color: '#FF9800'\n  }\n}, {\n  label: 'Action',\n  name: 'Action',\n  headerStyle: {\n    color: '#FF9800'\n  }\n}];\nconst options = {\n  selectableRows: 'single',\n  filterType: \"dropdown\",\n  responsive: \"stacked\",\n  sortDirection: \"desc\",\n  disableToolbarSelect: true,\n  rowsPerPage: 10,\n  selectableRowsOnClick: true //     rowsSelected : this.state.selectedIndex,\n  //     onRowsSelect: (allRows) => {\n  //         let rows = this.state.selectedIndex;\n  //         rows[0] = allRows[0].dataIndex;\n  //         this.setState({\n  //           rowsSelected : this.state.info[allRows[0].dataIndex],\n  //           selectedIndex : rows,\n  //           name:this.state.info[allRows[0].dataIndex].name\n  //         }) // this is the row in your data source       \n  //    },\n\n};\nexport default class StudentMigration extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      channelCreation: \"\",\n      statelist: [],\n      centerList: [],\n      Selectedstate: \"\",\n      selectedCenterId: \"\",\n      studentInfo: [],\n      studentsToDisplay: [],\n      engDetailsTable: [],\n      engMasterTable: []\n    }; // this.handleStateChange = this.handleStateChange.bind(this);\n    // this.saveStudentDetails = this.saveStudentDetails.bind(this);\n    // this.discardUnwantedList = this.discardUnwantedList.bind(this);\n\n    fetchAllStateDetails().then(jsondata => {\n      let res = JSON.parse(jsondata.data);\n      console.log(res);\n      res.forEach(element => {\n        this.state.statelist.push({\n          'value': element.name,\n          'label': element.name\n        });\n      });\n    });\n  } // Dropdown for state\n\n\n  handleStateChange(selectname, event) {\n    const state = event;\n    this.setState({\n      selectedstate: state\n    });\n    fetchCenterByStateName(event).then(jsondata => {\n      let result = JSON.parse(jsondata.data);\n      var center = result.filter(key => key.isActive == \"Y\"); // console.log(center)\n\n      center.forEach(element => {\n        this.state.centerList.push({\n          \"value\": element.id,\n          \"label\": element.name\n        });\n      });\n    });\n  } // center List handler\n\n\n  handleCenterChange(selectname, event) {\n    this.setState({\n      selectedCenterId: event\n    });\n    fetchVirtualData(3049, \"Karnataka\", \"SR-STRIVE\").then(jsondata => {\n      let result = JSON.parse(jsondata.data);\n      console.log(result);\n    });\n  } //saving table data in student_details_table\n  // saveStudentDetails(engId) {\n  //   let index = this.state.studentInfo.findIndex((data) => data.EngagementId == engId);\n  //   let studentToBeUpdated = this.state.studentInfo[index];\n  //   console.log(studentToBeUpdated)\n  //   fetchStudentDetailsByEngagementId(engId).then((jsondata) => {\n  //     let res = JSON.parse(jsondata.data);\n  //     console.log(res[0])\n  //     if (res[0].centerId == 3049) {\n  //       updateStudentData(res[0].engagementId, res[0].dbUserId, UserContext.centerId, res[0].createdBy, res[0].updatedBy, \"Updated center from Virtual\", res[0].status, 0, \"\").then((jsondata) => {\n  //         let savedData = JSON.parse(jsondata.data);\n  //         if (savedData[0].engagementId == res[0].engagementId && savedData[0].centerId != '3049') {\n  //           alert(\"Student successfully migrated to !\" + UserContext.centerName)\n  //         }\n  //       });\n  //     }\n  //     else {\n  //       alert('Student is already assigned to some other Center')\n  //     }\n  //   })\n  // }\n  // remove unwanted table data \n\n\n  async discardUnwantedList(master) {\n    var dataToBeDisplayed = [];\n    var studentDetails = [];\n    console.log('Checkpoint 1');\n    await master.map((data, id) => {\n      console.log('Checkpoint 2');\n      fetchStudentDetailsByEngagementId(data.EngagementId).then(jsondata => {\n        console.log('Checkpoint 2.5');\n        let result = JSON.parse(jsondata.data);\n\n        if (result[0].centerId == '3049') {\n          console.log(\"data to be saved ===> \", data);\n          var details = {\n            \"EngagementId\": data.EngagementId,\n            \"Name\": data.Name,\n            \"Dob\": data.Dob,\n            \"PrimaryContactNumber\": data.PrimaryContactNumber,\n            \"PermAddressLine1\": data.PermAddressLine1,\n            \"PermCityName\": data.PermCityName,\n            \"PermPincode\": data.PermPincode,\n            \"Action\": /*#__PURE__*/React.createElement(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: () => this.saveStudentDetails(data.EngagementId),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 23\n              }\n            }, \"Save\")\n          };\n          dataToBeDisplayed.push(details); // this.state.studentInfo.push(details);\n        } else {\n          console.log(\"this data is to be deleted ===> \", data);\n          studentDetails.push(result[0]); // this.state.engDetailsTable.push(data)\n        }\n      });\n    });\n    this.setState({\n      studentInfo: dataToBeDisplayed,\n      studentsToDisplay: dataToBeDisplayed\n    });\n    console.log(this.state);\n    console.log('Checkpoint 3');\n  } //Getting the info of the table data\n\n\n  getDetails() {\n    var engMasterTable = [];\n    var virtualData = [];\n    var dataToBeDisplayed = [];\n    fetchVirtualData(\"3049\", this.state.Selectedstate).then(jsondata => {\n      console.log('Checkpoint 0.5');\n      let res = JSON.parse(jsondata.data);\n      engMasterTable = res;\n      this.setState({\n        engMasterTable: res\n      });\n      console.log(\"master table ===> \", engMasterTable);\n      this.discardUnwantedList(engMasterTable); //  const x = async ()=>{\n      //   console.log(\"hello\")\n      //   const wait = await this.discardUnwantedList(engMasterTable);\n      // }\n\n      res.map((data, id) => {\n        //   fetchStudentDetailsByEngagementId(data.EngagementId).then((jsondata)=>{\n        console.log('Checkpoint 0.75'); //       let result = JSON.parse(jsondata.data);  \n        //       // console.log(result)\n        //       this.state.engDetailsTable.push(result[0]);\n        //       if(result[0].centerId=='3049'){\n        //         var details =\n        //           {\n        //               \"EngagementId\": data.EngagementId,\n        //               \"Name\": data.Name ,\n        //               \"Dob\": data.Dob ,\n        //               \"PrimaryContactNumber\": data.PrimaryContactNumber ,\n        //               \"PermAddressLine1\": data.PermAddressLine1 ,\n        //               \"PermCityName\": data.PermCityName ,\n        //               \"PermPincode\": data.PermPincode ,\n        //               \"Action\":<Button variant=\"contained\" color=\"primary\" onClick={ () => this.saveStudentDetails(data.EngagementId) }>Save</Button>\n        //           }\n        //         dataToBeDisplayed.push(details);\n        //         this.state.engDetailsTable.push( details );\n        //       }\n        // })\n\n        var details = {\n          \"EngagementId\": data.EngagementId,\n          \"Name\": data.Name,\n          \"Dob\": data.Dob,\n          \"PrimaryContactNumber\": data.PrimaryContactNumber,\n          \"PermAddressLine1\": data.PermAddressLine1,\n          \"PermCityName\": data.PermCityName,\n          \"PermPincode\": data.PermPincode,\n          \"Action\": /*#__PURE__*/React.createElement(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: () => this.saveStudentDetails(data.EngagementId),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 21\n            }\n          }, \"Save\")\n        };\n        virtualData.push(details); // this.discardUnwantedList(virtualData)\n      }); // console.log(\" details table ===> \",engDetailsTable)\n      // console.log(\"data to display ===> \"+dataToBeDisplayed)\n      // this.setState({ engDetailsTable,\n      //                 studentInfo: dataToBeDisplayed })\n\n      console.log('Checkpoint 0.9'); // this.discardUnwantedList(engMasterTable);\n\n      this.setState({\n        studentInfo: virtualData\n      });\n    }); // this.discardUnwantedList(engMasterTable, engDetailsTable);\n    // console.log(this.state)\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 13\n      }\n    }, \"State\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"Selectedstate\",\n      id: \"Selectedstate\" //   key={this.state.Selectedstate || ''}\n      ,\n      options: this.state.statelist,\n      value: this.state.Selectedstate || '',\n      onChange: this.handleStateChange.bind(this, 'Selectedstate') //   helperText={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.label : ''}\n      //   error={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.value : ''}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"selectedcenter\",\n      id: \"centerId\",\n      options: this.state.centerList,\n      value: this.state.selectedcenter || '',\n      onChange: this.handleCenterChange.bind(this, 'Selectedstate'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MUIDataTable, {\n      title: \"Students\",\n      label: \"List of Students\",\n      data: this.state.studentInfo,\n      columns: columns,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/StudentMigration.js"],"names":["React","Component","UserContext","SingleSelect","Checkbox","InputLabel","Input","Grid","Button","fetchAllStateDetails","fetchCenterByStateName","fetchVirtualData","fetchStudentDetailsByEngagementId","updateStudentData","MUIDataTable","forEach","serviceEndPoint","isSessionValid","isTokenValid","regenerateToken","columns","label","name","options","sortDirection","headerStyle","color","selectableRows","filterType","responsive","disableToolbarSelect","rowsPerPage","selectableRowsOnClick","StudentMigration","constructor","props","state","channelCreation","statelist","centerList","Selectedstate","selectedCenterId","studentInfo","studentsToDisplay","engDetailsTable","engMasterTable","then","jsondata","res","JSON","parse","data","console","log","element","push","handleStateChange","selectname","event","setState","selectedstate","result","center","filter","key","isActive","id","handleCenterChange","discardUnwantedList","master","dataToBeDisplayed","studentDetails","map","EngagementId","centerId","details","Name","Dob","PrimaryContactNumber","PermAddressLine1","PermCityName","PermPincode","saveStudentDetails","getDetails","virtualData","render","width","bind","selectedcenter"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport UserContext from '../components/GolbalContext'\r\nimport { SingleSelect } from \"react-select-material-ui\";\r\nimport { Checkbox, InputLabel, Input, Grid, Button } from '@material-ui/core';\r\nimport { fetchAllStateDetails, fetchCenterByStateName, fetchVirtualData, fetchStudentDetailsByEngagementId, updateStudentData } from './../util/api';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { forEach } from 'underscore';\r\nimport { serviceEndPoint } from './../util/serviceEndPoint';\r\nimport { isSessionValid, isTokenValid } from './../util/session.js';\r\nimport { regenerateToken } from './../util/validation';\r\n\r\nconst columns = [\r\n  {\r\n    label: 'Engagement Id', name: 'EngagementId', options: {\r\n      sortDirection: 'desc'\r\n    }, headerStyle: { color: '#FF9800' }\r\n  },\r\n  // {label: 'Name', name: 'first_name',options : {    // not showing the value on fromt end\r\n  //   sortDirection : 'desc',display: false\r\n  // },headerStyle: {color:'#FF9800'}},\r\n  { label: 'Name', name: 'Name', headerStyle: { color: '#FF9800' } },\r\n  { label: 'Date Of Birth', name: 'Dob', headerStyle: { color: '#FF9800' } },\r\n  { label: 'Contact Number', name: 'PrimaryContactNumber', headerStyle: { color: '#FF9800' } },\r\n  { label: 'Address', name: 'PermAddressLine1', headerStyle: { color: '#FF9800' } },\r\n  { label: 'City', name: 'PermCityName', headerStyle: { color: '#FF9800' } },\r\n  { label: 'Pin code', name: 'PermPincode', headerStyle: { color: '#FF9800' } },\r\n  { label: 'Action', name: 'Action', headerStyle: { color: '#FF9800' } }\r\n]\r\n\r\nconst options = {\r\n\r\n  selectableRows: 'single',\r\n\r\n  filterType: \"dropdown\",\r\n  responsive: \"stacked\",\r\n  sortDirection: \"desc\",\r\n  disableToolbarSelect: true,\r\n  rowsPerPage: 10,\r\n  selectableRowsOnClick: true,\r\n  //     rowsSelected : this.state.selectedIndex,\r\n  //     onRowsSelect: (allRows) => {\r\n  //         let rows = this.state.selectedIndex;\r\n  //         rows[0] = allRows[0].dataIndex;\r\n  //         this.setState({\r\n  //           rowsSelected : this.state.info[allRows[0].dataIndex],\r\n  //           selectedIndex : rows,\r\n  //           name:this.state.info[allRows[0].dataIndex].name\r\n  //         }) // this is the row in your data source       \r\n  //    },\r\n};\r\nexport default class StudentMigration extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      channelCreation: \"\",\r\n      statelist: [],\r\n      centerList: [],\r\n      Selectedstate: \"\",\r\n      selectedCenterId: \"\",\r\n      studentInfo: [],\r\n      studentsToDisplay: [],\r\n      engDetailsTable: [],\r\n      engMasterTable: [],\r\n    }\r\n    // this.handleStateChange = this.handleStateChange.bind(this);\r\n    // this.saveStudentDetails = this.saveStudentDetails.bind(this);\r\n    // this.discardUnwantedList = this.discardUnwantedList.bind(this);\r\n    fetchAllStateDetails().then((jsondata) => {\r\n      let res = JSON.parse(jsondata.data)\r\n      console.log(res)\r\n      res.forEach(element => {\r\n        this.state.statelist.push({\r\n          'value': element.name,\r\n          'label': element.name,\r\n        })\r\n      });\r\n    })\r\n  }\r\n\r\n  // Dropdown for state\r\n  handleStateChange(selectname, event) {\r\n\r\n    const state = event\r\n    this.setState({ selectedstate: state })\r\n    fetchCenterByStateName(event).then((jsondata) => {\r\n      let result = JSON.parse(jsondata.data)\r\n      var center = result.filter((key) => key.isActive == \"Y\")\r\n      // console.log(center)\r\n      center.forEach(element => {\r\n        this.state.centerList.push({\r\n          \"value\": element.id,\r\n          \"label\": element.name\r\n        })\r\n      })\r\n    })\r\n  }\r\n  // center List handler\r\n  handleCenterChange(selectname, event) {\r\n    this.setState({ selectedCenterId: event })\r\n    fetchVirtualData(3049,\"Karnataka\",\"SR-STRIVE\").then((jsondata)=>{\r\n      let result = JSON.parse(jsondata.data)\r\n      console.log(result)\r\n    })\r\n  }\r\n  //saving table data in student_details_table\r\n  // saveStudentDetails(engId) {\r\n  //   let index = this.state.studentInfo.findIndex((data) => data.EngagementId == engId);\r\n  //   let studentToBeUpdated = this.state.studentInfo[index];\r\n  //   console.log(studentToBeUpdated)\r\n  //   fetchStudentDetailsByEngagementId(engId).then((jsondata) => {\r\n  //     let res = JSON.parse(jsondata.data);\r\n  //     console.log(res[0])\r\n  //     if (res[0].centerId == 3049) {\r\n  //       updateStudentData(res[0].engagementId, res[0].dbUserId, UserContext.centerId, res[0].createdBy, res[0].updatedBy, \"Updated center from Virtual\", res[0].status, 0, \"\").then((jsondata) => {\r\n  //         let savedData = JSON.parse(jsondata.data);\r\n  //         if (savedData[0].engagementId == res[0].engagementId && savedData[0].centerId != '3049') {\r\n  //           alert(\"Student successfully migrated to !\" + UserContext.centerName)\r\n  //         }\r\n  //       });\r\n  //     }\r\n  //     else {\r\n  //       alert('Student is already assigned to some other Center')\r\n  //     }\r\n  //   })\r\n  // }\r\n\r\n  // remove unwanted table data \r\n  async discardUnwantedList(master) {\r\n    var dataToBeDisplayed = [];\r\n    var studentDetails = [];\r\n    console.log('Checkpoint 1');\r\n    await master.map((data, id) => {\r\n      console.log('Checkpoint 2');\r\n      fetchStudentDetailsByEngagementId(data.EngagementId).then((jsondata) => {\r\n        console.log('Checkpoint 2.5');\r\n        let result = JSON.parse(jsondata.data)\r\n        if (result[0].centerId == '3049') {\r\n          console.log(\"data to be saved ===> \", data)\r\n          var details =\r\n          {\r\n            \"EngagementId\": data.EngagementId,\r\n            \"Name\": data.Name,\r\n            \"Dob\": data.Dob,\r\n            \"PrimaryContactNumber\": data.PrimaryContactNumber,\r\n            \"PermAddressLine1\": data.PermAddressLine1,\r\n            \"PermCityName\": data.PermCityName,\r\n            \"PermPincode\": data.PermPincode,\r\n            \"Action\": <Button variant=\"contained\" color=\"primary\" onClick={() => this.saveStudentDetails(data.EngagementId)}>Save</Button>\r\n          }\r\n          dataToBeDisplayed.push(details);\r\n          // this.state.studentInfo.push(details);\r\n        }\r\n        else {\r\n          console.log(\"this data is to be deleted ===> \", data)\r\n          studentDetails.push(result[0]);\r\n          // this.state.engDetailsTable.push(data)\r\n        }\r\n      })\r\n    })\r\n\r\n    this.setState({ studentInfo: dataToBeDisplayed, studentsToDisplay: dataToBeDisplayed });\r\n    console.log(this.state)\r\n    console.log('Checkpoint 3');\r\n\r\n  }\r\n\r\n  //Getting the info of the table data\r\n  getDetails() {\r\n    var engMasterTable = [];\r\n    var virtualData = [];\r\n    var dataToBeDisplayed = [];\r\n    fetchVirtualData(\"3049\", this.state.Selectedstate).then((jsondata) => {\r\n      console.log('Checkpoint 0.5');\r\n      let res = JSON.parse(jsondata.data)\r\n      engMasterTable = res;\r\n      this.setState({ engMasterTable: res })\r\n      console.log(\"master table ===> \", engMasterTable);\r\n      this.discardUnwantedList(engMasterTable);\r\n      //  const x = async ()=>{\r\n      //   console.log(\"hello\")\r\n      //   const wait = await this.discardUnwantedList(engMasterTable);\r\n      // }\r\n      res.map((data, id) => {\r\n        //   fetchStudentDetailsByEngagementId(data.EngagementId).then((jsondata)=>{\r\n        console.log('Checkpoint 0.75');\r\n        //       let result = JSON.parse(jsondata.data);  \r\n        //       // console.log(result)\r\n        //       this.state.engDetailsTable.push(result[0]);\r\n        //       if(result[0].centerId=='3049'){\r\n        //         var details =\r\n        //           {\r\n        //               \"EngagementId\": data.EngagementId,\r\n        //               \"Name\": data.Name ,\r\n        //               \"Dob\": data.Dob ,\r\n        //               \"PrimaryContactNumber\": data.PrimaryContactNumber ,\r\n        //               \"PermAddressLine1\": data.PermAddressLine1 ,\r\n        //               \"PermCityName\": data.PermCityName ,\r\n        //               \"PermPincode\": data.PermPincode ,\r\n        //               \"Action\":<Button variant=\"contained\" color=\"primary\" onClick={ () => this.saveStudentDetails(data.EngagementId) }>Save</Button>\r\n        //           }\r\n        //         dataToBeDisplayed.push(details);\r\n        //         this.state.engDetailsTable.push( details );\r\n        //       }\r\n        // })\r\n        var details =\r\n        {\r\n          \"EngagementId\": data.EngagementId,\r\n          \"Name\": data.Name,\r\n          \"Dob\": data.Dob,\r\n          \"PrimaryContactNumber\": data.PrimaryContactNumber,\r\n          \"PermAddressLine1\": data.PermAddressLine1,\r\n          \"PermCityName\": data.PermCityName,\r\n          \"PermPincode\": data.PermPincode,\r\n          \"Action\": <Button variant=\"contained\" color=\"primary\" onClick={() => this.saveStudentDetails(data.EngagementId)}>Save</Button>\r\n        }\r\n        virtualData.push(details);\r\n        // this.discardUnwantedList(virtualData)\r\n      });\r\n      // console.log(\" details table ===> \",engDetailsTable)\r\n      // console.log(\"data to display ===> \"+dataToBeDisplayed)\r\n      // this.setState({ engDetailsTable,\r\n      //                 studentInfo: dataToBeDisplayed })\r\n      console.log('Checkpoint 0.9');\r\n      // this.discardUnwantedList(engMasterTable);\r\n      this.setState({\r\n        studentInfo: virtualData\r\n      });\r\n    });\r\n\r\n    // this.discardUnwantedList(engMasterTable, engDetailsTable);\r\n\r\n    // console.log(this.state)\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ width: '100%' }}>\r\n        <Grid container>\r\n          <Grid item xs={12}> </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} >State</InputLabel>\r\n            <SingleSelect\r\n              name=\"Selectedstate\" id=\"Selectedstate\"\r\n              //   key={this.state.Selectedstate || ''}\r\n              options={this.state.statelist}\r\n              value={this.state.Selectedstate || ''}\r\n              onChange={this.handleStateChange.bind(this, 'Selectedstate')}\r\n            //   helperText={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.label : ''}\r\n            //   error={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.value : ''}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}></Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <SingleSelect\r\n              name=\"selectedcenter\" id=\"centerId\"\r\n              options={this.state.centerList}\r\n              value={this.state.selectedcenter || ''}\r\n              onChange={this.handleCenterChange.bind(this, 'Selectedstate')}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <br /> <br />\r\n        <br />\r\n        <Grid>\r\n          <MUIDataTable title={\"Students\"} label={\"List of Students\"} data={this.state.studentInfo}\r\n            columns={columns} options={options}\r\n          />\r\n        </Grid>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}