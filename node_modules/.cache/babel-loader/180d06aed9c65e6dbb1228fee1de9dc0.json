{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\BasicForm.js\";\nimport React, { Component } from 'react';\nimport { useState } from 'react';\nimport './../App.css';\nimport './../assets/css/login-style.css';\nimport './../assets/css/font-awesome.min.css';\nimport underscore from 'underscore'; //import ChartistGraph from \"react-chartist\";\n// @material-ui/core\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { captureStudentEngagementDetails, findByAadharNo, submitAddressData, subMitBasicData, fetchAddressData, fetchBasicData, fetchAddressDetailsBasedOnPincode } from './../util/api';\nimport { regenerateToken } from './../util/validation';\nimport { checkButton, validateBirthDate, validateEmail, validateContact, validatePassingYear, validateNames, validateAadhar, validatePincode, roleBasedReadonly, isAadharNoDuplicate } from './../util/validation';\nimport Icon from \"@material-ui/core/Icon\"; // @material-ui/icons\n//import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Store from \"@material-ui/icons/Store\";\nimport Warning from \"@material-ui/icons/Warning\";\nimport DateRange from \"@material-ui/icons/DateRange\";\nimport LocalOffer from \"@material-ui/icons/LocalOffer\";\nimport Update from \"@material-ui/icons/Update\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport AccessTime from \"@material-ui/icons/AccessTime\";\nimport Accessibility from \"@material-ui/icons/Accessibility\";\nimport BugReport from \"@material-ui/icons/BugReport\";\nimport Code from \"@material-ui/icons/Code\";\nimport Cloud from \"@material-ui/icons/Cloud\";\nimport Button from '@material-ui/core/Button';\nimport { FormControl, FormControlLabel, InputLabel, Switch, Input, Grid, TextField } from '@material-ui/core';\nimport styles from \"../components/components.js\";\nimport { CommunicationCallMerge } from 'material-ui/svg-icons';\nimport { SingleSelect } from \"react-select-material-ui\";\nimport callMerge from 'material-ui/svg-icons/communication/call-merge';\nimport UserContext from '../components/GolbalContext'; //import MasterData from './../components/MasterData.js'\n\nimport { serviceEndPoint } from './../util/serviceEndPoint';\n\nclass BasicForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePresentPermanentAddress = name => event => {\n      this.setState({ ...this.state,\n        [name]: event.target.checked\n      });\n\n      if (event.target.checked == true) {\n        this.getPincodeData2(\"pincode\", this.state.address.pincode);\n        this.setState({\n          address2: { // ...this.state.address,\n            ...this.state.address2,\n            \"type\": \"P\",\n            \"addressLine1\": this.state.address.addressLine1,\n            \"addressLine2\": this.state.address.addressLine2,\n            \"pincode\": this.state.address.pincode,\n            \"villageName\": this.state.address.villageName,\n            \"cityName\": this.state.address.cityName,\n            \"district\": this.state.address.district,\n            \"state\": this.state.address.state\n          },\n          erroradd2: this.state.erroradd1\n        });\n      } else {\n        this.state = { ...this.state,\n          state2: [],\n          district2: [],\n          village2: [],\n          city2: []\n        };\n        this.setState({\n          addressTmp: { ...this.state.addressTmp,\n            \"id\": this.state.address2.id\n          }\n        }, () => {\n          this.setState({\n            address2: this.state.addressTmp\n          });\n        });\n      }\n    };\n\n    this.mySubmitHandler = event => {\n      event.preventDefault();\n      this.state.disabled = true;\n      this.validateAll(); // authentication response and redirect to error or dashbaord page\n\n      this.setState({\n        errors: this.state.errors,\n        erroradd1: this.state.erroradd1,\n        erroradd2: this.state.erroradd2\n      });\n\n      if (checkButton(this.state.errors) && checkButton(this.state.erroradd2) && checkButton(this.state.erroradd1)) {\n        this.submitStudent();\n      } else {\n        this.state.disabled = true;\n      }\n    };\n\n    this.state = {\n      salutation: [{\n        value: 'Mr.',\n        label: 'Mr.'\n      }, {\n        value: 'Mrs.',\n        label: 'Mrs.'\n      }, {\n        value: 'Miss',\n        label: 'Miss'\n      }],\n      qual: [{\n        value: 'Uneducated',\n        label: 'Uneducated'\n      }, {\n        value: 'Below 5th Standard',\n        label: 'Below 5th Standard'\n      }, {\n        value: '5th Standard Passed',\n        label: '5th Standard Passed'\n      }, {\n        value: '7th Standard Passed',\n        label: '7th Standard Passed'\n      }, {\n        value: '8th Standard Failed',\n        label: '8th Standard Failed'\n      }, {\n        value: '8th Standard Passed',\n        label: '8th Standard Passed'\n      }, {\n        value: '9th Standard Passed',\n        label: '9th Standard Passed'\n      }, {\n        value: '10th Standard Passed',\n        label: '10th Standard Passed'\n      }, {\n        value: '12th Standard',\n        label: '12th Standard'\n      }, {\n        value: 'Below 12th Standard',\n        label: 'Below 12th Standard'\n      }, {\n        value: '12th Passed - science',\n        label: '12th Passed - science'\n      }, {\n        value: '12th Passed - Non-science',\n        label: '12th Passed - Non-science'\n      }, {\n        value: '12th Standard Passed',\n        label: '12th Standard Passed'\n      }, {\n        value: 'CSTI Certified',\n        label: 'CSTI Certified'\n      }, {\n        value: 'Diploma',\n        label: 'Diploma'\n      }, {\n        value: 'ITI',\n        label: 'ITI'\n      }, {\n        value: 'Professional',\n        label: 'Professional'\n      }, {\n        value: 'Degree',\n        label: 'Degree'\n      }, {\n        value: 'BSC - science',\n        label: 'BSC - science'\n      }, {\n        value: 'BSC - Non-science',\n        label: 'BSC - Non-science'\n      }, {\n        value: '2 Years Diploma',\n        label: '2 Years Diploma'\n      }, {\n        value: 'Bachelors Degree 2nd Year',\n        label: 'Bachelors Degree 2nd Year'\n      }, {\n        value: 'Bachelors Degree 3rd Year',\n        label: 'Bachelors Degree 3rd Year'\n      }, {\n        value: 'Bachelors Degree 4th Year',\n        label: 'Bachelors Degree 4th Year'\n      }, {\n        value: 'Bachelors Degree 5th Year',\n        label: 'Bachelors Degree 5th Year'\n      }, {\n        value: 'Graduate',\n        label: 'Graduate'\n      }, {\n        value: 'Masters Degree 1st Year',\n        label: 'Masters Degree 1st Year'\n      }, {\n        value: 'Masters Degree 2nd Year',\n        label: 'Masters Degree 2nd Year'\n      }, {\n        value: 'Post Graduate',\n        label: 'Post Graduate'\n      }],\n      gender: [{\n        value: 'Male',\n        label: 'Male'\n      }, {\n        value: 'Female',\n        label: 'Female'\n      }, {\n        value: 'Others',\n        label: 'Others'\n      }],\n      religion: [{\n        value: 'Hindu',\n        label: 'Hindu'\n      }, {\n        value: 'Muslim',\n        label: 'Muslim'\n      }, {\n        value: 'Christian',\n        label: 'Christian'\n      }, {\n        value: 'Sikh',\n        label: 'Sikh'\n      }, {\n        value: 'Buddhist',\n        label: 'Buddhist'\n      }, {\n        value: 'Jews',\n        label: 'Jews'\n      }, {\n        value: 'Others',\n        label: 'Others'\n      }],\n      category: [{\n        value: 'Gen',\n        label: 'Gen'\n      }, {\n        value: 'OBC',\n        label: 'OBC'\n      }, {\n        value: 'SC',\n        label: 'SC'\n      }, {\n        value: 'ST',\n        label: 'ST'\n      }, {\n        value: 'PH',\n        label: 'PH'\n      }, {\n        value: 'DNT',\n        label: 'DNT'\n      }, {\n        value: 'IDWTDC',\n        label: 'IDWTDC'\n      }, {\n        value: 'VJ',\n        label: 'VJ'\n      }, {\n        value: 'SBC',\n        label: 'SBC'\n      }, {\n        value: 'NT',\n        label: 'NT'\n      }],\n      channel: [{\n        value: 'Flyer/Sticker/Banner/Poster',\n        label: 'Flyer/Sticker/Banner/Poster'\n      }, {\n        value: 'Call from Tata STRIVE',\n        label: 'Call from Tata STRIVE'\n      }, {\n        value: 'Reference - Employee',\n        label: 'Reference - Employee'\n      }, {\n        value: 'NGO - Mobilisation Partner',\n        label: 'NGO - Mobilisation Partner'\n      }, {\n        value: 'Reference - Influencer',\n        label: 'Reference - Influencer'\n      }, {\n        value: 'Reference - Learner',\n        label: 'Reference - Learner'\n      }, {\n        value: 'Other',\n        label: 'Other'\n      }, {\n        value: 'School/College/University',\n        label: 'School/College/University'\n      }, {\n        value: 'Social Media/ SMS',\n        label: 'Social Media/ SMS'\n      }, {\n        value: 'Advertisement Media',\n        label: 'Advertisement Media'\n      }, {\n        value: 'Community Activity',\n        label: 'Community Activity'\n      }, {\n        value: 'Call Center',\n        label: 'Call Center'\n      }, {\n        value: 'Job Fairs/ Community',\n        label: 'Job Fairs/ Community'\n      }, {\n        value: 'Corporate Support',\n        label: 'Corporate Support'\n      }, {\n        value: 'TS - Website Lead',\n        label: 'TS - Website Lead'\n      }, {\n        value: 'Walk-in',\n        label: 'Walk-in'\n      }],\n      bloodgroup: [{\n        value: 'A +ve',\n        label: 'A +ve'\n      }, {\n        value: 'A -ve',\n        label: 'A -ve'\n      }, {\n        value: 'B +ve',\n        label: 'B +ve'\n      }, {\n        value: 'B -ve',\n        label: 'B -ve'\n      }, {\n        value: 'O +ve',\n        label: 'O +ve'\n      }, {\n        value: 'O -ve',\n        label: 'O -ve'\n      }, {\n        value: 'AB +ve',\n        label: 'AB +ve'\n      }, {\n        value: 'AB -ve',\n        label: 'AB -ve'\n      }],\n      bplStatus: [{\n        value: 'BPL',\n        label: 'BPL'\n      }, {\n        value: 'APL',\n        label: 'APL'\n      }, {\n        value: 'Antyodaya',\n        label: 'Antyodaya'\n      }],\n      state1: [],\n      district1: [],\n      state2: [],\n      district2: [],\n      pincodes: [],\n      city1: [],\n      village1: [],\n      city2: [],\n      village2: [],\n      checked: false,\n      disabled: false,\n      flag: \"0\",\n      errors: {},\n      erroradd1: {},\n      erroradd2: {},\n      engagementId: props.engagementId,\n      dbUserId: props.id,\n      basicData: {\n        createdBy: UserContext.userid,\n        mobilizedBy: UserContext.userid,\n        aadharNo: \"\",\n        salutation: \"\",\n        gender: \"\",\n        firstName: \"\",\n        middleName: \"\",\n        lastName: \"\",\n        highestQualification: \"\",\n        religion: \"\",\n        bplStatus: \"\",\n        bloodGroup: \"\",\n        passingYear: null,\n        primaryContactNumber: \"\",\n        secondaryContactNumber: null,\n        primaryEmailId: \"\",\n        secondaryEmailId: \"\",\n        category: \"\",\n        mobilizationChannel: \"\",\n        dob: \"\"\n      },\n      address: {\n        createdBy: UserContext.userid,\n        'isActive': 'Y',\n        'type': 'R',\n        pincode: \"\",\n        addressLine1: \"\",\n        addressLine2: \"\",\n        district: \"\",\n        state: \"\",\n        cityName: \"\",\n        villageName: \"\"\n      },\n      address2: {\n        createdBy: UserContext.userid,\n        'isActive': 'Y',\n        'type': 'P',\n        pincode: \"\",\n        addressLine1: \"\",\n        addressLine2: \"\",\n        district: \"\",\n        state: \"\",\n        cityName: \"\",\n        villageName: \"\"\n      },\n      addressTmp: {\n        id: '',\n        createdBy: UserContext.userid,\n        'isActive': 'Y',\n        'type': 'P',\n        pincode: \"\",\n        addressLine1: \"\",\n        addressLine2: \"\",\n        district: null,\n        state: null,\n        cityName: null,\n        villageName: null\n      }\n    };\n    this.updatedData = {\n      firstName: ''\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n    this.handleAddressInputChange = this.handleAddressInputChange.bind(this);\n    this.handleAddressSelectChange = this.handleAddressSelectChange.bind(this);\n    this.handleAddressInputChange2 = this.handleAddressInputChange2.bind(this);\n    this.handleAddressSelectChange2 = this.handleAddressSelectChange2.bind(this);\n    this.handlePresentPermanentAddress = this.handlePresentPermanentAddress.bind(this); //this.validateAll = this.validateAll.bind(this);\n\n    if (props.id != null && props.id != undefined) {\n      this.getBasicData(props.id);\n      this.getAddressData(props.id);\n    } // alert(this.state.dbUserId);\n\n  }\n\n  componentDidMount() {\n    roleBasedReadonly();\n\n    if (this.state.dbUserId != null && this.state.dbUserId != undefined) {\n      document.getElementById(\"aadharNo\").setAttribute(\"disabled\", true);\n    }\n  }\n\n  handleInputChange(event) {\n    this.setState({\n      \"disabled\": false\n    });\n    let flag = 0;\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      errors: { ...this.state.errors,\n        [name]: {\n          'label': \"\",\n          'value': false\n        }\n      }\n    });\n\n    if (name == \"dob\") {\n      let res = validateBirthDate(value);\n      this.setState({\n        errors: { ...this.state.errors,\n          [name]: {\n            'label': res,\n            'value': res == \"\" ? false : true\n          }\n        }\n      });\n    }\n\n    if (name == \"primaryEmailId\" || name == \"secondaryEmailId\") {\n      let res = validateEmail(name, value);\n      this.setState({\n        errors: { ...this.state.errors,\n          [name]: {\n            'label': res,\n            'value': res == \"\" ? false : true\n          }\n        }\n      });\n    }\n\n    if (name == \"secondaryContactNumber\" || name == \"primaryContactNumber\") {\n      let res = validateContact(name, value);\n      this.setState({\n        errors: { ...this.state.errors,\n          [name]: {\n            'label': res,\n            'value': res == \"\" ? false : true\n          }\n        }\n      });\n    }\n\n    if (name == \"firstName\" || name == \"middleName\" || name == \"lastName\") {\n      let res = validateNames(value);\n      this.setState({\n        errors: { ...this.state.errors,\n          [name]: {\n            'label': res,\n            'value': res == \"\" ? false : true\n          }\n        }\n      });\n    }\n\n    if (name == \"aadharNo\") {\n      let res = validateAadhar(value);\n\n      if (!res) {\n        findByAadharNo(value).then(jsondata => {\n          let studentDetails = JSON.parse(jsondata.data);\n\n          if (studentDetails.length > 0) {\n            res = \"student is already registered with this aadhar number\";\n            this.setState({\n              errors: { ...this.state.errors,\n                [name]: {\n                  'label': res,\n                  'value': res == \"\" ? false : true\n                }\n              }\n            });\n          }\n        });\n      }\n\n      this.setState({\n        errors: { ...this.state.errors,\n          [name]: {\n            'label': res,\n            'value': res == \"\" ? false : true\n          }\n        }\n      });\n    }\n\n    if (name == \"passingYear\") {\n      let res = validatePassingYear(value, this.state.basicData.dob, this.state.basicData.highestQualification);\n      this.setState({\n        basicData: { ...this.state.basicData,\n          [name]: res == \"\" ? value : null\n        },\n        errors: { ...this.state.errors,\n          [name]: {\n            'label': res,\n            'value': res == \"\" ? false : true\n          }\n        }\n      });\n    }\n\n    this.setState({\n      basicData: { ...this.state.basicData,\n        [name]: value\n      }\n    });\n  }\n\n  handleSelectChange(selectname, event) {\n    this.setState({\n      \"disabled\": false\n    });\n\n    if (selectname == \"highestQualification\" && event == \"1\") {\n      this.state.basicData.passingYear = null;\n      this.state.errors.passingYear = {\n        \"label\": \"\",\n        \"value\": false\n      };\n      document.getElementById(\"passingYear\").setAttribute(\"disabled\", true);\n    } else if (selectname == \"highestQualification\") {\n      document.getElementById(\"passingYear\").removeAttribute(\"disabled\");\n    }\n\n    this.setState({\n      basicData: { ...this.state.basicData,\n        [selectname]: event\n      }\n    });\n    this.setState({\n      errors: { ...this.state.errors,\n        [selectname]: {\n          'label': \"\",\n          'value': false\n        }\n      }\n    });\n  }\n\n  handleAddressInputChange(event) {\n    this.setState({\n      \"disabled\": false\n    });\n    let flag = 0;\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      erroradd1: { ...this.state.errors,\n        [name]: {\n          'label': \"\",\n          'value': false\n        }\n      }\n    });\n    this.setState({\n      address: { ...this.state.address,\n        [name]: value\n      }\n    });\n  }\n\n  handleAddressSelectChange(selectname, event) {\n    this.setState({\n      \"disabled\": false\n    });\n    this.setState({\n      address: { ...this.state.address,\n        [selectname]: event\n      }\n    });\n    this.setState({\n      erroradd1: { ...this.state.erroradd1,\n        [selectname]: {\n          'label': \"\",\n          'value': false\n        }\n      }\n    });\n  }\n\n  handleAddressInputChange2(event) {\n    this.setState({\n      \"disabled\": false\n    });\n    let flag = 0;\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      erroradd2: { ...this.state.erroradd1,\n        [name]: {\n          'label': \"\",\n          'value': false\n        }\n      }\n    });\n    this.setState({\n      address2: { ...this.state.address2,\n        [name]: value\n      }\n    });\n  }\n\n  handleAddressSelectChange2(selectname, event) {\n    this.setState({\n      \"disabled\": false\n    });\n    this.setState({\n      address2: { ...this.state.address2,\n        [selectname]: event\n      }\n    });\n    this.setState({\n      erroradd2: { ...this.state.erroradd2,\n        [selectname]: {\n          'label': \"\",\n          'value': false\n        }\n      }\n    });\n  }\n\n  getPincodeData(selectname, event) {\n    let value = 0;\n    let target = null;\n\n    try {\n      target = event.target;\n      value = target.value;\n    } catch (e) {\n      value = event;\n    }\n\n    let res = validatePincode(value);\n    this.setState({\n      erroradd1: { ...this.state.erroradd1,\n        \"pincode\": {\n          'label': res,\n          'value': res == \"\" ? false : true\n        }\n      }\n    });\n    this.setState({\n      address: { ...this.state.address,\n        \"pincode\": value\n      }\n    });\n\n    if (value.length == 6) {\n      fetchAddressDetailsBasedOnPincode(value).then(jsondata => {\n        let jsonobjects = JSON.parse(jsondata.data);\n        let taluk = [];\n        let pincode = [];\n        let cityVillage = [];\n        let states = [];\n        let district = [];\n        jsonobjects.map(item => {\n          cityVillage.push({\n            label: item.cityVillage,\n            value: item.cityVillage\n          });\n        });\n        cityVillage = underscore.uniq(cityVillage, true, \"label\");\n        jsonobjects.map(item => {\n          taluk.push({\n            label: item.taluk.toString(),\n            value: item.taluk\n          });\n        });\n        taluk = underscore.uniq(taluk, true, \"label\");\n        jsonobjects.map(item => {\n          states.push({\n            label: item.state,\n            value: item.state.toString()\n          });\n        });\n        states = underscore.uniq(states, true, \"label\");\n        jsonobjects.map(item => {\n          district.push({\n            label: item.district,\n            value: item.district.toString()\n          });\n        });\n        district = underscore.uniq(district, true, \"label\");\n        this.setState({\n          state1: states,\n          district1: district,\n          village1: cityVillage,\n          city1: taluk\n        });\n      });\n    }\n  }\n\n  getPincodeData2(selectname, event) {\n    let value = 0;\n    let target = null;\n\n    try {\n      target = event.target;\n      value = target.value;\n    } catch (e) {\n      value = event;\n    }\n\n    let res = validatePincode(value);\n    this.setState({\n      erroradd2: { ...this.state.erroradd2,\n        \"pincode\": {\n          'label': res,\n          'value': res == \"\" ? false : true\n        }\n      }\n    });\n    this.setState({\n      address2: { ...this.state.address2,\n        \"pincode\": value\n      }\n    });\n\n    if (value.length == 6) {\n      fetchAddressDetailsBasedOnPincode(value).then(jsondata => {\n        let jsonobjects = JSON.parse(jsondata.data);\n        let taluk = [];\n        let pincode = [];\n        let cityVillage = [];\n        let states = [];\n        let district = [];\n        jsonobjects.map(item => {\n          cityVillage.push({\n            label: item.cityVillage,\n            value: item.cityVillage\n          });\n        });\n        cityVillage = underscore.uniq(cityVillage, true, \"label\");\n        jsonobjects.map(item => {\n          taluk.push({\n            label: item.taluk,\n            value: item.taluk\n          });\n        });\n        taluk = underscore.uniq(taluk, true, \"label\");\n        jsonobjects.map(item => {\n          states.push({\n            label: item.state,\n            value: item.state\n          });\n        });\n        states = underscore.uniq(states, true, \"label\");\n        jsonobjects.map(item => {\n          district.push({\n            label: item.district,\n            value: item.district\n          });\n        });\n        district = underscore.uniq(district, true, \"label\");\n        this.setState({\n          state2: states,\n          district2: district,\n          village2: cityVillage,\n          city2: taluk\n        });\n      });\n    }\n  }\n\n  validateAll() {\n    var nonMandatoryFields = [\"addressLine2\", \"createdBy\", \"mobilizedBy\", \"middleName\", \"dbUserId\", \"secondaryContactNumber\", \"secondaryEmailId\", \"passingYear\", \"bloodGroup\", \"mobilizationPlace\"];\n    var json = this.state.basicData;\n    var jsonaddress1 = this.state.address;\n    var jsonaddress2 = this.state.address2;\n    var errors = this.state.errors;\n    var erroradd1 = this.state.erroradd1;\n    var erroradd2 = this.state.erroradd2;\n    Object.keys(json).forEach(function (key) {\n      if (!nonMandatoryFields.includes(key) && (json[key] == undefined || json[key] == '')) {\n        let res = \"Please fill out this field\";\n        errors[key] = {\n          'label': res,\n          'value': res == \"\" ? false : true\n        };\n      }\n    });\n    Object.keys(jsonaddress1).forEach(function (key) {\n      if (!nonMandatoryFields.includes(key) && (jsonaddress1[key] == undefined || jsonaddress1[key] == '')) {\n        let res = \"Please fill out this field\";\n        erroradd1[key] = {\n          'label': res,\n          'value': res == \"\" ? false : true\n        };\n      }\n    });\n    Object.keys(jsonaddress2).forEach(function (key) {\n      if (!nonMandatoryFields.includes(key) && (jsonaddress2[key] == undefined || jsonaddress2[key] == '')) {\n        let res = \"Please fill out this field\";\n        erroradd2[key] = {\n          'label': res,\n          'value': res == \"\" ? false : true\n        };\n      }\n    }); //alert(JSON.stringify(errors));\n\n    this.state.errors = errors;\n    this.state.erroradd1 = erroradd1;\n    this.state.erroradd2 = erroradd2;\n  }\n\n  getBasicData(id) {\n    let formData = new FormData(); //alert(JSON.stringify(this.state));\n    //formData.append('data', '{\"token\" : \"'+this.state.token+'\", \"action\" : \"'+this.state.action+'\", \"data\" : [{\"userName\":\"'+this.state.email+'\",\"password\":\"'+this.state.password+'\"}]}');\n\n    formData.append('data', '{\"token\" : \"' + \"1234\" + '\", \"action\" : \"' + \"viewBeneficiaryDetailsById\" + '\", \"data\" : [{\"dbUserId\" : ' + id + '}]}');\n\n    try {\n      return fetch(serviceEndPoint.studentServiceEndPoint, {\n        method: \"POST\",\n        headers: {\n          'Authorization': 'Bearer ' + UserContext.token\n        },\n        body: formData\n      }).then(response => response.json()).then(jsondata => {\n        console.log(jsondata);\n\n        if (jsondata.appError == null) {\n          let jsonobjects = JSON.parse(jsondata.data);\n          console.log(jsonobjects);\n          Object.keys(jsonobjects[0]).forEach(function (key) {\n            this.setState({\n              basicData: { ...this.state.basicData,\n                [key]: jsonobjects[0][key].toString()\n              }\n            });\n          }.bind(this)); //alert(JSON.stringify(this.state));\n        } else {\n          console.log(\"error\");\n        }\n      });\n    } catch (error) {\n      console.log(\"XXXXXX\" + error);\n    }\n  }\n\n  getAddressData(id) {\n    fetchAddressData(id).then(jsondata => {\n      console.log(jsondata);\n\n      if (jsondata.appError == null) {\n        let jsonobjects = JSON.parse(jsondata.data);\n        console.log(jsonobjects);\n        Object.keys(jsonobjects[0]).forEach(function (key) {\n          if (jsonobjects[0].type == \"R\") {\n            this.setState({\n              address: { ...this.state.address,\n                [key]: jsonobjects[0][key].toString()\n              }\n            });\n          }\n\n          if (jsonobjects[0].type == \"P\") this.setState({\n            address2: { ...this.state.address2,\n              [key]: jsonobjects[0][key].toString()\n            } // ,[\"prAddId\"] : jsonobjects[0].id\n\n          });\n        }.bind(this));\n\n        if (typeof jsonobjects[1] != \"undefined\") {\n          Object.keys(jsonobjects[1]).forEach(function (key) {\n            if (jsonobjects[1].type == \"R\") {\n              this.setState({\n                address: { ...this.state.address,\n                  [key]: jsonobjects[1][key].toString()\n                }\n              });\n            }\n\n            if (jsonobjects[1].type == \"P\") this.setState({\n              address2: { ...this.state.address2,\n                [key]: jsonobjects[1][key].toString()\n              } // ,[\"prAddId\"] : jsonobjects[1].id\n\n            });\n          }.bind(this));\n        }\n\n        this.getPincodeData(\"pincode\", this.state.address.pincode);\n        this.getPincodeData2(\"pincode\", this.state.address2.pincode);\n\n        if (this.state.address.addressLine1 == this.state.address2.addressLine1 && this.state.address.pincode == this.state.address2.pincode) {\n          this.setState({ ...this.state,\n            \"checked\": true\n          });\n        }\n      } else {\n        console.log(\"error\");\n      }\n    });\n  }\n\n  submitStudent() {\n    let action = \"\";\n    const dbUserId = this.state.dbUserId == '' || this.state.dbUserId == null;\n\n    if (dbUserId) {\n      action = \"captureBeneficiaryDetails\";\n    } else {\n      action = \"updateBeneficiaryDetails\";\n      this.setState({\n        basicData: { ...this.state.basicData,\n          \"updatedBy\": UserContext.userid\n        }\n      });\n    } //alert(JSON.stringify(this.state.basicData));\n    //formData.append('data', '{\"token\" : \"'+this.state.token+'\", \"action\" : \"'+this.state.action+'\", \"data\" : [{\"userName\":\"'+this.state.email+'\",\"password\":\"'+this.state.password+'\"}]}');\n\n\n    subMitBasicData(action, this.state.basicData).then(jsondata => {\n      console.log(jsondata);\n\n      if (jsondata.appError == null) {\n        let jsonobjects = JSON.parse(jsondata.data);\n        console.log(jsonobjects); // alert(\"Successfully Mobilized\");\n        //this.props.history.push('/dashboard');\n\n        UserContext.dbUserId = jsonobjects[0].dbUserId;\n\n        if (action == 'captureBeneficiaryDetails') {\n          this.submitAddress(jsonobjects[0].dbUserId, this.state.address); // if(this.state.prAddId != undefined)\n          // {\n          //   this.setState({\n          //     address2 : {\n          //       ...this.state.address2,\n          //       \"id\" : this.state.prAddId\n          //     }\n          //   })\n          // }\n\n          this.submitAddress(jsonobjects[0].dbUserId, this.state.address2);\n          captureStudentEngagementDetails(jsonobjects[0].dbUserId, UserContext.centerId, UserContext.userid).then(jsondata => {\n            let json = JSON.parse(jsondata.data);\n            this.setState({\n              engagementId: json[0].engagementId\n            });\n            alert(\"Successfully Mobilized\");\n            setTimeout(() => {\n              this.props.history.push({\n                pathname: '/dashboard/updatebeneficiary',\n                state: {\n                  dbUserId: jsonobjects[0].dbUserId,\n                  engagementId: this.state.engagementId,\n                  tab: 1,\n                  name: jsonobjects[0].firstName + \" \" + jsonobjects[0].lastName\n                }\n              });\n            }, 3000);\n          });\n        } else {\n          this.submitAddress(jsonobjects[0].dbUserId, this.state.address); // if(this.state.prAddId != undefined)\n          // {\n          //   this.setState({\n          //     address2 : {\n          //       ...this.state.address2,\n          //       \"id\" : this.state.prAddId\n          //     }\n          //   })\n          // }\n\n          this.submitAddress(jsonobjects[0].dbUserId, this.state.address2);\n          alert(\"Successfully Updated\");\n          setTimeout(() => {\n            this.props.history.push({\n              pathname: '/dashboard/updatebeneficiary',\n              state: {\n                dbUserId: jsonobjects[0].dbUserId,\n                engagementId: this.state.engagementId,\n                tab: 1\n              }\n            });\n          }, 3000);\n        }\n      } else {\n        console.log(\"error\");\n      }\n    });\n  }\n\n  submitAddress(dbUserId, address) {\n    let action = \"\";\n    const dbUserId2 = this.state.dbUserId == '' || this.state.dbUserId == null; //alert(dbUserId);\n\n    if (dbUserId2) {\n      action = \"captureAddress\";\n    } else {\n      action = \"updateAddress\";\n      address = { ...address,\n        \"updatedBy\": UserContext.userid\n      };\n    }\n\n    address = { ...address,\n      'entityId': dbUserId,\n      \"entityType\": \"S\"\n    };\n    submitAddressData(action, address).then(jsondata => {\n      if (jsondata.appError == null) {\n        let jsonobjects = JSON.parse(jsondata.data); //alert(\"Successfully Mobilized\");\n        //this.props.history.push('/dashboard');\n        //this.submitEngagement(jsonobjects[0].dbUserId) ;\n      } else {\n        console.log(\"error\");\n      }\n    });\n  }\n\n  render() {\n    const dbUserId = this.state.dbUserId == '' || this.state.dbUserId == null;\n    let button;\n    let displayText = \"\";\n\n    if (this.state.checked) {\n      displayText = /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 900,\n          columnNumber: 5\n        }\n      }, \"(Permanent address same as present address ? ).\", /*#__PURE__*/React.createElement(FormControlLabel, {\n        control: /*#__PURE__*/React.createElement(Switch, {\n          onChange: this.handlePresentPermanentAddress('checked'),\n          checked: this.state.checked,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 904,\n            columnNumber: 15\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 902,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      displayText = /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 913,\n          columnNumber: 5\n        }\n      }, \"(Permanent address same as present address ? ).\", /*#__PURE__*/React.createElement(FormControlLabel, {\n        control: /*#__PURE__*/React.createElement(Switch, {\n          onChange: this.handlePresentPermanentAddress('checked'),\n          checked: this.state.checked,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 917,\n            columnNumber: 15\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 915,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    if (dbUserId) {\n      button = /*#__PURE__*/React.createElement(Button, {\n        disabled: this.state.disabled,\n        id: \"save\",\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 924,\n          columnNumber: 16\n        }\n      }, \"Mobilise\");\n    } else {\n      button = /*#__PURE__*/React.createElement(Button, {\n        disabled: this.state.disabled,\n        id: \"save\",\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 928,\n          columnNumber: 14\n        }\n      }, \"Update\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 931,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      method: \"post\",\n      onSubmit: this.mySubmitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 932,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      id: \"roleBasedDisable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 933,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 934,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 935,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 936,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 937,\n        columnNumber: 11\n      }\n    }, \"Basic Details\"))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 940,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 941,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"number\",\n      name: \"aadharNo\",\n      id: \"aadharNo\",\n      label: \"Aadhar Number\",\n      onInput: e => {\n        e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 12);\n      },\n      onChange: this.handleInputChange,\n      value: this.state.basicData.aadharNo || '',\n      helperText: this.state.errors.aadharNo != undefined ? this.state.errors.aadharNo.label : '',\n      error: this.state.errors.aadharNo != undefined ? this.state.errors.aadharNo.value : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 942,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 953,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 954,\n        columnNumber: 9\n      }\n    }, \"Gender\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      isClearable: true,\n      onChange: this.handleSelectChange.bind(this, 'gender'),\n      name: \"gender\",\n      id: \"gender\",\n      value: this.state.basicData.gender || '',\n      helperText: this.state.errors.gender != undefined ? this.state.errors.gender.label : '',\n      error: this.state.errors.gender != undefined ? this.state.errors.gender.value : '',\n      options: this.state.gender,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 955,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 962,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"date\",\n      name: \"dob\",\n      id: \"dob\",\n      onChange: this.handleInputChange,\n      label: \"Birthday\",\n      value: this.state.basicData.dob || '',\n      helperText: this.state.errors.dob != undefined ? this.state.errors.dob.label : '',\n      error: this.state.errors.dob != undefined ? this.state.errors.dob.value : '',\n      type: \"date\",\n      inputProps: {\n        min: new Date('02/01/1980').toISOString().slice(0, 10),\n        max: new Date().toISOString().slice(0, 10)\n      },\n      InputLabelProps: {\n        shrink: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 963,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 974,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 975,\n        columnNumber: 8\n      }\n    }, \"Blood Group\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      isClearable: true,\n      onChange: this.handleSelectChange.bind(this, 'bloodGroup'),\n      name: \"bloodGroup\",\n      id: \"bloodGroup\",\n      options: this.state.bloodgroup,\n      value: this.state.basicData.bloodGroup || '' //   helperText = {this.state.errors.bloodGroup != undefined ? this.state.errors.bloodGroup.label : '' } \n      // error = {this.state.errors.bloodGroup != undefined ? this.state.errors.bloodGroup.value : '' }\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 976,\n        columnNumber: 8\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 982,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 983,\n        columnNumber: 9\n      }\n    }, \"Salutation\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      isClearable: true,\n      onChange: this.handleSelectChange.bind(this, 'salutation'),\n      name: \"salutation\",\n      id: \"salutation\",\n      value: this.state.basicData.salutation || '',\n      helperText: this.state.errors.salutation != undefined ? this.state.errors.salutation.label : '',\n      error: this.state.errors.salutation != undefined ? this.state.errors.salutation.value : '',\n      options: this.state.salutation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 984,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 990,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 991,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      name: \"firstName\",\n      id: \"firstName\",\n      helperText: this.state.errors.firstName != undefined ? this.state.errors.firstName.label : '',\n      error: this.state.errors.firstName != undefined ? this.state.errors.firstName.value : '',\n      label: \"First Name\",\n      onChange: this.handleInputChange,\n      value: this.state.basicData.firstName || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 992,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 998,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 999,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      name: \"middleName\",\n      id: \"middleName\",\n      helperText: this.state.errors.middleName != undefined ? this.state.errors.middleName.label : '',\n      error: this.state.errors.middleName != undefined ? this.state.errors.middleName.value : '',\n      label: \"Middle Name\",\n      onChange: this.handleInputChange,\n      value: this.state.basicData.middleName || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1000,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1006,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1007,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      name: \"lastName\",\n      id: \"lastName\",\n      helperText: this.state.errors.lastName != undefined ? this.state.errors.lastName.label : '',\n      error: this.state.errors.lastName != undefined ? this.state.errors.lastName.value : '',\n      label: \"Last Name\",\n      onChange: this.handleInputChange,\n      value: this.state.basicData.lastName || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1008,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1015,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1016,\n        columnNumber: 8\n      }\n    }, \"Mobilization Channel\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      isClearable: true,\n      onChange: this.handleSelectChange.bind(this, 'mobilizationChannel'),\n      name: \"mobilizationChannel\",\n      id: \"mobilizationChannel\",\n      options: this.state.channel,\n      value: this.state.basicData.mobilizationChannel || '',\n      helperText: this.state.errors.mobilizationChannel != undefined ? this.state.errors.mobilizationChannel.label : '',\n      error: this.state.errors.mobilizationChannel != undefined ? this.state.errors.mobilizationChannel.value : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1017,\n        columnNumber: 8\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1023,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1024,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      name: \"mobilizationPlace\",\n      id: \"mobilizationPlace\",\n      label: \"Mobilization Place\",\n      onChange: this.handleInputChange,\n      value: this.state.basicData.mobilizationPlace || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1025,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1030,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1031,\n        columnNumber: 10\n      }\n    }, \"Highest Qualification\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      isClearable: true,\n      onChange: this.handleSelectChange.bind(this, 'highestQualification'),\n      name: \"highestQualification\",\n      id: \"highestQualification\",\n      value: this.state.basicData.highestQualification || '',\n      helperText: this.state.errors.highestQualification != undefined ? this.state.errors.highestQualification.label : '',\n      error: this.state.errors.highestQualification != undefined ? this.state.errors.highestQualification.value : '',\n      options: this.state.qual,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1032,\n        columnNumber: 10\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1039,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"number\",\n      onChange: this.handleInputChange,\n      name: \"passingYear\",\n      id: \"passingYear\",\n      onInput: e => {\n        e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 4);\n      },\n      label: \"Passing Year\",\n      value: this.state.basicData.passingYear || '',\n      helperText: this.state.errors.passingYear != undefined ? this.state.errors.passingYear.label : '',\n      error: this.state.errors.passingYear != undefined ? this.state.errors.passingYear.value : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1040,\n        columnNumber: 10\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1050,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1051,\n        columnNumber: 10\n      }\n    }, \"Religion\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      isClearable: true,\n      onChange: this.handleSelectChange.bind(this, 'religion'),\n      name: \"religion\",\n      id: \"religion\",\n      value: this.state.basicData.religion || '',\n      helperText: this.state.errors.religion != undefined ? this.state.errors.religion.label : '',\n      error: this.state.errors.religion != undefined ? this.state.errors.religion.value : '',\n      options: this.state.religion,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1052,\n        columnNumber: 10\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1059,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1060,\n        columnNumber: 10\n      }\n    }, \"Category\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      isClearable: true,\n      onChange: this.handleSelectChange.bind(this, 'category'),\n      name: \"category\",\n      id: \"category\",\n      value: this.state.basicData.category || '',\n      helperText: this.state.errors.category != undefined ? this.state.errors.category.label : '',\n      error: this.state.errors.category != undefined ? this.state.errors.category.value : '',\n      options: this.state.category,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1061,\n        columnNumber: 10\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1068,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1069,\n        columnNumber: 10\n      }\n    }, \"BPL\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      isClearable: true,\n      onChange: this.handleSelectChange.bind(this, 'bplStatus'),\n      name: \"bplStatus\",\n      id: \"bplStatus\",\n      value: this.state.basicData.bplStatus || '',\n      helperText: this.state.errors.bplStatus != undefined ? this.state.errors.bplStatus.label : '',\n      error: this.state.errors.bplStatus != undefined ? this.state.errors.bplStatus.value : '',\n      options: this.state.bplStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1070,\n        columnNumber: 10\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1078,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1079,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1080,\n        columnNumber: 11\n      }\n    }, \"Contact Information\"))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1083,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1084,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"number\",\n      name: \"primaryContactNumber\",\n      id: \"primaryContactNumber\",\n      label: \"Primary Contact\",\n      helperText: this.state.errors.primaryContactNumber != undefined ? this.state.errors.primaryContactNumber.label : '',\n      error: this.state.errors.primaryContactNumber != undefined ? this.state.errors.primaryContactNumber.value : '',\n      onInput: e => {\n        e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 10);\n      },\n      onChange: this.handleInputChange,\n      value: this.state.basicData.primaryContactNumber || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1086,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1096,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1097,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"email\",\n      name: \"primaryEmailId\",\n      id: \"primaryEmailId\",\n      label: \"Primary Email\",\n      helperText: this.state.errors.primaryEmailId != undefined ? this.state.errors.primaryEmailId.label : '',\n      error: this.state.errors.primaryEmailId != undefined ? this.state.errors.primaryEmailId.value : '',\n      onChange: this.handleInputChange,\n      value: this.state.basicData.primaryEmailId || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1098,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1106,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1107,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"number\",\n      name: \"secondaryContactNumber\",\n      id: \"secondaryContactNumber\",\n      label: \"Secondary Contact\",\n      helperText: this.state.errors.secondaryContactNumber != undefined ? this.state.errors.secondaryContactNumber.label : '',\n      error: this.state.errors.secondaryContactNumber != undefined ? this.state.errors.secondaryContactNumber.value : '',\n      onInput: e => {\n        e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 10);\n      },\n      onChange: this.handleInputChange,\n      value: this.state.basicData.secondaryContactNumber || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1108,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1117,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1118,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"email\",\n      name: \"secondaryEmailId\",\n      id: \"secondaryEmailId\",\n      label: \"Secondary Email\",\n      helperText: this.state.errors.secondaryEmailId != undefined ? this.state.errors.secondaryEmailId.label : '',\n      error: this.state.errors.secondaryEmailId != undefined ? this.state.errors.secondaryEmailId.value : '',\n      onChange: this.handleInputChange,\n      value: this.state.basicData.secondaryEmailId || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1119,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1127,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1128,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1129,\n        columnNumber: 11\n      }\n    }, \"Address Information\"))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1132,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1133,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1134,\n        columnNumber: 11\n      }\n    }, \"Present Address\"))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1137,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1138,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      name: \"addressLine1\",\n      id: \"addressLine1\",\n      helperText: this.state.erroradd1.addressLine1 != undefined ? this.state.erroradd1.addressLine1.label : '',\n      error: this.state.erroradd1.addressLine1 != undefined ? this.state.erroradd1.addressLine1.value : '',\n      label: \"Address Line 1\",\n      maxLength: \"20\",\n      onChange: this.handleAddressInputChange,\n      value: this.state.address.addressLine1 || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1139,\n        columnNumber: 9\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1146,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1147,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      name: \"addressLine2\",\n      id: \"addressLine2\",\n      helperText: this.state.erroradd1.addressLine2 != undefined ? this.state.erroradd1.addressLine2.label : '',\n      error: this.state.erroradd1.addressLine2 != undefined ? this.state.erroradd1.addressLine2.value : '',\n      label: \"Address Line 2\",\n      maxLength: \"20\",\n      onChange: this.handleAddressInputChange,\n      value: this.state.address.addressLine2 || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1148,\n        columnNumber: 9\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1155,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"number\",\n      label: \"Pincode\",\n      name: \"pincode\",\n      id: \"pincode\",\n      onInput: e => {\n        e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 6);\n      },\n      helperText: this.state.erroradd1.pincode != undefined ? this.state.erroradd1.pincode.label : '',\n      error: this.state.erroradd1.pincode != undefined ? this.state.erroradd1.pincode.value : '',\n      onChange: this.getPincodeData.bind(this, 'pincode'),\n      value: this.state.address.pincode || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1156,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1166,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      for: \"village\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1167,\n        columnNumber: 13\n      }\n    }, \"Village\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      isClearable: true,\n      name: \"villageName\",\n      id: \"villageName\",\n      options: this.state.village1,\n      helperText: this.state.erroradd1.villageName != undefined ? this.state.erroradd1.villageName.label : '',\n      error: this.state.erroradd1.villageName != undefined ? this.state.erroradd1.villageName.value : '',\n      onChange: this.handleAddressSelectChange.bind(this, 'villageName'),\n      value: this.state.address.villageName || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1168,\n        columnNumber: 14\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1179,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      for: \"city\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1180,\n        columnNumber: 13\n      }\n    }, \"City\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      isClearable: true,\n      onChange: this.handleAddressSelectChange.bind(this, 'cityName'),\n      name: \"cityName\",\n      id: \"cityName\",\n      options: this.state.city1,\n      helperText: this.state.erroradd1.cityName != undefined ? this.state.erroradd1.cityName.label : '',\n      error: this.state.erroradd1.cityName != undefined ? this.state.erroradd1.cityName.value : '',\n      value: this.state.address.cityName || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1181,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1190,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1191,\n        columnNumber: 10\n      }\n    }, \"District\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      isClearable: true,\n      onChange: this.handleAddressSelectChange.bind(this, 'district'),\n      name: \"district\",\n      id: \"district\",\n      options: this.state.district1,\n      helperText: this.state.erroradd1.district != undefined ? this.state.erroradd1.district.label : '',\n      error: this.state.erroradd1.district != undefined ? this.state.erroradd1.district.value : '',\n      value: this.state.address.district || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1192,\n        columnNumber: 10\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1202,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1203,\n        columnNumber: 10\n      }\n    }, \"State\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      isClearable: true,\n      onChange: this.handleAddressSelectChange.bind(this, 'state'),\n      name: \"state\",\n      id: \"state\",\n      options: this.state.state1,\n      helperText: this.state.erroradd1.state != undefined ? this.state.erroradd1.state.label : '',\n      error: this.state.erroradd1.state != undefined ? this.state.erroradd1.state.value : '',\n      value: this.state.address.state || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1204,\n        columnNumber: 10\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1212,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1213,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1214,\n        columnNumber: 11\n      }\n    }, \"Permanent Address\"))), displayText, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1218,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1219,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      name: \"addressLine1\",\n      id: \"addressLine1\",\n      helperText: this.state.erroradd2.addressLine1 != undefined ? this.state.erroradd2.addressLine1.label : '',\n      error: this.state.erroradd2.addressLine1 != undefined ? this.state.erroradd2.addressLine1.value : '',\n      label: \"Address Line 1\",\n      maxLength: \"20\",\n      onChange: this.handleAddressInputChange2,\n      value: this.state.address2.addressLine1 || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1220,\n        columnNumber: 9\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1227,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1228,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      name: \"addressLine2\",\n      id: \"addressLine2\",\n      helperText: this.state.erroradd2.addressLine2 != undefined ? this.state.erroradd2.addressLine2.label : '',\n      error: this.state.erroradd2.addressLine2 != undefined ? this.state.erroradd2.addressLine2.value : '',\n      label: \"Address Line 2\",\n      maxLength: \"20\",\n      onChange: this.handleAddressInputChange2,\n      value: this.state.address2.addressLine2 || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1229,\n        columnNumber: 9\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1236,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"number\",\n      label: \"Pincode\",\n      name: \"pincode\",\n      id: \"pincode\",\n      onInput: e => {\n        e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 6);\n      },\n      helperText: this.state.erroradd2.pincode != undefined ? this.state.erroradd2.pincode.label : '',\n      error: this.state.erroradd2.pincode != undefined ? this.state.erroradd2.pincode.value : '',\n      onChange: this.getPincodeData2.bind(this, 'pincode'),\n      value: this.state.address2.pincode || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1237,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1247,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      for: \"village\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1248,\n        columnNumber: 13\n      }\n    }, \"Village\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      isClearable: true,\n      name: \"villageName\",\n      id: \"villageName\",\n      options: this.state.village2,\n      helperText: this.state.erroradd2.villageName != undefined ? this.state.erroradd2.villageName.label : '',\n      error: this.state.erroradd2.villageName != undefined ? this.state.erroradd2.villageName.value : '',\n      onChange: this.handleAddressSelectChange2.bind(this, 'villageName'),\n      value: this.state.address2.villageName || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1249,\n        columnNumber: 14\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1258,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      for: \"city\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1259,\n        columnNumber: 13\n      }\n    }, \"City\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      isClearable: true,\n      onChange: this.handleAddressSelectChange2.bind(this, 'cityName'),\n      name: \"cityName\",\n      id: \"cityName\",\n      options: this.state.city2,\n      helperText: this.state.erroradd2.cityName != undefined ? this.state.erroradd2.cityName.label : '',\n      error: this.state.erroradd2.cityName != undefined ? this.state.erroradd2.cityName.value : '',\n      value: this.state.address2.cityName || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1260,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1269,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1270,\n        columnNumber: 10\n      }\n    }, \"District\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      isClearable: true,\n      onChange: this.handleAddressSelectChange2.bind(this, 'district'),\n      name: \"district\",\n      id: \"district\",\n      options: this.state.district2,\n      helperText: this.state.erroradd2.district != undefined ? this.state.erroradd2.district.label : '',\n      error: this.state.erroradd2.district != undefined ? this.state.erroradd2.district.value : '',\n      value: this.state.address2.district || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1271,\n        columnNumber: 10\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1281,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1282,\n        columnNumber: 10\n      }\n    }, \"State\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      isClearable: true,\n      onChange: this.handleAddressSelectChange2.bind(this, 'state'),\n      name: \"state\",\n      id: \"state\",\n      options: this.state.state2,\n      helperText: this.state.erroradd2.state != undefined ? this.state.erroradd2.state.label : '',\n      error: this.state.erroradd2.state != undefined ? this.state.erroradd2.state.value : '',\n      value: this.state.address2.state || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1283,\n        columnNumber: 10\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-end\",\n      alignItems: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1296,\n        columnNumber: 7\n      }\n    }, button))));\n  }\n\n}\n\nexport default BasicForm;","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/BasicForm.js"],"names":["React","Component","useState","underscore","makeStyles","captureStudentEngagementDetails","findByAadharNo","submitAddressData","subMitBasicData","fetchAddressData","fetchBasicData","fetchAddressDetailsBasedOnPincode","regenerateToken","checkButton","validateBirthDate","validateEmail","validateContact","validatePassingYear","validateNames","validateAadhar","validatePincode","roleBasedReadonly","isAadharNoDuplicate","Icon","Store","Warning","DateRange","LocalOffer","Update","ArrowUpward","AccessTime","Accessibility","BugReport","Code","Cloud","Button","FormControl","FormControlLabel","InputLabel","Switch","Input","Grid","TextField","styles","CommunicationCallMerge","SingleSelect","callMerge","UserContext","serviceEndPoint","BasicForm","constructor","props","handlePresentPermanentAddress","name","event","setState","state","target","checked","getPincodeData2","address","pincode","address2","addressLine1","addressLine2","villageName","cityName","district","erroradd2","erroradd1","state2","district2","village2","city2","addressTmp","id","mySubmitHandler","preventDefault","disabled","validateAll","errors","submitStudent","salutation","value","label","qual","gender","religion","category","channel","bloodgroup","bplStatus","state1","district1","pincodes","city1","village1","flag","engagementId","dbUserId","basicData","createdBy","userid","mobilizedBy","aadharNo","firstName","middleName","lastName","highestQualification","bloodGroup","passingYear","primaryContactNumber","secondaryContactNumber","primaryEmailId","secondaryEmailId","mobilizationChannel","dob","updatedData","handleInputChange","bind","handleSelectChange","handleAddressInputChange","handleAddressSelectChange","handleAddressInputChange2","handleAddressSelectChange2","undefined","getBasicData","getAddressData","componentDidMount","document","getElementById","setAttribute","res","then","jsondata","studentDetails","JSON","parse","data","length","selectname","removeAttribute","getPincodeData","e","jsonobjects","taluk","cityVillage","states","map","item","push","uniq","toString","nonMandatoryFields","json","jsonaddress1","jsonaddress2","Object","keys","forEach","key","includes","formData","FormData","append","fetch","studentServiceEndPoint","method","headers","token","body","response","console","log","appError","error","type","action","submitAddress","centerId","alert","setTimeout","history","pathname","tab","dbUserId2","render","button","displayText","width","Math","max","parseInt","slice","min","Date","toISOString","shrink","mobilizationPlace"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { useState } from 'react';\r\nimport './../App.css';\r\nimport './../assets/css/login-style.css'\r\nimport './../assets/css/font-awesome.min.css'\r\nimport underscore from 'underscore';\r\n\r\n//import ChartistGraph from \"react-chartist\";\r\n// @material-ui/core\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { captureStudentEngagementDetails,findByAadharNo, submitAddressData, subMitBasicData, fetchAddressData, fetchBasicData,\r\n         fetchAddressDetailsBasedOnPincode} from './../util/api';\r\nimport { regenerateToken } from './../util/validation';\r\nimport {checkButton , validateBirthDate, validateEmail ,validateContact,validatePassingYear, \r\n   validateNames, validateAadhar , validatePincode, roleBasedReadonly,\r\n  isAadharNoDuplicate} from './../util/validation';\r\nimport Icon from \"@material-ui/core/Icon\";\r\n// @material-ui/icons\r\n//import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Store from \"@material-ui/icons/Store\";\r\nimport Warning from \"@material-ui/icons/Warning\";\r\nimport DateRange from \"@material-ui/icons/DateRange\";\r\nimport LocalOffer from \"@material-ui/icons/LocalOffer\";\r\nimport Update from \"@material-ui/icons/Update\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport AccessTime from \"@material-ui/icons/AccessTime\";\r\nimport Accessibility from \"@material-ui/icons/Accessibility\";\r\nimport BugReport from \"@material-ui/icons/BugReport\";\r\nimport Code from \"@material-ui/icons/Code\";\r\nimport Cloud from \"@material-ui/icons/Cloud\";\r\nimport Button from '@material-ui/core/Button';\r\n  import { FormControl,FormControlLabel , InputLabel , Switch, Input, Grid , TextField}  from '@material-ui/core';\r\nimport styles from \"../components/components.js\"; \r\nimport { CommunicationCallMerge } from 'material-ui/svg-icons';\r\nimport { SingleSelect } from \"react-select-material-ui\";\r\nimport callMerge from 'material-ui/svg-icons/communication/call-merge';\r\nimport UserContext from '../components/GolbalContext'\r\n//import MasterData from './../components/MasterData.js'\r\nimport { serviceEndPoint } from './../util/serviceEndPoint';\r\nclass BasicForm extends Component\r\n{\r\n\r\n  \r\n    constructor(props) {\r\n      super(props);\r\n\r\n        this.state = {\r\n          salutation : [\r\n            { value: 'Mr.', label: 'Mr.' },\r\n            { value: 'Mrs.', label: 'Mrs.' },\r\n            { value: 'Miss', label: 'Miss' }\r\n            ],\r\n            \r\n            \r\n            qual : [\r\n            { value: 'Uneducated', label: 'Uneducated' },\r\n            { value: 'Below 5th Standard', label: 'Below 5th Standard' },\r\n            { value: '5th Standard Passed', label: '5th Standard Passed' },\r\n            { value: '7th Standard Passed', label: '7th Standard Passed' },\r\n            { value: '8th Standard Failed', label: '8th Standard Failed' },\r\n            { value: '8th Standard Passed', label: '8th Standard Passed' },\r\n            { value: '9th Standard Passed', label: '9th Standard Passed' },\r\n            { value: '10th Standard Passed', label: '10th Standard Passed' },\r\n            { value: '12th Standard', label: '12th Standard' },\r\n            { value: 'Below 12th Standard', label: 'Below 12th Standard' },\r\n            { value: '12th Passed - science', label: '12th Passed - science' },\r\n            { value: '12th Passed - Non-science', label: '12th Passed - Non-science' },\r\n            { value: '12th Standard Passed', label: '12th Standard Passed' },\r\n            { value: 'CSTI Certified', label: 'CSTI Certified' },\r\n            { value: 'Diploma', label: 'Diploma' },\r\n            { value: 'ITI', label: 'ITI' },\r\n            { value: 'Professional', label: 'Professional' },\r\n            { value: 'Degree', label: 'Degree' },\r\n            { value: 'BSC - science', label: 'BSC - science' },\r\n            { value: 'BSC - Non-science', label: 'BSC - Non-science' },\r\n            { value: '2 Years Diploma', label: '2 Years Diploma' },\r\n            { value: 'Bachelors Degree 2nd Year', label: 'Bachelors Degree 2nd Year' },\r\n            { value: 'Bachelors Degree 3rd Year', label: 'Bachelors Degree 3rd Year' },\r\n            { value: 'Bachelors Degree 4th Year', label: 'Bachelors Degree 4th Year' },\r\n            { value: 'Bachelors Degree 5th Year', label: 'Bachelors Degree 5th Year' },\r\n            { value: 'Graduate', label: 'Graduate' },\r\n            { value: 'Masters Degree 1st Year', label: 'Masters Degree 1st Year' },\r\n            { value: 'Masters Degree 2nd Year', label: 'Masters Degree 2nd Year' },\r\n            { value: 'Post Graduate', label: 'Post Graduate' }\r\n            ],\r\n            \r\n            \r\n            gender : [\r\n            { value: 'Male', label: 'Male' },\r\n            { value: 'Female', label: 'Female' },\r\n            { value: 'Others', label: 'Others' }\r\n            ],\r\n            \r\n            \r\n            religion : [\r\n            { value: 'Hindu', label: 'Hindu' },\r\n            { value: 'Muslim', label: 'Muslim' },\r\n            { value: 'Christian', label: 'Christian' },\r\n            { value: 'Sikh', label: 'Sikh' },\r\n            { value: 'Buddhist', label: 'Buddhist' },\r\n            { value: 'Jews', label: 'Jews' },\r\n            { value: 'Others', label: 'Others' }\r\n            ],\r\n            \r\n            category : [\r\n            { value: 'Gen', label: 'Gen' },\r\n            { value: 'OBC', label: 'OBC' },\r\n            { value: 'SC', label: 'SC' },\r\n            { value: 'ST', label: 'ST' },\r\n            { value: 'PH', label: 'PH' },\r\n            { value: 'DNT', label: 'DNT' },\r\n            { value: 'IDWTDC', label: 'IDWTDC' },\r\n            { value: 'VJ', label: 'VJ' },\r\n            { value: 'SBC', label: 'SBC' },\r\n            { value: 'NT', label: 'NT' }\r\n            ],\r\n            \r\n            channel : [\r\n            { value: 'Flyer/Sticker/Banner/Poster', label: 'Flyer/Sticker/Banner/Poster' },\r\n            { value: 'Call from Tata STRIVE', label: 'Call from Tata STRIVE' },\r\n            { value: 'Reference - Employee', label: 'Reference - Employee' },\r\n            { value: 'NGO - Mobilisation Partner', label: 'NGO - Mobilisation Partner' },\r\n            { value: 'Reference - Influencer', label: 'Reference - Influencer' },\r\n            { value: 'Reference - Learner', label: 'Reference - Learner' },\r\n            { value: 'Other', label: 'Other' },\r\n            { value: 'School/College/University', label: 'School/College/University' },\r\n            { value: 'Social Media/ SMS', label: 'Social Media/ SMS' },\r\n            { value: 'Advertisement Media', label: 'Advertisement Media' },\r\n            { value: 'Community Activity', label: 'Community Activity' },\r\n            { value: 'Call Center', label: 'Call Center' },\r\n            { value: 'Job Fairs/ Community', label: 'Job Fairs/ Community' },\r\n            { value: 'Corporate Support', label: 'Corporate Support' },\r\n            { value: 'TS - Website Lead', label: 'TS - Website Lead' },\r\n            { value: 'Walk-in', label: 'Walk-in' }\r\n            ],\r\n            \r\n            bloodgroup : [\r\n              { value: 'A +ve', label: 'A +ve' },\r\n              { value: 'A -ve', label: 'A -ve' } , \r\n              { value: 'B +ve', label: 'B +ve' } , \r\n              { value: 'B -ve', label: 'B -ve' } , \r\n              { value: 'O +ve', label: 'O +ve' } , \r\n              { value: 'O -ve', label: 'O -ve' } , \r\n              { value: 'AB +ve', label: 'AB +ve' } , \r\n              { value: 'AB -ve', label: 'AB -ve' }           \r\n          ],\r\n            bplStatus : [\r\n                { value: 'BPL', label: 'BPL' },\r\n                { value: 'APL', label: 'APL' },\r\n                { value: 'Antyodaya', label: 'Antyodaya' }             \r\n            ],\r\n            \r\n          state1 : [],\r\n          district1 : [],\r\n          state2 : [],\r\n          district2 : [],\r\n          pincodes:[],   \r\n          city1:[],\r\n          village1:[],\r\n          city2:[],\r\n          village2:[],\r\n          checked : false , disabled : false , flag : \"0\" ,errors : {} , erroradd1 : {} , erroradd2 : {}, engagementId : props.engagementId , dbUserId : props.id, basicData : {createdBy : UserContext.userid,\r\n          mobilizedBy : UserContext.userid,\r\n        aadharNo : \"\" , salutation : \"\" , gender : \"\" , firstName : \"\" , middleName : \"\" , lastName : \"\" , highestQualification : \"\", religion : \"\",\r\n        bplStatus : \"\" , bloodGroup : \"\" , passingYear : null , primaryContactNumber : \"\" , secondaryContactNumber : null , primaryEmailId : \"\" , secondaryEmailId : \"\",\r\n        category : \"\" , mobilizationChannel : \"\" , dob : \"\"\r\n        }, address : {createdBy : UserContext.userid,'isActive' : 'Y','type' : 'R' , pincode : \"\" , addressLine1 : \"\" , addressLine2 : \"\" , district : \"\" , state : \"\" , cityName : \"\", villageName : \"\"},\r\n        address2 : {createdBy : UserContext.userid,'isActive' : 'Y','type' : 'P' , pincode : \"\" , addressLine1 : \"\" , addressLine2 : \"\" , district : \"\" , state : \"\" , cityName : \"\", villageName : \"\"} ,\r\n        addressTmp : {id:'',createdBy : UserContext.userid,'isActive' : 'Y','type' : 'P' , pincode : \"\" , addressLine1 : \"\" , addressLine2 : \"\" , district : null , state : null , cityName : null, villageName : null}};\r\n        this.updatedData = {firstName : ''};\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSelectChange = this.handleSelectChange.bind(this);\r\n        this.handleAddressInputChange = this.handleAddressInputChange.bind(this);\r\n        this.handleAddressSelectChange = this.handleAddressSelectChange.bind(this);\r\n        this.handleAddressInputChange2 = this.handleAddressInputChange2.bind(this);\r\n        this.handleAddressSelectChange2 = this.handleAddressSelectChange2.bind(this);\r\n        this.handlePresentPermanentAddress = this.handlePresentPermanentAddress.bind(this);\r\n        //this.validateAll = this.validateAll.bind(this);\r\n \r\n        if(props.id != null && props.id != undefined)\r\n        {\r\n         this.getBasicData((props.id));\r\n         this.getAddressData((props.id));\r\n         \r\n        }\r\n       // alert(this.state.dbUserId);\r\n        \r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n      roleBasedReadonly();\r\n      if(this.state.dbUserId != null && this.state.dbUserId != undefined)\r\n      {\r\n        document.getElementById(\"aadharNo\").setAttribute(\"disabled\", true);\r\n      }\r\n    }\r\n\r\n    handlePresentPermanentAddress = name => event => {\r\n      this.setState({ ...this.state, [name]: event.target.checked });\r\n      if(event.target.checked == true)\r\n      {\r\n        this.getPincodeData2(\"pincode\" , this.state.address.pincode);\r\n        this.setState({\r\n          address2 : {\r\n           // ...this.state.address,\r\n           ...this.state.address2,\r\n            \"type\" : \"P\",\r\n            \"addressLine1\":this.state.address.addressLine1,\r\n            \"addressLine2\":this.state.address.addressLine2,\r\n            \"pincode\":this.state.address.pincode,\r\n            \"villageName\":this.state.address.villageName,\r\n            \"cityName\":this.state.address.cityName,\r\n            \"district\":this.state.address.district,\r\n             \"state\":this.state.address.state\r\n          },\r\n          erroradd2 : this.state.erroradd1\r\n        })\r\n        \r\n      }\r\n      else\r\n      {\r\n        this.state = {...this.state , \r\n          state2 : [],\r\n          district2 : [],\r\n          village2 : [],\r\n          city2 : []\r\n        }\r\n\r\nthis.setState({\r\n  addressTmp : {...this.state.addressTmp,\r\n               \"id\":this.state.address2.id}\r\n              },()=>{ this.setState({address2 : this.state.addressTmp})});       \r\n      }\r\n      \r\n    };\r\n\r\n    handleInputChange(event) {\r\n      this.setState({\r\n        \"disabled\" : false\r\n      });\r\n      let flag = 0;\r\n        const target = event.target;\r\n        const value =  target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n          errors: {\r\n            ...this.state.errors,\r\n            [name] : {\r\n              'label' : \"\" , \r\n              'value' : false\r\n            }\r\n          }\r\n      });\r\n      if(name == \"dob\")\r\n      {\r\n        let res = validateBirthDate(value);\r\n          this.setState({\r\n            errors: {\r\n              ...this.state.errors,\r\n              [name] : {\r\n                'label' : res , \r\n                'value' : res == \"\" ? false : true \r\n              }\r\n            }\r\n        });\r\n      }\r\n      if(name == \"primaryEmailId\" || name == \"secondaryEmailId\")\r\n      {\r\n        let res = validateEmail(name , value);\r\n          this.setState({\r\n            errors: {\r\n              ...this.state.errors,\r\n              [name] : {\r\n                'label' : res , \r\n                'value' : res == \"\" ? false : true \r\n              }\r\n            }\r\n        });\r\n      }\r\n      if((name == \"secondaryContactNumber\" || name == \"primaryContactNumber\" ))\r\n        {\r\n          let res = validateContact(name, value);\r\n          this.setState({\r\n            errors: {\r\n              ...this.state.errors,\r\n              [name] : {\r\n                'label' : res , \r\n                'value' : res == \"\" ? false : true \r\n              }\r\n            }\r\n        });\r\n      }\r\n\r\n      if((name == \"firstName\" || name == \"middleName\" || name == \"lastName\" ))\r\n        {\r\n          let res = validateNames(value);\r\n          this.setState({\r\n            errors: {\r\n              ...this.state.errors,\r\n              [name] : {\r\n                'label' : res , \r\n                'value' : res == \"\" ? false : true \r\n              }\r\n            }\r\n        });\r\n      }\r\n \r\n      if(name == \"aadharNo\")\r\n      {\r\n        let res = validateAadhar(value);\r\n        if(!res){\r\n          findByAadharNo(value).then((jsondata) => { \r\n            let studentDetails = JSON.parse(jsondata.data);\r\n           if(studentDetails.length>0){\r\n             res=\"student is already registered with this aadhar number\";\r\n             this.setState({\r\n              errors: {...this.state.errors,\r\n                [name] : {'label' : res , 'value' : res == \"\" ? false : true }}\r\n          });\r\n          }\r\n        });\r\n        }\r\n        this.setState({\r\n          errors: {\r\n            ...this.state.errors,\r\n            [name] : {\r\n              'label' : res , \r\n              'value' : res == \"\" ? false : true \r\n            }\r\n          }\r\n      });\r\n      }\r\n      if(name == \"passingYear\")\r\n      {\r\n        let res = validatePassingYear(value,this.state.basicData.dob,this.state.basicData.highestQualification);\r\n        this.setState({\r\n          basicData : {\r\n            ...this.state.basicData,\r\n            [name] : res == \"\" ? value : null \r\n          },\r\n          errors: {\r\n            ...this.state.errors,\r\n            [name] : {\r\n              'label' : res , \r\n              'value' : res == \"\" ? false : true \r\n            }\r\n          }\r\n      });\r\n      }\r\n      this.setState({\r\n        basicData: {\r\n          ...this.state.basicData,\r\n          [name]: value\r\n        }\r\n      });\r\n      \r\n      \r\n    }\r\n      handleSelectChange(selectname, event) {\r\n        this.setState({\r\n          \"disabled\" : false\r\n        });\r\n        if(selectname == \"highestQualification\" && event == \"1\")\r\n        {\r\n          this.state.basicData.passingYear = null;\r\n            this.state.errors.passingYear = {\"label\" : \"\" , \"value\" : false};\r\n          document.getElementById(\"passingYear\").setAttribute(\"disabled\" , true);\r\n        }\r\n        else if(selectname == \"highestQualification\")\r\n        {\r\n          document.getElementById(\"passingYear\").removeAttribute(\"disabled\");\r\n        }\r\n        this.setState({\r\n          basicData: {\r\n            ...this.state.basicData,\r\n            [selectname]: event\r\n          }\r\n        })\r\n        \r\n        this.setState({\r\n          errors: {\r\n            ...this.state.errors,\r\n            [selectname] : {\r\n              'label' : \"\" , \r\n              'value' : false\r\n            }\r\n          }\r\n      });\r\n        \r\n      }\r\n\r\n      handleAddressInputChange(event) {\r\n        this.setState({\r\n          \"disabled\" : false\r\n        });\r\n        let flag = 0 ;\r\n        const target = event.target;\r\n        const value =  target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n          erroradd1: {\r\n            ...this.state.errors,\r\n            [name] : {\r\n              'label' : \"\" , \r\n              'value' : false\r\n            }\r\n          }\r\n      });\r\n        this.setState({\r\n          address: {\r\n            ...this.state.address,\r\n            [name]: value\r\n          }\r\n        })\r\n\r\n        \r\n      }\r\n      handleAddressSelectChange(selectname, event) {\r\n        this.setState({\r\n          \"disabled\" : false\r\n        });\r\n        this.setState({\r\n          address: {\r\n            ...this.state.address,\r\n            [selectname]: event\r\n          }\r\n        })\r\n\r\n        this.setState({\r\n          erroradd1: {\r\n            ...this.state.erroradd1,\r\n            [selectname] : {\r\n              'label' : \"\" , \r\n              'value' : false\r\n            }\r\n          }\r\n      });\r\n        \r\n      }\r\n      handleAddressInputChange2(event) {\r\n        this.setState({\r\n          \"disabled\" : false\r\n        });\r\n        let flag = 0 ;\r\n        const target = event.target;\r\n        const value =  target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n          erroradd2: {\r\n            ...this.state.erroradd1,\r\n            [name] : {\r\n              'label' : \"\" , \r\n              'value' : false\r\n            }\r\n          }\r\n      });\r\n        this.setState({\r\n          address2: {\r\n            ...this.state.address2,\r\n            [name]: value\r\n          }\r\n        })\r\n\r\n        \r\n      }\r\n      handleAddressSelectChange2(selectname, event) {\r\n        this.setState({\r\n          \"disabled\" : false\r\n        });\r\n        this.setState({\r\n          address2: {\r\n            ...this.state.address2,\r\n            [selectname]: event\r\n          }\r\n        })\r\n\r\n        this.setState({\r\n          erroradd2: {\r\n            ...this.state.erroradd2,\r\n            [selectname] : {\r\n              'label' : \"\" , \r\n              'value' : false\r\n            }\r\n          }\r\n      });\r\n        \r\n      }\r\n      getPincodeData(selectname, event) {\r\n        let value = 0 ;\r\n        let target = null;\r\n        try {\r\n          target = event.target;\r\n          value =  target.value;\r\n        }\r\n       catch(e)\r\n       {\r\n        value =  event;\r\n       }\r\n        let res = validatePincode(value);\r\n          this.setState({\r\n            erroradd1: {\r\n              ...this.state.erroradd1,\r\n              \"pincode\" : {\r\n                'label' : res , \r\n                'value' : res == \"\" ? false : true \r\n              }\r\n            }\r\n        });\r\n          this.setState({\r\n            address: {\r\n              ...this.state.address,\r\n              \"pincode\": value\r\n            }\r\n          })\r\n\r\n       if(value.length==6){         \r\n         fetchAddressDetailsBasedOnPincode(value).then((jsondata)=>{    \r\n           let jsonobjects = JSON.parse(jsondata.data);\r\n           let taluk=[];\r\n           let pincode=[]; \r\n           let cityVillage=[]; \r\n           let states=[];  \r\n           let district=[]; \r\n\r\n           jsonobjects.map(item => { cityVillage.push({label: item.cityVillage, value: item.cityVillage})});\r\n           cityVillage=underscore.uniq(cityVillage,true,\"label\");\r\n           jsonobjects.map(item => {taluk.push({label: (item.taluk).toString(), value: item.taluk})});          \r\n           taluk=underscore.uniq(taluk,true,\"label\");\r\n           jsonobjects.map(item => {states.push({label: item.state, value: (item.state).toString()})});          \r\n           states=underscore.uniq(states,true,\"label\");\r\n           jsonobjects.map(item => {district.push({label: item.district, value: (item.district).toString()})});          \r\n           district=underscore.uniq(district,true,\"label\");\r\n           this.setState({\r\n             state1 : states,\r\n             district1 : district ,  \r\n             village1 :  cityVillage,\r\n             city1 : taluk\r\n\r\n           })\r\n\r\n          })\r\n        }\r\n          \r\n      }\r\n      getPincodeData2(selectname, event) {\r\n        let value = 0 ;\r\n        let target = null;\r\n        try {\r\n          target = event.target;\r\n          value =  target.value;\r\n        }\r\n       catch(e)\r\n       {\r\n        value =  event;\r\n       }\r\n        let res = validatePincode(value);\r\n\r\n          this.setState({\r\n            erroradd2: {\r\n              ...this.state.erroradd2,\r\n              \"pincode\" : {\r\n                'label' : res , \r\n                'value' : res == \"\" ? false : true \r\n              }\r\n            }\r\n        });\r\n          this.setState({\r\n            address2: {\r\n              ...this.state.address2,\r\n              \"pincode\": value\r\n            }\r\n          })\r\n\r\n       if(value.length==6){\r\n         fetchAddressDetailsBasedOnPincode(value).then((jsondata)=>{            \r\n           let jsonobjects = JSON.parse(jsondata.data);\r\n           let taluk=[];\r\n           let pincode=[]; \r\n           let cityVillage=[]; \r\n           let states=[];  \r\n           let district=[]; \r\n\r\n           jsonobjects.map(item => { cityVillage.push({label: item.cityVillage, value: item.cityVillage})});\r\n           cityVillage=underscore.uniq(cityVillage,true,\"label\");\r\n           jsonobjects.map(item => {taluk.push({label: item.taluk, value: item.taluk})});          \r\n           taluk=underscore.uniq(taluk,true,\"label\");\r\n           jsonobjects.map(item => {states.push({label: item.state, value: item.state})});          \r\n           states=underscore.uniq(states,true,\"label\");\r\n           jsonobjects.map(item => {district.push({label: item.district, value: item.district})});          \r\n           district=underscore.uniq(district,true,\"label\");\r\n           this.setState({\r\n            state2 : states,\r\n            district2 : district ,  \r\n            village2 :  cityVillage,\r\n            city2 : taluk\r\n\r\n          })\r\n          })\r\n        }\r\n          \r\n      }\r\n      \r\n    mySubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        this.state.disabled = true;\r\n       this.validateAll();\r\n      \r\n        // authentication response and redirect to error or dashbaord page\r\n        this.setState({\r\n          errors : this.state.errors,\r\n          erroradd1 : this.state.erroradd1,\r\n          erroradd2 : this.state.erroradd2\r\n        });\r\n        if(checkButton(this.state.errors) && checkButton(this.state.erroradd2) && checkButton(this.state.erroradd1))\r\n          {\r\n            this.submitStudent();\r\n          }\r\n          else\r\n          {\r\n            this.state.disabled = true;\r\n        }\r\n\r\n        \r\n    }\r\n\r\nvalidateAll() \r\n{\r\n  var nonMandatoryFields = [\"addressLine2\" , \"createdBy\", \"mobilizedBy\" , \"middleName\" , \"dbUserId\" , \"secondaryContactNumber\" , \"secondaryEmailId\",\"passingYear\",\"bloodGroup\",\"mobilizationPlace\"]\r\n  var json = this.state.basicData;\r\n  var jsonaddress1 = this.state.address;\r\n  var jsonaddress2 = this.state.address2;\r\n  var errors = this.state.errors;\r\n  var erroradd1 = this.state.erroradd1;\r\n  var erroradd2 = this.state.erroradd2;\r\n  Object.keys(json).forEach(function(key) {\r\n      if((!nonMandatoryFields.includes(key)) && (json[key] == undefined || json[key] == '' ))\r\n      {\r\n        let res = \"Please fill out this field\";\r\n          errors[key] = {\r\n              'label' : res , \r\n              'value' : res == \"\" ? false : true \r\n            }\r\n     }\r\n  });\r\n  Object.keys(jsonaddress1).forEach(function(key) {\r\n    if((!nonMandatoryFields.includes(key)) && (jsonaddress1[key] == undefined || jsonaddress1[key] == '' ))\r\n    {\r\n      let res = \"Please fill out this field\";\r\n      erroradd1[key] = {\r\n            'label' : res , \r\n            'value' : res == \"\" ? false : true \r\n          }\r\n   }\r\n});\r\nObject.keys(jsonaddress2).forEach(function(key) {\r\n  if((!nonMandatoryFields.includes(key)) && (jsonaddress2[key] == undefined || jsonaddress2[key] == '' ))\r\n  {\r\n    let res = \"Please fill out this field\";\r\n    erroradd2[key] = {\r\n          'label' : res , \r\n          'value' : res == \"\" ? false : true \r\n        }\r\n }\r\n});\r\n  //alert(JSON.stringify(errors));\r\n  this.state.errors = errors;\r\n  this.state.erroradd1 = erroradd1;\r\n  this.state.erroradd2 = erroradd2;\r\n  \r\n}\r\n    getBasicData(id)\r\n    {\r\n\r\n      let formData = new FormData();\r\n     //alert(JSON.stringify(this.state));\r\n          //formData.append('data', '{\"token\" : \"'+this.state.token+'\", \"action\" : \"'+this.state.action+'\", \"data\" : [{\"userName\":\"'+this.state.email+'\",\"password\":\"'+this.state.password+'\"}]}');\r\n          formData.append('data','{\"token\" : \"'+ \"1234\" +'\", \"action\" : \"'+  \"viewBeneficiaryDetailsById\" +'\", \"data\" : [{\"dbUserId\" : ' + id + '}]}');\r\n      try {\r\n          return fetch(serviceEndPoint.studentServiceEndPoint, {\r\n          method: \"POST\",\r\n          headers: {\r\n            'Authorization': 'Bearer '+UserContext.token\r\n        },    \r\n          body: formData \r\n          }).then(response => response.json()).then((jsondata)=>{\r\n              console.log(jsondata); \r\n              if(jsondata.appError==null){      \r\n                  let jsonobjects = JSON.parse(jsondata.data);\r\n                  console.log(jsonobjects); \r\n                  Object.keys(jsonobjects[0]).forEach(function(key) {\r\n                    this.setState({\r\n                      basicData: {\r\n                        ...this.state.basicData,\r\n                        [key]: jsonobjects[0][key].toString()\r\n                      }\r\n                    })\r\n                  }.bind(this));\r\n                 //alert(JSON.stringify(this.state));\r\n              \r\n              }  else{\r\n                  console.log(\"error\");\r\n              } \r\n           })\r\n           \r\n      }  catch (error) {\r\n          console.log(\"XXXXXX\"+error);\r\n      }\r\n    }\r\n\r\n    getAddressData(id)\r\n    {\r\n      fetchAddressData(id).then((jsondata)=>{\r\n              console.log(jsondata); \r\n              if(jsondata.appError==null){      \r\n                  let jsonobjects = JSON.parse(jsondata.data);\r\n                  console.log(jsonobjects); \r\n                  Object.keys(jsonobjects[0]).forEach(function(key) {\r\n                    if(jsonobjects[0].type == \"R\")\r\n                    {\r\n                      this.setState({\r\n                        address: {\r\n                          ...this.state.address,\r\n                          [key]: jsonobjects[0][key].toString()\r\n                        }\r\n                      })\r\n                    }\r\n                    if(jsonobjects[0].type == \"P\")\r\n                    this.setState({\r\n                      address2: {\r\n                        ...this.state.address2,\r\n                        [key]: jsonobjects[0][key].toString()\r\n                      }\r\n                     // ,[\"prAddId\"] : jsonobjects[0].id\r\n                    })\r\n                  }.bind(this));\r\n                  if(typeof  jsonobjects[1]!=\"undefined\"){\r\n                  Object.keys(jsonobjects[1]).forEach(function(key) {\r\n                    if(jsonobjects[1].type == \"R\")\r\n                    {\r\n                      this.setState({\r\n                        address: {\r\n                          ...this.state.address,\r\n                          [key]: jsonobjects[1][key].toString()\r\n                        }\r\n                      })\r\n                    }\r\n                    if(jsonobjects[1].type == \"P\")\r\n                    this.setState({\r\n                      address2: {\r\n                        ...this.state.address2,\r\n                        [key]: jsonobjects[1][key].toString()\r\n                      }\r\n                     // ,[\"prAddId\"] : jsonobjects[1].id\r\n                    })\r\n                  }.bind(this));\r\n                }\r\n                  this.getPincodeData(\"pincode\" , this.state.address.pincode);\r\n                  this.getPincodeData2(\"pincode\" , this.state.address2.pincode);\r\n                  if(this.state.address.addressLine1 == this.state.address2.addressLine1 && this.state.address.pincode == this.state.address2.pincode)\r\n                 {\r\n                   this.setState({\r\n                     ...this.state,\r\n                      \"checked\" : true\r\n                   })\r\n                 }\r\n              \r\n              }  else{\r\n                  console.log(\"error\");\r\n              } \r\n           })\r\n    \r\n    }\r\n\r\n \r\n\r\n submitStudent()\r\n{\r\n    let action = \"\";\r\n    const dbUserId = (this.state.dbUserId == '' || this.state.dbUserId == null);\r\n      if (dbUserId) {\r\n        action =  \"captureBeneficiaryDetails\";\r\n      } else {\r\n        action =  \"updateBeneficiaryDetails\";\r\n        this.setState({\r\n          basicData: \r\n          {\r\n            ...this.state.basicData,\r\n            \"updatedBy\" : UserContext.userid\r\n          }\r\n        })\r\n      }\r\n    //alert(JSON.stringify(this.state.basicData));\r\n        //formData.append('data', '{\"token\" : \"'+this.state.token+'\", \"action\" : \"'+this.state.action+'\", \"data\" : [{\"userName\":\"'+this.state.email+'\",\"password\":\"'+this.state.password+'\"}]}');\r\n        subMitBasicData(action,this.state.basicData).then((jsondata)=>{\r\n            console.log(jsondata); \r\n            if(jsondata.appError==null){      \r\n                let jsonobjects = JSON.parse(jsondata.data);\r\n                console.log(jsonobjects); \r\n               // alert(\"Successfully Mobilized\");\r\n                //this.props.history.push('/dashboard');\r\n                UserContext.dbUserId = jsonobjects[0].dbUserId;\r\n                if(action == 'captureBeneficiaryDetails')\r\n                {\r\n                this.submitAddress(jsonobjects[0].dbUserId,this.state.address) ;\r\n                // if(this.state.prAddId != undefined)\r\n                // {\r\n                //   this.setState({\r\n                //     address2 : {\r\n                //       ...this.state.address2,\r\n                //       \"id\" : this.state.prAddId\r\n                //     }\r\n                //   })\r\n                // }\r\n                this.submitAddress(jsonobjects[0].dbUserId,this.state.address2) ;\r\n                captureStudentEngagementDetails(jsonobjects[0].dbUserId,UserContext.centerId,UserContext.userid).then((jsondata) => { \r\n                  let json = JSON.parse(jsondata.data);\r\n                  this.setState({\r\n                    engagementId : json[0].engagementId\r\n                  })\r\n                  alert(\"Successfully Mobilized\");\r\n                   setTimeout(() => {this.props.history.push({\r\n                    pathname: '/dashboard/updatebeneficiary',\r\n                    state: { dbUserId: jsonobjects[0].dbUserId, engagementId : this.state.engagementId ,  tab : 1 , name : jsonobjects[0].firstName + \" \" + jsonobjects[0].lastName  }\r\n                  }) },3000)\r\n                });\r\n               \r\n                } \r\n                else \r\n                {\r\n                  this.submitAddress(jsonobjects[0].dbUserId,this.state.address) ;\r\n                  // if(this.state.prAddId != undefined)\r\n                  // {\r\n                  //   this.setState({\r\n                  //     address2 : {\r\n                  //       ...this.state.address2,\r\n                  //       \"id\" : this.state.prAddId\r\n                  //     }\r\n                  //   })\r\n                  // }\r\n\r\n\r\n                  this.submitAddress(jsonobjects[0].dbUserId,this.state.address2) ;\r\n                  alert(\"Successfully Updated\");\r\n                  setTimeout(() => {this.props.history.push({\r\n                    pathname: '/dashboard/updatebeneficiary',\r\n                    state: { dbUserId: jsonobjects[0].dbUserId , engagementId : this.state.engagementId , tab : 1} \r\n                  }) },3000)\r\n                }\r\n                \r\n                \r\n\r\n            }  else{\r\n                console.log(\"error\");\r\n            } \r\n         })\r\n\r\n}\r\n\r\nsubmitAddress(dbUserId , address)\r\n{\r\n  let action = \"\";\r\n  const dbUserId2 = (this.state.dbUserId == '' || this.state.dbUserId == null);\r\n  //alert(dbUserId);\r\n      if (dbUserId2) {\r\n        action =  \"captureAddress\";\r\n      } else {\r\n        action =  \"updateAddress\";\r\n        address = {\r\n          ...address , \r\n          \"updatedBy\" : UserContext.userid\r\n        }\r\n      }\r\n\r\n        address =  {\r\n          ...address,\r\n          'entityId': dbUserId,\r\n          \"entityType\" : \"S\"\r\n        }\r\n          submitAddressData(action,address).then((jsondata)=>{\r\n            if(jsondata.appError==null){      \r\n                let jsonobjects = JSON.parse(jsondata.data);\r\n                //alert(\"Successfully Mobilized\");\r\n                //this.props.history.push('/dashboard');\r\n                //this.submitEngagement(jsonobjects[0].dbUserId) ;\r\n            }  else{\r\n                console.log(\"error\");\r\n            } \r\n         })\r\n}\r\n\r\nrender()\r\n{\r\n  const dbUserId = (this.state.dbUserId == '' || this.state.dbUserId == null);\r\n  let button;\r\n  let displayText = \"\";\r\n  if(this.state.checked)\r\n  {\r\n    displayText = \r\n    <Grid item xs={12} sm={12}>\r\n          (Permanent address same as present address ? ).\r\n          <FormControlLabel\r\n            control={\r\n              <Switch onChange={this.handlePresentPermanentAddress('checked')} checked = {this.state.checked} />\r\n            }\r\n            \r\n      />    \r\n        </Grid>\r\n  }\r\n  else\r\n  {\r\n    displayText = \r\n    <Grid item xs={12} sm={12}>\r\n          (Permanent address same as present address ? ).\r\n          <FormControlLabel\r\n            control={\r\n              <Switch onChange={ this.handlePresentPermanentAddress('checked')} checked = {this.state.checked} />\r\n            }\r\n            \r\n      />    \r\n        </Grid>\r\n  }\r\n  if (dbUserId) {\r\n    button =   <Button disabled = {this.state.disabled} id = \"save\" type = \"submit\" variant=\"contained\"  color=\"primary\"   size=\"small\">\r\n    Mobilise\r\n  </Button>;\r\n  } else {\r\n    button = <Button  disabled = {this.state.disabled} id = \"save\" type = \"submit\" variant=\"contained\" color=\"secondary\" size=\"small\">Update</Button>;\r\n  }\r\n    return (\r\n  <div style = {{ width : '100%' }}>\r\n    <form method=\"post\" onSubmit = {this.mySubmitHandler}>\r\n      <fieldset id = \"roleBasedDisable\">\r\n   <Grid container spacing={2}>\r\n    <Grid item xs={12}>\r\n          <FormControl>\r\n          <h5>Basic Details</h5>\r\n            </FormControl>  \r\n        </Grid>\r\n        <Grid item xs={12} sm={3}>\r\n          <FormControl>\r\n            <TextField   type=\"number\" name=\"aadharNo\" id=\"aadharNo\"\r\n            label = \"Aadhar Number\"  onInput = {(e) =>{\r\n              e.target.value = Math.max(0, parseInt(e.target.value) ).toString().slice(0,12)\r\n          }}\r\n           onChange={this.handleInputChange} value={this.state.basicData.aadharNo || ''}\r\n            helperText = {this.state.errors.aadharNo != undefined ? this.state.errors.aadharNo.label : '' } \r\n            error = {this.state.errors.aadharNo != undefined ? this.state.errors.aadharNo.value : '' }  \r\n            />\r\n            \r\n          </FormControl>  \r\n        </Grid>\r\n        <Grid item xs={12} sm={3}>\r\n        <InputLabel shrink={true} >Gender</InputLabel>\r\n            <SingleSelect  isClearable={true} onChange={this.handleSelectChange.bind(this, 'gender')} name=\"gender\" id=\"gender\"\r\n               value={this.state.basicData.gender || '' }\r\n              helperText = {this.state.errors.gender != undefined ? this.state.errors.gender.label : '' } \r\n            error = {this.state.errors.gender != undefined ? this.state.errors.gender.value : '' }\r\n              options={this.state.gender}\r\n            />\r\n        </Grid>\r\n        <Grid item xs={12} sm={3}>\r\n            <TextField   id=\"date\" name = \"dob\" id = \"dob\" onChange={this.handleInputChange}\r\n            label=\"Birthday\" value={this.state.basicData.dob || ''}\r\n            helperText = {this.state.errors.dob != undefined ? this.state.errors.dob.label : '' } \r\n            error = {this.state.errors.dob != undefined ? this.state.errors.dob.value : '' }\r\n            type=\"date\"\r\n            inputProps={{  min: new Date('02/01/1980').toISOString().slice(0,10) , max: new Date().toISOString().slice(0,10)}}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }} />\r\n\r\n        </Grid>\r\n        <Grid item xs={12} sm={3}>\r\n       <InputLabel shrink={true} >Blood Group</InputLabel>\r\n       <SingleSelect  isClearable={true}  onChange={this.handleSelectChange.bind(this, 'bloodGroup')} name=\"bloodGroup\" id=\"bloodGroup\"\r\n               options={this.state.bloodgroup}  value={this.state.basicData.bloodGroup || ''}\r\n           //   helperText = {this.state.errors.bloodGroup != undefined ? this.state.errors.bloodGroup.label : '' } \r\n           // error = {this.state.errors.bloodGroup != undefined ? this.state.errors.bloodGroup.value : '' }\r\n            /> \r\n        </Grid>\r\n        <Grid item xs={12} sm={3}>\r\n        <InputLabel shrink={true} >Salutation</InputLabel>\r\n        <SingleSelect  isClearable={true}  onChange={this.handleSelectChange.bind(this, 'salutation')} name=\"salutation\" id=\"salutation\" value={this.state.basicData.salutation || ''}\r\n              helperText = {this.state.errors.salutation != undefined ? this.state.errors.salutation.label : '' } \r\n            error = {this.state.errors.salutation != undefined ? this.state.errors.salutation.value : '' }\r\n              options={this.state.salutation}\r\n            />\r\n        </Grid>\r\n         <Grid item xs={12} sm={3}>\r\n          <FormControl>\r\n            <TextField   type=\"text\" name=\"firstName\" id=\"firstName\"\r\n            helperText = {this.state.errors.firstName != undefined ? this.state.errors.firstName.label : '' } \r\n            error = {this.state.errors.firstName != undefined ? this.state.errors.firstName.value : '' }\r\n            label = \"First Name\"  onChange={this.handleInputChange} value={this.state.basicData.firstName || ''} />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} sm={3}>\r\n          <FormControl> \r\n            <TextField type=\"text\" name=\"middleName\" id=\"middleName\"\r\n            helperText = {this.state.errors.middleName != undefined ? this.state.errors.middleName.label : '' } \r\n            error = {this.state.errors.middleName != undefined ? this.state.errors.middleName.value : '' }\r\n            label = \"Middle Name\" onChange={this.handleInputChange}  value={this.state.basicData.middleName || ''} />\r\n          </FormControl>\r\n        </Grid>\r\n         <Grid item xs={12} sm={3}>\r\n          <FormControl>\r\n            <TextField   type=\"text\" name=\"lastName\" id=\"lastName\" \r\n             helperText = {this.state.errors.lastName != undefined ? this.state.errors.lastName.label : '' } \r\n             error = {this.state.errors.lastName != undefined ? this.state.errors.lastName.value : '' } \r\n            label = \"Last Name\"  onChange={this.handleInputChange} value={this.state.basicData.lastName || ''} />\r\n          </FormControl>\r\n        </Grid>\r\n  \r\n       <Grid item xs={12} sm={4}>\r\n       <InputLabel shrink={true} >Mobilization Channel</InputLabel>\r\n       <SingleSelect  isClearable={true}  onChange={this.handleSelectChange.bind(this, 'mobilizationChannel')} name=\"mobilizationChannel\" id=\"mobilizationChannel\"\r\n              options={this.state.channel} value={this.state.basicData.mobilizationChannel || ''}\r\n              helperText = {this.state.errors.mobilizationChannel != undefined ? this.state.errors.mobilizationChannel.label : '' } \r\n            error = {this.state.errors.mobilizationChannel != undefined ? this.state.errors.mobilizationChannel.value : '' }\r\n            /> \r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n        <FormControl> \r\n            <TextField type=\"text\" name=\"mobilizationPlace\" id=\"mobilizationPlace\"\r\n            label = \"Mobilization Place\" onChange={this.handleInputChange}  \r\n            value={this.state.basicData.mobilizationPlace || ''} />\r\n          </FormControl>\r\n        </Grid>\r\n         <Grid item xs={12} sm={4}>\r\n         <InputLabel shrink={true} >Highest Qualification</InputLabel>\r\n         <SingleSelect  isClearable={true}  onChange={this.handleSelectChange.bind(this, 'highestQualification')} name=\"highestQualification\" id=\"highestQualification\"\r\n               value={this.state.basicData.highestQualification || ''}\r\n               helperText = {this.state.errors.highestQualification != undefined ? this.state.errors.highestQualification.label : '' } \r\n            error = {this.state.errors.highestQualification != undefined ? this.state.errors.highestQualification.value : '' }\r\n              options={this.state.qual}\r\n            /> \r\n        </Grid>\r\n         <Grid item xs={12} sm={4}>\r\n         <TextField type = \"number\"  onChange={this.handleInputChange} name=\"passingYear\" id=\"passingYear\"\r\n            onInput = {(e) =>{\r\n              e.target.value = Math.max(0, parseInt(e.target.value) ).toString().slice(0,4)\r\n          }}\r\n          label = \"Passing Year\"\r\n             value={this.state.basicData.passingYear || ''} \r\n             helperText = {this.state.errors.passingYear != undefined ? this.state.errors.passingYear.label : '' } \r\n            error = {this.state.errors.passingYear != undefined ? this.state.errors.passingYear.value : '' }\r\n            /> \r\n        </Grid>\r\n         <Grid item xs={12} sm={4}>\r\n         <InputLabel shrink={true} >Religion</InputLabel>\r\n         <SingleSelect  isClearable={true}  onChange={this.handleSelectChange.bind(this, 'religion')} name=\"religion\" id=\"religion\"\r\n               value={this.state.basicData.religion || ''}\r\n               helperText = {this.state.errors.religion != undefined ? this.state.errors.religion.label : '' } \r\n            error = {this.state.errors.religion != undefined ? this.state.errors.religion.value : '' }\r\n              options={this.state.religion}\r\n            /> \r\n        </Grid>\r\n         <Grid item xs={12} sm={4}>\r\n         <InputLabel shrink={true} >Category</InputLabel>\r\n         <SingleSelect  isClearable={true}  onChange={this.handleSelectChange.bind(this, 'category')} name=\"category\" id=\"category\"\r\n               value={this.state.basicData.category || ''}\r\n               helperText = {this.state.errors.category != undefined ? this.state.errors.category.label : '' } \r\n            error = {this.state.errors.category != undefined ? this.state.errors.category.value : '' }\r\n              options={this.state.category}\r\n            /> \r\n        </Grid>\r\n         <Grid item xs={12} sm={4}>\r\n         <InputLabel shrink={true} >BPL</InputLabel>\r\n         <SingleSelect  isClearable={true}  onChange={this.handleSelectChange.bind(this, 'bplStatus')} name=\"bplStatus\" id=\"bplStatus\"\r\n              value={this.state.basicData.bplStatus || ''}\r\n              helperText = {this.state.errors.bplStatus != undefined ? this.state.errors.bplStatus.label : '' } \r\n            error = {this.state.errors.bplStatus != undefined ? this.state.errors.bplStatus.value : '' }\r\n              options={this.state.bplStatus}\r\n            /> \r\n        </Grid>\r\n\r\n       <Grid item xs={12}>\r\n          <FormControl>\r\n          <h5>Contact Information</h5>\r\n            </FormControl>  \r\n        </Grid>\r\n         <Grid item xs={12} sm={6}>\r\n          <FormControl>\r\n           \r\n            <TextField   type=\"number\" name=\"primaryContactNumber\" id=\"primaryContactNumber\" label=\"Primary Contact\"\r\n              helperText = {this.state.errors.primaryContactNumber != undefined ? this.state.errors.primaryContactNumber.label : '' } \r\n              error = {this.state.errors.primaryContactNumber != undefined ? this.state.errors.primaryContactNumber.value : '' }\r\n               onInput = {(e) =>{\r\n                e.target.value = Math.max(0, parseInt(e.target.value) ).toString().slice(0,10)\r\n            }}\r\n            onChange={this.handleInputChange} value={this.state.basicData.primaryContactNumber || ''} />\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl>\r\n            <TextField   type=\"email\" name=\"primaryEmailId\" id=\"primaryEmailId\"\r\n            label=\"Primary Email\"\r\n            helperText = {this.state.errors.primaryEmailId != undefined ? this.state.errors.primaryEmailId.label : '' } \r\n            error = {this.state.errors.primaryEmailId != undefined ? this.state.errors.primaryEmailId.value : '' }\r\n            onChange={this.handleInputChange} value={this.state.basicData.primaryEmailId || ''}  />\r\n          </FormControl>\r\n        </Grid>\r\n\r\n         <Grid item xs={12} sm={6}>\r\n          <FormControl>\r\n            <TextField type=\"number\" name=\"secondaryContactNumber\" id=\"secondaryContactNumber\" label=\"Secondary Contact\"\r\n            helperText = {this.state.errors.secondaryContactNumber != undefined ? this.state.errors.secondaryContactNumber.label : '' } \r\n            error = {this.state.errors.secondaryContactNumber != undefined ? this.state.errors.secondaryContactNumber.value : '' }\r\n             onInput = {(e) =>{\r\n              e.target.value = Math.max(0, parseInt(e.target.value) ).toString().slice(0,10)\r\n          }}\r\n            onChange={this.handleInputChange} value={this.state.basicData.secondaryContactNumber || ''} />\r\n          </FormControl>\r\n        </Grid>\r\n         <Grid item xs={12} sm={6}>\r\n          <FormControl>\r\n            <TextField  type=\"email\" name=\"secondaryEmailId\" id=\"secondaryEmailId\"\r\n            label=\"Secondary Email\"\r\n            helperText = {this.state.errors.secondaryEmailId != undefined ? this.state.errors.secondaryEmailId.label : '' } \r\n            error = {this.state.errors.secondaryEmailId != undefined ? this.state.errors.secondaryEmailId.value : '' }\r\n            onChange={this.handleInputChange} value={this.state.basicData.secondaryEmailId || ''}  />\r\n          </FormControl>\r\n        </Grid>\r\n  \r\n        <Grid item xs={12}>\r\n          <FormControl>\r\n          <h5>Address Information</h5>\r\n            </FormControl>  \r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControl>\r\n          <h4>Present Address</h4>\r\n            </FormControl>  \r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n      <FormControl>\r\n        <TextField   type=\"text\" name=\"addressLine1\" id=\"addressLine1\" \r\n        helperText = {this.state.erroradd1.addressLine1 != undefined ? this.state.erroradd1.addressLine1.label : '' } \r\n        error = {this.state.erroradd1.addressLine1 != undefined ? this.state.erroradd1.addressLine1.value : '' }\r\n        label = \"Address Line 1\" maxLength = \"20\"\r\n        onChange={this.handleAddressInputChange} value={this.state.address.addressLine1 || ''} />\r\n      </FormControl>\r\n    </Grid>\r\n    <Grid item xs={12} sm={4}>\r\n      <FormControl>\r\n        <TextField   type=\"text\" name=\"addressLine2\" id=\"addressLine2\"\r\n        helperText = {this.state.erroradd1.addressLine2 != undefined ? this.state.erroradd1.addressLine2.label : '' } \r\n        error = {this.state.erroradd1.addressLine2 != undefined ? this.state.erroradd1.addressLine2.value : '' }\r\n        label = \"Address Line 2\"  maxLength = \"20\"\r\n        onChange={this.handleAddressInputChange}  value={this.state.address.addressLine2 || ''} />\r\n      </FormControl>\r\n    </Grid>\r\n    <Grid item xs={12} sm={4}>\r\n            <TextField   type=\"number\" label = \"Pincode\"\r\n              name=\"pincode\" id=\"pincode\" onInput = {(e) =>{\r\n                e.target.value = Math.max(0, parseInt(e.target.value) ).toString().slice(0,6)\r\n            }}\r\n            helperText = {this.state.erroradd1.pincode != undefined ? this.state.erroradd1.pincode.label : '' } \r\n            error = {this.state.erroradd1.pincode != undefined ? this.state.erroradd1.pincode.value : '' }\r\n              onChange={this.getPincodeData.bind(this, 'pincode')}\r\n              value = {this.state.address.pincode || ''}\r\n              />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} for=\"village\">Village</InputLabel>\r\n             <SingleSelect  \r\n              isClearable={true}  \r\n              name=\"villageName\" id=\"villageName\"\r\n              options={this.state.village1}\r\n              helperText = {this.state.erroradd1.villageName != undefined ? this.state.erroradd1.villageName.label : '' } \r\n            error = {this.state.erroradd1.villageName != undefined ? this.state.erroradd1.villageName.value : '' }\r\n              onChange={this.handleAddressSelectChange.bind(this, 'villageName')}\r\n              value={this.state.address.villageName || ''}\r\n            /> \r\n\r\n        </Grid>\r\n         <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} for=\"city\">City</InputLabel>\r\n            <SingleSelect  isClearable={true}  \r\n             onChange={this.handleAddressSelectChange.bind(this, 'cityName')} name=\"cityName\" id=\"cityName\"\r\n             options={this.state.city1}  \r\n             helperText = {this.state.erroradd1.cityName != undefined ? this.state.erroradd1.cityName.label : '' } \r\n            error = {this.state.erroradd1.cityName != undefined ? this.state.erroradd1.cityName.value : '' }\r\n             value={this.state.address.cityName || ''}\r\n              \r\n            />      \r\n        </Grid>\r\n        <Grid item xs={4}>\r\n         <InputLabel shrink={true} >District</InputLabel>\r\n         <SingleSelect  isClearable={true}  onChange={this.handleAddressSelectChange.bind(this, 'district')} \r\n              name=\"district\" id=\"district\"\r\n              options={this.state.district1}\r\n              helperText = {this.state.erroradd1.district != undefined ? this.state.erroradd1.district.label : '' } \r\n            error = {this.state.erroradd1.district != undefined ? this.state.erroradd1.district.value : '' }\r\n              value={this.state.address.district || ''}\r\n                     \r\n            /> \r\n        </Grid> \r\n\r\n        <Grid item xs={12} sm={4}>\r\n         <InputLabel shrink={true} >State</InputLabel>\r\n         <SingleSelect  isClearable={true}  onChange={this.handleAddressSelectChange.bind(this, 'state')} name=\"state\" id=\"state\"\r\n          options={this.state.state1}  \r\n          helperText = {this.state.erroradd1.state != undefined ? this.state.erroradd1.state.label : '' } \r\n            error = {this.state.erroradd1.state != undefined ? this.state.erroradd1.state.value : '' }\r\n              value={this.state.address.state || ''}\r\n                        \r\n            /> \r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControl>\r\n          <h4>Permanent Address</h4>\r\n          </FormControl> \r\n          </Grid>\r\n        {displayText}\r\n        <Grid item xs={12} sm={4}>\r\n      <FormControl>\r\n        <TextField   type=\"text\" name=\"addressLine1\" id=\"addressLine1\" \r\n        helperText = {this.state.erroradd2.addressLine1 != undefined ? this.state.erroradd2.addressLine1.label : '' } \r\n        error = {this.state.erroradd2.addressLine1 != undefined ? this.state.erroradd2.addressLine1.value : '' }\r\n        label = \"Address Line 1\" maxLength = \"20\"\r\n        onChange={this.handleAddressInputChange2} value={this.state.address2.addressLine1 || ''} />\r\n      </FormControl>\r\n    </Grid>\r\n    <Grid item xs={12} sm={4}>\r\n      <FormControl>\r\n        <TextField   type=\"text\" name=\"addressLine2\" id=\"addressLine2\"\r\n        helperText = {this.state.erroradd2.addressLine2 != undefined ? this.state.erroradd2.addressLine2.label : '' } \r\n        error = {this.state.erroradd2.addressLine2 != undefined ? this.state.erroradd2.addressLine2.value : '' }\r\n        label = \"Address Line 2\"  maxLength = \"20\"\r\n        onChange={this.handleAddressInputChange2}  value={this.state.address2.addressLine2 || ''} />\r\n      </FormControl>\r\n    </Grid>\r\n    <Grid item xs={12} sm={4}>\r\n            <TextField   type=\"number\" label = \"Pincode\"\r\n              name=\"pincode\" id=\"pincode\" onInput = {(e) =>{\r\n                e.target.value = Math.max(0, parseInt(e.target.value) ).toString().slice(0,6)\r\n            }}\r\n            helperText = {this.state.erroradd2.pincode != undefined ? this.state.erroradd2.pincode.label : '' } \r\n            error = {this.state.erroradd2.pincode != undefined ? this.state.erroradd2.pincode.value : '' }\r\n              onChange={this.getPincodeData2.bind(this, 'pincode')}\r\n              value = {this.state.address2.pincode || ''}\r\n              />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} for=\"village\">Village</InputLabel>\r\n             <SingleSelect  isClearable={true}  \r\n              name=\"villageName\" id=\"villageName\"\r\n              options={this.state.village2}\r\n              helperText = {this.state.erroradd2.villageName != undefined ? this.state.erroradd2.villageName.label : '' } \r\n            error = {this.state.erroradd2.villageName != undefined ? this.state.erroradd2.villageName.value : '' }\r\n              onChange={this.handleAddressSelectChange2.bind(this, 'villageName')}\r\n              value={this.state.address2.villageName || ''}\r\n            /> \r\n        </Grid>\r\n         <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} for=\"city\">City</InputLabel>\r\n            <SingleSelect  isClearable={true}  \r\n             onChange={this.handleAddressSelectChange2.bind(this, 'cityName')} name=\"cityName\" id=\"cityName\"\r\n             options={this.state.city2}  \r\n             helperText = {this.state.erroradd2.cityName != undefined ? this.state.erroradd2.cityName.label : '' } \r\n            error = {this.state.erroradd2.cityName != undefined ? this.state.erroradd2.cityName.value : '' }\r\n             value={this.state.address2.cityName || ''}\r\n              \r\n            />      \r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n         <InputLabel shrink={true} >District</InputLabel>\r\n         <SingleSelect  isClearable={true}  onChange={this.handleAddressSelectChange2.bind(this, 'district')} \r\n              name=\"district\" id=\"district\"\r\n              options={this.state.district2}\r\n              helperText = {this.state.erroradd2.district != undefined ? this.state.erroradd2.district.label : '' } \r\n            error = {this.state.erroradd2.district != undefined ? this.state.erroradd2.district.value : '' }\r\n              value={this.state.address2.district || ''}\r\n                     \r\n            /> \r\n        </Grid> \r\n\r\n        <Grid item xs={12} sm={4}>\r\n         <InputLabel shrink={true} >State</InputLabel>\r\n         <SingleSelect  isClearable={true}  onChange={this.handleAddressSelectChange2.bind(this, 'state')} name=\"state\" id=\"state\"\r\n          options={this.state.state2}  \r\n          helperText = {this.state.erroradd2.state != undefined ? this.state.erroradd2.state.label : '' } \r\n            error = {this.state.erroradd2.state != undefined ? this.state.erroradd2.state.value : '' }\r\n              value={this.state.address2.state || ''}\r\n                        \r\n            /> \r\n        </Grid>\r\n\r\n        \r\n        \r\n      </Grid>\r\n\r\n      <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"flex-end\">{button}</Grid> \r\n      </fieldset>\r\n    </form>\r\n    </div>\r\n\r\n    );\r\n}\r\n\r\n}\r\nexport default BasicForm;"]},"metadata":{},"sourceType":"module"}