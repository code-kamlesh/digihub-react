{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\Upload.js\";\nimport React from 'react'; // import * as XLSX from \"xlsx\";\n\nimport { Checkbox, InputLabel, Input, Grid, Button } from '@material-ui/core';\nimport { SingleSelect } from \"react-select-material-ui\";\nimport label from 'material-ui/svg-icons/action/label';\nimport { useState } from \"react\";\nexport default function () {\n  const option = [{\n    value: \"1\",\n    label: \"Mobilization\"\n  }, {\n    value: \"2\",\n    label: \"Enrollment\"\n  }];\n  const batches = [{\n    value: \"1\",\n    label: \"Automibile\"\n  }, {\n    value: \"2\",\n    label: \"Ac repairing\"\n  }, {\n    value: \"3\",\n    label: \"Full stack\"\n  }, {\n    value: \"4\",\n    label: \"Cyber security\"\n  }];\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [selectedBatches, setselectedBatches] = useState(null);\n  const [error, setserros] = useState(\"\"); // For handling the dropdown\n\n  const handleChange = e => {\n    setSelectedOption(e);\n    console.log(e);\n  }; // for handling batches changes\n\n\n  const batchesChanges = e => {\n    setselectedBatches(e);\n    console.log(e);\n  }; // handlingError((e)=>{\n  //   if(setSelectedOption===\"\"){\n  //     setserros=\"Plase select Some option\"\n  //   }\n  // })\n\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    shrink: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"Options\"), /*#__PURE__*/React.createElement(SingleSelect, {\n    name: \"\",\n    id: \"\" // key={this.state.Selectedstate || ''}\n    ,\n    options: option,\n    value: selectedOption,\n    onChange: handleChange // error={handlingError}\n    // onChange={this.handleStateChange.bind(this, 'Selectedstate')}\n    // helperText={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.label : ''}\n    // error={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.value : ''}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \" lable: \", setSelectedOption.value), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    shrink: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"batches\"), /*#__PURE__*/React.createElement(SingleSelect // key={this.state.Selectedstate || ''}\n  , {\n    options: batches,\n    value: selectedBatches,\n    onChange: batchesChanges // onChange={this.handleStateChange.bind(this, 'Selectedstate')}\n    // helperText={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.label : ''}\n    // error={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.value : ''}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    name: \"upload-photo\",\n    type: \"file\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/Upload.js"],"names":["React","Checkbox","InputLabel","Input","Grid","Button","SingleSelect","label","useState","option","value","batches","selectedOption","setSelectedOption","selectedBatches","setselectedBatches","error","setserros","handleChange","e","console","log","batchesChanges"],"mappings":"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","sourcesContent":["import React from 'react';\r\n// import * as XLSX from \"xlsx\";\r\nimport { Checkbox, InputLabel, Input, Grid, Button } from '@material-ui/core';\r\nimport { SingleSelect } from \"react-select-material-ui\";\r\nimport label from 'material-ui/svg-icons/action/label';\r\nimport { useState } from \"react\";\r\nexport default function(){\r\n    const option=[{value:\"1\", label:\"Mobilization\"},{value:\"2\" ,label:\"Enrollment\"}]\r\n    const batches=[{value:\"1\", label:\"Automibile\"},{value:\"2\" ,label:\"Ac repairing\"},\r\n                    {value:\"3\", label:\"Full stack\"},{value:\"4\" ,label:\"Cyber security\"}]\r\n  \r\n    const [selectedOption, setSelectedOption] = useState(null)\r\n    const [selectedBatches, setselectedBatches] = useState(null)\r\n    const[error,setserros]= useState(\"\")\r\n    // For handling the dropdown\r\n    const handleChange=((e)=>{\r\n      setSelectedOption(e)\r\n      console.log(e)\r\n    })\r\n    // for handling batches changes\r\n   const  batchesChanges= ((e)=>{\r\n      setselectedBatches(e)\r\n      console.log(e)\r\n    })\r\n    // handlingError((e)=>{\r\n    //   if(setSelectedOption===\"\"){\r\n    //     setserros=\"Plase select Some option\"\r\n    //   }\r\n    // })\r\n        return(\r\n            <Grid>\r\n             <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} >Options</InputLabel>\r\n            <SingleSelect\r\n              name=\"\" id=\"\"\r\n              // key={this.state.Selectedstate || ''}\r\n              options={option}\r\n              value={selectedOption}\r\n              onChange={handleChange}\r\n              // error={handlingError}\r\n              // onChange={this.handleStateChange.bind(this, 'Selectedstate')}\r\n              // helperText={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.label : ''}\r\n              // error={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.value : ''}\r\n            />\r\n          </Grid>\r\n          <br/>\r\n          <b> lable: {setSelectedOption.value}</b>\r\n          <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} >batches</InputLabel>\r\n            <SingleSelect\r\n              // key={this.state.Selectedstate || ''}\r\n              options={batches}\r\n              value={selectedBatches}\r\n              onChange={batchesChanges}\r\n              // onChange={this.handleStateChange.bind(this, 'Selectedstate')}\r\n              // helperText={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.label : ''}\r\n              // error={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.value : ''}\r\n            />\r\n          </Grid>\r\n\r\n            <Input\r\n                 name=\"upload-photo\"\r\n                 type=\"file\"\r\n                 disabled={true}\r\n            />\r\n            </Grid>\r\n       \r\n        )\r\n}   "]},"metadata":{},"sourceType":"module"}