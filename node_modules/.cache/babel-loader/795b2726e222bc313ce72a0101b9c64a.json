{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\BulkUpload.js\";\nimport React, { Component } from 'react';\nimport * as XLSX from \"xlsx\";\nimport readXlsxFile from 'read-excel-file/web-worker';\nimport { InputLabel, Input, Grid, Button } from '@material-ui/core';\nimport { SingleSelect } from \"react-select-material-ui\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport UserContext from '../components/GolbalContext';\nimport { fetchNotCompletedBatchDetails, saveBulkMetaData, saveBulkStudentData, saveBulkMetaDataAgain } from '../util/api';\nimport Student_Template1 from \"./../assets/document/Student_Template1.xlsx\";\nlet today = new Date();\nlet dd = String(today.getDate()).padStart(2, '0');\nlet mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n\nlet yyyy = today.getFullYear();\nvar time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\ntoday = yyyy + '-' + mm + '-' + dd + ' ' + time;\nexport default class bulkUpload extends Component {\n  constructor(props) {\n    super(props);\n\n    this.readExcel = file => {\n      // \n      let file_name = file.name;\n      this.setState({\n        fileName: file_name\n      });\n      const fileReader = new FileReader();\n      fileReader.readAsArrayBuffer(file);\n\n      fileReader.onload = e => {\n        //  console.log(e)\n        const bufferArray = e.target.result;\n        const wb = XLSX.read(bufferArray, {\n          type: \"buffer\",\n          cellDates: true\n        });\n        const wsname = wb.SheetNames[0];\n        const ws = wb.Sheets[wsname]; // To get the header details of excel\n\n        const data = XLSX.utils.sheet_to_json(ws, {\n          header: 1\n        }); //  console.log(data)\n        //  console.log(\"Header file \",data[0])\n\n        let student_data = XLSX.utils.sheet_to_json(ws, {\n          header: 0,\n          raw: false,\n          dateNF: 'yyyy-mm-dd'\n        });\n        this.setState({\n          student_count: data.length - 1\n        });\n        console.log(\"DataCount : \", this.state.student_count); // Replacing all next line with space\n        // .replaceAll(/\\r?\\n|\\r/g, \"\")\n        // for (var i = 0; i < this.state.student_count; i++) {\n        // }\n\n        console.log(\"data :  \", student_data);\n        this.setState({\n          studentInfo: student_data\n        });\n        console.log(this.state.studentInfo);\n        const requiredHeader = ['Aadhar_Number', 'First_Name', 'Middle_Name', 'Last_Name', 'Date_of_Birth', 'Gender', 'Qualification', 'Passing_year', 'Religion', 'Address_Line_1', 'Village', 'District', 'State', 'Pincode', 'Category', 'Primary_Contact_Number', 'Primary_Mail_ID', 'College_register_no', 'Iti_grade', 'Iti_trade'];\n        let flag = true;\n        requiredHeader.map((element, id) => {\n          // console.log(\"header comparison \",element, \"data : \",data[0][id])\n          if (flag) {\n            if (element == data[0][id]) {\n              if (id + 1 == requiredHeader.length) {\n                // Activating the upload button\n                this.setState({\n                  upload_button: false\n                });\n              }\n            } else {\n              flag = false;\n              alert(\"Plese use the correct template for upload.The coloumn in the upload file and sample template does not match.\"); // Plese use the correct template for upload.\n\n              this.setState({\n                upload_button: true\n              });\n              return;\n            }\n          }\n        });\n      };\n    };\n\n    this.state = {\n      options: UserContext.modelId == 3 || UserContext.modelId === 18 || UserContext.modelId === 19 || UserContext.modelId === 20 || UserContext.modelId === 21 || UserContext.modelId === 22 || UserContext.modelId === 23 ? [{\n        value: \"Mobilization\",\n        label: \"Mobilization\"\n      }, {\n        value: \"Enrollment\",\n        label: \"Enrollment\"\n      }] : [{\n        value: \"Mobilization\",\n        label: \"Mobilization\"\n      }],\n      user_unique_id: 0,\n      batchList: [],\n      Selectedoption: \"\",\n      student_count: 0,\n      fileName: \"\",\n      studentInfo: [],\n      batchName: null,\n      batchId: 0,\n      flag: false,\n      upload_button: true,\n      errors: {},\n      register_number: 0\n    };\n    this.handleOptionsChange = this.handleOptionsChange.bind(this); // Binding the method\n  } // optind change handler\n\n\n  handleOptionsChange(selectname, event) {\n    const value = event; // console.log(value)\n\n    this.setState({\n      Selectedoption: value,\n      batchName: \"\",\n      batchId: 0,\n      errors: { ...this.state.errors,\n        SelectedBatch: {\n          'label': '',\n          'value': false\n        }\n      }\n    });\n    this.setState({\n      batchList: []\n    });\n\n    if (event === \"Enrollment\") {\n      this.setState({\n        errors: { ...this.state.errors,\n          SelectedBatch: {\n            'label': 'Please select some option',\n            'value': true\n          }\n        }\n      }); // setDisabled(false)\n\n      fetchNotCompletedBatchDetails(UserContext.centerId).then(jsondata => {\n        let result = JSON.parse(jsondata.data); // console.log(\"center : \",result)\n\n        result.forEach(element => {\n          //  console.log(\"Condition for date \" , element.freezeDate > today)\n          if (element.freezeDate > today) {\n            this.state.batchList.push({\n              \"value\": element.batchId,\n              \"label\": element.batchName\n            });\n          }\n        });\n      });\n    } else {// setDisabled(true)\n    }\n  } // Hhandle batch changes\n\n\n  handleBatchChange(selectname, event) {\n    // console.log(\"selected optins : \",this.state.Selectedoption)\n    let value = event; // console.log(event)\n\n    let index = this.state.batchList.findIndex(object => object.value == value);\n    let batchname = this.state.batchList[index].label; // console.log(this.state.batcheList)\n\n    this.setState({\n      batchId: event,\n      batchName: batchname,\n      errors: { ...this.state.errors,\n        SelectedBatch: {\n          'label': '',\n          'value': false\n        }\n      }\n    });\n  }\n\n  // Uploadinh the doumnet\n  // this.setState({metaData})\n  async uploadDocuments() {\n    let studentInfo = this.state.studentInfo;\n    let duplicateAddhar = []; // Checking the duplicate aadhar in same file\n\n    for (var i = 0; i < this.state.student_count; i++) {\n      if (studentInfo[i].Aadhar_Number !== undefined) studentInfo[i].Aadhar_Number = studentInfo[i].Aadhar_Number.replace(/\\r?\\n|\\r/g, \"\");\n      if (studentInfo[i].First_Name !== undefined) studentInfo[i].First_Name = studentInfo[i].First_Name.replace(/\\r?\\n|\\r/g, \"\"); // console.log(studentInfo[i].First_Name)\n      // console.log(studentInfo[i].Middle_Name)\n\n      if (studentInfo[i].Middle_Name !== undefined) studentInfo[i].Aadhar_Number = studentInfo[i].Middle_Name.replace(/\\r?\\n|\\r/g, \"\");\n      if (studentInfo[i].Last_Name !== undefined) studentInfo[i].Aadhar_Number = studentInfo[i].Last_Name.replaceAll(/\\r?\\n|\\r/g, \"\");\n      if (studentInfo[i].Date_of_Birth !== undefined) studentInfo[i].Aadhar_Number = studentInfo[i].Date_of_Birth.replaceAll(\"/\", \"-\");\n      if (studentInfo[i].Gender !== undefined) studentInfo[i].Aadhar_Number = studentInfo[i].Gender.replaceAll(/\\r?\\n|\\r/g, \"\");\n      if (studentInfo[i].Qualification !== undefined) studentInfo[i].Aadhar_Number = studentInfo[i].Qualification.replaceAll(/\\r?\\n|\\r/g, \"\");\n      if (studentInfo[i].Passing_year !== undefined) studentInfo[i].Aadhar_Number = studentInfo[i].Passing_year.replaceAll(/\\r?\\n|\\r/g, \"\");\n      if (studentInfo[i].Religion !== undefined) studentInfo[i].Aadhar_Number = studentInfo[i].Religion.replaceAll(/\\r?\\n|\\r/g, \"\");\n      if (studentInfo[i].Address_Line_1 !== undefined) studentInfo[i].Aadhar_Number = studentInfo[i].Address_Line_1.replaceAll(/\\r?\\n|\\r/g, \"\");\n      if (studentInfo[i].Village !== undefined) studentInfo[i].Aadhar_Number = studentInfo[i].Village.replaceAll(/\\r?\\n|\\r/g, \"\");\n      if (studentInfo[i].State !== undefined) studentInfo[i].Aadhar_Number = studentInfo[i].State.replaceAll(/\\r?\\n|\\r/g, \"\");\n      if (studentInfo[i].District !== undefined) studentInfo[i].Aadhar_Number = studentInfo[i].District.replaceAll(/\\r?\\n|\\r/g, \"\");\n      if (studentInfo[i].Pincode !== undefined) studentInfo[i].Aadhar_Number = studentInfo[i].Pincode.replaceAll(/\\r?\\n|\\r/g, \"\");\n      if (studentInfo[i].Category !== undefined) studentInfo[i].Aadhar_Number = studentInfo[i].Category.replaceAll(/\\r?\\n|\\r/g, \"\");\n      if (studentInfo[i].Primary_Contact_Number !== undefined) studentInfo[i].Aadhar_Number = studentInfo[i].Primary_Contact_Number.replaceAll(/\\r?\\n|\\r/g, \"\");\n      if (studentInfo[i].Primary_Mail_ID !== undefined) studentInfo[i].Aadhar_Number = studentInfo[i].Primary_Mail_ID.replaceAll(/\\r?\\n|\\r/g, \"\");\n\n      for (var j = i + 1; j < this.state.student_count; j++) {\n        var _studentInfo$i, _studentInfo$j, _studentInfo$i2, _studentInfo$i3, _studentInfo$i4;\n\n        if (((_studentInfo$i = studentInfo[i]) === null || _studentInfo$i === void 0 ? void 0 : _studentInfo$i.Aadhar_Number) === ((_studentInfo$j = studentInfo[j]) === null || _studentInfo$j === void 0 ? void 0 : _studentInfo$j.Aadhar_Number) && ((_studentInfo$i2 = studentInfo[i]) === null || _studentInfo$i2 === void 0 ? void 0 : _studentInfo$i2.Aadhar_Number) != null && ((_studentInfo$i3 = studentInfo[i]) === null || _studentInfo$i3 === void 0 ? void 0 : _studentInfo$i3.Aadhar_Number) != \"\" && ((_studentInfo$i4 = studentInfo[i]) === null || _studentInfo$i4 === void 0 ? void 0 : _studentInfo$i4.Aadhar_Number) != 0) {\n          var _studentInfo$i5;\n\n          duplicateAddhar[i] = (_studentInfo$i5 = studentInfo[i]) === null || _studentInfo$i5 === void 0 ? void 0 : _studentInfo$i5.Aadhar_Number;\n        }\n      }\n    }\n\n    if (duplicateAddhar.length > 0) {\n      var x = 0;\n      let data = [];\n\n      for (var i = 0; i < duplicateAddhar.length; i++) {\n        if (duplicateAddhar[i] != undefined) {\n          data[x] = duplicateAddhar[i];\n          x++;\n        }\n      }\n\n      console.log(data);\n      alert(data + \"  duplicate Addhar Number\");\n      return;\n    } else {\n      const response = await saveBulkMetaData(this.state.fileName, today, this.state.Selectedoption, this.state.batchName, this.state.batchId, this.state.student_count, \"L\", UserContext.centerName, UserContext.centerId, UserContext.modelId, UserContext.userid, \"  \").then(jsondata => {\n        let result = JSON.parse(jsondata.data); // console.log(\"Mpdel id : \",result[0].modelId) \n\n        this.state.register_number = result[0].regId; // console.log(this.state.register_number)\n\n        if (result[0].regId == 0) {\n          alert(\"Data Not saved\"); // changes\n\n          return;\n        } else {\n          this.state.user_unique_id = result[0].regId;\n          this.uploadStudentData();\n        }\n      });\n    }\n  }\n\n  async uploadStudentData() {\n    let data_flag = false;\n    let count_loop = 1; // counting the number of data saved\n    // let flag = false\n\n    let invalid_student_firstName;\n    let sequence_number = 0;\n    let studentInfo = this.state.studentInfo; // console.log(\"Bulk Student data : \",studentInfo)\n\n    for (var i = 0; i < this.state.student_count; i++) {\n      sequence_number += 1;\n      invalid_student_firstName = studentInfo[i].First_Name;\n\n      try {\n        var _studentInfo$i6, _studentInfo$i7, _studentInfo$i8, _studentInfo$i9, _studentInfo$i10, _studentInfo$i11, _studentInfo$i12, _studentInfo$i13, _studentInfo$i14, _studentInfo$i15, _studentInfo$i16, _studentInfo$i17, _studentInfo$i18, _studentInfo$i19, _studentInfo$i20, _studentInfo$i21, _studentInfo$i22, _studentInfo$i23, _studentInfo$i24, _studentInfo$i25;\n\n        const response1 = await saveBulkStudentData(this.state.user_unique_id, ((_studentInfo$i6 = studentInfo[i]) === null || _studentInfo$i6 === void 0 ? void 0 : _studentInfo$i6.First_Name) || '', ((_studentInfo$i7 = studentInfo[i]) === null || _studentInfo$i7 === void 0 ? void 0 : _studentInfo$i7.Last_Name.replaceAll(/\\r?\\n|\\r/g, \"\")) || '', ((_studentInfo$i8 = studentInfo[i]) === null || _studentInfo$i8 === void 0 ? void 0 : _studentInfo$i8.Middle_Name) || '', ((_studentInfo$i9 = studentInfo[i]) === null || _studentInfo$i9 === void 0 ? void 0 : _studentInfo$i9.Date_of_Birth.replaceAll(\"/\", \"-\")) || '', ((_studentInfo$i10 = studentInfo[i]) === null || _studentInfo$i10 === void 0 ? void 0 : _studentInfo$i10.Aadhar_Number) || '', // c\n        this.state.batchName || '', ((_studentInfo$i11 = studentInfo[i]) === null || _studentInfo$i11 === void 0 ? void 0 : _studentInfo$i11.Qualification.replaceAll(/\\r?\\n|\\r/g, \"\")) || '', ((_studentInfo$i12 = studentInfo[i]) === null || _studentInfo$i12 === void 0 ? void 0 : _studentInfo$i12.Passing_year) || '', ((_studentInfo$i13 = studentInfo[i]) === null || _studentInfo$i13 === void 0 ? void 0 : _studentInfo$i13.Gender.replaceAll(/\\r?\\n|\\r/g, \"\")) || '', ((_studentInfo$i14 = studentInfo[i]) === null || _studentInfo$i14 === void 0 ? void 0 : _studentInfo$i14.Religion.replaceAll(/\\r?\\n|\\r/g, \"\")) || '', ((_studentInfo$i15 = studentInfo[i]) === null || _studentInfo$i15 === void 0 ? void 0 : _studentInfo$i15.Category.replaceAll(/\\r?\\n|\\r/g, \"\")) || '', ((_studentInfo$i16 = studentInfo[i]) === null || _studentInfo$i16 === void 0 ? void 0 : _studentInfo$i16.Primary_Contact_Number) || 0, ((_studentInfo$i17 = studentInfo[i]) === null || _studentInfo$i17 === void 0 ? void 0 : _studentInfo$i17.Primary_Mail_ID) || '', ((_studentInfo$i18 = studentInfo[i]) === null || _studentInfo$i18 === void 0 ? void 0 : _studentInfo$i18.College_register_no) || '', ((_studentInfo$i19 = studentInfo[i]) === null || _studentInfo$i19 === void 0 ? void 0 : _studentInfo$i19.Iti_grade) || '', ((_studentInfo$i20 = studentInfo[i]) === null || _studentInfo$i20 === void 0 ? void 0 : _studentInfo$i20.Iti_trade) || '', // regex expresion replace all new line with space\n        ((_studentInfo$i21 = studentInfo[i]) === null || _studentInfo$i21 === void 0 ? void 0 : _studentInfo$i21.Address_Line_1) || '', ((_studentInfo$i22 = studentInfo[i]) === null || _studentInfo$i22 === void 0 ? void 0 : _studentInfo$i22.Village) || '', ((_studentInfo$i23 = studentInfo[i]) === null || _studentInfo$i23 === void 0 ? void 0 : _studentInfo$i23.District.replaceAll(/\\r?\\n|\\r/g, \"\")) || '', ((_studentInfo$i24 = studentInfo[i]) === null || _studentInfo$i24 === void 0 ? void 0 : _studentInfo$i24.State.replaceAll(/\\r?\\n|\\r/g, \"\")) || '', ((_studentInfo$i25 = studentInfo[i]) === null || _studentInfo$i25 === void 0 ? void 0 : _studentInfo$i25.Pincode) || 0, today, // remove every place\n        UserContext.userid, \"P\", \"::\", \"::\").then(jsondata => {\n          var _studentInfo$i26, _studentInfo$i27, _studentInfo$i28;\n\n          console.log((_studentInfo$i26 = studentInfo[i]) === null || _studentInfo$i26 === void 0 ? void 0 : _studentInfo$i26.Address_Line_1);\n          console.log((_studentInfo$i27 = studentInfo[i]) === null || _studentInfo$i27 === void 0 ? void 0 : _studentInfo$i27.First_Name);\n          console.log((_studentInfo$i28 = studentInfo[i]) === null || _studentInfo$i28 === void 0 ? void 0 : _studentInfo$i28.Aadhar_Number);\n          let result = JSON.parse(jsondata.data);\n          count_loop++;\n\n          if (count_loop === this.state.student_count) {\n            data_flag = true; // change from flag to data_flag\n          }\n        });\n      } catch (error) {\n        // console.log(\">>>>>>>>>>>\"+error)\n        alert(sequence_number + \"-\" + invalid_student_firstName + \" \" + \"has a Invalid Data.\");\n        break;\n      }\n    }\n\n    if (data_flag == true) {\n      alert(\"Data Saved Successfully and Registration ID is : \" + this.state.user_unique_id); // to change the status from L to P\n      //   saveBulkMetaDataAgain(this.state.register_number,this.state.fileName,today,this.state.Selectedoption,\n      //   this.state.batchName,this.state.batchId,this.state.student_count,\"P\",UserContext.centerName,\n      //   UserContext.centerId,UserContext.modelId, UserContext.userid,\" \" ).then((jsondata)=>{\n      // let result = JSON.parse(jsondata.data)\n      // })\n    }\n  } // Download file\n\n\n  downloadFile() {\n    const url = Student_Template1;\n    window.open(url);\n  } // Routes Change\n\n\n  routeChange() {\n    this.props.history.push({\n      pathname: '/dashboard/History',\n      state: {}\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-end\",\n      alignItems: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.downloadFile.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 11\n      }\n    }, \"Download template\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 11\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 13\n      }\n    }, \"Options\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"Selectedoption\",\n      id: \"Selectedoption\",\n      options: this.state.options,\n      value: this.state.Selectedoption || '',\n      key: this.state.Selectedoption || '',\n      onChange: this.handleOptionsChange.bind(this, 'Selectedoption'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 13\n      }\n    }, \"Batches\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"SelectedBatch\",\n      id: \"SelectedBatch\",\n      key: this.state.SelectedBatch || '',\n      options: this.state.batchList,\n      value: this.state.SelectedBatch || '',\n      onChange: this.handleBatchChange.bind(this, 'SelectedBatch'),\n      disabled: this.state.Selectedoption == \"Mobilization\" ? true : false,\n      helperText: this.state.errors.SelectedBatch != undefined ? this.state.errors.SelectedBatch.label : '',\n      error: this.state.errors.SelectedBatch != undefined ? this.state.errors.SelectedBatch.value : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Table, {\n      \"aria-label\": \"simple table\",\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      name: \"upload-photo\",\n      type: \"file\",\n      accept: \".xlsx/*, .xls/*\",\n      onClick: e => {\n        e.target.value = null; // setDisabled(true)\n      },\n      onChange: e => {\n        const file = e.target.files[0];\n        var substr1 = file.name.substring(file.name.length - 4, file.name.length);\n        var substr2 = file.name.substring(file.name.length - 3, file.name.length);\n\n        if (substr1 == \"xlsx\" || substr2 == \"xls\") {\n          this.readExcel(file);\n        } else {\n          alert(\"Please Upload Excel file\");\n          return;\n        }\n      },\n      maxFileSize: 5000000,\n      filesLimit: 1,\n      showFileNames: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 17\n      }\n    }, \"Note-:Please upload Excel file\"), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 17\n      }\n    }, \"and size should not be greater than 5MB.\"))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      alignItems: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"small\",\n      onClick: this.uploadDocuments.bind(this),\n      disabled: this.state.upload_button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 11\n      }\n    }, \"Upload Document\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }\n    }), \"  \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 17\n      }\n    }), \"  \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-end\",\n      alignItems: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.routeChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 11\n      }\n    }, \"History Details\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 11\n      }\n    }, \"Note: \"), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 11\n      }\n    }, \"Always Download the Excel Sheet form above link to upload the Student data.\"), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 11\n      }\n    }, \"Avoid Enter button During filling the Student data.\")));\n  }\n\n}","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/BulkUpload.js"],"names":["React","Component","XLSX","readXlsxFile","InputLabel","Input","Grid","Button","SingleSelect","Table","TableBody","TableCell","TableRow","UserContext","fetchNotCompletedBatchDetails","saveBulkMetaData","saveBulkStudentData","saveBulkMetaDataAgain","Student_Template1","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","time","getHours","getMinutes","getSeconds","bulkUpload","constructor","props","readExcel","file","file_name","name","setState","fileName","fileReader","FileReader","readAsArrayBuffer","onload","e","bufferArray","target","result","wb","read","type","cellDates","wsname","SheetNames","ws","Sheets","data","utils","sheet_to_json","header","student_data","raw","dateNF","student_count","length","console","log","state","studentInfo","requiredHeader","flag","map","element","id","upload_button","alert","options","modelId","value","label","user_unique_id","batchList","Selectedoption","batchName","batchId","errors","register_number","handleOptionsChange","bind","selectname","event","SelectedBatch","centerId","then","jsondata","JSON","parse","forEach","freezeDate","push","handleBatchChange","index","findIndex","object","batchname","uploadDocuments","duplicateAddhar","i","Aadhar_Number","undefined","replace","First_Name","Middle_Name","Last_Name","replaceAll","Date_of_Birth","Gender","Qualification","Passing_year","Religion","Address_Line_1","Village","State","District","Pincode","Category","Primary_Contact_Number","Primary_Mail_ID","j","x","response","centerName","userid","regId","uploadStudentData","data_flag","count_loop","invalid_student_firstName","sequence_number","response1","College_register_no","Iti_grade","Iti_trade","error","downloadFile","url","window","open","routeChange","history","pathname","render","width","files","substr1","substring","substr2","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport * as XLSX from \"xlsx\";\r\nimport readXlsxFile from 'read-excel-file/web-worker'\r\nimport { InputLabel, Input, Grid, Button } from '@material-ui/core';\r\nimport { SingleSelect } from \"react-select-material-ui\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport UserContext from '../components/GolbalContext'\r\nimport { fetchNotCompletedBatchDetails, saveBulkMetaData, saveBulkStudentData, saveBulkMetaDataAgain } from '../util/api';\r\nimport Student_Template1 from \"./../assets/document/Student_Template1.xlsx\";\r\nlet today = new Date();\r\nlet dd = String(today.getDate()).padStart(2, '0');\r\nlet mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\nlet yyyy = today.getFullYear();\r\nvar time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\ntoday = yyyy + '-' + mm + '-' + dd + ' ' + time;\r\n\r\n\r\n\r\nexport default class bulkUpload extends Component {\r\n\r\n  constructor(props) {\r\n\r\n    super(props)\r\n    this.state = {\r\n      options: (UserContext.modelId == 3 || UserContext.modelId === 18 || UserContext.modelId === 19 || UserContext.modelId === 20 || UserContext.modelId === 21 || UserContext.modelId === 22 || UserContext.modelId === 23)\r\n        ? [{ value: \"Mobilization\", label: \"Mobilization\" }, { value: \"Enrollment\", label: \"Enrollment\" }] : [{ value: \"Mobilization\", label: \"Mobilization\" }],\r\n\r\n      user_unique_id: 0,\r\n      batchList: [],\r\n      Selectedoption: \"\",\r\n      student_count: 0,\r\n      fileName: \"\",\r\n      studentInfo: [],\r\n      batchName: null,\r\n      batchId: 0,\r\n      flag: false,\r\n      upload_button: true,\r\n      errors: {},\r\n      register_number: 0,\r\n\r\n    }\r\n    this.handleOptionsChange = this.handleOptionsChange.bind(this) // Binding the method\r\n  }\r\n\r\n  // optind change handler\r\n  handleOptionsChange(selectname, event) {\r\n\r\n    const value = event\r\n    // console.log(value)\r\n    this.setState({\r\n      Selectedoption: value,\r\n      batchName: \"\",\r\n      batchId: 0,\r\n      errors: {\r\n        ...this.state.errors,\r\n        SelectedBatch: {\r\n          'label': '',\r\n          'value': false\r\n        },\r\n      }\r\n    })\r\n    this.setState({ batchList: [] })\r\n\r\n    if (event === \"Enrollment\") {\r\n      this.setState({\r\n        errors: {\r\n          ...this.state.errors,\r\n          SelectedBatch: {\r\n            'label': 'Please select some option',\r\n            'value': true\r\n          },\r\n        }\r\n      })\r\n      // setDisabled(false)\r\n      fetchNotCompletedBatchDetails(UserContext.centerId).then((jsondata) => {\r\n        let result = JSON.parse(jsondata.data);\r\n        // console.log(\"center : \",result)\r\n        result.forEach(element => {\r\n          //  console.log(\"Condition for date \" , element.freezeDate > today)\r\n          if (element.freezeDate > today) {\r\n            this.state.batchList.push({\r\n              \"value\": element.batchId,\r\n              \"label\": element.batchName\r\n            })\r\n          }\r\n        });\r\n      })\r\n    }\r\n    else {\r\n      // setDisabled(true)\r\n    }\r\n  }\r\n  // Hhandle batch changes\r\n  handleBatchChange(selectname, event) {\r\n    // console.log(\"selected optins : \",this.state.Selectedoption)\r\n    let value = event\r\n    // console.log(event)\r\n    let index = this.state.batchList.findIndex((object) => object.value == value)\r\n    let batchname = this.state.batchList[index].label\r\n    // console.log(this.state.batcheList)\r\n    this.setState({\r\n      batchId: event,\r\n      batchName: batchname,\r\n      errors: {\r\n        ...this.state.errors,\r\n        SelectedBatch: {\r\n          'label': '',\r\n          'value': false\r\n        },\r\n      }\r\n    })\r\n  }\r\n  readExcel = (file) => {\r\n    // \r\n    let file_name = file.name\r\n    this.setState({ fileName: file_name })\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsArrayBuffer(file);\r\n\r\n    fileReader.onload = (e) => {\r\n      //  console.log(e)\r\n      const bufferArray = e.target.result;\r\n\r\n      const wb = XLSX.read(bufferArray, {\r\n        type: \"buffer\",\r\n        cellDates: true,\r\n      });\r\n      const wsname = wb.SheetNames[0];\r\n\r\n      const ws = wb.Sheets[wsname];\r\n      // To get the header details of excel\r\n      const data = XLSX.utils.sheet_to_json(ws, { header: 1 });\r\n      //  console.log(data)\r\n      //  console.log(\"Header file \",data[0])\r\n      let student_data = XLSX.utils.sheet_to_json(ws, { header: 0, raw: false, dateNF: 'yyyy-mm-dd' })\r\n\r\n      this.setState({ student_count: data.length - 1 })\r\n      console.log(\"DataCount : \", this.state.student_count)\r\n      // Replacing all next line with space\r\n      // .replaceAll(/\\r?\\n|\\r/g, \"\")\r\n      // for (var i = 0; i < this.state.student_count; i++) {\r\n\r\n      // }\r\n\r\n      console.log(\"data :  \", student_data)\r\n      this.setState({ studentInfo: student_data })\r\n      console.log(this.state.studentInfo)\r\n      const requiredHeader = ['Aadhar_Number', 'First_Name', 'Middle_Name', 'Last_Name', 'Date_of_Birth', 'Gender', 'Qualification', 'Passing_year', 'Religion', 'Address_Line_1', 'Village', 'District', 'State', 'Pincode', 'Category', 'Primary_Contact_Number', 'Primary_Mail_ID', 'College_register_no', 'Iti_grade', 'Iti_trade']\r\n      let flag = true\r\n\r\n      requiredHeader.map((element, id) => {\r\n        // console.log(\"header comparison \",element, \"data : \",data[0][id])\r\n\r\n        if (flag) {\r\n          if (element == data[0][id]) {\r\n            if (id + 1 == requiredHeader.length) {\r\n              // Activating the upload button\r\n              this.setState({ upload_button: false })\r\n            }\r\n          }\r\n          else {\r\n            flag = false\r\n            alert(\"Plese use the correct template for upload.The coloumn in the upload file and sample template does not match.\")\r\n            // Plese use the correct template for upload.\r\n            this.setState({ upload_button: true })\r\n            return;\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n  // Uploadinh the doumnet\r\n  // this.setState({metaData})\r\n  async uploadDocuments() {\r\n    let studentInfo = this.state.studentInfo\r\n    let duplicateAddhar = []\r\n    // Checking the duplicate aadhar in same file\r\n    for (var i = 0; i < this.state.student_count; i++) {\r\n      if (studentInfo[i].Aadhar_Number !== undefined)\r\n      studentInfo[i].Aadhar_Number = studentInfo[i].Aadhar_Number.replace(/\\r?\\n|\\r/g, \"\")\r\n      if (studentInfo[i].First_Name !== undefined)\r\n      studentInfo[i].First_Name =studentInfo[i].First_Name.replace(/\\r?\\n|\\r/g, \"\")\r\n      // console.log(studentInfo[i].First_Name)\r\n      // console.log(studentInfo[i].Middle_Name)\r\n      if (studentInfo[i].Middle_Name !== undefined)\r\n      studentInfo[i].Aadhar_Number =studentInfo[i].Middle_Name.replace(/\\r?\\n|\\r/g, \"\")\r\n      if (studentInfo[i].Last_Name !== undefined)\r\n      studentInfo[i].Aadhar_Number =studentInfo[i].Last_Name.replaceAll(/\\r?\\n|\\r/g, \"\")\r\n      if (studentInfo[i].Date_of_Birth !== undefined)\r\n      studentInfo[i].Aadhar_Number = studentInfo[i].Date_of_Birth.replaceAll(\"/\", \"-\")\r\n      if (studentInfo[i].Gender !== undefined)\r\n      studentInfo[i].Aadhar_Number = studentInfo[i].Gender.replaceAll(/\\r?\\n|\\r/g, \"\")\r\n      if (studentInfo[i].Qualification !== undefined)\r\n      studentInfo[i].Aadhar_Number = studentInfo[i].Qualification.replaceAll(/\\r?\\n|\\r/g, \"\")\r\n      if (studentInfo[i].Passing_year !== undefined)\r\n      studentInfo[i].Aadhar_Number =  studentInfo[i].Passing_year.replaceAll(/\\r?\\n|\\r/g, \"\")\r\n      if (studentInfo[i].Religion !== undefined)\r\n      studentInfo[i].Aadhar_Number =studentInfo[i].Religion.replaceAll(/\\r?\\n|\\r/g, \"\")\r\n      if (studentInfo[i].Address_Line_1 !== undefined)\r\n      studentInfo[i].Aadhar_Number = studentInfo[i].Address_Line_1.replaceAll(/\\r?\\n|\\r/g, \"\")\r\n      if (studentInfo[i].Village !== undefined)\r\n      studentInfo[i].Aadhar_Number =  studentInfo[i].Village.replaceAll(/\\r?\\n|\\r/g, \"\")\r\n      if (studentInfo[i].State !== undefined)\r\n      studentInfo[i].Aadhar_Number =  studentInfo[i].State.replaceAll(/\\r?\\n|\\r/g, \"\")\r\n      if (studentInfo[i].District !== undefined)\r\n      studentInfo[i].Aadhar_Number = studentInfo[i].District.replaceAll(/\\r?\\n|\\r/g, \"\")\r\n      if (studentInfo[i].Pincode !== undefined)\r\n      studentInfo[i].Aadhar_Number = studentInfo[i].Pincode.replaceAll(/\\r?\\n|\\r/g, \"\")\r\n      if (studentInfo[i].Category !== undefined)\r\n      studentInfo[i].Aadhar_Number =  studentInfo[i].Category.replaceAll(/\\r?\\n|\\r/g, \"\")\r\n      if (studentInfo[i].Primary_Contact_Number !== undefined)\r\n      studentInfo[i].Aadhar_Number = studentInfo[i].Primary_Contact_Number.replaceAll(/\\r?\\n|\\r/g, \"\")\r\n      if (studentInfo[i].Primary_Mail_ID !== undefined)\r\n      studentInfo[i].Aadhar_Number =  studentInfo[i].Primary_Mail_ID.replaceAll(/\\r?\\n|\\r/g, \"\")\r\n\r\n      for (var j = i + 1; j < this.state.student_count; j++) {\r\n        if (studentInfo[i]?.Aadhar_Number === studentInfo[j]?.Aadhar_Number && (studentInfo[i]?.Aadhar_Number != null && studentInfo[i]?.Aadhar_Number != \"\" && studentInfo[i]?.Aadhar_Number != 0)) {\r\n          duplicateAddhar[i] = studentInfo[i]?.Aadhar_Number\r\n        }\r\n      }\r\n    }\r\n\r\n    if (duplicateAddhar.length > 0) {\r\n      var x = 0\r\n      let data = []\r\n      for (var i = 0; i < duplicateAddhar.length; i++) {\r\n        if (duplicateAddhar[i] != undefined) {\r\n          data[x] = duplicateAddhar[i]\r\n          x++;\r\n        }\r\n      }\r\n      console.log(data)\r\n      alert(data + \"  duplicate Addhar Number\")\r\n      return;\r\n    }\r\n    else {\r\n      const response = await saveBulkMetaData(this.state.fileName, today, this.state.Selectedoption,\r\n        this.state.batchName, this.state.batchId, this.state.student_count, \"L\", UserContext.centerName,\r\n        UserContext.centerId, UserContext.modelId, UserContext.userid, \"  \").then((jsondata) => {\r\n          let result = JSON.parse(jsondata.data)\r\n          // console.log(\"Mpdel id : \",result[0].modelId) \r\n\r\n          this.state.register_number = result[0].regId\r\n          // console.log(this.state.register_number)\r\n          if (result[0].regId == 0) {\r\n            alert(\"Data Not saved\")\r\n            // changes\r\n            return;\r\n          }\r\n          else {\r\n            this.state.user_unique_id = result[0].regId\r\n            this.uploadStudentData();\r\n          }\r\n        })\r\n\r\n    }\r\n  }\r\n  async uploadStudentData() {\r\n    let data_flag = false\r\n    let count_loop = 1 // counting the number of data saved\r\n    // let flag = false\r\n    let invalid_student_firstName;\r\n    let sequence_number = 0;\r\n    let studentInfo = this.state.studentInfo\r\n    // console.log(\"Bulk Student data : \",studentInfo)\r\n    for (var i = 0; i < this.state.student_count; i++) {\r\n      sequence_number += 1;\r\n      invalid_student_firstName = studentInfo[i].First_Name\r\n      try {\r\n        const response1 = await saveBulkStudentData(this.state.user_unique_id,\r\n          studentInfo[i]?.First_Name|| '',\r\n          studentInfo[i]?.Last_Name.replaceAll(/\\r?\\n|\\r/g, \"\") || '',\r\n          studentInfo[i]?.Middle_Name || '',\r\n          studentInfo[i]?.Date_of_Birth.replaceAll(\"/\", \"-\") || '',\r\n\r\n          studentInfo[i]?.Aadhar_Number || '',  // c\r\n          this.state.batchName || '',\r\n          studentInfo[i]?.Qualification.replaceAll(/\\r?\\n|\\r/g, \"\") || '',\r\n          studentInfo[i]?.Passing_year || '',\r\n          studentInfo[i]?.Gender.replaceAll(/\\r?\\n|\\r/g, \"\") || '',\r\n          studentInfo[i]?.Religion.replaceAll(/\\r?\\n|\\r/g, \"\") || '',\r\n          studentInfo[i]?.Category.replaceAll(/\\r?\\n|\\r/g, \"\") || '',\r\n          studentInfo[i]?.Primary_Contact_Number || 0,\r\n          studentInfo[i]?.Primary_Mail_ID || '',\r\n\r\n          studentInfo[i]?.College_register_no || '',\r\n          studentInfo[i]?.Iti_grade || '',\r\n          studentInfo[i]?.Iti_trade || '',\r\n          // regex expresion replace all new line with space\r\n          studentInfo[i]?.Address_Line_1|| '',\r\n          studentInfo[i]?.Village || '',\r\n\r\n          studentInfo[i]?.District.replaceAll(/\\r?\\n|\\r/g, \"\") || '',\r\n          studentInfo[i]?.State.replaceAll(/\\r?\\n|\\r/g, \"\") || '',\r\n          studentInfo[i]?.Pincode || 0,\r\n\r\n          today, // remove every place\r\n          UserContext.userid,\r\n          \"P\",\r\n          \"::\",\r\n          \"::\").then((jsondata) => {\r\n            console.log(studentInfo[i]?.Address_Line_1)\r\n            console.log(studentInfo[i]?.First_Name)\r\n            console.log(studentInfo[i]?.Aadhar_Number)\r\n            let result = JSON.parse(jsondata.data)\r\n            count_loop++;\r\n            if (count_loop === this.state.student_count) {\r\n              data_flag = true // change from flag to data_flag\r\n            }\r\n          })\r\n      }\r\n      catch (error) {\r\n        // console.log(\">>>>>>>>>>>\"+error)\r\n        alert(sequence_number + \"-\" + invalid_student_firstName + \" \" + \"has a Invalid Data.\")\r\n        break;\r\n      }\r\n\r\n    }\r\n    if (data_flag == true) {\r\n      alert(\"Data Saved Successfully and Registration ID is : \" + this.state.user_unique_id)\r\n      // to change the status from L to P\r\n      //   saveBulkMetaDataAgain(this.state.register_number,this.state.fileName,today,this.state.Selectedoption,\r\n      //   this.state.batchName,this.state.batchId,this.state.student_count,\"P\",UserContext.centerName,\r\n      //   UserContext.centerId,UserContext.modelId, UserContext.userid,\" \" ).then((jsondata)=>{\r\n      // let result = JSON.parse(jsondata.data)\r\n      // })\r\n    }\r\n  }\r\n\r\n  // Download file\r\n  downloadFile() {\r\n    const url = Student_Template1;\r\n    window.open(url);\r\n  }\r\n\r\n  // Routes Change\r\n  routeChange() {\r\n    this.props.history.push(({ pathname: '/dashboard/History', state: {} }));\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ width: '100%' }}>\r\n        <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"flex-end\">\r\n          <Button color=\"primary\" onClick={this.downloadFile.bind(this)}>\r\n            Download template\r\n          </Button>\r\n        </Grid>\r\n        <br />\r\n        <Grid container>\r\n          <Grid item xs={12}> </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} >Options</InputLabel>\r\n            <SingleSelect\r\n              name=\"Selectedoption\" id=\"Selectedoption\"\r\n              options={this.state.options}\r\n              value={this.state.Selectedoption || ''}\r\n              key={this.state.Selectedoption || ''}\r\n              onChange={this.handleOptionsChange.bind(this, 'Selectedoption')}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={2}></Grid>\r\n\r\n          <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} >Batches</InputLabel>\r\n            <SingleSelect\r\n              name=\"SelectedBatch\" id=\"SelectedBatch\"\r\n              key={this.state.SelectedBatch || ''}\r\n              options={this.state.batchList}\r\n              value={this.state.SelectedBatch || ''}\r\n              onChange={this.handleBatchChange.bind(this, 'SelectedBatch')}\r\n              disabled={this.state.Selectedoption == \"Mobilization\" ? true : false}\r\n              helperText={this.state.errors.SelectedBatch != undefined ? this.state.errors.SelectedBatch.label : ''}\r\n              error={this.state.errors.SelectedBatch != undefined ? this.state.errors.SelectedBatch.value : ''}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <br />\r\n        <Table aria-label=\"simple table\" style={{ width: \"100%\" }}>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>\r\n                <Input\r\n                  name=\"upload-photo\"\r\n                  type=\"file\"\r\n                  accept='.xlsx/*, .xls/*'\r\n                  onClick={e => {\r\n                    (e.target.value = null)\r\n                    // setDisabled(true)\r\n                  }\r\n                  }\r\n                  onChange={(e) => {\r\n                    const file = e.target.files[0];\r\n                    var substr1 = file.name.substring(file.name.length - 4, file.name.length);\r\n                    var substr2 = file.name.substring(file.name.length - 3, file.name.length);\r\n                    if (substr1 == \"xlsx\" || substr2 == \"xls\") {\r\n                      this.readExcel(file);\r\n                    }\r\n                    else {\r\n                      alert(\"Please Upload Excel file\")\r\n                      return;\r\n                    }\r\n\r\n                  }}\r\n                  maxFileSize={5000000} filesLimit={1} showFileNames={true}\r\n                />\r\n                <p style={{ color: \"red\" }}>Note-:Please upload Excel file</p>\r\n                <p style={{ color: \"red\" }}>and size should not be greater than 5MB.</p>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n        <br /> <br />\r\n        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" size=\"small\" onClick={this.uploadDocuments.bind(this)}\r\n            disabled={this.state.upload_button}\r\n          >Upload Document</Button>\r\n        </Grid>\r\n        <br />  <br />  <br />\r\n        <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"flex-end\">\r\n          <Button variant=\"contained\" color=\"primary\" onClick={this.routeChange.bind(this)}>\r\n            History Details\r\n          </Button>\r\n        </Grid>\r\n        <br />\r\n        <br />\r\n        <div>\r\n          <h2 style={{ color: \"red\" }}>Note: </h2>\r\n          <p style={{ color: \"red\" }}>Always Download the Excel Sheet form above link to upload the Student data.</p>\r\n          <p style={{ color: \"red\" }}>Avoid Enter button During filling the Student data.</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}