{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\BeneficiaryList.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from \"react-dom\";\nimport MUIDataTable from \"mui-datatables\";\nimport Button from '@material-ui/core/Button';\nimport UserContext from '../components/GolbalContext';\nimport { regenerateToken, checkEligibleForShortlist } from './../util/validation';\nimport { isTokenValid } from './../util/session';\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Card from \"./../components/Card/Card.js\";\nimport GridContainer from \"./../components/Grid/GridContainer.js\";\nimport GridItem from \"./../components/Grid/GridItem.js\";\nimport { serviceEndPoint } from './../util/serviceEndPoint';\nimport { fetchStudentDataForList, captureStudentEngagementDetailsB } from '../util/api';\nimport AlertDialog from './../util/AlertDialog';\nconst alertDialogOptions = {\n  message: ''\n};\n\nclass BeneficiaryList extends Component {\n  constructor() {\n    super(); // this.checkToken();\n\n    this.handleClick = () => {\n      console.log(\"clicked on icon!\");\n    };\n\n    this.shortList = e => {\n      e.preventDefault();\n      this.setState({\n        alertDialogFlag: false\n      });\n      var dbUserId = this.state.rowsSelected.student_id;\n\n      if (dbUserId) {\n        //alert(checkEligibleForShortlist(dbUserId))\n        checkEligibleForShortlist(dbUserId).then(result => result == 'true' ? this.alertNotEligible() : captureStudentEngagementDetailsB(dbUserId, UserContext.centerId, UserContext.userid, this.state.rowsSelected.engagement_id).then(jsondata => {\n          alertDialogOptions.message = /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: \"green\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 38\n            }\n          }, this.state.name, \"  shortlisted successfully\");\n          this.setState({\n            alertDialogFlag: true\n          });\n          this.setState({\n            rowsSelected: { ...this.state.rowsSelected,\n              name: '',\n              student_id: '',\n              engagement_id: ''\n            }\n          });\n        }));\n      } else {\n        this.setState({\n          alertDialogFlag: false\n        }, () => {\n          alertDialogOptions.message = '';\n          alertDialogOptions.message = /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: \"red\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 38\n            }\n          }, \"Please select a  beneficiary\");\n          this.setState({\n            alertDialogFlag: true\n          });\n        });\n      }\n    };\n\n    this.state = {\n      selectedIndex: [],\n      rowsSelected: {\n        'dbUserId': '',\n        'engagementId': '',\n        'programId': ''\n      },\n      info: [],\n      roleid: UserContext.roleid,\n      roleName: UserContext.roleName,\n      name: '',\n      programId: UserContext.defaultProgramId\n    };\n    this.fetchStudentDetails(); // alert(UserContext.centerId);\n  }\n\n  componentDidCatch() {\n    window.location.pathname(\"/\");\n  }\n\n  fetchStudentDetails() {\n    let studentInfo = [];\n    fetchStudentDataForList(UserContext.roleid).then(jsondata => {\n      let studentDetails = JSON.parse(jsondata.data);\n\n      for (var i = 0; i < studentDetails.length; i++) {\n        var details = {\n          'student_id': studentDetails[i].dbUserId,\n          'engagement_id': studentDetails[i].engagementId,\n          'linked_engagement_id': studentDetails[i].linkedEngagementId,\n          'name': studentDetails[i].firstName + \" \" + studentDetails[i].lastName,\n          'primaryContactNumber': studentDetails[i].primaryContactNumber,\n          'status': studentDetails[i].status,\n          'dob': studentDetails[i].dob,\n          'action': /*#__PURE__*/React.createElement(Link, {\n            to: {\n              pathname: '/dashboard/updatebeneficiary',\n              state: {\n                dbUserId: studentDetails[i].dbUserId,\n                status: studentDetails[i].status,\n                engagementId: studentDetails[i].engagementId,\n                name: studentDetails[i].firstName + \" \" + studentDetails[i].lastName,\n                tab: 0,\n                status: studentDetails[i].status,\n                linkedEngagementId: studentDetails[i].linkedEngagementId\n              }\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(EditIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 14\n            }\n          }))\n        };\n        studentInfo.push(details);\n      }\n\n      this.setState({\n        info: studentInfo\n      });\n    });\n  }\n\n  checkToken() {\n    var currentDateTime = new Date();\n\n    if (UserContext.jwtTimeOut.getTime() < currentDateTime.getTime()) {\n      regenerateToken();\n    }\n  }\n\n  alertNotEligible() {\n    alertDialogOptions.message = /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 34\n      }\n    }, this.state.name, \"  already shortlisted for another program.\");\n    this.setState({\n      alertDialogFlag: true\n    });\n  }\n\n  render() {\n    // let action=<Link to=\"/dashboard/updatebeneficiary\"><EditIcon/></Link>\n    const columns = [{\n      label: 'Student Id',\n      name: 'student_id',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Engagement Id',\n      name: 'engagement_id',\n      options: {\n        sortDirection: 'desc'\n      },\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'linked Engagement Id',\n      name: 'linked_engagement_id',\n      options: {\n        sortDirection: 'desc',\n        display: false\n      },\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Name',\n      name: 'name',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Contact Number',\n      name: 'primaryContactNumber',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Date Of Birth',\n      name: 'dob',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Status',\n      name: 'status',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Action',\n      name: 'action',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }];\n    const options = {\n      selectableRows: 'single',\n      filterType: \"dropdown\",\n      responsive: \"stacked\",\n      sortDirection: \"desc\",\n      disableToolbarSelect: true,\n      rowsPerPage: 10,\n      selectableRowsOnClick: true,\n      // textLabels: {\n      //   body: {\n      //     noMatch: <span style={{color:\"blue\"}}>Please wait data is loading...</span>\n      //   }\n      // },\n      rowsSelected: this.state.selectedIndex,\n      onRowsSelect: allRows => {\n        let rows = this.state.selectedIndex;\n        rows[0] = allRows[0].dataIndex;\n        this.setState({\n          rowsSelected: this.state.info[allRows[0].dataIndex],\n          selectedIndex: rows,\n          name: this.state.info[allRows[0].dataIndex].name\n        }); // this is the row in your data source       \n      }\n    };\n\n    if (this.state.roleid == 3 && UserContext.roleid === 3) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(MUIDataTable, {\n        title: \"Shortlisted Student list\",\n        label: \"List of Students\",\n        data: this.state.info,\n        columns: columns,\n        options: options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(GridContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(GridItem, {\n        xs: 12,\n        sm: 6,\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"small\",\n        disabled: this.state.rowsSelected.engagement_id == null || this.state.rowsSelected.status != 'Shortlisted' ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        style: {\n          color: 'white'\n        } //to=\"/dashboard/addobeneficiary\" \n        ,\n        to: {\n          pathname: \"/dashboard/updatebeneficiary\",\n          state: {\n            tab: 12,\n            dbUserId: this.state.rowsSelected.student_id,\n            engagementId: this.state.rowsSelected.engagement_id,\n            name: this.state.name,\n            status: this.state.rowsSelected.status\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 19\n        }\n      }, \"  Business Case Evalution \"))))));\n    } else if (UserContext.roleid === 9 || UserContext.roleid === 8) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(MUIDataTable, {\n        title: \"Beneficiary list\",\n        label: \"List of Students\",\n        data: this.state.info,\n        columns: columns,\n        options: options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(GridContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }\n      }, UserContext.defaultProgramId === 1 && /*#__PURE__*/React.createElement(GridItem, {\n        xs: 12,\n        sm: 6,\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"small\",\n        disabled: this.state.rowsSelected.engagement_id == null || this.state.rowsSelected.status != 'Mobilised' ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        style: {\n          color: 'white'\n        },\n        to: {\n          pathname: \"/dashboard/updatebeneficiary\",\n          state: {\n            tab: 10,\n            status: this.state.rowsSelected.status,\n            dbUserId: this.state.rowsSelected.student_id,\n            engagementId: this.state.rowsSelected.engagement_id,\n            name: this.state.name\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }\n      }, \"  Evaluate \")))), (UserContext.defaultProgramId != 9 || UserContext.roleid != 8) && /*#__PURE__*/React.createElement(GridItem, {\n        xs: 12,\n        sm: 6,\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"small\",\n        disabled: this.state.rowsSelected.engagement_id != null && (this.state.rowsSelected.status == 'Shortlisted' || this.state.rowsSelected.status == 'Enrolled') ? false : true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        style: {\n          color: 'white'\n        } //to=\"/dashboard/addobeneficiary\" \n        ,\n        to: {\n          pathname: \"/dashboard/updatebeneficiary\",\n          state: {\n            tab: 11,\n            status: this.state.rowsSelected.status,\n            dbUserId: this.state.rowsSelected.student_id,\n            engagementId: this.state.rowsSelected.engagement_id,\n            name: this.state.name,\n            status: this.state.rowsSelected.status\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }\n      }, \"  Enroll \"))))));\n    } else if (UserContext.roleid == 4 && (UserContext.defaultProgramId == 6 || UserContext.defaultProgramId === 8)) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(MUIDataTable, {\n        title: \" Beneficiary Student list\",\n        data: this.state.info,\n        columns: columns,\n        options: options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(GridContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(GridItem, {\n        xs: 12,\n        sm: 6,\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"small\",\n        disabled: this.state.rowsSelected.engagement_id == null || this.state.rowsSelected.status != 'Mobilised' ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        style: {\n          color: 'white'\n        } //to=\"/dashboard/addobeneficiary\" \n        ,\n        to: {\n          pathname: \"/dashboard/updatebeneficiary\",\n          state: {\n            tab: 6,\n            status: this.state.rowsSelected.status,\n            dbUserId: this.state.rowsSelected.student_id,\n            engagementId: this.state.rowsSelected.engagement_id,\n            name: this.state.name\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 19\n        }\n      }, \"Capture Observations \")))), /*#__PURE__*/React.createElement(GridItem, {\n        xs: 12,\n        sm: 6,\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"small\",\n        disabled: this.state.rowsSelected.engagement_id == null || this.state.rowsSelected.status != 'Mobilised' ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        style: {\n          color: 'white'\n        },\n        to: {\n          pathname: \"/dashboard/updatebeneficiary\",\n          state: {\n            tab: 8,\n            status: this.state.rowsSelected.status,\n            dbUserId: this.state.rowsSelected.student_id,\n            engagementId: this.state.rowsSelected.engagement_id,\n            name: this.state.name\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 19\n        }\n      }, \"Capture Business Case Brief \")))), /*#__PURE__*/React.createElement(GridItem, {\n        xs: 12,\n        sm: 6,\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"small\",\n        disabled: this.state.rowsSelected.engagement_id == null || this.state.rowsSelected.status != 'Mobilised' ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        style: {\n          color: 'white'\n        },\n        to: {\n          pathname: \"/dashboard/updatebeneficiary\",\n          state: {\n            tab: 9,\n            status: this.state.rowsSelected.status,\n            dbUserId: this.state.rowsSelected.student_id,\n            engagementId: this.state.rowsSelected.engagement_id,\n            name: this.state.name\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 19\n        }\n      }, \"Recommend to Principal \")))), UserContext.defaultProgramId === 6 && /*#__PURE__*/React.createElement(GridItem, {\n        xs: 12,\n        sm: 6,\n        md: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"small\",\n        onClick: this.shortList,\n        disabled: this.state.rowsSelected.engagement_id != null && this.state.rowsSelected.status == 'Enrolled' ? false : true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 19\n        }\n      }, \" Shortlist\")))), this.state.alertDialogFlag && /*#__PURE__*/React.createElement(AlertDialog, {\n        message: alertDialogOptions.message,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 45\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(MUIDataTable, {\n        label: \"List of Students\",\n        data: this.state.info,\n        columns: columns,\n        options: options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }\n      }));\n    }\n  }\n\n}\n\nexport default BeneficiaryList;","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/BeneficiaryList.js"],"names":["React","Component","ReactDOM","MUIDataTable","Button","UserContext","regenerateToken","checkEligibleForShortlist","isTokenValid","BrowserRouter","Router","Link","EditIcon","Card","GridContainer","GridItem","serviceEndPoint","fetchStudentDataForList","captureStudentEngagementDetailsB","AlertDialog","alertDialogOptions","message","BeneficiaryList","constructor","handleClick","console","log","shortList","e","preventDefault","setState","alertDialogFlag","dbUserId","state","rowsSelected","student_id","then","result","alertNotEligible","centerId","userid","engagement_id","jsondata","color","name","selectedIndex","info","roleid","roleName","programId","defaultProgramId","fetchStudentDetails","componentDidCatch","window","location","pathname","studentInfo","studentDetails","JSON","parse","data","i","length","details","engagementId","linkedEngagementId","firstName","lastName","primaryContactNumber","status","dob","tab","push","checkToken","currentDateTime","Date","jwtTimeOut","getTime","render","columns","label","headerStyle","options","sortDirection","display","selectableRows","filterType","responsive","disableToolbarSelect","rowsPerPage","selectableRowsOnClick","onRowsSelect","allRows","rows","dataIndex"],"mappings":"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","sourcesContent":["\r\n\r\nimport React, { Component } from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport Button from '@material-ui/core/Button';\r\nimport UserContext from '../components/GolbalContext';\r\nimport { regenerateToken, checkEligibleForShortlist } from './../util/validation';\r\nimport { isTokenValid } from './../util/session';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link,\r\n\r\n} from 'react-router-dom';\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Card from \"./../components/Card/Card.js\";\r\nimport GridContainer from \"./../components/Grid/GridContainer.js\";\r\nimport GridItem from \"./../components/Grid/GridItem.js\";\r\nimport { serviceEndPoint } from './../util/serviceEndPoint';\r\nimport { fetchStudentDataForList, captureStudentEngagementDetailsB } from '../util/api';\r\nimport AlertDialog from './../util/AlertDialog';\r\nconst alertDialogOptions = {\r\n  message: ''\r\n}\r\nclass BeneficiaryList extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    // this.checkToken();\r\n\r\n    this.state = {\r\n      selectedIndex: [], rowsSelected: { 'dbUserId': '', 'engagementId': '', 'programId': '' },\r\n      info: [], roleid: UserContext.roleid, roleName: UserContext.roleName, name: '', programId: UserContext.defaultProgramId\r\n    };\r\n    this.fetchStudentDetails();\r\n\r\n    // alert(UserContext.centerId);\r\n\r\n  }\r\n\r\n  componentDidCatch() {\r\n    window.location.pathname(\"/\");\r\n  }\r\n\r\n\r\n\r\n  handleClick = () => {\r\n    console.log(\"clicked on icon!\");\r\n  }\r\n\r\n  fetchStudentDetails() {\r\n    let studentInfo = [];\r\n    fetchStudentDataForList(UserContext.roleid).then((jsondata) => {\r\n      let studentDetails = JSON.parse(jsondata.data);\r\n      for (var i = 0; i < studentDetails.length; i++) {\r\n        var details =\r\n        {\r\n          'student_id': studentDetails[i].dbUserId,\r\n          'engagement_id': studentDetails[i].engagementId,\r\n          'linked_engagement_id': studentDetails[i].linkedEngagementId,\r\n          'name': studentDetails[i].firstName + \" \" + studentDetails[i].lastName,\r\n          'primaryContactNumber': studentDetails[i].primaryContactNumber,\r\n          'status': studentDetails[i].status,\r\n          'dob': studentDetails[i].dob,\r\n          'action': <Link to={{\r\n            pathname: '/dashboard/updatebeneficiary',\r\n            state: { dbUserId: studentDetails[i].dbUserId, status: studentDetails[i].status, engagementId: studentDetails[i].engagementId, name: studentDetails[i].firstName + \" \" + studentDetails[i].lastName, tab: 0, status: studentDetails[i].status, linkedEngagementId: studentDetails[i].linkedEngagementId }\r\n          }}><EditIcon /></Link>\r\n        };\r\n        studentInfo.push(details);\r\n      }\r\n      this.setState({\r\n        info: studentInfo\r\n      });\r\n    })\r\n\r\n  }\r\n\r\n  checkToken() {\r\n    var currentDateTime = new Date();\r\n    if (UserContext.jwtTimeOut.getTime() < currentDateTime.getTime()) {\r\n      regenerateToken();\r\n\r\n    }\r\n\r\n  }\r\n\r\n  shortList = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ alertDialogFlag: false });\r\n    var dbUserId = this.state.rowsSelected.student_id;\r\n    if (dbUserId) {\r\n      //alert(checkEligibleForShortlist(dbUserId))\r\n      checkEligibleForShortlist(dbUserId).then(result => result == 'true' ? this.alertNotEligible() : captureStudentEngagementDetailsB(dbUserId, UserContext.centerId, UserContext.userid, this.state.rowsSelected.engagement_id).then((jsondata) => {\r\n        alertDialogOptions.message = <span style={{ color: \"green\" }}>{this.state.name}  shortlisted successfully</span>;\r\n        this.setState({ alertDialogFlag: true });\r\n        this.setState({\r\n          rowsSelected: {\r\n            ...this.state.rowsSelected,\r\n            name: '', student_id: '', engagement_id: ''\r\n          }\r\n        });\r\n      }))\r\n    } else {\r\n      this.setState({ alertDialogFlag: false }, () => {\r\n        alertDialogOptions.message = '';\r\n        alertDialogOptions.message = <span style={{ color: \"red\" }}>Please select a  beneficiary</span>;\r\n        this.setState({ alertDialogFlag: true });\r\n\r\n      });\r\n\r\n\r\n    }\r\n  }\r\n\r\n  alertNotEligible() {\r\n    alertDialogOptions.message = <span style={{ color: \"red\" }}>{this.state.name}  already shortlisted for another program.</span>;\r\n    this.setState({ alertDialogFlag: true });\r\n  }\r\n\r\n\r\n  render() {\r\n    // let action=<Link to=\"/dashboard/updatebeneficiary\"><EditIcon/></Link>\r\n    const columns = [{ label: 'Student Id', name: 'student_id', headerStyle: { color: '#FF9800' } },\r\n    {\r\n      label: 'Engagement Id', name: 'engagement_id', options: {\r\n        sortDirection: 'desc'\r\n      }, headerStyle: { color: '#FF9800' }\r\n    },\r\n    {\r\n      label: 'linked Engagement Id', name: 'linked_engagement_id', options: {\r\n        sortDirection: 'desc', display: false\r\n      }, headerStyle: { color: '#FF9800' }\r\n    },\r\n    { label: 'Name', name: 'name', headerStyle: { color: '#FF9800' } },\r\n    { label: 'Contact Number', name: 'primaryContactNumber', headerStyle: { color: '#FF9800' } },\r\n    { label: 'Date Of Birth', name: 'dob', headerStyle: { color: '#FF9800' } },\r\n    { label: 'Status', name: 'status', headerStyle: { color: '#FF9800' } },\r\n    { label: 'Action', name: 'action', headerStyle: { color: '#FF9800' } }\r\n\r\n    ]\r\n\r\n    const options = {\r\n\r\n      selectableRows: 'single',\r\n\r\n      filterType: \"dropdown\",\r\n      responsive: \"stacked\",\r\n      sortDirection: \"desc\",\r\n      disableToolbarSelect: true,\r\n      rowsPerPage: 10,\r\n      selectableRowsOnClick: true,\r\n\r\n      // textLabels: {\r\n      //   body: {\r\n      //     noMatch: <span style={{color:\"blue\"}}>Please wait data is loading...</span>\r\n      //   }\r\n      // },\r\n      rowsSelected: this.state.selectedIndex,\r\n      onRowsSelect: (allRows) => {\r\n        let rows = this.state.selectedIndex;\r\n        rows[0] = allRows[0].dataIndex;\r\n        this.setState({\r\n          rowsSelected: this.state.info[allRows[0].dataIndex],\r\n          selectedIndex: rows,\r\n          name: this.state.info[allRows[0].dataIndex].name\r\n\r\n        }) // this is the row in your data source       \r\n      },\r\n    };\r\n    if (this.state.roleid == 3 && UserContext.roleid === 3) {\r\n      return (\r\n\r\n        <div>\r\n          <MUIDataTable title={\"Shortlisted Student list\"} label={\"List of Students\"} data={this.state.info} columns={columns} options={options}\r\n          />\r\n\r\n          <GridContainer>\r\n\r\n\r\n\r\n\r\n            <GridItem xs={12} sm={6} md={3}>\r\n              <Card>\r\n                <Button variant=\"contained\" color=\"primary\" size=\"small\" disabled={this.state.rowsSelected.engagement_id == null || this.state.rowsSelected.status != 'Shortlisted' ? true : false}>\r\n                  <Link style={{ color: 'white' }}\r\n                    //to=\"/dashboard/addobeneficiary\" \r\n                    to={{ pathname: \"/dashboard/updatebeneficiary\", state: { tab: 12, dbUserId: this.state.rowsSelected.student_id, engagementId: this.state.rowsSelected.engagement_id, name: this.state.name, status: this.state.rowsSelected.status } }}>  Business Case Evalution </Link>\r\n                </Button>\r\n              </Card>\r\n            </GridItem>\r\n          </GridContainer>\r\n        </div>\r\n      );\r\n\r\n    }\r\n    else if (UserContext.roleid === 9 || UserContext.roleid === 8) {\r\n      return (\r\n        <div>\r\n\r\n          {/* <form> */}\r\n          <MUIDataTable title={\"Beneficiary list\"} label={\"List of Students\"} data={this.state.info} columns={columns} options={options}\r\n          />\r\n\r\n          <GridContainer>\r\n            {\r\n              (UserContext.defaultProgramId === 1) &&\r\n              <GridItem xs={12} sm={6} md={3}>\r\n                <Card>\r\n                  <Button variant=\"contained\" color=\"primary\" size=\"small\" disabled={this.state.rowsSelected.engagement_id == null || this.state.rowsSelected.status != 'Mobilised' ? true : false}>\r\n                    <Link style={{ color: 'white' }}\r\n                      to={{ pathname: \"/dashboard/updatebeneficiary\", state: { tab: 10, status: this.state.rowsSelected.status, dbUserId: this.state.rowsSelected.student_id, engagementId: this.state.rowsSelected.engagement_id, name: this.state.name } }}>  Evaluate </Link>\r\n                  </Button>\r\n                </Card>\r\n              </GridItem>\r\n            }\r\n            {\r\n              (UserContext.defaultProgramId != 9 || UserContext.roleid != 8) &&\r\n              <GridItem xs={12} sm={6} md={3}>\r\n                <Card>\r\n                  <Button variant=\"contained\" color=\"primary\" size=\"small\" disabled={this.state.rowsSelected.engagement_id != null && (this.state.rowsSelected.status == 'Shortlisted' || this.state.rowsSelected.status == 'Enrolled') ? false : true}>\r\n                    <Link style={{ color: 'white' }}\r\n                      //to=\"/dashboard/addobeneficiary\" \r\n                      to={{ pathname: \"/dashboard/updatebeneficiary\", state: { tab: 11, status: this.state.rowsSelected.status, dbUserId: this.state.rowsSelected.student_id, engagementId: this.state.rowsSelected.engagement_id, name: this.state.name, status: this.state.rowsSelected.status } }}>  Enroll </Link>\r\n                  </Button>\r\n                </Card>\r\n              </GridItem>\r\n            }\r\n            {/* <GridItem xs={12} sm={6} md={3}>\r\n              <Card>  \r\n                <Button variant=\"contained\" color=\"primary\" size=\"small\" disabled={this.state.rowsSelected.engagement_id!=null &&  (this.state.rowsSelected.status =='Enrolled')?false:true}>  \r\n                <Link style = {{color : 'white'}}\r\n                  //to=\"/dashboard/addobeneficiary\" \r\n                  to={{pathname:\"/dashboard/updatebeneficiary\", state: { tab:14,status : this.state.rowsSelected.status, dbUserId:this.state.rowsSelected.student_id,engagementId:this.state.rowsSelected.engagement_id,name:this.state.name,status : this.state.rowsSelected.status}}}>  Placement </Link>\r\n                </Button>\r\n              </Card>                   \r\n            </GridItem> */}\r\n          </GridContainer>\r\n          {/* </form> */}\r\n        </div>\r\n      );\r\n    }\r\n    else if (UserContext.roleid == 4 && (UserContext.defaultProgramId == 6 || UserContext.defaultProgramId === 8)) {\r\n      return (\r\n\r\n        <div>\r\n\r\n          <MUIDataTable title={\" Beneficiary Student list\"} data={this.state.info} columns={columns} options={options}\r\n          />\r\n          <GridContainer>\r\n            <GridItem xs={12} sm={6} md={3}>\r\n              <Card>\r\n                <Button variant=\"contained\" color=\"primary\" size=\"small\" disabled={this.state.rowsSelected.engagement_id == null || this.state.rowsSelected.status != 'Mobilised' ? true : false}>\r\n                  <Link style={{ color: 'white' }}\r\n                    //to=\"/dashboard/addobeneficiary\" \r\n                    to={{ pathname: \"/dashboard/updatebeneficiary\", state: { tab: 6, status: this.state.rowsSelected.status, dbUserId: this.state.rowsSelected.student_id, engagementId: this.state.rowsSelected.engagement_id, name: this.state.name } }}>\r\n                    Capture Observations </Link>\r\n                </Button>\r\n              </Card>\r\n            </GridItem>\r\n            <GridItem xs={12} sm={6} md={4}>\r\n              <Card>\r\n                <Button variant=\"contained\" color=\"primary\" size=\"small\" disabled={this.state.rowsSelected.engagement_id == null || this.state.rowsSelected.status != 'Mobilised' ? true : false}>\r\n                  <Link style={{ color: 'white' }}\r\n                    to={{ pathname: \"/dashboard/updatebeneficiary\", state: { tab: 8, status: this.state.rowsSelected.status, dbUserId: this.state.rowsSelected.student_id, engagementId: this.state.rowsSelected.engagement_id, name: this.state.name } }}>\r\n                    Capture Business Case Brief </Link>\r\n                </Button>\r\n              </Card>\r\n            </GridItem>\r\n            <GridItem xs={12} sm={6} md={3}>\r\n              <Card>\r\n                <Button variant=\"contained\" color=\"primary\" size=\"small\" disabled={this.state.rowsSelected.engagement_id == null || this.state.rowsSelected.status != 'Mobilised' ? true : false}>\r\n                  <Link style={{ color: 'white' }}\r\n                    to={{ pathname: \"/dashboard/updatebeneficiary\", state: { tab: 9, status: this.state.rowsSelected.status, dbUserId: this.state.rowsSelected.student_id, engagementId: this.state.rowsSelected.engagement_id, name: this.state.name } }}>\r\n                    Recommend to Principal </Link>\r\n                </Button>\r\n              </Card>\r\n            </GridItem>\r\n            {\r\n              (UserContext.defaultProgramId === 6) &&\r\n              <GridItem xs={12} sm={6} md={2}>\r\n                <Card>\r\n                  <Button variant=\"contained\" color=\"primary\" size=\"small\"\r\n                    onClick={this.shortList}\r\n                    disabled={this.state.rowsSelected.engagement_id != null && (this.state.rowsSelected.status == 'Enrolled') ? false : true}> Shortlist</Button>\r\n                </Card>\r\n              </GridItem>\r\n            }\r\n          </GridContainer>\r\n          {\r\n            (this.state.alertDialogFlag) && <AlertDialog message={alertDialogOptions.message}></AlertDialog>\r\n          }\r\n        </div>\r\n      );\r\n    }\r\n\r\n    else {\r\n      return (\r\n\r\n        <div>\r\n          <MUIDataTable label={\"List of Students\"} data={this.state.info} columns={columns} options={options}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default BeneficiaryList;\r\n"]},"metadata":{},"sourceType":"module"}