{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\BatchDetails.js\";\nimport React, { Component, Fragment, useState } from 'react';\nimport './../App.css';\nimport './../assets/css/login-style.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { SingleSelect } from \"react-select-material-ui\";\nimport UserContext from '../components/GolbalContext';\nimport { FormControl, InputLabel, Input, Grid, TextField } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport { fetchUserDetailsById, saveBatchDetails, fetchCenterCapacity, fetchCenterActiveCourses, fetchCourseDetailsByIds, fetchCenterCapacityByIds, fetchUsersByCenterIdAndRoleMapId } from './../util/api';\nimport { validateDates, validateOJTDates, validateBatchDescription, validateStartDate, validateAssessmentDate, validateOJTEndDate, ojtStartDateLessThanOjtEndDate } from './../util/validation';\nimport { isNotEmpty } from './../util/validation';\nimport { calculateBatchFreezeDate, calculateWeekendDays, diffDays } from './../util/util';\n\nclass Batch extends Component {\n  constructor(props) {\n    super(props);\n\n    this.mySubmitHandler = event => {\n      event.preventDefault();\n\n      if (this.validateForm(this.state.errors)) {\n        this.submitBatchDetails();\n      }\n    };\n\n    this.validate = (name, value) => {\n      let errors = this.state.errors;\n\n      switch (name) {\n        case 'courseId':\n          errors.courseId = isNotEmpty(value);\n          break;\n\n        case 'batchType':\n          errors.batchType = isNotEmpty(value);\n          break;\n        // case 'batchDescription': errors.batchDescription =validateBatchDescription(value);\n        // break;\n\n        case 'batchDescription':\n          errors.batchDescription = isNotEmpty(value);\n          break;\n\n        case 'startDate':\n          errors.startDate = isNotEmpty(value);\n          break;\n\n        case 'endDate':\n          errors.endDate = isNotEmpty(value);\n          break;\n\n        case 'batchOwner':\n          errors.batchOwner = isNotEmpty(value);\n          break;\n\n        case 'domainFacilitator':\n          errors.domainFacilitator = isNotEmpty(value);\n          break;\n\n        case 'ydmCoach':\n          errors.ydmCoach = isNotEmpty(value);\n          break;\n\n        case 'assessmentDate':\n          errors.assessmentDate = validateAssessmentDate(this.state.batchData.startDate, value);\n          break;\n\n        case 'ojtEndDate':\n          errors.ojtEndDate = validateOJTEndDate(this.state.batchData.endDate, value);\n          break;\n\n        case 'batchHelperId':\n          errors.batchHelperId = isNotEmpty(value);\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors\n      });\n    };\n\n    this.validateForm = errors => {\n      this.validate(\"courseId\", this.state.batchData.courseId);\n      this.validate(\"batchType\", this.state.batchData.batchType);\n      this.validate(\"batchDescription\", this.state.batchData.batchDescription);\n      this.validate(\"batchOwner\", this.state.batchData.batchOwner);\n\n      if (this.state.batchData.batchOwner === \"domain_facilitator\") {\n        errors.ydmCoach = \"\";\n        this.validate(\"domainFacilitator\", this.state.batchData.domainFacilitator);\n      }\n\n      if (this.state.batchData.batchOwner === \"ydm_facilitator\") {\n        errors.domainFacilitator = \"\";\n        this.validate(\"ydmCoach\", this.state.batchData.ydmCoach);\n      }\n\n      this.validate(\"startDate\", this.state.batchData.startDate);\n      this.validate(\"endDate\", this.state.batchData.endDate);\n      this.validate(\"assessmentDate\", this.state.batchData.assessmentDate);\n      this.validate(\"ojtEndDate\", this.state.batchData.ojtEndDate); //this.validate(\"batchHelperId\",this.state.batchData.batchHelperId);\n\n      if (this.state.batchData.startDate != '' && this.state.batchData.endDate != '') {\n        if (diffDays(this.state.batchData.startDate, this.state.batchData.endDate) <= this.state.traingHrs / 7) {\n          this.state.errors.startDate = \"Difference between Start date and End Date must NOT be less than Course duration\";\n        } else {\n          this.state.errors.startDate = \"\";\n        }\n      }\n\n      var ydmCoach = this.state.batchData.ydmCoach;\n      var batchHelperId = this.state.batchData.batchHelperId;\n      var batchOwner = this.state.batchData.batchOwner;\n      let domainFacilitator = this.state.batchData.domainFacilitator;\n\n      if (domainFacilitator != \"\" && batchHelperId != \"\") {\n        if (domainFacilitator === batchHelperId) {\n          errors.domainFacilitator = \"Batch Helper and Domain Facilitator not same\";\n        } else {\n          errors.domainFacilitator = \"\";\n        }\n      }\n\n      if (ydmCoach != \"\" && batchHelperId != \"\") {\n        if (ydmCoach === batchHelperId) {\n          errors.batchHelperId = \"YDM Facilitator and Batch Helper not same\";\n        } else {\n          errors.batchHelperId = \"\";\n        }\n      }\n\n      if (ydmCoach != \"\" && domainFacilitator != \"\") {\n        if (ydmCoach === domainFacilitator) {\n          errors.ydmCoach = \"YDM Facilitator and Domain Facilitator not same\";\n        } else {\n          errors.ydmCoach = \"\";\n        }\n      }\n\n      this.setState({\n        errors\n      });\n      let valid = true;\n      Object.values(errors).forEach( // if we have an error string set valid to false\n      val => val.length > 0 && (valid = false));\n      return valid;\n    };\n\n    this.myData = {\n      course: [],\n      users: [],\n      classroom: [],\n      batchType: [{\n        value: 1,\n        label: 'ClassRoom'\n      }, {\n        value: 2,\n        label: 'Virtual'\n      }],\n      batchOwnerMasterData: [{\n        value: 'domain_facilitator',\n        label: 'Domain Facilitator'\n      }, {\n        value: 'ydm_facilitator',\n        label: 'YDM Facilitator'\n      }]\n    };\n\n    if (props.location.state != null && props.location.state != undefined) {\n      this.state = {\n        startDate: new Date(props.location.state.batch.startDate).toISOString().slice(0, 10),\n        endDate: new Date(props.location.state.batch.endDate).toISOString().slice(0, 10),\n        traingHrs: 0,\n        Ojt: 0,\n        courseData: [],\n        user: [],\n        errors: {\n          courseId: '',\n          batchType: '',\n          batchDescription: '',\n          batchOwner: '',\n          ydmCoach: '',\n          startDate: '',\n          endDate: '',\n          ojtStartDate: '',\n          assessmentDate: '',\n          ojtEndDate: '',\n          batchHelperId: '',\n          domainFacilitator: ''\n        },\n        batchData: props.location.state.batch,\n        users: []\n      };\n    } else {\n      this.state = {\n        startDate: new Date().toISOString().slice(0, 10),\n        endDate: new Date().toISOString().slice(0, 10),\n        traingHrs: 0,\n        Ojt: 0,\n        courseData: [],\n        user: [],\n        errors: {\n          courseId: '',\n          batchType: '',\n          batchDescription: '',\n          batchOwner: '',\n          ydmCoach: '',\n          startDate: '',\n          endDate: '',\n          ojtStartDate: '',\n          assessmentDate: '',\n          ojtEndDate: '',\n          batchHelperId: '',\n          domainFacilitator: ''\n        },\n        batchData: {\n          freezeDate: '',\n          courseId: '',\n          batchType: '',\n          batchDescription: '',\n          batchOwner: '',\n          ydmCoach: '',\n          startDate: '',\n          endDate: '',\n          ojtStartDate: '',\n          createdBy: UserContext.userid,\n          dbUserId: UserContext.dbUserId,\n          updatedBy: UserContext.userid,\n          assessmentDate: '',\n          ojtEndDate: '',\n          batchHelperId: '',\n          domainFacilitator: ''\n        },\n        users: []\n      };\n    }\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n    this.fetchUserDetailsByCenterId();\n    this.getClassroomMasters(); //  if(props.location.state != null && props.location.state != undefined)\n    //  {\n    //   this.setState({startDate:props.location.state.batch.startDate});\n    // }\n    //  else{\n    //   this.setState({startDate:new Date().toISOString().slice(0,10)});\n    //  }\n\n    fetchCenterActiveCourses(UserContext.centerId).then(jsondata => {\n      let courseDetails = [];\n      let centerActiveCourses = JSON.parse(jsondata.data);\n      centerActiveCourses.map(item => {\n        courseDetails.push({\n          id: item.courseId\n        });\n      });\n      this.getCourseMasters(JSON.stringify(courseDetails));\n    });\n    let centerIds = [];\n    centerIds.push({\n      centerId: UserContext.centerId\n    });\n    fetchCenterCapacityByIds(JSON.stringify(centerIds)).then(jsondata => {\n      let centerCapacityDetails = [];\n      let jsonObjects = JSON.parse(jsondata.data);\n      jsonObjects.map(item => {\n        centerCapacityDetails.push({\n          label: item.roomName,\n          value: item.id\n        });\n      });\n      this.setState({\n        centerCapacity: centerCapacityDetails\n      });\n    });\n  }\n\n  getCourseName() {\n    let batchName = this.state.batchData.batchName;\n    let course = batchName.split(\"_\")[0] + \"_\" + this.state.batchData.courseId;\n    this.state.courseData.map(item => {\n      if (item.id == this.state.batchData.courseId) {\n        this.state.traingHrs = item.trainingHour;\n        this.state.Ojt = item.ojt;\n      }\n    });\n    this.setState({\n      batchData: { ...this.state.batchData,\n        courseId: course\n      }\n    }); //  alert(JSON.stringify(this.state.batchData));\n  }\n\n  handleInputChange(event) {\n    let errors = this.state.errors;\n    const target = event.target;\n    const value = target.value;\n    const name = target.name; //   const label=target.lable;\n\n    if (name == \"batchDescription\") {\n      let res = validateBatchDescription(value);\n      this.setState({\n        errors: { ...this.state.errors,\n          [name]: {\n            'label': res,\n            'value': res == \"\" ? false : true\n          }\n        }\n      });\n    }\n\n    if (name == \"ojtStartDate\") {\n      let res = validateOJTDates(value);\n      errors.ojtStartDate = res; // if(res===\"\"){\n      // res = ojtStartDateLessThanOjtEndDate(value,this.state.batchData.ojtEndDate);\n      // }\n      //   this.setState({\n      //     errors: {\n      //       ...this.state.errors,\n      //       ojtStartDate:res\n      //     }\n      // });\n      // if ojt changes \n\n      let osd = value; //alert(osd);\n\n      let oDate = new Date(osd);\n      let days = this.state.Ojt / 7;\n      let actualDays = Math.round(days); //alert(actualDays);\n\n      oDate.setDate(oDate.getDate() + days);\n      var month = oDate.getMonth() + 1;\n      var day = oDate.getDate();\n      var year = oDate.getFullYear();\n      var actualojtDate = year + \"-\" + ('0' + month).slice(-2) + \"-\" + ('0' + day).slice(-2); //alert(actualojtDate);\n\n      var weekendDays = calculateWeekendDays(value, actualojtDate);\n      var date = new Date(actualojtDate);\n      date.setDate(date.getDate() + weekendDays);\n      var months = date.getMonth() + 1;\n      var actualojtDate = date.getFullYear() + \"-\" + ('0' + months).slice(-2) + \"-\" + ('0' + date.getDate()).slice(-2);\n      this.state.batchData.endDate = document.getElementById(\"endDate\").value = actualojtDate;\n      this.state.batchData.ojtEndDate = document.getElementById(\"ojtEndDate\").value = actualojtDate;\n      this.state.batchData.assessmentDate = document.getElementById(\"assessmentDate\").value = actualojtDate;\n    }\n\n    if (name == \"endDate\") {\n      let res = validateDates(value);\n      let ojtEndDateError = validateOJTEndDate(value, this.state.batchData.ojtEndDate);\n      this.setState({\n        errors: { ...this.state.errors,\n          endDate: res\n        }\n      });\n      errors.ojtEndDate = ojtEndDateError;\n      this.setState({\n        errors\n      });\n    }\n\n    if (name == \"startDate\") {\n      let res = validateStartDate(value);\n      this.setState({\n        errors: { ...this.state.errors,\n          startDate: res\n        }\n      });\n      this.getFreezeDate(value); // this.state.batchData.startDate =  document.getElementById(\"startDate\").value= today;\n      //batch end date calculation\n\n      let Bsd = value;\n      let sDate = new Date(Bsd);\n      let days = (this.state.traingHrs + this.state.Ojt) / 7;\n      let actualDays = Math.round(days); // alert(actualDays);\n\n      sDate.setDate(sDate.getDate() + days);\n      var month = sDate.getMonth() + 1;\n      var day = sDate.getDate();\n      var year = sDate.getFullYear();\n      var actualDate = year + \"-\" + ('0' + month).slice(-2) + \"-\" + ('0' + day).slice(-2);\n      var weekendDays = calculateWeekendDays(value, actualDate);\n      var date = new Date(actualDate);\n      date.setDate(date.getDate() + weekendDays);\n      var months = date.getMonth() + 1; // alert((date.getMonth()+1).length);\n\n      var actualDate = date.getFullYear() + \"-\" + ('0' + months).slice(-2) + \"-\" + ('0' + date.getDate()).slice(-2);\n      this.state.batchData.endDate = document.getElementById(\"endDate\").value = actualDate; //ojt start date calculation\n\n      this.state.batchData.ojtStartDate = null;\n      this.state.batchData.ojtEndDate = null;\n\n      if (this.state.Ojt != '' && typeof this.state.Ojt != \"undefined\") {\n        let osdDays = this.state.traingHrs / 7;\n        let actualOsdDays = Math.round(osdDays); //alert(actualOsdDays);\n\n        let ojtStart = new Date(Bsd);\n        ojtStart.setDate(ojtStart.getDate() + osdDays);\n        month = ojtStart.getMonth() + 1;\n        day = ojtStart.getDate();\n        year = ojtStart.getFullYear();\n        let actualOsdDate = year + \"-\" + ('0' + month).slice(-2) + \"-\" + ('0' + day).slice(-2);\n        this.state.batchData.ojtStartDate = document.getElementById(\"ojtStartDate\").value = actualOsdDate;\n        var osd = actualOsdDate; //ojt end date calculations\n\n        let OedDays = this.state.Ojt / 7;\n        OedDays = Math.round(OedDays);\n        osd = new Date(osd);\n        osd.setDate(osd.getDate() + OedDays);\n        month = osd.getMonth() + 1;\n        day = osd.getDate();\n        year = osd.getFullYear();\n        let actualOedDate = year + \"-\" + ('0' + month).slice(-2) + \"-\" + ('0' + day).slice(-2);\n        this.state.batchData.ojtEndDate = document.getElementById(\"ojtEndDate\").value = actualOedDate;\n      }\n\n      this.state.batchData.assessmentDate = document.getElementById(\"assessmentDate\").value = actualDate;\n    }\n\n    if (name == \"ojtEndDate\") {\n      let res = ojtStartDateLessThanOjtEndDate(this.state.batchData.ojtStartDate, value);\n      errors.ojtStartDate = res;\n    }\n\n    this.setState({\n      errors\n    });\n    this.setState({\n      batchData: { ...this.state.batchData,\n        [name]: value\n      }\n    });\n    this.validate(name, value);\n  }\n\n  handleSelectChange(selectname, event) {\n    //selection of course get the training hrs and ojt duration\n    let errors = this.state.errors;\n\n    if (selectname == \"courseId\") {\n      //if courseId changes all dates should be blank\n      this.state.batchData.startDate = document.getElementById(\"startDate\").value = \"\";\n      this.state.batchData.endDate = document.getElementById(\"endDate\").value = \"\";\n      this.state.batchData.ojtStartDate = document.getElementById(\"ojtStartDate\").value = \"\";\n      this.state.batchData.ojtEndDate = document.getElementById(\"ojtEndDate\").value = \"\";\n      this.state.batchData.assessmentDate = document.getElementById(\"assessmentDate\").value = \"\";\n      let cId = event.split(\"_\")[1];\n      this.state.courseData.map(item => {\n        if (item.id == cId) {\n          this.state.traingHrs = item.trainingHour;\n          this.state.Ojt = item.ojt;\n        }\n      });\n    } // if(selectname == \"batchType\" && event == 1)\n    // {\n    //   document.getElementById(\"ihubId\").setAttribute(\"hidden\"  , true);\n    //   document.getElementById(\"ihubProductName\").setAttribute(\"hidden\"  , true);\n    // }\n    // else if (selectname == \"batchType\" && event == 2)\n    // {\n    //   document.getElementById(\"ihubId\").removeAttribute(\"hidden\");\n    //   document.getElementById(\"ihubProductName\").removeAttribute(\"hidden\");\n    // }\n\n\n    if (selectname == \"ydmCoach\") {\n      if (this.state.batchData.batchOwner == event) {\n        this.state.batchData.batchOwner = \"\"; // alert(\"Batch Owner and Ydm Coach Should Not be same\");\n\n        errors.ydmCoach = \"Batch Owner and Ydm Coach Should Not be same\";\n      }\n    }\n\n    if (selectname == \"batchOwner\") {\n      if (this.state.batchData.ydmCoach == event) {\n        this.state.batchData.ydmCoach = \"\"; // alert(\"Batch Owner and Ydm Coach Should Not be same\");\n\n        errors.batchOwner = \"Batch Owner and Ydm Coach Should Not be same\";\n      }\n    }\n\n    this.setState({\n      batchData: { ...this.state.batchData,\n        [selectname]: event\n      }\n    });\n    this.validate(selectname, event);\n  }\n\n  fetchUserDetailsByCenterId() {\n    fetchUsersByCenterIdAndRoleMapId(UserContext.centerId, 4).then(jsondata => {\n      let dbUserId = [];\n      let userCenterRoleMap = JSON.parse(jsondata.data);\n      userCenterRoleMap.map(item => {\n        dbUserId.push({\n          id: item.userId\n        });\n      });\n      fetchUserDetailsById(JSON.stringify(dbUserId)).then(jsondata => {\n        let userDetails = JSON.parse(jsondata.data);\n        let users = []; //  let jsonObjects = JSON.parse(jsondata.data);\n\n        userDetails.map(item => {\n          users.push({\n            label: item.firstName + \" \" + item.lastName,\n            value: item.id.toString()\n          });\n        });\n        this.setState({\n          users: users\n        }); //for (var i = 0; i < userDetails.length; i++) {\n        // let user = userDetails[i];\n        //  this.myData.users.push({label : user.firstName + \" \" + user.lastName , value : user.id});\n        //  this.state.users.push({label : user.firstName + \" \" + user.lastName , value : user.id});\n        // }\n      });\n    });\n  }\n\n  getCourseMasters(ids) {\n    // let formData = new FormData();\n    // formData.append('data','{\"token\" : \"'+ \"1234\" +'\", \"action\" : \"findall\" , \"data\" : [{}]}');\n    // fetch(\"http://playground.tatastrive.com/services-v1/courseservice\", {\n    //     method: \"POST\",\n    //     body: formData \n    //     }).then(response => response.json()).\n    //  fetchCourseDetails().then((jsondata)=>{\n    fetchCourseDetailsByIds(ids).then(jsondata => {\n      console.log(jsondata);\n\n      if (jsondata.appError == null) {\n        let jsonobjects = JSON.parse(jsondata.data);\n        jsonobjects.map(item => {\n          this.myData.course.push({\n            label: item.name,\n            value: item.name + \"_\" + item.id\n          });\n        });\n        this.setState({\n          courseData: jsonobjects\n        });\n\n        if (this.state.batchData.batchId != undefined) {\n          this.getCourseName();\n        }\n      }\n\n      return true;\n    }).then(response => response);\n  }\n\n  getClassroomMasters() {\n    // let formData = new FormData();\n    // formData.append('data','{\"token\" : \"'+ \"1234\" +'\", \"action\" : \"findall\" , \"data\" : [{}]}');\n    // fetch(\"http://playground.tatastrive.com/services-v1/centercapacityservice\", {\n    //     method: \"POST\",\n    //     body: formData \n    //     }).then(response => response.json()).\n    fetchCenterCapacity().then(jsondata => {\n      console.log(jsondata);\n\n      if (jsondata.appError == null) {\n        let jsonobjects = JSON.parse(jsondata.data); //  alert(jsonobjects);\n\n        jsonobjects.map(item => {\n          this.myData.classroom.push({\n            label: item.roomName,\n            value: item.id\n          });\n        }); //  this.setState({mydata : jsonobjects});\n      }\n\n      return true;\n    }).then(response => response);\n  }\n\n  submitBatchDetails() {\n    let formData = new FormData();\n    let action = \"\";\n    const batchId = this.state.batchData.batchId == '' || this.state.batchData.batchId == null;\n\n    if (!batchId) {\n      action = \"updateBatch\";\n      this.state.batchData.updatedBy = UserContext.userid;\n      this.state.batchData.courseId = this.state.batchData.courseId.split('_')[1];\n    } else {\n      action = \"save\";\n    }\n\n    this.state.batchData.centerId = UserContext.centerId;\n    this.state.batchData.createdBy = UserContext.userid;\n    saveBatchDetails(action, this.state.batchData).then(jsondata => {\n      if (jsondata.appError.length == 0) {\n        let jsonobjects = JSON.parse(jsondata.data);\n        console.log(jsonobjects[0].batchName);\n\n        if (action == 'save') {\n          alert(jsonobjects[0].batchName + \" Successfully Created\");\n          this.props.history.push({\n            pathname: '/dashboard/managebatches'\n          });\n        } else {\n          alert(jsonobjects[0].batchName + \" Successfully Updated\");\n          this.props.history.push({\n            pathname: '/dashboard/managebatches'\n          });\n        }\n      } else {}\n    });\n  }\n\n  getFreezeDate(startDate) {\n    let courseDetails = [];\n    courseDetails.push({\n      id: this.state.batchData.courseId.split(\"_\")[1]\n    });\n    fetchCourseDetailsByIds(JSON.stringify(courseDetails)).then(jsondata => {\n      let courseObject = JSON.parse(jsondata.data);\n      var freezeDate = calculateBatchFreezeDate(startDate, courseObject[0].trainingHour);\n      this.setState({\n        batchData: { ...this.state.batchData,\n          freezeDate: freezeDate\n        }\n      });\n    });\n  }\n\n  render() {\n    if (this.state.batchData != null && this.state.batchData != undefined) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.mySubmitHandler,\n        method: \"post\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 2\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 2\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 8\n        }\n      }, \" Batch Details\"))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 6\n        }\n      }), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        alignContent: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(SingleSelect, {\n        onChange: this.handleSelectChange.bind(this, 'courseId'),\n        name: \"courseId\",\n        id: \"courseId\",\n        placeholder: \"Select Coures\",\n        required: true,\n        value: this.state.batchData.courseId || '',\n        options: this.myData.course,\n        disabled: this.state.batchData.batchId == undefined || this.state.batchData.batchId == null ? false : true,\n        error: this.state.errors.courseId == '' ? false : true,\n        helperText: this.state.errors.courseId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 6\n        }\n      })), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 22\n        }\n      }), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 13\n        }\n      }, this.state.batchData.freezeDate && /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 3\n        }\n      }, \"Batch Freeze Date is :\", this.state.batchData.freezeDate.split(\"-\")[2], \" - \", this.state.batchData.freezeDate.split(\"-\")[1], \" - \", this.state.batchData.freezeDate.split(\"-\")[0])), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        id: \"batchName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        type: \"text\",\n        name: \"batchName\",\n        id: \"batchName\",\n        style: {\n          width: 400\n        },\n        value: this.state.batchData.batchName || '',\n        hidden: this.state.batchData.batchId == undefined || this.state.batchData.batchId == null ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 9\n        }\n      })))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(SingleSelect, {\n        onChange: this.handleSelectChange.bind(this, 'batchType'),\n        name: \"batchType\",\n        id: \"batchType\",\n        required: true,\n        placeholder: \"Batch Type\",\n        value: this.state.batchData.batchType || '',\n        options: this.myData.batchType,\n        error: this.state.errors.batchType == '' ? false : true,\n        helperText: this.state.errors.batchType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 6\n        }\n      })), this.state.batchData.batchType === 2 && /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        id: \"ihubId\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        for: \"ihubProductId\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 3\n        }\n      }, \"iHUB Product Id\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"ihubId\",\n        id: \"ihubId\",\n        onChange: this.handleInputChange,\n        value: this.state.batchData.ihubId || '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 3\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        id: \"ihubProductName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        for: \"ihubProductName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 3\n        }\n      }, \"iHUB Product Name\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"ihubProductName\",\n        id: \"ihubProductName\",\n        onChange: this.handleInputChange,\n        value: this.state.batchData.ihubProductName || '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 3\n        }\n      })))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        lg: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        type: \"text\",\n        name: \"batchDescription\",\n        id: \"batchDescription\",\n        value: this.state.batchData.batchDescription || '',\n        onChange: this.handleInputChange,\n        label: \"Batch Description\",\n        error: this.state.errors.batchDescription == '' ? false : true,\n        helperText: this.state.errors.batchDescription,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 3\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"date\",\n        readonly: true,\n        name: \"startDate\",\n        id: \"startDate\",\n        error: this.state.errors.startDate == '' ? false : true,\n        helperText: this.state.errors.startDate,\n        onChange: this.handleInputChange,\n        value: this.state.batchData.startDate || '',\n        label: \"Batch Start Date\",\n        type: \"date\",\n        InputLabelProps: {\n          shrink: true\n        },\n        inputProps: {\n          min: this.state.startDate,\n          max: new Date('01/01/2050').toISOString().slice(0, 10)\n        },\n        disabled: new Date(this.state.startDate) < new Date(new Date().getFullYear() + \"-\" + new Date().getMonth() + \"-\" + new Date().getDate()),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 10\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"date\",\n        name: \"endDate\",\n        id: \"endDate\",\n        error: this.state.errors.endDate == '' ? false : true,\n        helperText: this.state.errors.endDate,\n        onChange: this.handleInputChange,\n        value: this.state.batchData.endDate || '',\n        label: \"Batch End Date \",\n        type: \"date\",\n        InputLabelProps: {\n          shrink: true\n        },\n        inputProps: {\n          min: this.state.endDate,\n          max: new Date('01/01/2050').toISOString().slice(0, 10)\n        },\n        disabled: new Date(this.state.endDate) < new Date(new Date().getFullYear() + \"-\" + (new Date().getMonth() + 1) + \"-\" + new Date().getDate()),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 10\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"date\",\n        name: \"ojtStartDate\",\n        id: \"ojtStartDate\",\n        error: this.state.errors.ojtStartDate == '' ? false : true,\n        helperText: this.state.errors.ojtStartDate,\n        onChange: this.handleInputChange,\n        value: this.state.batchData.ojtStartDate || '',\n        label: \"OJT Start Date\",\n        type: \"date\",\n        InputLabelProps: {\n          shrink: true\n        },\n        inputProps: {\n          min: new Date('01/01/2000').toISOString().slice(0, 10),\n          max: new Date('01/01/2050').toISOString().slice(0, 10)\n        },\n        disabled: this.state.Ojt === 0 ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 10\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"date\",\n        name: \"ojtEndDate\",\n        id: \"ojtEndDate\",\n        onChange: this.handleInputChange,\n        value: this.state.batchData.ojtEndDate || '',\n        label: \"OJT End Date \",\n        type: \"date\",\n        InputLabelProps: {\n          shrink: true\n        },\n        inputProps: {\n          min: new Date('01/01/2000').toISOString().slice(0, 10),\n          max: new Date('01/01/2050').toISOString().slice(0, 10)\n        },\n        error: this.state.errors.ojtEndDate == '' ? false : true,\n        helperText: this.state.errors.ojtEndDate,\n        disabled: this.state.Ojt === 0 ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 10\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"date\",\n        name: \"assessmentDate\",\n        id: \"assessmentDate\",\n        onChange: this.handleInputChange,\n        value: this.state.batchData.assessmentDate || '',\n        label: \"Assessment Date \",\n        type: \"date\",\n        InputLabelProps: {\n          shrink: true\n        },\n        inputProps: {\n          min: new Date('01/01/2000').toISOString().slice(0, 10),\n          max: new Date('01/01/2050').toISOString().slice(0, 10)\n        },\n        error: this.state.errors.assessmentDate == '' ? false : true,\n        helperText: this.state.errors.assessmentDate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 10\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 762,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(SingleSelect, {\n        onChange: this.handleSelectChange.bind(this, 'batchOwner'),\n        name: \"batchOwner\",\n        id: \"batchOwner\",\n        placeholder: \"Select Batch Owner\",\n        label: \"Select Batch Owner\",\n        key: this.state.batchData.batchOwner,\n        value: this.state.batchData.batchOwner || '',\n        options: this.myData.batchOwnerMasterData,\n        error: this.state.errors.batchOwner == '' ? false : true,\n        helperText: this.state.errors.batchOwner,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 763,\n          columnNumber: 6\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(SingleSelect, {\n        onChange: this.handleSelectChange.bind(this, 'domainFacilitator'),\n        name: \"domainFacilitator\",\n        id: \"domainFacilitator\",\n        placeholder: \"Select Domain Facilitator\",\n        label: \"Select Domain Facilitator\",\n        key: this.state.batchData.domainFacilitator,\n        value: this.state.batchData.domainFacilitator || '' //  options={this.myData.users}\n        ,\n        options: this.state.users,\n        error: this.state.errors.domainFacilitator == '' ? false : true,\n        helperText: this.state.errors.domainFacilitator,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 774,\n          columnNumber: 14\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 786,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(SingleSelect, {\n        onChange: this.handleSelectChange.bind(this, 'ydmCoach'),\n        name: \"ydmCoach\",\n        id: \"ydmCoach\",\n        placeholder: \"Select YDM Facilitator\",\n        label: \"Select YDM Facilitator\",\n        key: this.state.batchData.ydmCoach,\n        value: this.state.batchData.ydmCoach || '' //  options={this.myData.users}\n        ,\n        options: this.state.users,\n        error: this.state.errors.ydmCoach == '' ? false : true,\n        helperText: this.state.errors.ydmCoach,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 14\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 799,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(SingleSelect, {\n        onChange: this.handleSelectChange.bind(this, 'batchHelperId'),\n        name: \"batchHelperId\",\n        id: \"batchHelperId\",\n        placeholder: \"Select Batch Helper\",\n        label: \"Select Batch Helper\",\n        value: this.state.batchData.batchHelperId || '' //options={this.myData.users}\n        ,\n        options: this.state.users,\n        error: this.state.errors.batchHelperId == '' ? false : true,\n        helperText: this.state.errors.batchHelperId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 14\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 811,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(SingleSelect, {\n        onChange: this.handleSelectChange.bind(this, 'classroomId'),\n        name: \"'classroomId'\",\n        id: \"classroomId\",\n        placeholder: \"Classroom\",\n        label: \"Class Room\",\n        value: this.state.batchData.classroomId || '',\n        options: this.state.centerCapacity,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 812,\n          columnNumber: 14\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        lg: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 821,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 822,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        type: \"text\",\n        name: \"googleMeetLink\",\n        id: \"googleMeetLink\",\n        value: this.state.batchData.googleMeetLink || '',\n        onChange: this.handleInputChange,\n        label: \"Google Meet Link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 823,\n          columnNumber: 3\n        }\n      })))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 4\n        }\n      }), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-end\",\n        alignItems: \"flex-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 841,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        size: \"small\",\n        disabled: new Date(new Date(this.state.batchData.endDate).toDateString()) < new Date(new Date().toDateString()),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 842,\n          columnNumber: 4\n        }\n      }, \"Save\"))));\n    } //     else{\n    //       return (\n    //         <div style = {{ width : '100%' }}>\n    //          <form onSubmit={this.mySubmitHandler} method=\"post\">\n    //          <Grid item xs={12}>\n    //                <FormControl>\n    //                <h5> Batch Details</h5>\n    //                  </FormControl>  \n    //              </Grid>\n    //              <br></br>\n    //              <Grid item xs={12} sm={4} alignContent=\"center\" >\n    //              <SingleSelect onChange={this.handleSelectChange.bind(this, 'batchName')} name=\"batchName\" id=\"batchName\"\n    //                       placeholder = \"Select Coures\" \n    //                       options={this.myData.course}\n    //                     />\n    //                     </Grid>\n    //                     <br></br>\n    //               <Grid container spacing={2}>\n    //              <Grid item xs={12} sm={3}>\n    //              <SingleSelect onChange={this.handleSelectChange.bind(this, 'batchType')} name=\"batchType\" id=\"batchType\"\n    //                       placeholder = \"Select Batch Type\" \n    //                       options={this.myData.batchType}\n    //                     />\n    //                     </Grid>\n    //                     <Grid item xs={12} sm={3}>\n    //         <FormControl>\n    //           <InputLabel for=\"batchDiscription\">Batch Description</InputLabel>\n    //           <Input type=\"text\" name=\"batchDescription\" id=\"batchDescription\" onChange={this.handleInputChange}  />\n    //         </FormControl>\n    //         </Grid>\n    //              <Grid item xs={12} sm={3}>\n    //         <FormControl>\n    //           <InputLabel for=\"ihubProductId\">iHUB Product Id</InputLabel>\n    //           <Input type=\"text\" name=\"ihubId\" id=\"ihubId\" onChange={this.handleInputChange} />\n    //         </FormControl>\n    //         </Grid>\n    //         <Grid item xs={12} sm={3}>\n    //         <FormControl>\n    //           <InputLabel for=\"ihubProductName\">iHUB Product Name</InputLabel>\n    //           <Input type=\"text\" name=\"ihubProductName\" id=\"ihubProductName\" onChange={this.handleInputChange}    />\n    //         </FormControl>\n    //         </Grid>\n    //              <Grid item xs={12} sm={3}>\n    //                  <TextField id=\"date\" name = \"startDate\" id = \"startDate\" onChange={this.handleInputChange} \n    //                  label=\"Batch Start Date\" \n    //                  type=\"date\"\n    //                  InputLabelProps={{\n    //                    shrink: true,\n    //                  }} />\n    //              </Grid>\n    //              <Grid item xs={12} sm={3}>\n    //                  <TextField id=\"date\" name = \"endDate\" id = \"endDate\" onChange={this.handleInputChange} \n    //                  label=\"Batch End Date \" \n    //                  type=\"date\"\n    //                  InputLabelProps={{\n    //                    shrink: true,\n    //                  }} />\n    //              </Grid>\n    //              <Grid item xs={12} sm={3}>\n    //                  <TextField id=\"date\" name = \"ojtStartDate\" id = \"ojtStartDate\" onChange={this.handleInputChange}\n    //                  label=\"OJT Start Date\" \n    //                  type=\"date\"\n    //                  InputLabelProps={{\n    //                    shrink: true,\n    //                  }} />\n    //              </Grid>\n    //              <Grid item xs={12} sm={3}>\n    //                  <TextField id=\"date\" name = \"ojtEndDate\" id = \"ojtEndDate\" onChange={this.handleInputChange} \n    //                  label=\"OJT End Date \"\n    //                  type=\"date\"\n    //                  InputLabelProps={{\n    //                    shrink: true,\n    //                  }} />\n    //              </Grid>\n    //              <Grid item xs={12} sm={3}>\n    //                  <TextField id=\"date\" name = \"assessmentDate\" id = \"assessmentDate\" onChange={this.handleInputChange}\n    //                  label=\"Assessment Date \"  \n    //                  type=\"date\"\n    //                  InputLabelProps={{\n    //                    shrink: true,\n    //                  }} />\n    //              </Grid>\n    //              <Grid item xs={12} sm={3}>\n    //  <SingleSelect onChange={this.handleSelectChange.bind(this, 'classroomId')} name=\"classroomId\" id=\"classroomId\"\n    //           placeholder = \"Clasroom\"  \n    //           label=\"Clasroom \" \n    //           //value={this.state.batchData.classroomId || ''}\n    //          options={this.myData.classroom}\n    //         />\n    //         </Grid>\n    //              <Grid item xs={12} sm={3}>\n    //              <SingleSelect onChange={this.handleSelectChange.bind(this, 'batchOwner')} name=\"batchOwner\" id=\"batchOwner\"\n    //                       placeholder = \"Select Batch Owner\" \n    //                       label=\"Batch Owner \"\n    //                      options={this.myData.users}\n    //                     />\n    //                     </Grid>\n    //                     <Grid item xs={12} sm={3}>\n    //              <SingleSelect onChange={this.handleSelectChange.bind(this, 'ydmCoach')} name=\"ydmCoach\" id=\"ydmCoach\"\n    //                       placeholder = \"Select YDM Coach\" \n    //                       label=\"YDM Coach \"\n    //                       options={this.myData.users}\n    //                     />\n    //                     </Grid>\n    //            </Grid>\n    //           <Button variant=\"contained\" color=\"primary\" type=\"submit\">  \n    //           Save\n    //             </Button>\n    //          </form>\n    //          </div>\n    //          );\n    //     }\n\n  }\n\n}\n\nexport default Batch;","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/BatchDetails.js"],"names":["React","Component","Fragment","useState","SingleSelect","UserContext","FormControl","InputLabel","Input","Grid","TextField","Button","fetchUserDetailsById","saveBatchDetails","fetchCenterCapacity","fetchCenterActiveCourses","fetchCourseDetailsByIds","fetchCenterCapacityByIds","fetchUsersByCenterIdAndRoleMapId","validateDates","validateOJTDates","validateBatchDescription","validateStartDate","validateAssessmentDate","validateOJTEndDate","ojtStartDateLessThanOjtEndDate","isNotEmpty","calculateBatchFreezeDate","calculateWeekendDays","diffDays","Batch","constructor","props","mySubmitHandler","event","preventDefault","validateForm","state","errors","submitBatchDetails","validate","name","value","courseId","batchType","batchDescription","startDate","endDate","batchOwner","domainFacilitator","ydmCoach","assessmentDate","batchData","ojtEndDate","batchHelperId","setState","traingHrs","valid","Object","values","forEach","val","length","myData","course","users","classroom","label","batchOwnerMasterData","location","undefined","Date","batch","toISOString","slice","Ojt","courseData","user","ojtStartDate","freezeDate","createdBy","userid","dbUserId","updatedBy","handleInputChange","bind","handleSelectChange","fetchUserDetailsByCenterId","getClassroomMasters","centerId","then","jsondata","courseDetails","centerActiveCourses","JSON","parse","data","map","item","push","id","getCourseMasters","stringify","centerIds","centerCapacityDetails","jsonObjects","roomName","centerCapacity","getCourseName","batchName","split","trainingHour","ojt","target","res","osd","oDate","days","actualDays","Math","round","setDate","getDate","month","getMonth","day","year","getFullYear","actualojtDate","weekendDays","date","months","document","getElementById","ojtEndDateError","getFreezeDate","Bsd","sDate","actualDate","osdDays","actualOsdDays","ojtStart","actualOsdDate","OedDays","actualOedDate","selectname","cId","userCenterRoleMap","userId","userDetails","firstName","lastName","toString","ids","console","log","appError","jsonobjects","batchId","response","formData","FormData","action","alert","history","pathname","courseObject","render","width","color","ihubId","ihubProductName","shrink","min","max","classroomId","googleMeetLink","toDateString"],"mappings":"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","sourcesContent":["import React, { Component ,Fragment,useState} from 'react';\r\nimport './../App.css';\r\nimport './../assets/css/login-style.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { SingleSelect } from \"react-select-material-ui\";\r\nimport UserContext from '../components/GolbalContext'\r\nimport { FormControl , InputLabel, Input, Grid , TextField}  from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport {fetchUserDetailsById, saveBatchDetails,fetchCenterCapacity,\r\n  fetchCenterActiveCourses,fetchCourseDetailsByIds,fetchCenterCapacityByIds,fetchUsersByCenterIdAndRoleMapId } from './../util/api';\r\nimport {validateDates,  validateOJTDates , validateBatchDescription,validateStartDate,validateAssessmentDate,validateOJTEndDate,ojtStartDateLessThanOjtEndDate} from './../util/validation';\r\nimport {isNotEmpty} from './../util/validation';\r\nimport {calculateBatchFreezeDate,calculateWeekendDays,diffDays} from './../util/util';\r\n\r\n\r\n  class Batch extends Component {\r\n  constructor(props) {\r\n  \r\n    super(props);\r\n    this.myData = { \r\n      course : [],\r\n      users: [],\r\n      classroom:[],\r\n      batchType : [\r\n        { value: 1, label: 'ClassRoom' },\r\n        { value: 2, label: 'Virtual' }            \r\n    ],\r\n    batchOwnerMasterData:[ \r\n                { value: 'domain_facilitator', label: 'Domain Facilitator'},\r\n                { value: 'ydm_facilitator', label: 'YDM Facilitator'}            \r\n              ]\r\n    };\r\n    if(props.location.state != null && props.location.state != undefined)\r\n    {\r\n      this.state = {startDate:new Date(props.location.state.batch.startDate).toISOString().slice(0,10),endDate:new Date(props.location.state.batch.endDate).toISOString().slice(0,10)\r\n        ,traingHrs:0,Ojt:0,courseData:[],user:[],errors : {courseId:'',batchType:'',batchDescription:'',batchOwner:'',ydmCoach:'',startDate:'',endDate:'',ojtStartDate:'',assessmentDate:'',ojtEndDate:'',batchHelperId:'',domainFacilitator:''},batchData : props.location.state.batch,\r\n        users: [] \r\n    };\r\n    }\r\n    else\r\n    \r\n    {\r\n      this.state ={startDate:new Date().toISOString().slice(0,10),endDate:new Date().toISOString().slice(0,10),traingHrs:0,Ojt:0,courseData:[], user:[],errors : {courseId:'',batchType:'',batchDescription:'',batchOwner:'',ydmCoach:'',startDate:'',endDate:'',ojtStartDate:'',assessmentDate:'',ojtEndDate:'',batchHelperId:'',domainFacilitator:''},batchData : {freezeDate:'',courseId:'',batchType:'',batchDescription:'',batchOwner:'',ydmCoach:'',startDate:'',endDate:'',ojtStartDate:'',createdBy : UserContext.userid, dbUserId:UserContext.dbUserId,updatedBy:UserContext.userid,\r\n      assessmentDate:'',ojtEndDate:'',batchHelperId:'',domainFacilitator:''\r\n      },users: []};\r\n\r\n    }\r\n\r\n     this.handleInputChange = this.handleInputChange.bind(this);\r\n     this.handleSelectChange = this.handleSelectChange.bind(this);\r\n     this.fetchUserDetailsByCenterId();\r\n     this.getClassroomMasters();\r\n\r\n    //  if(props.location.state != null && props.location.state != undefined)\r\n    //  {\r\n    //   this.setState({startDate:props.location.state.batch.startDate});\r\n    // }\r\n   \r\n    //  else{\r\n    //   this.setState({startDate:new Date().toISOString().slice(0,10)});\r\n    //  }\r\n\r\n     fetchCenterActiveCourses(UserContext.centerId).then((jsondata) => {\r\n      let courseDetails=[];\r\n      let centerActiveCourses = JSON.parse(jsondata.data);\r\n      centerActiveCourses.map(item => {courseDetails.push({ id: item.courseId })  });\r\n     this.getCourseMasters(JSON.stringify(courseDetails));\r\n     });\r\n   \r\n     let centerIds=[];\r\n     centerIds.push({centerId: UserContext.centerId});\r\n     fetchCenterCapacityByIds(JSON.stringify(centerIds)).then((jsondata) => {\r\n      let centerCapacityDetails=[];\r\n      let jsonObjects = JSON.parse(jsondata.data);\r\n      jsonObjects.map(item => { centerCapacityDetails.push({label: item.roomName, value: item.id})});\r\n      this.setState({centerCapacity:centerCapacityDetails});\r\n     });\r\n   \r\n\r\n    \r\n }\r\n\r\n getCourseName()\r\n {\r\n    let batchName = this.state.batchData.batchName;\r\n    let course  = batchName.split(\"_\")[0] + \"_\" + this.state.batchData.courseId;\r\n    this.state.courseData.map(item =>{ \r\n      if(item.id == this.state.batchData.courseId){\r\n       this.state.traingHrs=item.trainingHour\r\n       this.state.Ojt=item.ojt\r\n      }\r\n    });\r\n    this.setState({\r\n      batchData : {\r\n        ...this.state.batchData , \r\n          courseId : course\r\n      }\r\n    });\r\n  //  alert(JSON.stringify(this.state.batchData));\r\n\r\n }\r\n handleInputChange(event) {\r\n  let errors = this.state.errors;\r\n     const target = event.target;\r\n     const value =  target.value;\r\n     const name = target.name;\r\n  //   const label=target.lable;\r\n\r\n  if(name == \"batchDescription\" )\r\n  {\r\n    \r\n    let res = validateBatchDescription(value);\r\n    this.setState({\r\n      errors: {\r\n        ...this.state.errors,\r\n        [name] : {\r\n          'label' : res , \r\n          'value' : res == \"\" ? false : true \r\n        }\r\n      }\r\n  });\r\n}\r\n \r\n  if((name == \"ojtStartDate\" ))\r\n        {\r\n          let res = validateOJTDates(value);\r\n          errors.ojtStartDate=res;\r\n          // if(res===\"\"){\r\n          // res = ojtStartDateLessThanOjtEndDate(value,this.state.batchData.ojtEndDate);\r\n          // }\r\n        //   this.setState({\r\n        //     errors: {\r\n        //       ...this.state.errors,\r\n        //       ojtStartDate:res\r\n        //     }\r\n        // });\r\n\r\n// if ojt changes \r\n\r\nlet osd=value;\r\n//alert(osd);\r\nlet oDate=new Date(osd);\r\nlet days=(this.state.Ojt/7)\r\nlet actualDays=Math.round(days);\r\n\r\n//alert(actualDays);\r\noDate.setDate(oDate.getDate()+days);\r\nvar month = (oDate .getMonth() + 1);\r\nvar day = (oDate .getDate());\r\nvar year = (oDate .getFullYear());\r\nvar actualojtDate= year + \"-\" + ('0' + month).slice(-2) + \"-\" + ('0' + day).slice(-2);\r\n//alert(actualojtDate);\r\n\r\nvar weekendDays=calculateWeekendDays(value,actualojtDate); \r\n\r\nvar date = new Date(actualojtDate);\r\ndate.setDate(date.getDate() + weekendDays);\r\nvar months= date.getMonth() + 1;\r\nvar actualojtDate= date.getFullYear() + \"-\"+ ('0' +months).slice(-2) + \"-\" +('0' +date.getDate()).slice(-2);     \r\n\r\nthis.state.batchData.endDate =  document.getElementById(\"endDate\").value= actualojtDate;\r\nthis.state.batchData.ojtEndDate=document.getElementById(\"ojtEndDate\").value= actualojtDate;\r\nthis.state.batchData.assessmentDate=document.getElementById(\"assessmentDate\").value= actualojtDate;\r\n\r\n      }\r\n\r\n  if((name == \"endDate\" ))\r\n        {\r\n          let res = validateDates(value);\r\n          let ojtEndDateError = validateOJTEndDate(value,this.state.batchData.ojtEndDate);\r\n          this.setState({\r\n            errors: {\r\n              ...this.state.errors,\r\n              endDate:res\r\n            }\r\n        });\r\n        errors.ojtEndDate=ojtEndDateError;\r\n        this.setState({errors});\r\n      }\r\n\r\n      if((name == \"startDate\" ))\r\n      {\r\n        let res = validateStartDate(value);\r\n        this.setState({\r\n          errors: {\r\n            ...this.state.errors,\r\n              startDate: res\r\n          }\r\n      });\r\n     \r\n      this.getFreezeDate(value);\r\n\r\n     // this.state.batchData.startDate =  document.getElementById(\"startDate\").value= today;\r\n\r\n//batch end date calculation\r\n      let Bsd=value;\r\n      let sDate=new Date(Bsd);\r\n      let days=((this.state.traingHrs+this.state.Ojt)/7)\r\n      let actualDays=Math.round(days);\r\n     // alert(actualDays);\r\n      sDate.setDate(sDate.getDate()+days);\r\n      var month = (sDate .getMonth() + 1);\r\n      var day = (sDate .getDate());\r\n      var year = (sDate .getFullYear());\r\n      var actualDate= year + \"-\" + ('0' + month).slice(-2) + \"-\" + ('0' + day).slice(-2);\r\n      var weekendDays=calculateWeekendDays(value,actualDate);   \r\n      var date = new Date(actualDate);\r\n      date.setDate(date.getDate() + weekendDays);\r\n      var months= date.getMonth() + 1;\r\n\r\n     // alert((date.getMonth()+1).length);\r\n      var actualDate= date.getFullYear() + \"-\"+ ('0' +months).slice(-2) + \"-\" +('0' +date.getDate()).slice(-2);     \r\n      this.state.batchData.endDate =  document.getElementById(\"endDate\").value= actualDate;\r\n      \r\n    //ojt start date calculation\r\n\r\n    this.state.batchData.ojtStartDate =null;\r\n    this.state.batchData.ojtEndDate =null;\r\n\r\n  if(this.state.Ojt!='' &&  typeof  this.state.Ojt!=\"undefined\"){\r\n   \r\n    let osdDays=((this.state.traingHrs/7));\r\n    let actualOsdDays=Math.round(osdDays);\r\n     //alert(actualOsdDays);\r\n     let ojtStart = new Date(Bsd);\r\n     ojtStart.setDate(ojtStart.getDate() + osdDays);\r\n     month = (ojtStart .getMonth() + 1);\r\n       day = (ojtStart .getDate());\r\n       year = (ojtStart .getFullYear());\r\n       let actualOsdDate= year + \"-\" + ('0' + month).slice(-2) + \"-\" + ('0' + day).slice(-2);\r\n       this.state.batchData.ojtStartDate =  document.getElementById(\"ojtStartDate\").value= actualOsdDate;\r\n       var osd = actualOsdDate;\r\n    //ojt end date calculations\r\n     let OedDays=((this.state.Ojt/7));\r\n     OedDays = Math.round(OedDays);\r\n     osd  = new Date(osd);\r\n     osd.setDate(osd.getDate()+OedDays);\r\n     month = (osd .getMonth() + 1);\r\n       day = (osd .getDate());\r\n       year = (osd .getFullYear());\r\n       let  actualOedDate= year + \"-\" + ('0' + month).slice(-2) + \"-\" + ('0' + day).slice(-2);\r\n      this.state.batchData.ojtEndDate =  document.getElementById(\"ojtEndDate\").value= actualOedDate;\r\n    }\r\n\r\n      this.state.batchData.assessmentDate =  document.getElementById(\"assessmentDate\").value= actualDate;\r\n         \r\n    }\r\n     \r\n      if((name == \"ojtEndDate\" ))\r\n      {\r\n        let res = ojtStartDateLessThanOjtEndDate(this.state.batchData.ojtStartDate,value);\r\n        errors.ojtStartDate=res;\r\n      }\r\n     this.setState({errors});\r\n     this.setState({\r\n      batchData: {\r\n         ...this.state.batchData,\r\n         [name]: value\r\n       }\r\n     });\r\n     this.validate(name,value);\r\n     \r\n   }\r\n   handleSelectChange(selectname, event) {\r\n//selection of course get the training hrs and ojt duration\r\n\r\nlet errors = this.state.errors;\r\n\r\nif(selectname==\"courseId\" ){\r\n  //if courseId changes all dates should be blank\r\n\r\n  this.state.batchData.startDate= document.getElementById(\"startDate\").value=\"\"\r\n  this.state.batchData.endDate= document.getElementById(\"endDate\").value=\"\";\r\n  this.state.batchData.ojtStartDate= document.getElementById(\"ojtStartDate\").value=\"\";\r\n  this.state.batchData.ojtEndDate=document.getElementById(\"ojtEndDate\").value=\"\";\r\n  this.state.batchData.assessmentDate=document.getElementById(\"assessmentDate\").value=\"\";\r\n\r\n  let cId =  event.split(\"_\")[1]\r\n \r\n  this.state.courseData.map(item =>{ \r\n    if(item.id==cId){\r\n     this.state.traingHrs=item.trainingHour\r\n     this.state.Ojt=item.ojt\r\n    }\r\n   \r\n  } );\r\n \r\n}\r\n\r\n\r\n    // if(selectname == \"batchType\" && event == 1)\r\n    // {\r\n    //   document.getElementById(\"ihubId\").setAttribute(\"hidden\"  , true);\r\n    //   document.getElementById(\"ihubProductName\").setAttribute(\"hidden\"  , true);\r\n    // }\r\n    // else if (selectname == \"batchType\" && event == 2)\r\n    // {\r\n      \r\n    //   document.getElementById(\"ihubId\").removeAttribute(\"hidden\");\r\n    //   document.getElementById(\"ihubProductName\").removeAttribute(\"hidden\");\r\n    // }\r\n      if( selectname == \"ydmCoach\" )\r\n      {\r\n  \r\n       if(this.state.batchData.batchOwner == event)\r\n       {\r\n        \r\n        this.state.batchData.batchOwner = \"\";\r\n     // alert(\"Batch Owner and Ydm Coach Should Not be same\");\r\n    \r\n     errors.ydmCoach=\"Batch Owner and Ydm Coach Should Not be same\";\r\n    \r\n    }\r\n   }\r\n\r\n   if( selectname == \"batchOwner\" )\r\n   {\r\n    if(this.state.batchData.ydmCoach == event)\r\n    {\r\n     \r\n      this.state.batchData.ydmCoach = \"\";\r\n      // alert(\"Batch Owner and Ydm Coach Should Not be same\");\r\n       errors.batchOwner=\"Batch Owner and Ydm Coach Should Not be same\";\r\n }\r\n}\r\n\r\n\r\n   this.setState({\r\n    batchData: {\r\n       ...this.state.batchData,\r\n       [selectname]: event\r\n     }\r\n   })\r\n \r\n   this.validate(selectname,event);\r\n  }\r\n mySubmitHandler = (event) => {\r\n     event.preventDefault();\r\n     if(this.validateForm(this.state.errors)){\r\n     this.submitBatchDetails();\r\n     }   \r\n }\r\n\r\n  fetchUserDetailsByCenterId() {\r\n\r\n    fetchUsersByCenterIdAndRoleMapId(UserContext.centerId,4).then((jsondata) => {\r\n      let dbUserId = [];\r\n    let userCenterRoleMap = JSON.parse(jsondata.data);\r\n    userCenterRoleMap.map(item => {dbUserId.push({ id: item.userId })  });\r\n    \r\n    fetchUserDetailsById(JSON.stringify(dbUserId)).then((jsondata) => {\r\n      let userDetails = JSON.parse(jsondata.data);\r\n      let users=[];\r\n    //  let jsonObjects = JSON.parse(jsondata.data);\r\n    userDetails.map(item => {users.push({label : item.firstName + \" \" + item.lastName , value : (item.id).toString()})});\r\n      this.setState({users:users});\r\n      //for (var i = 0; i < userDetails.length; i++) {\r\n       // let user = userDetails[i];\r\n      //  this.myData.users.push({label : user.firstName + \" \" + user.lastName , value : user.id});\r\n    //  this.state.users.push({label : user.firstName + \" \" + user.lastName , value : user.id});\r\n     // }\r\n    });\r\n  });\r\n}\r\n getCourseMasters(ids){\r\n\r\n  // let formData = new FormData();\r\n  // formData.append('data','{\"token\" : \"'+ \"1234\" +'\", \"action\" : \"findall\" , \"data\" : [{}]}');\r\n  // fetch(\"http://playground.tatastrive.com/services-v1/courseservice\", {\r\n  //     method: \"POST\",\r\n  //     body: formData \r\n  //     }).then(response => response.json()).\r\n      \r\n    //  fetchCourseDetails().then((jsondata)=>{\r\n\r\n      fetchCourseDetailsByIds(ids).then((jsondata)=>{\r\n          console.log(jsondata);\r\n          if(jsondata.appError==null){     \r\n              let jsonobjects = JSON.parse(jsondata.data);\r\n           \r\n             jsonobjects.map(item => { this.myData.course.push({label: item.name, value: item.name + \"_\" + item.id})\r\n             })\r\n             this.setState({courseData : jsonobjects});\r\n             if(this.state.batchData.batchId != undefined)\r\n             {\r\n              this.getCourseName();\r\n             }\r\n             \r\n          } \r\n          return (true);\r\n       }).then(response => response);\r\n      }\r\n\r\n getClassroomMasters(){\r\n\r\n        // let formData = new FormData();\r\n        // formData.append('data','{\"token\" : \"'+ \"1234\" +'\", \"action\" : \"findall\" , \"data\" : [{}]}');\r\n        // fetch(\"http://playground.tatastrive.com/services-v1/centercapacityservice\", {\r\n        //     method: \"POST\",\r\n        //     body: formData \r\n        //     }).then(response => response.json()).\r\n            \r\n        fetchCenterCapacity().then((jsondata)=>{\r\n                console.log(jsondata);\r\n                if(jsondata.appError==null){     \r\n                    let jsonobjects = JSON.parse(jsondata.data);\r\n                  //  alert(jsonobjects);\r\n                   jsonobjects.map(item => { this.myData.classroom.push({label:item.roomName, value:item.id})\r\n                   })\r\n                 //  this.setState({mydata : jsonobjects});\r\n                   \r\n                } \r\n                return (true);\r\n             }).then(response => response);\r\n            }\r\n      \r\n\r\nsubmitBatchDetails()\r\n{\r\n let formData = new FormData();\r\n let action = \"\";\r\n const batchId = (this.state.batchData.batchId == '' || this.state.batchData.batchId == null);\r\n  \r\n    if (!batchId){\r\n      action =  \"updateBatch\";\r\n      this.state.batchData.updatedBy=UserContext.userid;\r\n      this.state.batchData.courseId = (this.state.batchData.courseId).split('_')[1]; \r\n   }else{\r\n     action=\"save\";\r\n   }\r\n\r\n   this.state.batchData.centerId =UserContext.centerId;\r\n   this.state.batchData.createdBy=UserContext.userid;\r\n \r\n saveBatchDetails(action,this.state.batchData).then((jsondata)=>{\r\n         if(jsondata.appError.length==0){      \r\n             let jsonobjects = JSON.parse(jsondata.data);\r\n             console.log(jsonobjects[0].batchName); \r\n            \r\n             if(action == 'save')\r\n             {\r\n             alert(jsonobjects[0].batchName +\" Successfully Created\");\r\n             this.props.history.push({\r\n              pathname: '/dashboard/managebatches'\r\n             }\r\n            );\r\n             }\r\n\r\n             else \r\n             {\r\n              alert(jsonobjects[0].batchName +\" Successfully Updated\");\r\n              this.props.history.push({\r\n               pathname: '/dashboard/managebatches'\r\n              }\r\n              );\r\n              \r\n             }\r\n           \r\n         }  else{\r\n          \r\n         } \r\n      })\r\n}\r\n\r\nvalidate = (name,value)=>{\r\n  let errors = this.state.errors;\r\n  switch (name) {\r\n    case 'courseId': errors.courseId =isNotEmpty(value);\r\n      break;\r\n      case 'batchType': errors.batchType =isNotEmpty(value);\r\n      break;\r\n      // case 'batchDescription': errors.batchDescription =validateBatchDescription(value);\r\n      // break;\r\n      case 'batchDescription': errors.batchDescription =isNotEmpty(value);\r\n      break;\r\n      case 'startDate': errors.startDate =isNotEmpty(value);\r\n      break;\r\n      case 'endDate': errors.endDate =isNotEmpty(value);\r\n      break;\r\n      case 'batchOwner': errors.batchOwner =isNotEmpty(value);\r\n      break;\r\n      case 'domainFacilitator': errors.domainFacilitator =isNotEmpty(value);\r\n      break;\r\n      case 'ydmCoach': errors.ydmCoach =isNotEmpty(value);\r\n      break;\r\n      case 'assessmentDate': errors.assessmentDate =validateAssessmentDate(this.state.batchData.startDate,value);\r\n      break;\r\n      case 'ojtEndDate': errors.ojtEndDate =validateOJTEndDate(this.state.batchData.endDate,value);\r\n      break;\r\n      case 'batchHelperId': errors.batchHelperId =isNotEmpty(value);\r\n      break;\r\n     default:\r\n     break;\r\n}\r\n\r\n this.setState({errors});\r\n}\r\n\r\n\r\nvalidateForm = (errors) => {\r\n\r\nthis.validate(\"courseId\",this.state.batchData.courseId);\r\nthis.validate(\"batchType\",this.state.batchData.batchType);\r\nthis.validate(\"batchDescription\",this.state.batchData.batchDescription);\r\nthis.validate(\"batchOwner\",this.state.batchData.batchOwner);\r\nif(this.state.batchData.batchOwner===\"domain_facilitator\"){\r\n  errors.ydmCoach=\"\";\r\n  this.validate(\"domainFacilitator\",this.state.batchData.domainFacilitator);\r\n}\r\nif(this.state.batchData.batchOwner===\"ydm_facilitator\"){\r\n  errors.domainFacilitator=\"\";\r\n  this.validate(\"ydmCoach\",this.state.batchData.ydmCoach);\r\n}\r\nthis.validate(\"startDate\",this.state.batchData.startDate);\r\nthis.validate(\"endDate\",this.state.batchData.endDate);\r\nthis.validate(\"assessmentDate\",this.state.batchData.assessmentDate);\r\nthis.validate(\"ojtEndDate\",this.state.batchData.ojtEndDate);\r\n//this.validate(\"batchHelperId\",this.state.batchData.batchHelperId);\r\n\r\n\r\nif(this.state.batchData.startDate!='' && this.state.batchData.endDate!=''){\r\nif(diffDays(this.state.batchData.startDate,this.state.batchData.endDate)<=(this.state.traingHrs/7)){\r\nthis.state.errors.startDate=\"Difference between Start date and End Date must NOT be less than Course duration\";\r\n}\r\nelse{\r\n  this.state.errors.startDate=\"\";\r\n\r\n}\r\n}\r\n\r\n\r\nvar ydmCoach=this.state.batchData.ydmCoach;\r\nvar batchHelperId=this.state.batchData.batchHelperId;\r\nvar batchOwner=this.state.batchData.batchOwner;\r\nlet domainFacilitator=this.state.batchData.domainFacilitator;\r\n\r\n\r\nif(domainFacilitator!=\"\" && batchHelperId!=\"\"){\r\n  if (domainFacilitator === batchHelperId){\r\n    errors.domainFacilitator=\"Batch Helper and Domain Facilitator not same\";\r\n  }\r\n  else{ errors.domainFacilitator=\"\";}\r\n }\r\n if(ydmCoach!=\"\" && batchHelperId!=\"\"){\r\n  if (ydmCoach === batchHelperId){\r\n  errors.batchHelperId=\"YDM Facilitator and Batch Helper not same\";\r\n   }\r\n   else{errors.batchHelperId=\"\";}\r\n }\r\n\r\n if(ydmCoach!=\"\" && domainFacilitator!=\"\"){\r\n  if (ydmCoach === domainFacilitator){\r\n   errors.ydmCoach=\"YDM Facilitator and Domain Facilitator not same\";\r\n   }\r\n   else{errors.ydmCoach=\"\";}\r\n }\r\n\r\n this.setState({errors});\r\n\r\nlet valid = true;\r\n  Object.values(errors).forEach(\r\n    // if we have an error string set valid to false\r\n    (val) => val.length > 0 && (valid = false)\r\n  );\r\n  return valid;\r\n}\r\n\r\n\r\ngetFreezeDate(startDate){\r\n\r\n let courseDetails=[];\r\n courseDetails.push({id:this.state.batchData.courseId.split(\"_\")[1]});\r\n fetchCourseDetailsByIds(JSON.stringify(courseDetails)).then((jsondata) => { \r\n   let courseObject = JSON.parse(jsondata.data);\r\n var freezeDate =calculateBatchFreezeDate(startDate,courseObject[0].trainingHour);\r\n this.setState({\r\n  batchData: {\r\n     ...this.state.batchData,\r\n     freezeDate: freezeDate\r\n   }\r\n })\r\n  });\r\n\r\n  }\r\n\r\n\r\nrender()\r\n{\r\n\r\n  if(this.state.batchData != null && this.state.batchData != undefined){\r\n    \r\n    \r\n return (\r\n  \r\n<div style = {{ width : '100%' }}>\r\n <form onSubmit={this.mySubmitHandler} method=\"post\">\r\n   \r\n <Grid item xs={12}>\r\n       <FormControl>\r\n       <h5> Batch Details</h5>\r\n         </FormControl>  \r\n     </Grid>\r\n     <br></br>\r\n     <Grid container spacing={4}>\r\n     <Grid item xs={12} sm={4} alignContent=\"center\"  >\r\n     <SingleSelect onChange={this.handleSelectChange.bind(this, 'courseId')} name=\"courseId\" id=\"courseId\"\r\n              placeholder = \"Select Coures\" required\r\n              value={this.state.batchData.courseId || ''}\r\n              options={this.myData.course}\r\n              disabled = {(this.state.batchData.batchId == undefined || this.state.batchData.batchId == null) ? false : true}\r\n              error={this.state.errors.courseId==''?false:true}\r\n              helperText={this.state.errors.courseId}\r\n            />\r\n            </Grid>\r\n            <br></br><br></br>\r\n            <Grid item xs={12} sm={6}>\r\n            { \r\n  (this.state.batchData.freezeDate) &&   \r\n  <div style={{color:\"red\"}}>Batch Freeze Date is :{this.state.batchData.freezeDate.split(\"-\")[2]} - {this.state.batchData.freezeDate.split(\"-\")[1]} - {this.state.batchData.freezeDate.split(\"-\")[0]}\r\n    </div>\r\n            }\r\n          </Grid>  \r\n            <Grid item xs={12} sm={6} id=\"batchName\">\r\n      <FormControl>\r\n        <TextField type=\"text\" name=\"batchName\" id=\"batchName\" style = {{width: 400}} \r\n         value={this.state.batchData.batchName || ''}  \r\n        hidden = {(this.state.batchData.batchId == undefined || this.state.batchData.batchId == null) ? true : false}\r\n        />\r\n      </FormControl>\r\n      </Grid>  \r\n      </Grid>  \r\n\r\n\r\n            <br></br>\r\n\r\n      <Grid container spacing={4}>\r\n\r\n     <Grid item xs={12} sm={3}>\r\n     <SingleSelect onChange={this.handleSelectChange.bind(this, 'batchType')} name=\"batchType\" id=\"batchType\" required\r\n              placeholder = \"Batch Type\" value={this.state.batchData.batchType || ''}\r\n              options={this.myData.batchType}\r\n              error={this.state.errors.batchType==''?false:true}\r\n              helperText={this.state.errors.batchType}\r\n            />\r\n            </Grid>      \r\n            { \r\n  (this.state.batchData.batchType===2) &&  \r\n<React.Fragment>  \r\n  <Grid item xs={12} sm={3} id=\"ihubId\">\r\n<FormControl >\r\n  <InputLabel for=\"ihubProductId\">iHUB Product Id</InputLabel>\r\n  <Input type=\"text\" name=\"ihubId\" id=\"ihubId\" onChange={this.handleInputChange}  value={this.state.batchData.ihubId || ''}/>\r\n</FormControl>\r\n</Grid>\r\n\r\n<Grid item xs={12} sm={3} id=\"ihubProductName\" >\r\n<FormControl>\r\n  <InputLabel for=\"ihubProductName\">iHUB Product Name</InputLabel>\r\n  <Input type=\"text\" name=\"ihubProductName\" id=\"ihubProductName\" onChange={this.handleInputChange} value={this.state.batchData.ihubProductName || ''}   />\r\n</FormControl>\r\n</Grid>\r\n</React.Fragment> \r\n  }\r\n\r\n<Grid item xs={12} lg={3}>\r\n<FormControl>\r\n  <TextField type=\"text\" name=\"batchDescription\" id=\"batchDescription\"  \r\n  value={this.state.batchData.batchDescription || ''} onChange={this.handleInputChange}\r\n  label = \"Batch Description\" \r\n  error={this.state.errors.batchDescription==''?false:true}\r\n  helperText={this.state.errors.batchDescription}\r\n  \r\n  />\r\n</FormControl>\r\n</Grid>\r\n             \r\n     <Grid item xs={12} sm={3}>\r\n         <TextField id=\"date\" readonly  name = \"startDate\" id = \"startDate\" \r\n          error={this.state.errors.startDate==''?false:true}\r\n          helperText={this.state.errors.startDate}\r\n         onChange={this.handleInputChange}   value={this.state.batchData.startDate || ''}  \r\n         label=\"Batch Start Date\" \r\n         type=\"date\"\r\n         InputLabelProps={{\r\n           shrink: true,\r\n         }} \r\n         inputProps={{  min: this.state.startDate, max: new Date('01/01/2050').toISOString().slice(0,10)}}\r\n         disabled={new Date(this.state.startDate) < new Date(new Date().getFullYear()+\"-\"+new Date().getMonth()+\"-\"+new Date().getDate())}\r\n         />\r\n\r\n     </Grid>\r\n\r\n     <Grid item xs={12} sm={3}>\r\n         <TextField id=\"date\" name = \"endDate\" id = \"endDate\" \r\n          error={this.state.errors.endDate==''?false:true}\r\n          helperText={this.state.errors.endDate}\r\n         onChange={this.handleInputChange}  value={this.state.batchData.endDate || ''} \r\n         label=\"Batch End Date \" \r\n         type=\"date\"\r\n         InputLabelProps={{\r\n           shrink: true,\r\n         }} \r\n         inputProps={{  min: this.state.endDate , max: new Date('01/01/2050').toISOString().slice(0,10)}}\r\n         disabled={new Date(this.state.endDate) < new Date(new Date().getFullYear()+\"-\"+(new Date().getMonth()+1)+\"-\"+new Date().getDate())}\r\n         />\r\n\r\n     </Grid>\r\n\r\n     <Grid item xs={12} sm={3}>\r\n         <TextField id=\"date\" name = \"ojtStartDate\" id = \"ojtStartDate\" \r\n          error={this.state.errors.ojtStartDate==''?false:true}\r\n          helperText={this.state.errors.ojtStartDate}\r\n         onChange={this.handleInputChange} value={this.state.batchData.ojtStartDate || ''} \r\n         label=\"OJT Start Date\" \r\n         type=\"date\"\r\n         InputLabelProps={{\r\n           shrink: true,\r\n         }} \r\n         inputProps={{  min: new Date('01/01/2000').toISOString().slice(0,10) , max: new Date('01/01/2050').toISOString().slice(0,10)}}\r\n         disabled={this.state.Ojt===0?true:false}\r\n         />\r\n\r\n     </Grid>\r\n\r\n     <Grid item xs={12} sm={3}>\r\n         <TextField id=\"date\" name = \"ojtEndDate\" id = \"ojtEndDate\" onChange={this.handleInputChange} value={this.state.batchData.ojtEndDate || ''} \r\n         label=\"OJT End Date \"\r\n         type=\"date\"\r\n         InputLabelProps={{\r\n           shrink: true,\r\n         }} \r\n         inputProps={{  min: new Date('01/01/2000').toISOString().slice(0,10) , max: new Date('01/01/2050').toISOString().slice(0,10)}}\r\n         error={this.state.errors.ojtEndDate==''?false:true}\r\n         helperText={this.state.errors.ojtEndDate} disabled={this.state.Ojt===0?true:false}\r\n        />\r\n     </Grid>\r\n     <Grid item xs={12} sm={3}>\r\n         <TextField id=\"date\" name = \"assessmentDate\" id = \"assessmentDate\" onChange={this.handleInputChange} value={this.state.batchData.assessmentDate || ''} \r\n         label=\"Assessment Date \"  \r\n         type=\"date\"\r\n         InputLabelProps={{\r\n           shrink: true,\r\n         }} \r\n         inputProps={{  min: new Date('01/01/2000').toISOString().slice(0,10) , max: new Date('01/01/2050').toISOString().slice(0,10)}}\r\n         error={this.state.errors.assessmentDate==''?false:true}\r\n         helperText={this.state.errors.assessmentDate}\r\n     \r\n      />\r\n\r\n     </Grid>\r\n\r\n     {/* <Grid item xs={12} sm={3}>\r\n     <SingleSelect onChange={this.handleSelectChange.bind(this, 'classroomId')} name=\"classroomId\" id=\"classroomId\"\r\n              placeholder = \"Clasroom\"  \r\n              label= \"Clasroom\"\r\n              value={this.state.batchData.classroomId || ''}\r\n             options={this.myData.classroom}\r\n              \r\n            />\r\n            </Grid> */}\r\n\r\n     <Grid item xs={12} sm={3}>\r\n     <SingleSelect onChange={this.handleSelectChange.bind(this, 'batchOwner')} name=\"batchOwner\" id=\"batchOwner\"\r\n              placeholder = \"Select Batch Owner\"  \r\n              label=\"Select Batch Owner\"\r\n              key={this.state.batchData.batchOwner}\r\n              value={this.state.batchData.batchOwner || ''}\r\n              options={this.myData.batchOwnerMasterData}\r\n              error={this.state.errors.batchOwner==''?false:true}\r\n              helperText={this.state.errors.batchOwner}   \r\n            />\r\n            </Grid>\r\n            <Grid item xs={12} sm={3}>\r\n             <SingleSelect onChange={this.handleSelectChange.bind(this, 'domainFacilitator')} name=\"domainFacilitator\" id=\"domainFacilitator\"\r\n              placeholder = \"Select Domain Facilitator\" \r\n              label=\"Select Domain Facilitator\"\r\n              key={this.state.batchData.domainFacilitator}\r\n              value={this.state.batchData.domainFacilitator || ''}\r\n            //  options={this.myData.users}\r\n              options={this.state.users}\r\n              error={this.state.errors.domainFacilitator==''?false:true}\r\n              helperText={this.state.errors.domainFacilitator} \r\n            />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={3}>\r\n             <SingleSelect onChange={this.handleSelectChange.bind(this, 'ydmCoach')} name=\"ydmCoach\" id=\"ydmCoach\"\r\n              placeholder = \"Select YDM Facilitator\" \r\n              label=\"Select YDM Facilitator\"\r\n              key={this.state.batchData.ydmCoach}\r\n              value={this.state.batchData.ydmCoach || ''}\r\n            //  options={this.myData.users}\r\n              options={this.state.users}\r\n              error={this.state.errors.ydmCoach==''?false:true}\r\n              helperText={this.state.errors.ydmCoach}\r\n            />\r\n            </Grid>     \r\n\r\n            <Grid item xs={12} sm={3}>\r\n             <SingleSelect onChange={this.handleSelectChange.bind(this, 'batchHelperId')} name=\"batchHelperId\" id=\"batchHelperId\"\r\n              placeholder = \"Select Batch Helper\" \r\n              label=\"Select Batch Helper\"\r\n              value={this.state.batchData.batchHelperId || ''}\r\n              //options={this.myData.users}\r\n              options={this.state.users}      \r\n              error={this.state.errors.batchHelperId==''?false:true}\r\n              helperText={this.state.errors.batchHelperId}      \r\n            />\r\n            </Grid> \r\n\r\n            <Grid item xs={12} sm={3}>\r\n             <SingleSelect onChange={this.handleSelectChange.bind(this, 'classroomId')} name=\"'classroomId'\" id=\"classroomId\"\r\n              placeholder = \"Classroom\" \r\n              label=\"Class Room\"\r\n              value={this.state.batchData.classroomId || ''}\r\n              options={this.state.centerCapacity}            \r\n            />\r\n            </Grid>\r\n\r\n\r\n            <Grid item xs={12} lg={3}>\r\n<FormControl>\r\n  <TextField type=\"text\" name=\"googleMeetLink\" id=\"googleMeetLink\"  \r\n  value={this.state.batchData.googleMeetLink || ''} onChange={this.handleInputChange}\r\n  label = \"Google Meet Link\"\r\n />\r\n</FormControl>\r\n</Grid>\r\n\r\n{/* <Grid item xs={12} lg={3}>\r\n<FormControl>\r\n  <TextField type=\"text\" name=\"ydmGoogleMeetLink\" id=\"ydmGoogleMeetLink\"  \r\n  value={this.state.batchData.ydmGoogleMeetLink || ''} onChange={this.handleInputChange}\r\n  label = \"YDM Google Meet Link\"\r\n />\r\n</FormControl>\r\n</Grid> */}\r\n\r\n   </Grid>\r\n   <br></br>\r\n   <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"flex-end\">\r\n   <Button variant=\"contained\" color=\"primary\" type=\"submit\" size=\"small\" disabled={(new Date(new Date(this.state.batchData.endDate).toDateString()) < new Date(new Date().toDateString()))}>  \r\n              Save\r\n                </Button>\r\n                </Grid>\r\n             \r\n \r\n </form>\r\n </div>\r\n\r\n );\r\n        }\r\n    //     else{\r\n\r\n    //       return (\r\n  \r\n    //         <div style = {{ width : '100%' }}>\r\n    //          <form onSubmit={this.mySubmitHandler} method=\"post\">\r\n    //          <Grid item xs={12}>\r\n    //                <FormControl>\r\n    //                <h5> Batch Details</h5>\r\n    //                  </FormControl>  \r\n    //              </Grid>\r\n    //              <br></br>\r\n            \r\n    //              <Grid item xs={12} sm={4} alignContent=\"center\" >\r\n    //              <SingleSelect onChange={this.handleSelectChange.bind(this, 'batchName')} name=\"batchName\" id=\"batchName\"\r\n    //                       placeholder = \"Select Coures\" \r\n                         \r\n    //                       options={this.myData.course}\r\n                          \r\n    //                     />\r\n    //                     </Grid>\r\n    //                     <br></br>\r\n            \r\n    //               <Grid container spacing={2}>\r\n            \r\n    //              <Grid item xs={12} sm={3}>\r\n    //              <SingleSelect onChange={this.handleSelectChange.bind(this, 'batchType')} name=\"batchType\" id=\"batchType\"\r\n    //                       placeholder = \"Select Batch Type\" \r\n    //                       options={this.myData.batchType}\r\n                          \r\n    //                     />\r\n    //                     </Grid>\r\n                        \r\n    //                     <Grid item xs={12} sm={3}>\r\n    //         <FormControl>\r\n    //           <InputLabel for=\"batchDiscription\">Batch Description</InputLabel>\r\n    //           <Input type=\"text\" name=\"batchDescription\" id=\"batchDescription\" onChange={this.handleInputChange}  />\r\n    //         </FormControl>\r\n    //         </Grid>\r\n            \r\n    //              <Grid item xs={12} sm={3}>\r\n    //         <FormControl>\r\n    //           <InputLabel for=\"ihubProductId\">iHUB Product Id</InputLabel>\r\n    //           <Input type=\"text\" name=\"ihubId\" id=\"ihubId\" onChange={this.handleInputChange} />\r\n    //         </FormControl>\r\n    //         </Grid>\r\n            \r\n    //         <Grid item xs={12} sm={3}>\r\n    //         <FormControl>\r\n    //           <InputLabel for=\"ihubProductName\">iHUB Product Name</InputLabel>\r\n    //           <Input type=\"text\" name=\"ihubProductName\" id=\"ihubProductName\" onChange={this.handleInputChange}    />\r\n    //         </FormControl>\r\n    //         </Grid>\r\n            \r\n    //              <Grid item xs={12} sm={3}>\r\n    //                  <TextField id=\"date\" name = \"startDate\" id = \"startDate\" onChange={this.handleInputChange} \r\n    //                  label=\"Batch Start Date\" \r\n    //                  type=\"date\"\r\n    //                  InputLabelProps={{\r\n    //                    shrink: true,\r\n    //                  }} />\r\n            \r\n    //              </Grid>\r\n            \r\n    //              <Grid item xs={12} sm={3}>\r\n    //                  <TextField id=\"date\" name = \"endDate\" id = \"endDate\" onChange={this.handleInputChange} \r\n    //                  label=\"Batch End Date \" \r\n    //                  type=\"date\"\r\n    //                  InputLabelProps={{\r\n    //                    shrink: true,\r\n    //                  }} />\r\n            \r\n    //              </Grid>\r\n            \r\n    //              <Grid item xs={12} sm={3}>\r\n    //                  <TextField id=\"date\" name = \"ojtStartDate\" id = \"ojtStartDate\" onChange={this.handleInputChange}\r\n    //                  label=\"OJT Start Date\" \r\n    //                  type=\"date\"\r\n    //                  InputLabelProps={{\r\n    //                    shrink: true,\r\n    //                  }} />\r\n            \r\n    //              </Grid>\r\n            \r\n    //              <Grid item xs={12} sm={3}>\r\n    //                  <TextField id=\"date\" name = \"ojtEndDate\" id = \"ojtEndDate\" onChange={this.handleInputChange} \r\n    //                  label=\"OJT End Date \"\r\n    //                  type=\"date\"\r\n    //                  InputLabelProps={{\r\n    //                    shrink: true,\r\n    //                  }} />\r\n            \r\n    //              </Grid>\r\n            \r\n    //              <Grid item xs={12} sm={3}>\r\n    //                  <TextField id=\"date\" name = \"assessmentDate\" id = \"assessmentDate\" onChange={this.handleInputChange}\r\n    //                  label=\"Assessment Date \"  \r\n    //                  type=\"date\"\r\n    //                  InputLabelProps={{\r\n    //                    shrink: true,\r\n    //                  }} />\r\n            \r\n    //              </Grid>\r\n    //              <Grid item xs={12} sm={3}>\r\n    //  <SingleSelect onChange={this.handleSelectChange.bind(this, 'classroomId')} name=\"classroomId\" id=\"classroomId\"\r\n    //           placeholder = \"Clasroom\"  \r\n    //           label=\"Clasroom \" \r\n    //           //value={this.state.batchData.classroomId || ''}\r\n    //          options={this.myData.classroom}\r\n              \r\n    //         />\r\n    //         </Grid>\r\n            \r\n    //              <Grid item xs={12} sm={3}>\r\n    //              <SingleSelect onChange={this.handleSelectChange.bind(this, 'batchOwner')} name=\"batchOwner\" id=\"batchOwner\"\r\n    //                       placeholder = \"Select Batch Owner\" \r\n    //                       label=\"Batch Owner \"\r\n    //                      options={this.myData.users}\r\n                          \r\n    //                     />\r\n    //                     </Grid>\r\n    //                     <Grid item xs={12} sm={3}>\r\n    //              <SingleSelect onChange={this.handleSelectChange.bind(this, 'ydmCoach')} name=\"ydmCoach\" id=\"ydmCoach\"\r\n    //                       placeholder = \"Select YDM Coach\" \r\n    //                       label=\"YDM Coach \"\r\n    //                       options={this.myData.users}\r\n                          \r\n    //                     />\r\n    //                     </Grid>\r\n              \r\n                  \r\n                \r\n                 \r\n                \r\n             \r\n                 \r\n    //            </Grid>\r\n    //           <Button variant=\"contained\" color=\"primary\" type=\"submit\">  \r\n    //           Save\r\n    //             </Button>\r\n             \r\n    //          </form>\r\n    //          </div>\r\n            \r\n    //          );\r\n\r\n\r\n\r\n    //     }\r\n}\r\n\r\n}\r\n\r\nexport default Batch;"]},"metadata":{},"sourceType":"module"}