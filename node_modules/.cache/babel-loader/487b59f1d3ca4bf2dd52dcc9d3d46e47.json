{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\History.js\";\nimport React, { Component } from 'react';\nimport { Checkbox, InputLabel, Input, Grid, Button } from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport UserContext from '../components/GolbalContext';\nimport { fetchBulkData, fetchStudentFile, fetchBulkAllMetaDataByCenterId } from './../util/api';\n\nconst XLSX = require('xlsx');\n\nexport default class History extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      disable: false,\n      metaData: [],\n      studentData: [],\n      status_of_File: \"\"\n    };\n  } // Download the data\n\n\n  downloadFile(e, x) {\n    let studentData = [];\n    const regId = e;\n    const file_name = x; // console.log(x)\n\n    var data = {};\n    fetchStudentFile(regId).then(jsondata => {\n      let res = JSON.parse(jsondata.data);\n      res[0].forEach(element => {\n        // console.log(element)\n        data = element;\n        studentData = [...studentData, {\n          \"Reg_No\": data.regId,\n          \"First_Name\": data.firstName,\n          \"Middle_Name\": data.middleName,\n          \"Last_Name\": data.lastName,\n          \"Aadhar_Number\": data.aadharNo,\n          \"DOB\": data.dob,\n          \"Gender\": data.gender,\n          \"Highest_Qualification\": data.highestQualification,\n          \"Passing_Year\": data.passingYear,\n          \"Address_Line_1\": data.addressLine1,\n          \"Village\": data.villageName,\n          \"Religion\": data.religion,\n          \"District\": data.district,\n          \"State\": data.state,\n          \"PINCODE\": data.pincode,\n          \"Category\": data.category,\n          \"Primary_Contact_Number\": data.primaryContactNumber,\n          \"Primary_Mail_ID\": data.primaryEmailId,\n          \"College_register_no\": data.collegeRegisterNo,\n          \"Iti_grade\": data.itiGrade,\n          \"Iti_trade\": data.itiTrade,\n          \"created_on\": data.createdOn,\n          // removing to coloum creted by updated by\n          \"Student_ID\": data.studentId,\n          \"Eng_ID\": data.engagementId,\n          \"Status\": data.status,\n          \"Validation_Error\": data.reason // Changes\n\n        }];\n        this.setState({\n          studentData\n        });\n\n        for (var i = 0; i < this.state.studentData.length; i++) {\n          if (this.state.studentData[i].status === \"D\") {\n            studentData[i].status = \"Upload Successfully\";\n          } else if (this.state.studentData[i].status === \"P\") {\n            studentData[i].status = \"Upload Pending\";\n          } else if (this.state.studentData[i].status === \"F\") {\n            studentData[i].status = \"Input Data Error\";\n          }\n        }\n\n        this.setState({\n          studentData\n        }); // console.log(studentData)\n      }); // console.log(\"Student data in bulk : \",res)\n\n      const workSheet = XLSX.utils.json_to_sheet(studentData);\n      const workBook = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(workBook, workSheet, file_name); // Genrarting buffer if there is large amount of data\n\n      XLSX.write(workBook, {\n        bookType: \"xlsx\",\n        type: \"buffer\"\n      }); // Binary String\n\n      XLSX.write(workBook, {\n        bookType: \"xlsx\",\n        type: \"binary\"\n      });\n      XLSX.writeFile(workBook, file_name);\n    });\n  } // Changes\n  // routes to bulk upload\n\n\n  routes() {\n    this.props.history.push({\n      pathname: '/dashboard/BulkUpload',\n      state: {}\n    });\n  }\n\n  render() {\n    this.loadData();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"flex-end\",\n      alignItems: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      onClick: this.routes.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 14\n      }\n    }, \"Bulk Upload\")), /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      \"aria-label\": \"simple table\",\n      style: {\n        width: '80%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, \"Reg Id\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, \"File Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, \"Batch Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, \"Records\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, \"Upload Date\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, \"Status\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, this.state.metaData.map((dataValue, id) => /*#__PURE__*/React.createElement(TableRow, {\n      id: \"tablerow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 23\n      }\n    }, dataValue.regId), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 23\n      }\n    }, dataValue.uploadFileName), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 23\n      }\n    }, dataValue.batchName), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 23\n      }\n    }, dataValue.records), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 23\n      }\n    }, dataValue.uploadDate), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 23\n      }\n    }, dataValue.status), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => this.downloadFile(dataValue.regId, dataValue.uploadFileName),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 35\n      }\n    }, \" Download \"))))))));\n  }\n\n}","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/History.js"],"names":["React","Component","Checkbox","InputLabel","Input","Grid","Button","Table","TableBody","TableCell","TableHead","TableRow","UserContext","fetchBulkData","fetchStudentFile","fetchBulkAllMetaDataByCenterId","XLSX","require","History","constructor","props","state","disable","metaData","studentData","status_of_File","downloadFile","e","x","regId","file_name","data","then","jsondata","res","JSON","parse","forEach","element","firstName","middleName","lastName","aadharNo","dob","gender","highestQualification","passingYear","addressLine1","villageName","religion","district","pincode","category","primaryContactNumber","primaryEmailId","collegeRegisterNo","itiGrade","itiTrade","createdOn","studentId","engagementId","status","reason","setState","i","length","workSheet","utils","json_to_sheet","workBook","book_new","book_append_sheet","write","bookType","type","writeFile","routes","history","push","pathname","render","loadData","width","bind","map","dataValue","id","uploadFileName","batchName","records","uploadDate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Checkbox, InputLabel, Input, Grid, Button } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport UserContext from '../components/GolbalContext'\r\nimport {fetchBulkData,fetchStudentFile,fetchBulkAllMetaDataByCenterId} from './../util/api';\r\n\r\nconst XLSX = require('xlsx')\r\n\r\nexport default class History extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            disable:false,\r\n            metaData:[],\r\n            studentData:[],\r\n            status_of_File:\"\",\r\n        }  \r\n    }\r\n \r\n    // Download the data\r\n    downloadFile(e,x){\r\n        let studentData=[]\r\n            const regId= e\r\n            const file_name = x\r\n            // console.log(x)\r\n            var data={}\r\n            fetchStudentFile(regId).then((jsondata)=>{\r\n                let res = JSON.parse(jsondata.data)\r\n                res[0].forEach(element=>{\r\n                    // console.log(element)\r\n                    data= element  \r\n                    studentData=[\r\n                        ...studentData,{\r\n                            \"Reg_No\":data.regId,\r\n                            \"First_Name\":data.firstName,\r\n                            \"Middle_Name\": data.middleName,\r\n                            \"Last_Name\": data.lastName,\r\n                            \"Aadhar_Number\": data.aadharNo,\r\n                            \"DOB\": data.dob,\r\n                            \"Gender\":data.gender,\r\n                            \"Highest_Qualification\":data.highestQualification,\r\n                            \"Passing_Year\": data.passingYear,\r\n                            \"Address_Line_1\": data.addressLine1,\r\n                            \"Village\": data.villageName,\r\n                            \"Religion\":data.religion,\r\n                            \"District\":data.district,\r\n                            \"State\": data.state,\r\n                            \"PINCODE\": data.pincode,\r\n                            \"Category\": data.category,\r\n                            \"Primary_Contact_Number\": data.primaryContactNumber,\r\n                            \"Primary_Mail_ID\": data.primaryEmailId,\r\n                            \"College_register_no\":data.collegeRegisterNo,\r\n                            \"Iti_grade\":data.itiGrade,\r\n                            \"Iti_trade\":data.itiTrade,\r\n                           \"created_on\":data.createdOn,\r\n// removing to coloum creted by updated by\r\n                            \"Student_ID\": data.studentId,\r\n                            \"Eng_ID\":data.engagementId,\r\n                            \"Status\":data.status,\r\n                            \"Validation_Error\":data.reason, // Changes\r\n                    }]\r\n                    this.setState({studentData})\r\n\r\n                    for(var i=0;i<this.state.studentData.length;i++){\r\n                        if(this.state.studentData[i].status === \"D\"){\r\n                            studentData[i].status = \"Upload Successfully\" \r\n                     }\r\n                     else if(this.state.studentData[i].status ===\"P\"){\r\n                        studentData[i].status = \"Upload Pending\" \r\n                     }\r\n                     else if(this.state.studentData[i].status ===\"F\"){\r\n                        studentData[i].status = \"Input Data Error\" \r\n                     }\r\n                    }\r\n        \r\n                    this.setState({studentData})\r\n\r\n                    // console.log(studentData)\r\n                })\r\n                // console.log(\"Student data in bulk : \",res)\r\n                const workSheet = XLSX.utils.json_to_sheet(studentData)\r\n                const workBook = XLSX.utils.book_new()\r\n\r\n                XLSX.utils.book_append_sheet(workBook,workSheet,file_name)\r\n                // Genrarting buffer if there is large amount of data\r\n                XLSX.write(workBook,{bookType:\"xlsx\",type:\"buffer\"})\r\n\r\n                // Binary String\r\n                XLSX.write(workBook,{bookType:\"xlsx\",type:\"binary\"})\r\n\r\n                XLSX.writeFile(workBook,file_name)\r\n            })\r\n    }\r\n\r\n    // Changes\r\n    // routes to bulk upload\r\n    routes(){\r\n        this.props.history.push(({ pathname: '/dashboard/BulkUpload',state: {} }));\r\n    }\r\n    render(){\r\n        this.loadData();\r\n        return(\r\n            <div style={{ width: '100%' }}>\r\n\r\n\r\n            <Grid container  justify=\"flex-end\" alignItems=\"flex-end\">\r\n\r\n             <Button type=\"submit\" color=\"primary\"  onClick={this.routes.bind(this)}>\r\n               Bulk Upload\r\n             </Button>\r\n             </Grid>\r\n\r\n            <Grid>\r\n             <Table aria-label=\"simple table\"  style={{ width: '80%'}}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Reg Id</TableCell>\r\n                <TableCell>File Name</TableCell>\r\n                <TableCell>Batch Name</TableCell>\r\n                <TableCell>Records</TableCell>\r\n                <TableCell>Upload Date</TableCell>\r\n                <TableCell>Status</TableCell>\r\n\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n            {this.state.metaData.map((dataValue, id) => (\r\n                    <TableRow id=\"tablerow\">\r\n                      <TableCell>{dataValue.regId}</TableCell>\r\n                      <TableCell>{dataValue.uploadFileName}</TableCell>\r\n                      <TableCell>{dataValue.batchName}</TableCell>\r\n                      <TableCell>{dataValue.records}</TableCell>\r\n                      <TableCell>{dataValue.uploadDate}</TableCell>\r\n                      <TableCell>{dataValue.status}</TableCell>\r\n                      <TableCell>{<Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => this.downloadFile(dataValue.regId,dataValue.uploadFileName)} > Download </Button>}</TableCell>\r\n                    </TableRow>))}\r\n            </TableBody>\r\n           </Table>\r\n\r\n           </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}