{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\ResetPage.js\";\nimport React, { Component } from 'react';\nimport AlertDialog from './../util/AlertDialog';\nimport { isPasswordsSame, passwordStrength, isNotEmpty } from './../util/validation';\nimport { login, resetForgetPassword, changePassword } from './../util/api';\nconst alertDialogOptions = {\n  message: ''\n};\nexport default class ResetPage extends React.Component {\n  constructor() {\n    super();\n\n    this.validate = (name, value) => {\n      let errors = this.state.errors;\n\n      switch (name) {\n        case 'newPassword':\n          errors.newPasswordError = isNotEmpty(value);\n\n          if (!isNotEmpty(value)) {\n            errors.newPasswordError = passwordStrength(value);\n          }\n\n          break;\n\n        case 'confirmPassword':\n          errors.confirmPasswordError = isNotEmpty(value);\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors\n      });\n    };\n\n    this.state = {\n      newPassword: '',\n      confirmPassword: '',\n      errors: {\n        newPasswordError: '',\n        confirmPasswordError: ''\n      }\n    };\n  } // validating password\n\n\n  handleInputPassword(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      name: value\n    });\n    this.validate(name, value);\n  }\n\n  handleInputConfirmPassword(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    console.log(name);\n    this.setState({\n      name: value\n    });\n    this.validate(name, value);\n  } // update password\n\n\n  updatePassword(event) {\n    event.preventDefault(); // this.setState({ alertDialogFlag: false });\n\n    if (isPasswordsSame(this.state.newPassword, this.state.confirmPassword)) {\n      changePassword(this.state.newPassword, this.state.confirmPassword).then(jsondata => {\n        // this.resetForm();\n        alertDialogOptions.message = /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"green\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 37\n          }\n        }, \"Password Changed Sucessfully\"); // this.setState({ alertDialogFlag: true });\n      });\n    } else {\n      alert(\"New and confirm password are not same\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.updatePassword,\n      method: \"post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      class: \"legend last\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, \"Reset Password\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      class: \"fa fa-key\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"newPassword\",\n      placeholder: \"New Password\",\n      name: \"newPassword\",\n      error: this.state.errors.newPasswordError == '' ? false : true,\n      maxlength: \"50\",\n      onChange: this.handleInputPassword.bind(this),\n      required: true,\n      helperText: this.state.errors.newPasswordError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      class: \"fa fa-key\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Confirm password\",\n      name: \"confirmPassword\",\n      error: this.state.errors.confirmPasswordError == '' ? false : true,\n      onChange: this.handleInputConfirmPassword.bind(this),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      class: \"btn submit last-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, \"Reset\")), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"bottom-text-w3ls\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"bottom-text-w3ls\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"fill_pad4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"fill_pad4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"fill_pad4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, \"\\xA0\")), this.state.alertDialogFlag && /*#__PURE__*/React.createElement(AlertDialog, {\n      message: alertDialogOptions.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 49\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/ResetPage.js"],"names":["React","Component","AlertDialog","isPasswordsSame","passwordStrength","isNotEmpty","login","resetForgetPassword","changePassword","alertDialogOptions","message","ResetPage","constructor","validate","name","value","errors","state","newPasswordError","confirmPasswordError","setState","newPassword","confirmPassword","handleInputPassword","event","target","handleInputConfirmPassword","console","log","updatePassword","preventDefault","then","jsondata","color","alert","render","bind","alertDialogFlag"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAASC,eAAT,EAAyBC,gBAAzB,EAA0CC,UAA1C,QAA2D,sBAA3D;AACA,SAAQC,KAAR,EAAcC,mBAAd,EAAkCC,cAAlC,QAAuD,eAAvD;AAEA,MAAMC,kBAAkB,GAAG;AACvBC,EAAAA,OAAO,EAAE;AADc,CAA3B;AAGA,eAAe,MAAMC,SAAN,SAAwBX,KAAK,CAACC,SAA9B,CAAuC;AAClDW,EAAAA,WAAW,GAAE;AACT;;AADS,SAUfC,QAVe,GAUJ,CAACC,IAAD,EAAMC,KAAN,KAAc;AACvB,UAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWD,MAAxB;;AACA,cAAQF,IAAR;AACE,aAAK,aAAL;AACAE,UAAAA,MAAM,CAACE,gBAAP,GAA0Bb,UAAU,CAACU,KAAD,CAApC;;AACE,cAAG,CAACV,UAAU,CAACU,KAAD,CAAd,EAAsB;AACpBC,YAAAA,MAAM,CAACE,gBAAP,GAAwBd,gBAAgB,CAACW,KAAD,CAAxC;AACA;;AACJ;;AACA,aAAK,iBAAL;AAAwBC,UAAAA,MAAM,CAACG,oBAAP,GAA+Bd,UAAU,CAACU,KAAD,CAAzC;AACtB;;AAEF;AACA;AAXF;;AAaF,WAAKK,QAAL,CAAc;AAACJ,QAAAA;AAAD,OAAd;AACD,KA1BgB;;AAET,SAAKC,KAAL,GAAW;AACPI,MAAAA,WAAW,EAAC,EADL;AAEPC,MAAAA,eAAe,EAAC,EAFT;AAGPN,MAAAA,MAAM,EAAC;AAACE,QAAAA,gBAAgB,EAAC,EAAlB;AAAqBC,QAAAA,oBAAoB,EAAC;AAA1C;AAHA,KAAX;AAKH,GARiD,CAUtD;;;AAmBII,EAAAA,mBAAmB,CAACC,KAAD,EAAO;AACtB,UAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,UAAMV,KAAK,GAAGU,MAAM,CAACV,KAArB;AACA,UAAMD,IAAI,GAAGW,MAAM,CAACX,IAApB;AACA,SAAKM,QAAL,CAAc;AAACN,MAAAA,IAAI,EAACC;AAAN,KAAd;AACA,SAAKF,QAAL,CAAcC,IAAd,EAAmBC,KAAnB;AACH;;AACDW,EAAAA,0BAA0B,CAACF,KAAD,EAAO;AAC7B,UAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,UAAMV,KAAK,GAAGU,MAAM,CAACV,KAArB;AACA,UAAMD,IAAI,GAAGW,MAAM,CAACX,IAApB;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACA,SAAKM,QAAL,CAAc;AAACN,MAAAA,IAAI,EAAEC;AAAP,KAAd;AACA,SAAKF,QAAL,CAAcC,IAAd,EAAmBC,KAAnB;AACH,GA3CiD,CA6ClD;;;AACAc,EAAAA,cAAc,CAACL,KAAD,EAAO;AACrBA,IAAAA,KAAK,CAACM,cAAN,GADqB,CAErB;;AACA,QAAI3B,eAAe,CAAC,KAAKc,KAAL,CAAWI,WAAZ,EAAyB,KAAKJ,KAAL,CAAWK,eAApC,CAAnB,EAAyE;AACpEd,MAAAA,cAAc,CAAC,KAAKS,KAAL,CAAWI,WAAZ,EAAyB,KAAKJ,KAAL,CAAWK,eAApC,CAAd,CAAmES,IAAnE,CAAyEC,QAAD,IAAc;AACvF;AACAvB,QAAAA,kBAAkB,CAACC,OAAnB,gBAA4B;AAAM,UAAA,KAAK,EAAE;AAACuB,YAAAA,KAAK,EAAC;AAAP,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAA5B,CAFuF,CAGvF;AACD,OAJE;AAKJ,KAND,MAOI;AACAC,MAAAA,KAAK,CAAC,uCAAD,CAAL;AACH;AAEA;;AACDC,EAAAA,MAAM,GAAE;AACJ,wBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACK;AAAM,MAAA,QAAQ,EAAE,KAAKN,cAArB;AAAqC,MAAA,MAAM,EAAC,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAI,MAAA,KAAK,EAAC,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADH,eAEG;AAAK,MAAA,KAAK,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,KAAK,EAAC,WAAZ;AAAwB,qBAAY,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAO,MAAA,IAAI,EAAC,aAAZ;AAA0B,MAAA,WAAW,EAAC,cAAtC;AAAqD,MAAA,IAAI,EAAC,aAA1D;AACA,MAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWD,MAAX,CAAkBE,gBAAlB,IAAoC,EAApC,GAAuC,KAAvC,GAA6C,IADpD;AAEA,MAAA,SAAS,EAAC,IAFV;AAEe,MAAA,QAAQ,EAAE,KAAKK,mBAAL,CAAyBa,IAAzB,CAA8B,IAA9B,CAFzB;AAE8D,MAAA,QAAQ,MAFtE;AAGA,MAAA,UAAU,EAAE,KAAKnB,KAAL,CAAWD,MAAX,CAAkBE,gBAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFH,eAWG;AAAK,MAAA,KAAK,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,KAAK,EAAC,WAAZ;AAAwB,qBAAY,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAyB,MAAA,WAAW,EAAC,kBAArC;AAAwD,MAAA,IAAI,EAAC,iBAA7D;AACA,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWD,MAAX,CAAkBG,oBAAlB,IAAwC,EAAxC,GAA2C,KAA3C,GAAiD,IADxD;AAEA,MAAA,QAAQ,EAAE,KAAKO,0BAAL,CAAgCU,IAAhC,CAAqC,IAArC,CAFV;AAEsD,MAAA,QAAQ,MAF9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAXH,eAoBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,qBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,CApBH,eAuBG;AAAK,MAAA,KAAK,EAAC,kBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBH,eAwBG;AAAK,MAAA,KAAK,EAAC,kBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBH,eA0BG;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BH,eA2BG;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BH,eA4BG;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BH,CADL,EAkCK,KAAKnB,KAAL,CAAWoB,eAAZ,iBAAgC,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAE5B,kBAAkB,CAACC,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlCpC,CAFJ;AAwCH;;AAtGiD","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport AlertDialog from './../util/AlertDialog';\r\nimport { isPasswordsSame,passwordStrength,isNotEmpty} from './../util/validation';\r\nimport {login,resetForgetPassword,changePassword} from './../util/api';\r\n\r\nconst alertDialogOptions = {\r\n    message: ''\r\n  }\r\nexport default class ResetPage extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            newPassword:'',\r\n            confirmPassword:'',\r\n            errors:{newPasswordError:'',confirmPasswordError:''},\r\n        }\r\n    } \r\n\r\n// validating password\r\n  validate = (name,value)=>{\r\n    let errors = this.state.errors;\r\n    switch (name) {\r\n      case 'newPassword': \r\n      errors.newPasswordError = isNotEmpty(value);\r\n        if(!isNotEmpty(value)){\r\n          errors.newPasswordError=passwordStrength(value);\r\n         }  \r\n      break;\r\n      case 'confirmPassword': errors.confirmPasswordError =  isNotEmpty(value);\r\n        break;\r\n   \r\n      default:\r\n      break;\r\n  }\r\n  this.setState({errors});\r\n}\r\n\r\n    handleInputPassword(event){\r\n        const target = event.target;\r\n        const value = target.value\r\n        const name = target.name\r\n        this.setState({name:value });\r\n        this.validate(name,value)\r\n    }  \r\n    handleInputConfirmPassword(event){\r\n        const target = event.target;\r\n        const value = target.value\r\n        const name = target.name\r\n        console.log(name)\r\n        this.setState({name: value });\r\n        this.validate(name,value)\r\n    }\r\n\r\n    // update password\r\n    updatePassword(event){\r\n    event.preventDefault();\r\n    // this.setState({ alertDialogFlag: false });\r\n    if (isPasswordsSame(this.state.newPassword, this.state.confirmPassword)) {\r\n         changePassword(this.state.newPassword, this.state.confirmPassword).then((jsondata) => {\r\n        // this.resetForm();\r\n        alertDialogOptions.message =<span style={{color:\"green\"}}>Password Changed Sucessfully</span>;\r\n        // this.setState({ alertDialogFlag: true });\r\n      });\r\n    }\r\n    else{\r\n        alert(\"New and confirm password are not same\")\r\n    }\r\n         \r\n    }\r\n    render(){\r\n        return(\r\n\r\n            <div>\r\n                 <form onSubmit={this.updatePassword} method=\"post\">\r\n                    <h3 class=\"legend last\">Reset Password</h3>\r\n                    <div class=\"input\">\r\n                        <span class=\"fa fa-key\" aria-hidden=\"true\"></span>\r\n                        <input type=\"newPassword\" placeholder=\"New Password\" name=\"newPassword\" \r\n                        error={this.state.errors.newPasswordError==''?false:true}\r\n                        maxlength=\"50\" onChange={this.handleInputPassword.bind(this)} required \r\n                        helperText={this.state.errors.newPasswordError}/>\r\n                        \r\n                    </div>\r\n                     \r\n                    <div class=\"input\">\r\n                        <span class=\"fa fa-key\" aria-hidden=\"true\"></span>\r\n                        <input type=\"password\"   placeholder=\"Confirm password\" name=\"confirmPassword\"  \r\n                        error={this.state.errors.confirmPasswordError==''?false:true}\r\n                        onChange={this.handleInputConfirmPassword.bind(this)} required \r\n                        \r\n                        />\r\n\r\n                    </div>\r\n                    <div>\r\n                    <button type=\"submit\" class=\"btn submit last-btn\">Reset</button>\r\n                    </div>\r\n                    <div class=\"bottom-text-w3ls\">&nbsp;</div>\r\n                    <div class=\"bottom-text-w3ls\">&nbsp;</div>\r\n                    \r\n                    <div class=\"fill_pad4\">&nbsp;</div>\r\n                    <div class=\"fill_pad4\">&nbsp;</div> \r\n                    <div class=\"fill_pad4\">&nbsp;</div> \r\n                    \r\n                </form>\r\n\r\n                {\r\n                (this.state.alertDialogFlag) && <AlertDialog message={alertDialogOptions.message}></AlertDialog>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}