{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\Documents.js\";\nimport React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { DropzoneArea } from 'material-ui-dropzone';\nimport { SingleSelect } from \"react-select-material-ui\";\nimport { TextField, Button, Grid } from '@material-ui/core';\nimport { deleteDocumentById, fetchUserDocumentsByEngagementIdAndTypeOfDocument, fetchUserDocumentsByUserIdAndTypeOfDocument, uploadDocument } from './../util/api';\nimport Paper from '@material-ui/core/Paper';\nimport { serviceEndPoint } from './../util/serviceEndPoint';\nimport UserContext from '../components/GolbalContext';\nimport AlertDialog from './../util/AlertDialog';\nimport { fileTypeFromFile } from 'file-type';\nconst alertDialogOptions = {\n  message: ''\n};\nexport default class Documents extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.downloadDocuments = value => {\n      let formData = new FormData();\n      formData.append('data', '{\"token\" : \"\", \"action\" : \"downloadDocument\", \"data\" : [{\"basicDocId\":' + value + '}]}');\n      fetch(serviceEndPoint.documentServiceEndPoint, {\n        method: 'post',\n        headers: {\n          'Authorization': 'Bearer ' + UserContext.token\n        },\n        body: formData\n      }).then(response => response.json()).then(jsondata => {\n        let jsonobjects = JSON.parse(jsondata.data);\n        var url = serviceEndPoint.downloadDocument + jsonobjects[0].documentPath + \"\";\n        window.open(url, \"_blank\");\n      });\n    };\n\n    this.onFileChangeHandler = files => {\n      this.loadMime(files, callback); // checking the MIME type of file\n      // var blob = files[0]; // See step 1 above\n      // console.log(blob.type)\n      // if(blob.type === \"application/pdf\" ||blob.type === \"image/jpeg\" || blob.type === \"image/jpg\"||blob.type ===\"image/png\" ||blob.type === \"image/svg+xml\" ){\n      //   this.setState({file: files[0]});\n      //   this.setState({errors : false})\n      // }\n      // else{\n      //   alert(\"Please upload valid file\")\n      //   this.setState({errors : true})\n      //   return; \n      // }\n      // this.setState({file: files[0]});\n      // console.log( fileTypeFromFile(file));\n    };\n\n    this.uploadDocuments = e => {\n      e.preventDefault();\n      var localThis = this;\n      this.state.documentType.map(function (documentType) {\n        localThis.uploadDocument(documentType);\n      });\n      this.setState({\n        documentNumber: ''\n      });\n      this.setState({\n        clearDropzoneArea: this.state.clearDropzoneArea + 1\n      }); // this.setState({typeOfDocument:null});\n\n      this.setState({\n        documentType: []\n      });\n    };\n\n    this.uploadDocument = documentType => {\n      //   e.preventDefault();\n      // var genericDocuments=[\"8thCertificate\",\"10thCertificate\",\"12thCertificate\",\"StudentPicture\",\"PostGraduation\",\"Graduation\"];\n      var levelOfDocument = \"G\"; // if(genericDocuments.includes(this.state.typeOfDocument)){levelOfDocument=\"G\";}\n\n      let localThis = this;\n      let reader = new FileReader();\n      reader.readAsDataURL(this.state.file);\n\n      reader.onload = function () {\n        let document = reader.result;\n        localThis.setState({\n          alertDialogFlag: false\n        });\n        uploadDocument(localThis.state.dbUserId, localThis.state.engagementId, documentType, levelOfDocument, localThis.state.typeOfDocument, document, localThis.state.documentNumber).then(jsondata => {\n          alertDialogOptions.message = /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: \"green\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 34\n            }\n          }, documentType, \" File uploaded successfully\");\n          localThis.setState({\n            alertDialogFlag: true\n          });\n          localThis.getDocuments();\n        }); // .then(res => {\n        //   if(res.ok) {\n        //     alertDialogOptions.message=<span style={{color:\"green\"}}>{documentType} File uploaded successfully</span>;\n        //     localThis.setState({alertDialogFlag:true});\n        //     localThis.getDocuments();\n        //     }\n        // });\n      };\n    };\n\n    this.deleteDocument = basicDocId => {\n      deleteDocumentById(basicDocId).then(jsondata => {\n        this.getDocuments();\n      });\n    };\n\n    this.state = {\n      errors: false,\n      typeOfProof: [],\n      typeOfDocument: null,\n      typeOfProofData: [{\n        value: 'AgeProof',\n        label: 'Age Proof'\n      }, {\n        value: 'ApplicationForm',\n        label: 'Application Form'\n      }, {\n        value: 'AddressProof',\n        label: 'Address Proof'\n      }, {\n        value: 'CasteCertificate',\n        label: 'Caste Certificate'\n      }, {\n        value: 'ContributionReceipt',\n        label: 'Contribution Receipt'\n      }, {\n        value: 'EducationProof',\n        label: 'Education Proof'\n      }, {\n        value: 'FirstDayPicture',\n        label: 'First Day Picture'\n      }, {\n        value: 'IdentificationProof',\n        label: 'Identification Proof'\n      }, {\n        value: 'IncomeProof',\n        label: 'Income Proof'\n      }, {\n        value: 'LastDayPicture',\n        label: 'Last Day Picture'\n      }, {\n        value: 'Loanconsent',\n        label: 'Loan Consent from Student'\n      }, {\n        value: 'Medicalfitnesscertificate',\n        label: 'Medical fitness certificate'\n      }, {\n        value: 'PhotoProof',\n        label: 'Photo Proof'\n      }, {\n        value: 'StudentPicture',\n        label: 'Student Picture'\n      }, {\n        value: 'Studentsigned',\n        label: 'Student signed'\n      }],\n      typeOfDocumentData: [{\n        value: '8thCertificate',\n        label: '8th Certificate'\n      }, {\n        value: '10thCertificate',\n        label: '10th Certificate'\n      }, {\n        value: '12thCertificate',\n        label: '12th Certificate'\n      }, {\n        value: 'AadharCard',\n        label: 'Aadhar Card'\n      }, {\n        value: 'ApplicationForm',\n        label: 'Application Form'\n      }, {\n        value: 'BankStatement',\n        label: 'Bank Statement'\n      }, {\n        value: 'BirthCertificate',\n        label: 'Birth Certificate'\n      }, {\n        value: 'BPLCard',\n        label: 'BPL Card'\n      }, {\n        value: 'CasteCertificate',\n        label: 'Caste certificate'\n      }, {\n        value: 'ContributionReceipt',\n        label: 'Contribution Receipt'\n      }, {\n        value: 'DrivingLicense',\n        label: 'Driving License'\n      }, {\n        value: 'DiplomaCertificate',\n        label: 'Diploma Certificate'\n      }, {\n        value: 'ElectricityBill',\n        label: 'Electricity Bill'\n      }, {\n        value: 'FatherAadharCard',\n        label: 'Father Aadhar Card'\n      }, {\n        value: 'FirstDayPicture',\n        label: 'First Day Picture'\n      }, {\n        value: 'Graduation',\n        label: 'Graduation'\n      }, {\n        value: 'gaurdianAadharcard',\n        label: 'Gaurdian Aadhar card'\n      }, {\n        value: 'incomeCertificate',\n        label: 'Income Certificate'\n      }, {\n        value: 'LastDayPicture',\n        label: 'Last Day Picture'\n      }, {\n        value: 'Loanconsent',\n        label: 'Loan Consent from Student'\n      }, {\n        value: 'MedicalFitnessCertificate',\n        label: 'Medical Fitness Certificate'\n      }, {\n        value: 'MotherAadharCard',\n        label: 'Mother Aadhar Card'\n      }, {\n        value: 'NaregaCard',\n        label: 'Narega Card'\n      }, {\n        value: 'PanCard',\n        label: 'Pan Card'\n      }, {\n        value: 'Passport',\n        label: 'Passport'\n      }, {\n        value: 'PostGraduation',\n        label: 'Post Graduation'\n      }, {\n        value: 'RationCard',\n        label: 'Ration Card'\n      }, {\n        value: 'salarycertificate',\n        label: 'Salary Certificate'\n      }, {\n        value: 'SalarySlip',\n        label: 'Salary Slip'\n      }, {\n        value: 'SpouseAadharCard',\n        label: 'Spouse Aadhar Card'\n      }, {\n        value: 'StudentSigned',\n        label: 'Student Signed'\n      }, {\n        value: 'StudentPicture',\n        label: 'Student Picture'\n      }, {\n        value: 'TelephoneBill',\n        label: 'Telephone Bill'\n      }, {\n        value: 'VoterId',\n        label: 'Voter Id'\n      }],\n      documents: [],\n      engagementId: 0,\n      documentNumber: 0,\n      file: null,\n      fileName: '',\n      alertDialogFlag: false,\n      dbUserId: '',\n      documentType: [],\n      clearDropzoneArea: 0\n    };\n\n    if (props.id != null && props.id != undefined) {\n      this.state.dbUserId = props.id;\n      this.state.engagementId = props.engagementId;\n    }\n\n    this.getDocuments();\n  }\n\n  getDocuments() {\n    fetchUserDocumentsByUserIdAndTypeOfDocument(this.state.dbUserId, 'G').then(jsondata => {\n      let jsonobjects = JSON.parse(jsondata.data); // this.setState({documents: [...this.state.documents,...jsonobjects]}) \n\n      this.setState({\n        documents: jsonobjects\n      });\n    });\n  }\n\n  // Checking mime type\n  loadMime(files, callback) {\n    //List of known mimes\n    var mimes = [{\n      mime: 'image/jpeg',\n      pattern: [0xFF, 0xD8, 0xFF],\n      mask: [0xFF, 0xFF, 0xFF]\n    }, {\n      mime: 'image/png',\n      pattern: [0x89, 0x50, 0x4E, 0x47],\n      mask: [0xFF, 0xFF, 0xFF, 0xFF]\n    } // you can expand this list @see https://mimesniff.spec.whatwg.org/#matching-an-image-type-pattern\n    ];\n\n    function check(bytes, mime) {\n      for (var i = 0, l = mime.mask.length; i < l; ++i) {\n        if ((bytes[i] & mime.mask[i]) - mime.pattern[i] !== 0) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    var blob = file.slice(0, 4); //read the first 4 bytes of the file\n\n    var reader = new FileReader();\n\n    reader.onloadend = function (e) {\n      if (e.target.readyState === FileReader.DONE) {\n        var bytes = new Uint8Array(e.target.result);\n\n        for (var i = 0, l = mimes.length; i < l; ++i) {\n          if (check(bytes, mimes[i])) return callback(\"Mime: \" + mimes[i].mime + \" <br> Browser:\" + files.type);\n        }\n\n        return callback(\"Mime: unknown <br> Browser:\" + files.type);\n      }\n    };\n\n    reader.readAsArrayBuffer(blob);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSelectChange(selectname, event) {\n    this.setState({\n      [selectname]: event\n    });\n  }\n\n  handleTypeOfProofSelectChange(selectname, event) {\n    let newVal = event;\n    let stateVal = this.state.documentType;\n    stateVal.indexOf(newVal) === -1 ? stateVal.push(newVal) : stateVal.length === 1 ? stateVal = [] : stateVal.splice(stateVal.indexOf(newVal), 1);\n    this.setState({\n      documentType: stateVal\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      \"aria-label\": \"simple table\",\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        width: \"15%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 13\n      }\n    }, \"Type of Document\"), /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        width: \"15%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 13\n      }\n    }, \"Type of Proof\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        width: \"15%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      isClearable: true,\n      name: \"typeOfDocument\",\n      id: \"typeOfDocument\",\n      options: this.state.typeOfDocumentData,\n      onChange: this.handleSelectChange.bind(this, 'typeOfDocument'),\n      value: this.state.typeOfDocument || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        width: \"15%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"typeOfProof\",\n      id: \"typeOfProof\",\n      options: this.state.typeOfProofData,\n      onChange: this.handleTypeOfProofSelectChange.bind(this, 'documentType'),\n      value: this.state.documentType || '',\n      SelectProps: {\n        multi: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DropzoneArea, {\n      name: \"file\",\n      id: \"file\",\n      meta: true,\n      maxFileSize: 2000000,\n      filesLimit: 1,\n      showFileNames: true,\n      onChange: this.onFileChangeHandler,\n      key: this.state.clearDropzoneArea,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 15\n      }\n    }, \"Note-: Document size should not be greater than 2mb.\"))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.uploadDocuments,\n      method: \"post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-end\",\n      alignItems: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"small\",\n      disabled: this.state.errors == true || this.state.file == null || this.state.typeOfDocument == '' || this.state.documentType == '' ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 14\n      }\n    }, \"Upload Document\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 1\n      }\n    }), this.state.documents != \"\" && /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      \"aria-label\": \"simple table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 11\n      }\n    }, \"Created On\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }\n    }, \"Document Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 11\n      }\n    }, \"File Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }\n    }, \"Download\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 11\n      }\n    }, \"Delete\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }\n    }, this.state.documents.map(row => /*#__PURE__*/React.createElement(TableRow, {\n      key: row.basicDocId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 15\n      }\n    }, row.createdOn), /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 15\n      }\n    }, row.documentName), /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 15\n      }\n    }, row.documentPath.split(\"/\")[1]), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"small\",\n      name: \"download\",\n      id: \"download\",\n      onClick: this.downloadDocuments.bind(this, row.basicDocId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 15\n      }\n    }, \"Download\")), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"small\",\n      name: \"delete\",\n      id: \"delete\",\n      onClick: this.deleteDocument.bind(this, row.basicDocId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 15\n      }\n    }, \"Delete\"))))))), this.state.alertDialogFlag && /*#__PURE__*/React.createElement(AlertDialog, {\n      message: alertDialogOptions.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 35\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/Documents.js"],"names":["React","Table","TableBody","TableCell","TableHead","TableRow","DropzoneArea","SingleSelect","TextField","Button","Grid","deleteDocumentById","fetchUserDocumentsByEngagementIdAndTypeOfDocument","fetchUserDocumentsByUserIdAndTypeOfDocument","uploadDocument","Paper","serviceEndPoint","UserContext","AlertDialog","fileTypeFromFile","alertDialogOptions","message","Documents","Component","constructor","props","downloadDocuments","value","formData","FormData","append","fetch","documentServiceEndPoint","method","headers","token","body","then","response","json","jsondata","jsonobjects","JSON","parse","data","url","downloadDocument","documentPath","window","open","onFileChangeHandler","files","loadMime","callback","uploadDocuments","e","preventDefault","localThis","state","documentType","map","setState","documentNumber","clearDropzoneArea","levelOfDocument","reader","FileReader","readAsDataURL","file","onload","document","result","alertDialogFlag","dbUserId","engagementId","typeOfDocument","color","getDocuments","deleteDocument","basicDocId","errors","typeOfProof","typeOfProofData","label","typeOfDocumentData","documents","fileName","id","undefined","mimes","mime","pattern","mask","check","bytes","i","l","length","blob","slice","onloadend","target","readyState","DONE","Uint8Array","type","readAsArrayBuffer","handleInputChange","event","name","handleSelectChange","selectname","handleTypeOfProofSelectChange","newVal","stateVal","indexOf","push","splice","render","width","bind","multi","row","createdOn","documentName","split"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {DropzoneArea} from 'material-ui-dropzone';\r\nimport { SingleSelect } from \"react-select-material-ui\";\r\nimport {TextField,Button,Grid}  from '@material-ui/core';\r\nimport {deleteDocumentById,fetchUserDocumentsByEngagementIdAndTypeOfDocument,fetchUserDocumentsByUserIdAndTypeOfDocument,\r\n  uploadDocument} from './../util/api';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { serviceEndPoint } from './../util/serviceEndPoint';\r\nimport UserContext from '../components/GolbalContext'\r\nimport AlertDialog from './../util/AlertDialog';\r\nimport {fileTypeFromFile} from 'file-type';\r\nconst alertDialogOptions = {\r\n  message: ''\r\n}\r\n\r\nexport default class Documents extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n         errors:false,\r\n          typeOfProof:[],typeOfDocument:null,\r\n        typeOfProofData:[ \r\n        { value: 'AgeProof', label: 'Age Proof' },\r\n        { value: 'ApplicationForm', label: 'Application Form' },\r\n\t\t{ value: 'AddressProof', label: 'Address Proof' },\r\n        { value: 'CasteCertificate', label: 'Caste Certificate' },\r\n        { value: 'ContributionReceipt', label: 'Contribution Receipt' },\r\n        { value: 'EducationProof', label: 'Education Proof' },\r\n\t\t{ value: 'FirstDayPicture', label: 'First Day Picture' },\r\n\t\t{ value: 'IdentificationProof', label: 'Identification Proof' },\r\n\t\t{ value: 'IncomeProof', label: 'Income Proof' },\r\n        { value: 'LastDayPicture', label: 'Last Day Picture' },\r\n\t\t{ value: 'Loanconsent', label: 'Loan Consent from Student' },\r\n        { value: 'Medicalfitnesscertificate', label: 'Medical fitness certificate' },\r\n        { value: 'PhotoProof', label: 'Photo Proof' },\r\n        { value: 'StudentPicture', label: 'Student Picture' },\r\n        { value: 'Studentsigned', label: 'Student signed' }\r\n\r\n      ],\r\n      typeOfDocumentData:[ \r\n        { value: '8thCertificate', label: '8th Certificate' },\r\n        { value: '10thCertificate', label: '10th Certificate' },\r\n        { value: '12thCertificate', label: '12th Certificate' },\r\n        { value: 'AadharCard', label: 'Aadhar Card' },\r\n        { value: 'ApplicationForm', label: 'Application Form' },\r\n        { value: 'BankStatement', label: 'Bank Statement' },\r\n        { value: 'BirthCertificate', label: 'Birth Certificate' },\r\n        { value: 'BPLCard', label: 'BPL Card' },\r\n        { value: 'CasteCertificate', label: 'Caste certificate' },\r\n        { value: 'ContributionReceipt', label: 'Contribution Receipt' },\r\n        { value: 'DrivingLicense', label: 'Driving License' },\r\n        { value: 'DiplomaCertificate', label: 'Diploma Certificate' },\r\n\t\t{ value: 'ElectricityBill', label: 'Electricity Bill' },\r\n        { value: 'FatherAadharCard', label: 'Father Aadhar Card' },\r\n        { value: 'FirstDayPicture', label: 'First Day Picture' },\r\n        { value: 'Graduation', label: 'Graduation' },\r\n\t\t{ value: 'gaurdianAadharcard', label: 'Gaurdian Aadhar card' },\r\n\t\t{ value: 'incomeCertificate', label: 'Income Certificate' },\r\n        { value: 'LastDayPicture', label: 'Last Day Picture' },\r\n\t\t{ value: 'Loanconsent', label: 'Loan Consent from Student' },\r\n        { value: 'MedicalFitnessCertificate', label: 'Medical Fitness Certificate' },\r\n        { value: 'MotherAadharCard', label: 'Mother Aadhar Card' },\r\n        { value: 'NaregaCard', label: 'Narega Card' },\r\n        { value: 'PanCard', label: 'Pan Card' },\r\n        { value: 'Passport', label: 'Passport' },\r\n        { value: 'PostGraduation', label: 'Post Graduation' },\r\n        { value: 'RationCard', label: 'Ration Card' },\r\n\t\t{ value: 'salarycertificate', label: 'Salary Certificate' },\r\n        { value: 'SalarySlip', label: 'Salary Slip' },\r\n        { value: 'SpouseAadharCard', label: 'Spouse Aadhar Card' },\r\n        { value: 'StudentSigned', label: 'Student Signed' },\r\n        { value: 'StudentPicture', label: 'Student Picture' },\r\n\t\t{ value: 'TelephoneBill', label: 'Telephone Bill' },\r\n        { value: 'VoterId', label: 'Voter Id' }   \r\n      ],\r\n       documents:[], engagementId : 0,documentNumber:0,file:null,fileName:'',alertDialogFlag:false,\r\n       dbUserId:'',documentType:[],clearDropzoneArea:0};\r\n\r\n\r\n       \r\nif(props.id != null && props.id != undefined)\r\n{\r\n  this.state.dbUserId=props.id;\r\n   this.state.engagementId=props.engagementId;\r\n}\r\n\r\nthis.getDocuments();\r\n\r\n}\r\n\r\n\r\ngetDocuments(){\r\n\r\nfetchUserDocumentsByUserIdAndTypeOfDocument(this.state.dbUserId,'G').then((jsondata) => {   \r\nlet jsonobjects = JSON.parse(jsondata.data);          \r\n// this.setState({documents: [...this.state.documents,...jsonobjects]}) \r\nthis.setState({documents:jsonobjects});    \r\n});\r\n\r\n}\r\n\r\n    \r\n    downloadDocuments = (value) => \r\n    {\r\n    let formData = new FormData();\r\n      formData.append('data', '{\"token\" : \"\", \"action\" : \"downloadDocument\", \"data\" : [{\"basicDocId\":'+value+'}]}');\r\n      fetch(serviceEndPoint.documentServiceEndPoint, {\r\n          method: 'post',\r\n          headers: {\r\n            'Authorization': 'Bearer '+UserContext.token\r\n        }, \r\n          body: formData\r\n      }).then(response => response.json()).then((jsondata)=>{\r\n        let jsonobjects = JSON.parse(jsondata.data);\r\n        var url=serviceEndPoint.downloadDocument+jsonobjects[0].documentPath+\"\"; \r\n        window.open(url, \"_blank\");\r\n       \r\n    \r\n      });\r\n      }\r\n\r\n      // Checking mime type\r\n loadMime(files, callback) {\r\n    \r\n        //List of known mimes\r\n        var mimes = [\r\n            {\r\n                mime: 'image/jpeg',\r\n                pattern: [0xFF, 0xD8, 0xFF],\r\n                mask: [0xFF, 0xFF, 0xFF],\r\n            },\r\n            {\r\n                mime: 'image/png',\r\n                pattern: [0x89, 0x50, 0x4E, 0x47],\r\n                mask: [0xFF, 0xFF, 0xFF, 0xFF],\r\n            }\r\n            // you can expand this list @see https://mimesniff.spec.whatwg.org/#matching-an-image-type-pattern\r\n        ];\r\n    \r\n        function check(bytes, mime) {\r\n            for (var i = 0, l = mime.mask.length; i < l; ++i) {\r\n                if ((bytes[i] & mime.mask[i]) - mime.pattern[i] !== 0) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n    \r\n        var blob = file.slice(0, 4); //read the first 4 bytes of the file\r\n    \r\n        var reader = new FileReader();\r\n        reader.onloadend = function(e) {\r\n            if (e.target.readyState === FileReader.DONE) {\r\n                var bytes = new Uint8Array(e.target.result);\r\n    \r\n                for (var i=0, l = mimes.length; i<l; ++i) {\r\n                    if (check(bytes, mimes[i])) return callback(\"Mime: \" + mimes[i].mime + \" <br> Browser:\" + files.type);\r\n                }\r\n    \r\n                return callback(\"Mime: unknown <br> Browser:\" + files.type);\r\n            }\r\n        };\r\n        reader.readAsArrayBuffer(blob);\r\n    }\r\n    \r\n  onFileChangeHandler = ( files) => {\r\n    this.loadMime(files,callback)\r\n    // checking the MIME type of file\r\n    // var blob = files[0]; // See step 1 above\r\n    // console.log(blob.type)\r\n    // if(blob.type === \"application/pdf\" ||blob.type === \"image/jpeg\" || blob.type === \"image/jpg\"||blob.type ===\"image/png\" ||blob.type === \"image/svg+xml\" ){\r\n    //   this.setState({file: files[0]});\r\n    //   this.setState({errors : false})\r\n    // }\r\n    // else{\r\n    //   alert(\"Please upload valid file\")\r\n    //   this.setState({errors : true})\r\n    //   return; \r\n    // }\r\n    // this.setState({file: files[0]});\r\n    // console.log( fileTypeFromFile(file));\r\n  }\r\n\r\n  uploadDocuments = (e) => {\r\n    e.preventDefault();\r\n    var localThis=this;\r\n   this.state.documentType.map(function(documentType){\r\n    localThis.uploadDocument(documentType);\r\n  });\r\n\r\n  this.setState({documentNumber:''});\r\n  this.setState({clearDropzoneArea: this.state.clearDropzoneArea + 1});\r\n // this.setState({typeOfDocument:null});\r\n  this.setState({ documentType:[]});\r\n    \r\n  }\r\n\r\n  uploadDocument = (documentType) => {\r\n //   e.preventDefault();\r\n// var genericDocuments=[\"8thCertificate\",\"10thCertificate\",\"12thCertificate\",\"StudentPicture\",\"PostGraduation\",\"Graduation\"];\r\nvar levelOfDocument=\"G\";\r\n// if(genericDocuments.includes(this.state.typeOfDocument)){levelOfDocument=\"G\";}\r\n\r\n\r\nlet localThis=this;\r\n\r\nlet reader = new FileReader();\r\nreader.readAsDataURL(this.state.file);\r\nreader.onload = function () {\r\nlet  document = reader.result;\r\n\r\nlocalThis.setState({alertDialogFlag:false});\r\nuploadDocument(localThis.state.dbUserId,localThis.state.engagementId,documentType,levelOfDocument,localThis.state.typeOfDocument,document,localThis.state.documentNumber)\r\n.then((jsondata) => {\r\n      alertDialogOptions.message=<span style={{color:\"green\"}}>{documentType} File uploaded successfully</span>;\r\n      localThis.setState({alertDialogFlag:true});\r\n      localThis.getDocuments();\r\n   })\r\n  // .then(res => {\r\n  //   if(res.ok) {\r\n  //     alertDialogOptions.message=<span style={{color:\"green\"}}>{documentType} File uploaded successfully</span>;\r\n  //     localThis.setState({alertDialogFlag:true});\r\n  //     localThis.getDocuments();\r\n  //     }\r\n  // });\r\n}\r\n  }\r\n\r\n  \r\n  handleInputChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    this.setState({[name]: value});\r\n   \r\n  }\r\n\r\n  handleSelectChange(selectname, event) {\r\n   this.setState({[selectname]: event}); \r\n  }\r\n\r\n\r\n  handleTypeOfProofSelectChange(selectname, event) {\r\n\r\n    let newVal = event;\r\n    let stateVal = this.state.documentType;\r\n\r\n    stateVal.indexOf(newVal) === -1\r\n      ? stateVal.push(newVal)\r\n      : stateVal.length === 1\r\n        ? (stateVal = [])\r\n        : stateVal.splice(stateVal.indexOf(newVal), 1)\r\n\r\n        this.setState({ documentType: stateVal });\r\n       \r\n   }\r\n \r\n  \r\n  deleteDocument = (basicDocId) => {\r\n  deleteDocumentById(basicDocId).then((jsondata) => {\r\n    this.getDocuments();\r\n });\r\n  \r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n\r\n<Table  aria-label=\"simple table\" style={{ width:\"100%\"}}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell style={{ width:\"15%\"}}>Type of Document</TableCell>\r\n            <TableCell style={{ width:\"15%\"}}>Type of Proof</TableCell>\r\n            {/* <TableCell style={{ width:\"15%\"}}>Browse and Upload</TableCell> */}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n            <TableRow >               \r\n            <TableCell  style={{ width:\"15%\"}}>  \r\n          \r\n            <SingleSelect  isClearable={true} \r\n               name=\"typeOfDocument\" id=\"typeOfDocument\"\r\n              options={this.state.typeOfDocumentData}\r\n              onChange={this.handleSelectChange.bind(this, 'typeOfDocument')}\r\n              value={this.state.typeOfDocument || ''}\r\n            />          \r\n            </TableCell>\r\n            <TableCell  style={{ width:\"15%\"}}>   \r\n            <SingleSelect  \r\n              name=\"typeOfProof\" id=\"typeOfProof\"\r\n              options={this.state.typeOfProofData}\r\n              onChange={this.handleTypeOfProofSelectChange.bind(this, 'documentType')}\r\n              value={this.state.documentType || ''}\r\n              SelectProps={{\r\n              multi:true\r\n              }}\r\n            \r\n            />\r\n            </TableCell>\r\n            {/* <TableCell >  \r\n            <TextField   type=\"text\" name=\"documentNumber\" id=\"documentNumber\"\r\n            label = \"Document Number\" onChange={this.handleInputChange.bind(this)}\r\n            value={this.state.documentNumber || ''}\r\n\r\n             />\r\n     \r\n            </TableCell> */}\r\n            </TableRow>            \r\n            <TableRow>\r\n            <TableCell>   \r\n            <DropzoneArea  \r\n              name=\"file\" id=\"file\"\r\n              meta\r\n              maxFileSize={2000000} filesLimit={1} showFileNames={true} \r\n              onChange={this.onFileChangeHandler}\r\n              key={this.state.clearDropzoneArea}\r\n              />\r\n              <p  style={{color:\"red\"}}>Note-: Document size should not be greater than 2mb.</p>\r\n            </TableCell>\r\n            </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n<br/>\r\n\r\n      <form onSubmit={this.uploadDocuments} method=\"post\">\r\n      <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"flex-end\">\r\n             <Button type=\"submit\" variant=\"contained\" color=\"primary\" size=\"small\" \r\n                    disabled={this.state.errors== true || this.state.file==null || this.state.typeOfDocument=='' || this.state.documentType==''?true:false}\r\n             >Upload Document</Button>\r\n             </Grid>\r\n\r\n</form>\r\n<br/>\r\n\r\n      { \r\n  (this.state.documents!=\"\") &&\r\n\r\n<Paper>\r\n      <Table  aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n          <TableCell>Created On</TableCell>\r\n          <TableCell>Document Name</TableCell>\r\n          <TableCell>File Name</TableCell>\r\n          <TableCell >Download</TableCell>\r\n          <TableCell >Delete</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {this.state.documents.map(row => (\r\n            <TableRow key={row.basicDocId}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n          \r\n                {row.createdOn}\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.documentName}\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.documentPath.split(\"/\")[1]}\r\n              </TableCell>\r\n            <TableCell >                 \r\n              <Button variant=\"contained\" color=\"primary\" size=\"small\" name=\"download\" id=\"download\" \r\n             \r\n               onClick={this.downloadDocuments.bind(this,row.basicDocId)}\r\n              >Download</Button>\r\n            </TableCell>            \r\n\r\n            <TableCell >                 \r\n              <Button variant=\"contained\" color=\"primary\" size=\"small\" name=\"delete\" id=\"delete\" \r\n               onClick={this.deleteDocument.bind(this,row.basicDocId)}\r\n              >Delete</Button>\r\n            </TableCell>            \r\n\r\n\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n\r\n\r\n          }\r\n                   { \r\n  (this.state.alertDialogFlag) && <AlertDialog   message={alertDialogOptions.message}></AlertDialog>\r\n    }\r\n \r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}