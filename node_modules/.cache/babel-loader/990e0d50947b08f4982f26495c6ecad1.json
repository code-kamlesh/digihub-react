{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\Observationdetails.js\";\nimport React, { Component } from 'react';\nimport './../App.css';\nimport './../assets/css/login-style.css';\nimport './../assets/css/font-awesome.min.css';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { FormControlLabel, RadioGroup, Radio } from '@material-ui/core';\nimport UserContext from '../components/GolbalContext';\nimport MUIDataTable from \"mui-datatables\";\nimport { fectUserDetails, fetchUsersByCenterId, fetchUserDetailsById, saveObservationDetails, fetchObservationdetails, findAllObservationdetails } from './../util/api';\n\nclass ObservationDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = idx => e => {\n      this.setState({\n        \"disabled\": false\n      });\n      const rows = [...this.state.rows];\n      const question = document.getElementById(idx).getAttribute(\"value\");\n      const {\n        name,\n        value\n      } = e.target;\n      rows[idx] = {};\n      rows[idx][name] = value;\n      rows[idx]['parameter'] = question;\n      rows[idx]['dbUserId'] = this.state.dbUserId;\n      rows[idx]['createdBy'] = UserContext.userid;\n      rows[idx]['createdOn'] = UserContext.createdOn;\n      rows[idx]['engagementId'] = this.state.engagementId;\n      rows[idx]['firstName'] = this.state.firstName;\n      this.setState({\n        rows\n      }); //  alert(JSON.stringify(this.state.rows));\n    };\n\n    this.mySubmitHandler = event => {\n      event.preventDefault();\n\n      if (this.mydata.observationssData.length == this.state.rows.length) {\n        this.submitObservationDetails();\n      } else {\n        alert(\"Please provide value for all observation parameters.\");\n      }\n\n      this.state.disabled = true; //document.getElementById(\"observation-form\").reset();\n      // this.refs[\"user-form\"].form.reset()\n    };\n\n    this.state = {\n      disabled: false,\n      count: 0,\n      rows: [],\n      dbUserId: props.id,\n      firstName: props.name,\n      engagementId: props.engagementId,\n      observationData: [{\n        createdBy: UserContext.userid,\n        createdOn: UserContext.createdOn,\n        dbUserId: UserContext.dbUserId\n      }]\n    }; // alert(this.state.createdOn);\n\n    this.mydata = {\n      observationssData: [],\n      users: []\n    };\n    this.handleInputChange = this.handleInputChange.bind(this); // this.getUserDetails = this.getUserDetails.bind(this);\n\n    this.getObservationMasters();\n    this.fetchObservationDetails();\n    this.fetchUserDetailsByCenterId();\n  }\n\n  submitObservationDetails() {\n    // alert(\"submit observtn\");\n    let formData = new FormData();\n    let action = \"\";\n    const dbUserId = this.state.dbUserId == '' || this.state.dbUserId == null;\n\n    if (dbUserId) {\n      action = \"captureObservations\";\n    } else {\n      action = \"captureObservations\";\n    } // alert(action);\n    //  formData.append('data','{\"token\" : \"'+ \"1234\" +'\", \"action\" : \"'+  action +'\", \"data\" : ' + JSON.stringify(this.state.rows) + '}');\n    //  return fetch(\"http://playground.tatastrive.com/sservices-v1/observationservice\", {\n    //  method: \"POST\",\n    //  body: formData \n    //  }).\n\n\n    saveObservationDetails(action, this.state.rows).then(jsondata => {\n      console.log(jsondata); // alert(jsondata);\n\n      if (jsondata.appError == null) {\n        let jsonobjects = JSON.parse(jsondata.data);\n        console.log(jsonobjects);\n\n        if (action == 'captureObservations') {\n          alert(\"Observation Details Saved Successfully\");\n        }\n\n        this.fetchObservationDetails();\n        this.props.history.push({\n          pathname: '/dashboard/updatebeneficiary',\n          state: {\n            dbUserId: jsonobjects[0].dbUserId,\n            engagementId: this.state.engagementId,\n            status: this.props.status,\n            tab: 6\n          }\n        }); //  this.props.history.push({\n        //    pathname: '/dashboard/updatebeneficiary',\n        //     state: {  tab : 7 }\n        //   });\n        //  else \n        //  {\n        //    alert(\"Successfully Updated\");\n        //  }\n        // // alert( this.state.rows.length);\n        //  this.setState({\n        //    count :  this.state.rows.values.reset\n        //   });\n        // this.props.history.push({\n        //   pathname: '/dashboard/updatebeneficiary',\n        //   state: { dbUserId: jsonobjects[0].dbUserId, engagementId : this.state.engagementId,status:this.props.status ,  tab : 5 }\n        // });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  }\n\n  fetchUserDetailsByCenterId() {\n    fetchUsersByCenterId(UserContext.centerId).then(jsondata => {\n      let dbUserId = [];\n      let userCenterRoleMap = JSON.parse(jsondata.data);\n      userCenterRoleMap.map(item => {\n        dbUserId.push({\n          id: item.userId\n        });\n      });\n      fetchUserDetailsById(JSON.stringify(dbUserId)).then(jsondata => {\n        let userDetails = JSON.parse(jsondata.data);\n\n        for (var i = 0; i < userDetails.length; i++) {\n          let user = userDetails[i];\n          this.mydata.users.push({\n            label: user.firstName + \" \" + user.lastName,\n            value: user.id\n          }); //alert(JSON.stringify(this.myData.users)) ;\n        }\n      });\n    });\n  }\n\n  getObservationMasters() {\n    // let formData = new FormData();\n    // formData.append('data','{\"token\" : \"'+ \"1234\" +'\", \"action\" : \"findall\" , \"data\" : [{}]}');\n    // fetch(\"http://playground.tatastrive.com/services-v1/observationservice\", {\n    //     method: \"POST\",\n    //     body: formData \n    //     }).then(response => response.json())\n    findAllObservationdetails().then(jsondata => {\n      console.log(jsondata); // alert(jsondata);\n      //aler(\"check\");\n\n      if (jsondata.appError == null) {\n        let jsonobjects = JSON.parse(jsondata.data);\n        jsonobjects.map(item => {\n          this.mydata.observationssData.push({\n            label: item.name,\n            value: item.id\n          });\n        });\n        this.setState({\n          mydata: jsonobjects\n        });\n      }\n\n      return true;\n    }).then(response => response);\n  }\n\n  fetchObservationDetails() {\n    let observationInfo = [];\n    let requestFormData = new FormData(); // requestFormData.append('data', '{\"token\" : \"\", \"action\" : \"viewAllObservationsForUser\", \"data\" : [{\"engagementId\":'+this.state.engagementId+'}]}');\n    // fetch(\"http://playground.tatastrive.com/sservices-v1/observationservice\",{\n    // method: \"POST\",\n    // body: requestFormData, \n    // })\n\n    fetchObservationdetails(this.state.engagementId).then(jsondata => {\n      console.log(jsondata.data);\n      let observationDetails = JSON.parse(jsondata.data); // alert(JSON.stringify(observationDetails));\n\n      for (let i = 0; i < observationDetails.length; i++) {\n        let name = \"\";\n        fectUserDetails(observationDetails[i].createdBy).then(jsondata => {\n          name = JSON.parse(jsondata.data)[0].firstName + \" \" + JSON.parse(jsondata.data)[0].lastName;\n          var details = {\n            'engagement_id': observationDetails[i].engagementId,\n            'first_name': name,\n            'created_on': observationDetails[i].createdOn\n          };\n          observationInfo.push(details);\n          this.setState({\n            info: observationInfo\n          });\n        });\n      }\n    });\n  }\n\n  render() {\n    const columns = [{\n      label: 'Engagement Id',\n      name: 'engagement_id',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Created On',\n      name: 'created_on',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Name',\n      name: 'first_name',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }];\n    const options = {\n      filterType: \"dropdown\",\n      responsive: \"scroll\",\n      selectableRows: false,\n      sortDirection: \"desc\"\n    };\n    const dbUserId = this.state.dbUserId == '' || this.state.dbUserId == null;\n    let button;\n\n    if (dbUserId) {\n      button = /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        type: \"submit\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 16\n        }\n      }, \"Save\");\n    } else {\n      button = /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 14\n        }\n      }, \"Save\");\n    }\n\n    if (UserContext.roleid != 3) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.mySubmitHandler,\n        method: \"post\",\n        id: \"observation-form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        \"aria-label\": \"simple table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TableHead, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        width: \"60%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 17\n        }\n      }, \"Observation Parameter\"), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 17\n        }\n      }, \"Observation Value\"))), /*#__PURE__*/React.createElement(TableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }\n      }, this.mydata.observationssData.map((row, idx) => /*#__PURE__*/React.createElement(TableRow, {\n        key: row.value,\n        name: \"parameter\",\n        required: true,\n        id: \"parameter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        id: idx,\n        name: \"parameter\",\n        value: row.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 19\n        }\n      }, row.label), /*#__PURE__*/React.createElement(TableCell, {\n        align: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(RadioGroup, {\n        row: true,\n        \"aria-label\": \"observationValue\",\n        name: \"observationValue\",\n        id: \"observationValue\",\n        required: true,\n        onChange: this.handleInputChange(idx),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(FormControlLabel, {\n        value: \"Yes\",\n        control: /*#__PURE__*/React.createElement(Radio, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 55\n          }\n        }),\n        label: \"Yes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(FormControlLabel, {\n        value: \"NO\",\n        control: /*#__PURE__*/React.createElement(Radio, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 53\n          }\n        }),\n        label: \"No\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(FormControlLabel, {\n        value: \"Sometimes\",\n        control: /*#__PURE__*/React.createElement(Radio, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 61\n          }\n        }),\n        label: \"Sometimes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 15\n        }\n      })))))))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }\n      }), button, /*#__PURE__*/React.createElement(MUIDataTable, {\n        label: \"List of Observation\",\n        data: this.state.info,\n        columns: columns,\n        options: options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }\n      })));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(MUIDataTable, {\n        label: \"List of Observation\",\n        data: this.state.info,\n        columns: columns,\n        options: options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }\n      }));\n    }\n  }\n\n}\n\nexport default ObservationDetails;","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/Observationdetails.js"],"names":["React","Component","Table","TableBody","TableCell","TableHead","TableRow","Paper","Button","FormControlLabel","RadioGroup","Radio","UserContext","MUIDataTable","fectUserDetails","fetchUsersByCenterId","fetchUserDetailsById","saveObservationDetails","fetchObservationdetails","findAllObservationdetails","ObservationDetails","constructor","props","handleInputChange","idx","e","setState","rows","state","question","document","getElementById","getAttribute","name","value","target","dbUserId","userid","createdOn","engagementId","firstName","mySubmitHandler","event","preventDefault","mydata","observationssData","length","submitObservationDetails","alert","disabled","count","id","observationData","createdBy","users","bind","getObservationMasters","fetchObservationDetails","fetchUserDetailsByCenterId","formData","FormData","action","then","jsondata","console","log","appError","jsonobjects","JSON","parse","data","history","push","pathname","status","tab","centerId","userCenterRoleMap","map","item","userId","stringify","userDetails","i","user","label","lastName","response","observationInfo","requestFormData","observationDetails","details","info","render","columns","headerStyle","color","options","filterType","responsive","selectableRows","sortDirection","button","roleid","width","row"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport './../App.css';\r\nimport './../assets/css/login-style.css'\r\nimport './../assets/css/font-awesome.min.css'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport { FormControlLabel , RadioGroup, Radio}  from '@material-ui/core';\r\nimport UserContext from '../components/GolbalContext'\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { fectUserDetails, fetchUsersByCenterId, fetchUserDetailsById,saveObservationDetails,fetchObservationdetails,\r\n  findAllObservationdetails } from './../util/api';\r\n\r\n\r\nclass ObservationDetails extends Component\r\n{\r\n    constructor(props) {\r\n       super(props);\r\n       this.state = {disabled : false, count : 0 , rows : [] , dbUserId : props.id ,  firstName : props.name,  engagementId : props.engagementId,observationData:[{createdBy : UserContext.userid, createdOn:UserContext.createdOn, dbUserId:UserContext.dbUserId\r\n       }]};\r\n     // alert(this.state.createdOn);\r\n        this.mydata = {observationssData:[],\r\n          users:[]\r\n         };\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n       // this.getUserDetails = this.getUserDetails.bind(this);\r\n         this.getObservationMasters();\r\n        this.fetchObservationDetails();\r\n        this.fetchUserDetailsByCenterId();\r\n    }\r\n    handleInputChange = idx => e => {\r\n      this.setState({\r\n        \"disabled\" : false\r\n      });\r\n      const rows = [...this.state.rows];\r\n      const question = document.getElementById(idx).getAttribute(\"value\");\r\n      const { name, value } = e.target;\r\n      rows[idx] = {};\r\n      rows[idx] [name]= value;\r\n      rows[idx]['parameter'] = question;\r\n      rows[idx]['dbUserId'] = this.state.dbUserId;\r\n      rows[idx]['createdBy'] = UserContext.userid;\r\n      rows[idx]['createdOn'] = UserContext.createdOn;\r\n      rows[idx]['engagementId'] = this.state.engagementId;\r\n      rows[idx]['firstName'] = this.state.firstName;\r\n      this.setState({\r\n        rows\r\n      });\r\n      \r\n    //  alert(JSON.stringify(this.state.rows));\r\n    };\r\n\r\n    mySubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        if(this.mydata.observationssData.length == this.state.rows.length)\r\n        {\r\n          this.submitObservationDetails();\r\n        }\r\n        else\r\n        {\r\n          alert(\"Please provide value for all observation parameters.\")\r\n        }\r\n        this.state.disabled = true;\r\n        //document.getElementById(\"observation-form\").reset();\r\n       // this.refs[\"user-form\"].form.reset()\r\n    }\r\n   \r\n\r\n    submitObservationDetails()\r\n{\r\n // alert(\"submit observtn\");\r\n let formData = new FormData();\r\n let action = \"\";\r\n const dbUserId = (this.state.dbUserId == '' || this.state.dbUserId == null);\r\n   if (dbUserId) {\r\n     action =  \"captureObservations\";\r\n   } else {\r\n     action =  \"captureObservations\";\r\n   }\r\n  // alert(action);\r\n \r\n   //  formData.append('data','{\"token\" : \"'+ \"1234\" +'\", \"action\" : \"'+  action +'\", \"data\" : ' + JSON.stringify(this.state.rows) + '}');\r\n \r\n    //  return fetch(\"http://playground.tatastrive.com/sservices-v1/observationservice\", {\r\n    //  method: \"POST\",\r\n    //  body: formData \r\n    //  }).\r\n    saveObservationDetails(action,this.state.rows).then((jsondata)=>{\r\n         console.log(jsondata); \r\n        // alert(jsondata);\r\n         if(jsondata.appError==null){      \r\n             let jsonobjects = JSON.parse(jsondata.data);\r\n             console.log(jsonobjects); \r\n           \r\n             if(action == 'captureObservations')\r\n             {\r\n           \r\n             alert(\"Observation Details Saved Successfully\");\r\n\r\n             }\r\n            this.fetchObservationDetails();\r\n\r\n             this.props.history.push({\r\n                pathname: '/dashboard/updatebeneficiary',\r\n                 state: { dbUserId: jsonobjects[0].dbUserId, engagementId : this.state.engagementId,status:this.props.status ,  tab : 6 }\r\n               });\r\n            //  this.props.history.push({\r\n            //    pathname: '/dashboard/updatebeneficiary',\r\n            //     state: {  tab : 7 }\r\n            //   });\r\n            \r\n           \r\n\r\n            //  else \r\n            //  {\r\n              \r\n            //    alert(\"Successfully Updated\");\r\n            //  }\r\n            // // alert( this.state.rows.length);\r\n            //  this.setState({\r\n            //    count :  this.state.rows.values.reset\r\n            //   });\r\n\r\n              // this.props.history.push({\r\n              //   pathname: '/dashboard/updatebeneficiary',\r\n              //   state: { dbUserId: jsonobjects[0].dbUserId, engagementId : this.state.engagementId,status:this.props.status ,  tab : 5 }\r\n              // });\r\n           \r\n            \r\n\r\n         }  else{\r\n             console.log(\"error\");\r\n         } \r\n      })\r\n      \r\n \r\n}\r\n\r\nfetchUserDetailsByCenterId() {\r\n\r\n\r\n  fetchUsersByCenterId(UserContext.centerId).then((jsondata) => {\r\n    let dbUserId = [];\r\n  let userCenterRoleMap = JSON.parse(jsondata.data);\r\n  userCenterRoleMap.map(item => {dbUserId.push({ id: item.userId })  });\r\n  \r\n  fetchUserDetailsById(JSON.stringify(dbUserId)).then((jsondata) => {\r\n    let userDetails = JSON.parse(jsondata.data);\r\n    for (var i = 0; i < userDetails.length; i++) {\r\n      let user = userDetails[i];\r\n      this.mydata.users.push({label : user.firstName + \" \" + user.lastName , value : user.id});\r\n     //alert(JSON.stringify(this.myData.users)) ;\r\n     \r\n    }\r\n  });\r\n});\r\n}\r\n    getObservationMasters(){\r\n\r\n      // let formData = new FormData();\r\n      // formData.append('data','{\"token\" : \"'+ \"1234\" +'\", \"action\" : \"findall\" , \"data\" : [{}]}');\r\n      // fetch(\"http://playground.tatastrive.com/services-v1/observationservice\", {\r\n      //     method: \"POST\",\r\n      //     body: formData \r\n      //     }).then(response => response.json())\r\n          \r\n          findAllObservationdetails().then((jsondata)=>{\r\n              console.log(jsondata); \r\n             // alert(jsondata);\r\n             //aler(\"check\");\r\n              if(jsondata.appError==null){     \r\n                  let jsonobjects = JSON.parse(jsondata.data);\r\n                  \r\n                 jsonobjects.map(item => { this.mydata.observationssData.push({label: item.name, value: item.id})\r\n                 })\r\n                 this.setState({mydata : jsonobjects});\r\n              } \r\n              return (true);\r\n           }).then(response => response);\r\n          }\r\n  \r\n          fetchObservationDetails() {\r\n          \r\n            let observationInfo=[];\r\n            let requestFormData = new FormData();  \r\n            // requestFormData.append('data', '{\"token\" : \"\", \"action\" : \"viewAllObservationsForUser\", \"data\" : [{\"engagementId\":'+this.state.engagementId+'}]}');\r\n            // fetch(\"http://playground.tatastrive.com/sservices-v1/observationservice\",{\r\n            // method: \"POST\",\r\n            // body: requestFormData, \r\n            // })\r\n            fetchObservationdetails(this.state.engagementId).then((jsondata)=>{\r\n              console.log(jsondata.data)  ; \r\n              let  observationDetails = JSON.parse(jsondata.data);  \r\n             // alert(JSON.stringify(observationDetails));\r\n\r\n                    for(let i=0;i<observationDetails.length;i++){\r\n                      let name = \"\";\r\n                      fectUserDetails(observationDetails[i].createdBy).then((jsondata) => {\r\n                        name  =  JSON.parse(jsondata.data)[0].firstName + \" \" + JSON.parse(jsondata.data)[0].lastName;\r\n                        var  details =\r\n                     {   \r\n                         'engagement_id':observationDetails[i].engagementId,\r\n                         'first_name' : name,\r\n                         'created_on':observationDetails[i].createdOn\r\n                          \r\n                     }; \r\n                     observationInfo.push(details);\r\n                     this.setState({\r\n                      info: observationInfo\r\n                        });  \r\n                  }); \r\n                }    \r\n               \r\n             }) \r\n        }\r\n        \r\n    \r\nrender()\r\n{\r\n  \r\n  const columns = [{label: 'Engagement Id', name: 'engagement_id',headerStyle: {color:'#FF9800'}},\r\n                \r\n                 {label: 'Created On', name: 'created_on',headerStyle: {color:'#FF9800'}},\r\n                 {label: 'Name', name: 'first_name',headerStyle: {color:'#FF9800'}}\r\n \r\n   \r\n ]\r\n \r\n  const options = {\r\n    filterType: \"dropdown\",\r\n    responsive: \"scroll\",\r\n    selectableRows: false,\r\n    sortDirection: \"desc\"\r\n  };\r\n\r\n  const dbUserId = (this.state.dbUserId == '' || this.state.dbUserId == null);\r\n  let button;\r\n\r\n  if (dbUserId) {\r\n    button =   <Button variant=\"contained\" type=\"submit\" color=\"primary\" >\r\n    Save\r\n  </Button>;\r\n  } else {\r\n    button = <Button type=\"submit\" variant=\"contained\" color=\"primary\" >Save</Button>;\r\n  }\r\n  if(UserContext.roleid != 3)\r\n  {\r\n    return (\r\n      \r\n      <div style = {{ width : '100%' }}>\r\n    \r\n          \r\n        <form onSubmit={this.mySubmitHandler} method=\"post\" id=\"observation-form\">\r\n       \r\n        <Paper >\r\n          <Table  aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell width=\"60%\">Observation Parameter</TableCell>\r\n                <TableCell >Observation Value</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n            {this.mydata.observationssData.map((row, idx)=> (\r\n                <TableRow key={row.value} name =\"parameter\" required id=\"parameter\">\r\n                  <TableCell id = {idx} name=\"parameter\" value= {row.value}>\r\n               {row.label}\r\n                  </TableCell>\r\n                  <TableCell align=\"\"> \r\n                  <RadioGroup row aria-label=\"observationValue\" name=\"observationValue\" id=\"observationValue\" required  onChange={this.handleInputChange(idx)} >\r\n              <FormControlLabel value=\"Yes\"  control={<Radio/>} label=\"Yes\"  />\r\n              <FormControlLabel value=\"NO\" control={<Radio/>} label=\"No\"  />\r\n              <FormControlLabel value=\"Sometimes\"  control={<Radio />} label=\"Sometimes\"    />\r\n            </RadioGroup>\r\n                </TableCell>            \r\n                </TableRow>\r\n     ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Paper> \r\n          <br/>\r\n          {button}\r\n          <MUIDataTable label={\"List of Observation\"} data={this.state.info} columns={columns} options={options}\r\n          />\r\n        </form>\r\n        </div>\r\n    \r\n        );\r\n  }\r\n   else\r\n   {\r\n    return (\r\n      <div style = {{ width : '100%' }}>\r\n          <MUIDataTable label={\"List of Observation\"} data={this.state.info} columns={columns} options={options}\r\n          />\r\n        </div>\r\n    \r\n        );\r\n   } \r\n}\r\n\r\n}\r\nexport default ObservationDetails;\r\n"]},"metadata":{},"sourceType":"module"}