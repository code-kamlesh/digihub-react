{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\components\\\\Navbars\\\\Navbar.js\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Hidden from \"@material-ui/core/Hidden\"; // @material-ui/icons\n\nimport Menu from \"@material-ui/icons/Menu\"; // core components\n\nimport AdminNavbarLinks from \"./DashboardNavbarLinks.js\";\nimport Button from \"./../CustomButtons/Button.js\";\nimport styles from \"./headerStyle.js\";\nconst useStyles = makeStyles(styles);\nexport default function Header(props) {\n  const classes = useStyles();\n\n  function makeBrand() {\n    var name;\n    props.routes.map(prop => {\n      if (window.location.href.indexOf(prop.layout + prop.path) !== -1) {\n        name = prop.name;\n      }\n\n      return null;\n    });\n    return name;\n  }\n\n  const {\n    color\n  } = props;\n  const appBarClasses = classNames({\n    [\" \" + classes[color]]: color\n  });\n  return /*#__PURE__*/React.createElement(AppBar, {\n    className: classes.appBar + appBarClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.flex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"transparent\",\n    href: \"#\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, makeBrand())), /*#__PURE__*/React.createElement(Hidden, {\n    smDown: true,\n    implementation: \"css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AdminNavbarLinks, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 18\n    }\n  })), /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    implementation: \"css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    onClick: props.handleDrawerToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  })))));\n}\nHeader.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\"]),\n  handleDrawerToggle: PropTypes.func,\n  routes: PropTypes.arrayOf(PropTypes.object)\n};","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/components/Navbars/Navbar.js"],"names":["React","classNames","PropTypes","makeStyles","AppBar","Toolbar","IconButton","Hidden","Menu","AdminNavbarLinks","Button","styles","useStyles","Header","props","classes","makeBrand","name","routes","map","prop","window","location","href","indexOf","layout","path","color","appBarClasses","appBar","container","flex","title","handleDrawerToggle","propTypes","oneOf","func","arrayOf","object"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\n// @material-ui/icons\r\nimport Menu from \"@material-ui/icons/Menu\";\r\n\r\n// core components\r\nimport AdminNavbarLinks from \"./DashboardNavbarLinks.js\";\r\nimport Button from \"./../CustomButtons/Button.js\";\r\n\r\nimport styles from \"./headerStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Header(props) {\r\n    const classes = useStyles();\r\n    function makeBrand() {\r\n      var name;\r\n      props.routes.map(prop => {\r\n        if (window.location.href.indexOf(prop.layout + prop.path) !== -1) {\r\n          name =  prop.name;\r\n        }\r\n        return null;\r\n      });\r\n      return name;\r\n    }\r\n    const { color } = props;\r\n    const appBarClasses = classNames({\r\n      [\" \" + classes[color]]: color\r\n    });\r\n\r\n\r\n    return (\r\n        <AppBar className={classes.appBar + appBarClasses}>\r\n            <Toolbar className={classes.container}>\r\n                <div className={classes.flex}>\r\n                {/* Here we create navbar brand, based on route name */}\r\n                <Button color=\"transparent\" href=\"#\" className={classes.title}>\r\n                    {makeBrand()}\r\n                </Button>\r\n                </div>\r\n                <Hidden smDown implementation=\"css\">\r\n                {<AdminNavbarLinks />}\r\n                </Hidden>\r\n                <Hidden mdUp implementation=\"css\">\r\n                <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={props.handleDrawerToggle}\r\n                >\r\n                    <Menu />\r\n                </IconButton>\r\n                </Hidden>\r\n            </Toolbar>\r\n        </AppBar>\r\n        );\r\n}\r\n\r\nHeader.propTypes = {\r\n    color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\"]),\r\n    handleDrawerToggle: PropTypes.func,\r\n    routes: PropTypes.arrayOf(PropTypes.object)\r\n  };"]},"metadata":{},"sourceType":"module"}