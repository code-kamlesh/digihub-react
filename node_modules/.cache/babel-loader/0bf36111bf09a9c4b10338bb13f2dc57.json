{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { combineReducers, createStore, compose, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { sessionService, sessionReducer } from 'redux-react-session';\nimport './index.css';\nimport Authenticate from './views/AuthenticatePage';\nimport InterestInventory from './views/InterestInventory';\nimport Dashboard from './layouts/Dashboard';\nimport * as serviceWorker from './serviceWorker';\nimport allReducers from './datamanagement'; // Add the sessionReducer\n// const reducer = combineReducers({\n//     session: sessionReducer\n//   });\n//  const reducer = combineReducers({\n//   beneficiaryReducer: beneficiaryReducer\n//    });\n// const store = createStore(reducer, undefined, compose(applyMiddleware(thunkMiddleware)));\n\nconst store = createStore(allReducers); // Init the session service\n// sessionService.initSessionService(store);\n\nconst App = () => /*#__PURE__*/React.createElement(Router, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Switch, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(Route, {\n  exact: true,\n  path: \"/\",\n  component: Authenticate,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 13\n  }\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/dashboard\",\n  component: Dashboard,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 13\n  }\n})));\n\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 20\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 44\n  }\n})), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/index.js"],"names":["React","ReactDOM","BrowserRouter","Router","Switch","Route","Provider","combineReducers","createStore","compose","applyMiddleware","thunkMiddleware","sessionService","sessionReducer","Authenticate","InterestInventory","Dashboard","serviceWorker","allReducers","store","App","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAiCC,MAAjC,EAAyCC,KAAzC,QAAsD,kBAAtD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,qBAA/C;AACA,OAAO,aAAP;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,WAAP,MAAwB,kBAAxB,C,CAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;;AAEC,MAAMC,KAAK,GAAGX,WAAW,CAACU,WAAD,CAAzB,C,CAED;AACA;;AAEA,MAAME,GAAG,GAAG,mBACR,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,GAAlB;AAAsB,EAAA,SAAS,EAAEN,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,eAEI,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,YAAZ;AAAyB,EAAA,SAAS,EAAEE,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,CADJ,CADJ;;AAaEf,QAAQ,CAACoB,MAAT,eAAiB,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAwB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAxB,CAAjB,EAA8DG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA9D,E,CAEF;AACA;AACA;;AACAN,aAAa,CAACO,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router,Switch, Route } from 'react-router-dom'\nimport { Provider } from 'react-redux';\nimport { combineReducers, createStore, compose, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { sessionService, sessionReducer } from 'redux-react-session';\nimport './index.css';\nimport Authenticate from './views/AuthenticatePage';\nimport InterestInventory from './views/InterestInventory';\nimport Dashboard from './layouts/Dashboard';\nimport * as serviceWorker from './serviceWorker';\nimport allReducers from './datamanagement'\n\n\n// Add the sessionReducer\n\n// const reducer = combineReducers({\n//     session: sessionReducer\n//   });\n\n//  const reducer = combineReducers({\n//   beneficiaryReducer: beneficiaryReducer\n//    });\n\n\n// const store = createStore(reducer, undefined, compose(applyMiddleware(thunkMiddleware)));\n\n const store = createStore(allReducers);\n\n// Init the session service\n// sessionService.initSessionService(store);\n\nconst App = () => (\n    <Router>\n        <Switch>\n            <Route exact path=\"/\" component={Authenticate} />\n            <Route path=\"/dashboard\" component={Dashboard} />\n\n            \n        </Switch>\n    </Router>\n  )\n\n\n\n  ReactDOM.render( <Provider store={store}><App/></Provider>  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"]},"metadata":{},"sourceType":"module"}