{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\FundManger.js\";\nimport React, { Component } from 'react';\nimport { Checkbox, InputLabel, Input, Grid, Button } from '@material-ui/core';\nimport { fetchAllStateDetails, fetchCenterByStateName, fetchEmployerDetails, fetchBatchDetails, fetchEnrollmentDetailsByBatchId, getBatchDetailsByBatchIdandFunderId, saveBatchFunderDetails, updateBatchFunderDetails } from './../util/api';\nimport UserContext from '../components/GolbalContext';\nimport { SingleSelect } from \"react-select-material-ui\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport MUIDataTable from \"mui-datatables\";\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport Box from '@material-ui/core/Box';\nimport { data } from 'jquery';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nlet today = new Date();\nlet dd = String(today.getDate()).padStart(2, '0');\nlet mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n\nlet yyyy = today.getFullYear();\nlet hours = String(today.getHours()).padStart(2, '0');\nlet minutes = String(today.getMinutes()).padStart(2, '0');\nlet seconds = String(today.getSeconds()).padStart(2, '0');\ntoday = yyyy + '-' + mm + '-' + dd + ' ' + hours + ':' + minutes + ':' + seconds; //columns for the table\n\nconst columns = [{\n  label: 'Funder Name',\n  name: 'funderName',\n  headerStyle: {\n    color: '#FF9800'\n  }\n}, {\n  label: 'Batch Name',\n  name: 'BatchName',\n  headerStyle: {\n    color: '#FF9800'\n  }\n}, {\n  label: 'Start Date',\n  name: 'startDate',\n  headerStyle: {\n    color: '#FF9800'\n  }\n}, {\n  label: 'End Date',\n  name: 'endDate',\n  headerStyle: {\n    color: '#FF9800'\n  }\n}, {\n  label: 'No of Trainees',\n  name: 'trainees',\n  headerStyle: {\n    color: '#FF9800'\n  }\n}]; //options for the table\n\nconst options = {\n  filterType: 'checkbox'\n};\nexport default class FundManeger extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      regions: [{\n        value: '1',\n        label: 'All'\n      }, {\n        value: '2',\n        label: 'East'\n      }, {\n        value: '3',\n        label: 'West'\n      }, {\n        value: '4',\n        label: 'North'\n      }, {\n        value: '5',\n        label: 'South'\n      }],\n      statelist: [],\n      centerlist: [],\n      centerId: \"\",\n      funderId: \"\",\n      funderType: \"P\",\n      funderName: \"\",\n      accountStatus: \"Active Partner\",\n      typeOfRelationship: \"%Funding partner%\",\n      funderlist: [],\n      errors: {},\n      tableData: [],\n      mappedTableData: [],\n      unmappedTableData: [],\n      centerName: ''\n    };\n    this.arrayTableData = this.arrayTableData.bind(this);\n    this.sepratingTableData = this.sepratingTableData.bind(this); // this.mapAllFunction = this.mapAllFunction.bind(this);\n    // this.unMapAllFunction = this.unMapAllFunction.bind(this);\n    //  this.handleRadioChange = this.handleRadioChange.bind(this);\n  } // Module drop down for regions\n\n\n  handleRegionsChange(selectname, event) {\n    this.setState({\n      [selectname]: event,\n      errors: { ...this.state.errors,\n        regions: {\n          'label': '',\n          'value': false\n        },\n        statelist: {\n          'label': 'Please select some option',\n          'value': true\n        },\n        centerId: {\n          'label': 'Please select some option',\n          'value': true\n        },\n        funderId: {\n          'label': 'Please select some option',\n          'value': true\n        }\n      }\n    });\n    fetchAllStateDetails().then(jsondata => {\n      let result = JSON.parse(jsondata.data);\n      result.forEach(element => {\n        this.state.statelist.push({\n          \"value\": element.name,\n          \"label\": element.name\n        });\n      });\n    });\n  } // drop down for state\n\n\n  handleStateChange(selectname, event) {\n    this.setState({\n      [selectname]: event\n    });\n    fetchCenterByStateName(event).then(jsondata => {\n      let result = JSON.parse(jsondata.data);\n      result.forEach(element => {\n        this.state.centerlist.push({\n          \"value\": element.id,\n          \"label\": element.name\n        });\n      });\n    });\n  } // drop down for center name\n\n\n  handleCenterChange(selectname, event) {\n    this.setState({\n      [selectname]: event\n    }); // Employer api calling to fetch funderlist\n\n    fetchEmployerDetails(this.state.accountStatus, this.state.typeOfRelationship).then(jsondata => {\n      let result = JSON.parse(jsondata.data);\n      console.log(result);\n      result.forEach(element => {\n        this.state.funderlist.push({\n          \"value\": element.id,\n          \"label\": element.accountName\n        });\n      });\n    });\n  } // drop down for funder list\n\n\n  handleFunderChange(selectname, event) {\n    let funderId = event;\n    let index = this.state.funderlist.findIndex(object => object.value == funderId);\n    let funderName = this.state.funderlist[index].label;\n    this.setState({\n      [selectname]: event,\n      funderName\n    });\n    this.arrayTableData(funderId, funderName);\n  }\n\n  handleRadioChange(event) {\n    let value = event.target.value;\n    this.setState({\n      funderType: value\n    });\n  } // Center id is static i.e 20 for a time being\n\n\n  arrayTableData(funderId, funderName) {\n    var tableData = [];\n    fetchBatchDetails(\"20\").then(jsondata => {\n      let result = JSON.parse(jsondata.data);\n      var arrData = {};\n      result.map((element, id) => {\n        arrData = element;\n        tableData = [...tableData, {\n          \"BatchName\": arrData.batchName,\n          \"batchId\": arrData.batchId,\n          \"funderName\": funderName,\n          \"startDate\": arrData.startDate,\n          \"endDate\": arrData.endDate,\n          \"mapped\": false,\n          \"funderId\": funderId,\n          \"trainees\": 0,\n          \"id\": \"\",\n          \"isActive\": \"Y\",\n          \"fundingType\": this.state.funderType,\n          \"remarks\": \"\"\n        }];\n      });\n      this.sepratingTableData(tableData);\n    });\n    console.log(\"Seperating table data\", this.state);\n  }\n\n  sepratingTableData(tableData) {\n    let tableElement = {};\n    console.log(\"Sperating Table Data begins\");\n    this.setState({\n      mappedTableData: [],\n      unmappedTableData: []\n    });\n    tableData.map((element, id) => {\n      //to get the student Strength present based on the enrollment ID's \n      fetchEnrollmentDetailsByBatchId(element.batchId).then(jsondata => {\n        let res = JSON.parse(jsondata.data);\n        tableData[id].trainees = res.length;\n      });\n      getBatchDetailsByBatchIdandFunderId(4567, 1234, \"Y\", this.state.funderType).then(jsondata => {\n        let res = JSON.parse(jsondata.data); // console.log(\"response from database,\",res[0])\n\n        if (res[0].length > 0) {\n          tableData[id].id = res[0][0].id;\n          tableData[id].isActive = res[0][0].isActive;\n          tableData[id].fundingType = res[0][0].fundingType;\n          tableData[id].remarks = res[0][0].remarks;\n          tableData[id].mapped = true; // console.log( tableData[id])\n\n          this.state.mappedTableData.push({\n            \"BatchName\": tableData[id].BatchName,\n            \"funderName\": tableData[id].funderName,\n            \"startDate\": tableData[id].startDate,\n            \"endDate\": tableData[id].endDate,\n            \"trainees\": tableData[id].trainees\n          });\n        } else {\n          this.state.unmappedTableData.push({\n            \"BatchName\": tableData[id].BatchName,\n            \"funderName\": tableData[id].funderName,\n            \"startDate\": tableData[id].startDate,\n            \"endDate\": tableData[id].endDate,\n            \"trainees\": tableData[id].trainees\n          });\n        } // console.log(\"Final Data from unmaaped table\",this.state)\n        // console.log(\"Mapped tabale data\",this.state.mappedTableData)\n\n      }); // console.log(\"Final Data from unmaaped table\",this.state)\n      // console.log(\"Mapped tabale data\",this.state.mappedTableData)\n\n      this.setState({\n        tableData: tableData\n      }); // this.setState({tableData})\n    }); // console.log(\"Final Data from unmaaped table\",this.state)\n    // console.log(\"Mapped tabale data\",this.state.mappedTableData)\n  } //save batch funder mapping \n\n\n  saveFunderMappingDetails(batchId, funderId, isActive, fundingType, createdBy, createdOn, remarks) {\n    alert(\"Hello alert\");\n    saveBatchFunderDetails(batchId, funderId, isActive, fundingType, createdBy, createdOn, remarks).then(jsondata => {\n      let res = JSON.parse(jsondata.data);\n      console.log(res);\n    });\n  } //update batch funder mapping \n\n\n  updateFunderMappingDetails(id, batchId, funderId, isActive, remarks, updatedOn, updatedBy, fundingType) {\n    updateBatchFunderDetails(id, batchId, funderId, isActive, remarks, updatedOn, updatedBy, fundingType).then(jsondata => {\n      let res = JSON.parse(jsondata.data);\n      console.log(res);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 13\n      }\n    }, \"Regions\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"Selectedregion\",\n      id: \"Selectedregion\",\n      options: this.state.regions,\n      value: this.state.Selectedregion || '',\n      key: this.state.Selectedregion || '',\n      onChange: this.handleRegionsChange.bind(this, 'Selectedregion') // helperText={this.state.errors.centerId != undefined ? this.state.errors.centerId.label : ''}\n      ,\n      error: this.state.errors.Selectedregion != undefined ? this.state.errors.centerId.value : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 13\n      }\n    }, \"State\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"Selectedstate\",\n      id: \"Selectedstate\",\n      key: this.state.Selectedstate || '',\n      options: this.state.statelist,\n      value: this.state.Selectedstate || '',\n      onChange: this.handleStateChange.bind(this, 'Selectedstate') // helperText={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.label : ''}\n      ,\n      error: this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.value : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 13\n      }\n    }, \"Center Name\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"selectedcenter\",\n      id: \"centerId\",\n      options: this.state.centerlist,\n      value: this.state.centerId || '',\n      onChange: this.handleCenterChange.bind(this, 'centerId') // helperText={this.state.errors.centerId != undefined ? this.state.errors.batchId.centerId : ''}\n      ,\n      error: this.state.errors.centerId != undefined ? this.state.errors.centerId.value : '',\n      key: this.state.centerId || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 13\n      }\n    }, \"Funding Partner\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"selectedfunder\",\n      id: \"funderId\",\n      options: this.state.funderlist,\n      value: this.state.funderId || '',\n      onChange: this.handleFunderChange.bind(this, 'funderId') // helperText={this.state.errors.funderId != undefined ? this.state.errors.funderId.label : ''}\n      ,\n      error: this.state.errors.funderId != undefined ? this.state.errors.funderId.value : '' // key={this.state.funderId || ''}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(InputLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }\n    }, \"Funding Type\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      onChange: this.handleRadioChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      value: \"P\",\n      name: \"funderType\",\n      checked: this.state.funderType === \"P\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 11\n      }\n    }), \" Primary \\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      value: \"S\",\n      name: \"funderType\",\n      checked: this.state.funderType === \"S\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 11\n      }\n    }), \" Secondary\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 39\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 51\n      }\n    }), /*#__PURE__*/React.createElement(MUIDataTable, {\n      title: \"Mapped Batches\",\n      data: this.state.tableData,\n      columns: columns,\n      options: options,\n      checkboxSelection: this.state.saveFunderMappingDetails,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 39\n      }\n    }), /*#__PURE__*/React.createElement(MUIDataTable, {\n      title: \"UnMapped Batches\",\n      data: this.state.tableData,\n      columns: columns,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/FundManger.js"],"names":["React","Component","Checkbox","InputLabel","Input","Grid","Button","fetchAllStateDetails","fetchCenterByStateName","fetchEmployerDetails","fetchBatchDetails","fetchEnrollmentDetailsByBatchId","getBatchDetailsByBatchIdandFunderId","saveBatchFunderDetails","updateBatchFunderDetails","UserContext","SingleSelect","Table","TableBody","TableCell","TableHead","TableRow","MUIDataTable","Typography","Card","Box","data","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","columns","label","name","headerStyle","color","options","filterType","FundManeger","constructor","props","state","regions","value","statelist","centerlist","centerId","funderId","funderType","funderName","accountStatus","typeOfRelationship","funderlist","errors","tableData","mappedTableData","unmappedTableData","centerName","arrayTableData","bind","sepratingTableData","handleRegionsChange","selectname","event","setState","then","jsondata","result","JSON","parse","forEach","element","push","handleStateChange","id","handleCenterChange","console","log","accountName","handleFunderChange","index","findIndex","object","handleRadioChange","target","arrData","map","batchName","batchId","startDate","endDate","tableElement","res","trainees","length","isActive","fundingType","remarks","mapped","BatchName","saveFunderMappingDetails","createdBy","createdOn","alert","updateFunderMappingDetails","updatedOn","updatedBy","render","width","Selectedregion","undefined","Selectedstate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Checkbox, InputLabel, Input, Grid, Button } from '@material-ui/core';\r\nimport { fetchAllStateDetails, fetchCenterByStateName, fetchEmployerDetails, fetchBatchDetails, fetchEnrollmentDetailsByBatchId, getBatchDetailsByBatchIdandFunderId, saveBatchFunderDetails, updateBatchFunderDetails } from './../util/api';\r\nimport UserContext from '../components/GolbalContext'\r\nimport { SingleSelect } from \"react-select-material-ui\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport Box from '@material-ui/core/Box';\r\nimport { data } from 'jquery';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nlet today = new Date();\r\nlet dd = String(today.getDate()).padStart(2, '0');\r\nlet mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\nlet yyyy = today.getFullYear();\r\nlet hours = String(today.getHours()).padStart(2, '0');\r\nlet minutes = String(today.getMinutes()).padStart(2, '0');\r\nlet seconds = String(today.getSeconds()).padStart(2, '0');\r\ntoday = yyyy + '-' + mm + '-' + dd + ' ' + hours + ':' + minutes + ':' + seconds;\r\n//columns for the table\r\nconst columns = [{label: 'Funder Name', name: 'funderName',headerStyle: {color:'#FF9800'}}\r\n, {label: 'Batch Name', name: 'BatchName',headerStyle: {color:'#FF9800'}}\r\n, {label: 'Start Date', name: 'startDate',headerStyle: {color:'#FF9800'}}\r\n, {label: 'End Date', name: 'endDate',headerStyle: {color:'#FF9800'}}\r\n, {label: 'No of Trainees', name: 'trainees',headerStyle: {color:'#FF9800'}} ];\r\n//options for the table\r\nconst options = {\r\n  filterType: 'checkbox',\r\n};\r\n\r\nexport default class FundManeger extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      regions: [{ value: '1', label: 'All' },\r\n      { value: '2', label: 'East' },\r\n      { value: '3', label: 'West' },\r\n      { value: '4', label: 'North' },\r\n      { value: '5', label: 'South' }],\r\n      statelist: [],\r\n      centerlist: [],\r\n      centerId: \"\",\r\n      funderId: \"\",\r\n      funderType: \"P\",\r\n      funderName: \"\",\r\n      accountStatus: \"Active Partner\",\r\n      typeOfRelationship: \"%Funding partner%\",\r\n      funderlist: [],\r\n      errors: {},\r\n      tableData: [],\r\n      mappedTableData: [],\r\n      unmappedTableData: [],\r\n      centerName: '',\r\n    };\r\n    this.arrayTableData = this.arrayTableData.bind(this);\r\n    this.sepratingTableData = this.sepratingTableData.bind(this);\r\n    // this.mapAllFunction = this.mapAllFunction.bind(this);\r\n    // this.unMapAllFunction = this.unMapAllFunction.bind(this);\r\n    //  this.handleRadioChange = this.handleRadioChange.bind(this);\r\n  }\r\n\r\n  // Module drop down for regions\r\n  handleRegionsChange(selectname, event) {\r\n    this.setState({\r\n      [selectname]: event,\r\n      errors: {\r\n        ...this.state.errors,\r\n        regions: {\r\n          'label': '',\r\n          'value': false\r\n        },\r\n        statelist: {\r\n          'label': 'Please select some option',\r\n          'value': true\r\n        },\r\n        centerId: {\r\n          'label': 'Please select some option',\r\n          'value': true\r\n        },\r\n        funderId: {\r\n          'label': 'Please select some option',\r\n          'value': true\r\n        }\r\n      }\r\n    })\r\n    fetchAllStateDetails().then(jsondata => {\r\n      let result = JSON.parse(jsondata.data)\r\n      result.forEach(element => {\r\n        this.state.statelist.push({\r\n          \"value\": element.name,\r\n          \"label\": element.name\r\n        })\r\n      });\r\n    })\r\n  }\r\n\r\n\r\n\r\n  // drop down for state\r\n  handleStateChange(selectname, event) {\r\n    this.setState({\r\n      [selectname]: event,\r\n    })\r\n    fetchCenterByStateName(event).then(jsondata => {\r\n      let result = JSON.parse(jsondata.data)\r\n      result.forEach(element => {\r\n        this.state.centerlist.push({\r\n          \"value\": element.id,\r\n          \"label\": element.name,\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  // drop down for center name\r\n  handleCenterChange(selectname, event) {\r\n    this.setState({\r\n      [selectname]: event,\r\n    })\r\n    // Employer api calling to fetch funderlist\r\n    fetchEmployerDetails(this.state.accountStatus, this.state.typeOfRelationship).then(jsondata => {\r\n      let result = JSON.parse(jsondata.data)\r\n      console.log(result)\r\n      result.forEach(element => {\r\n        this.state.funderlist.push({\r\n          \"value\": element.id,\r\n          \"label\": element.accountName\r\n        })\r\n      })\r\n    })\r\n\r\n  }\r\n\r\n  // drop down for funder list\r\n  handleFunderChange(selectname, event) {\r\n    let funderId = event;\r\n    let index = this.state.funderlist.findIndex((object)=> object.value == funderId)\r\n    let funderName = this.state.funderlist[index].label\r\n    this.setState({\r\n      [selectname]: event,\r\n      funderName\r\n    })\r\n    this.arrayTableData(funderId, funderName)   \r\n  }\r\n\r\n  handleRadioChange(event){\r\n    let value = event.target.value\r\n       this.setState({ funderType : value });\r\n  }\r\n\r\n  // Center id is static i.e 20 for a time being\r\n  arrayTableData(funderId, funderName) {\r\n    var tableData = []\r\n    fetchBatchDetails(\"20\").then(jsondata => {\r\n      let result = JSON.parse(jsondata.data)\r\n      var arrData = {}\r\n      result.map((element, id) => {\r\n        arrData = element\r\n        tableData = [\r\n          ...tableData,\r\n          {\r\n            \"BatchName\": arrData.batchName,\r\n            \"batchId\": arrData.batchId,\r\n            \"funderName\": funderName,\r\n            \"startDate\": arrData.startDate,\r\n            \"endDate\": arrData.endDate,\r\n            \"mapped\": false,\r\n            \"funderId\": funderId,\r\n            \"trainees\": 0,\r\n            \"id\": \"\",\r\n            \"isActive\": \"Y\",\r\n            \"fundingType\": this.state.funderType,\r\n            \"remarks\": \"\",\r\n          }]\r\n      })\r\n      this.sepratingTableData(tableData);\r\n    })\r\n    console.log(\"Seperating table data\",this.state)\r\n  }\r\n\r\n  sepratingTableData(tableData){\r\n    let tableElement = {}\r\n    console.log(\"Sperating Table Data begins\")\r\n\r\n    this.setState({ mappedTableData: [], unmappedTableData: [] }) \r\n  \r\n    tableData.map((element, id) =>{\r\n      //to get the student Strength present based on the enrollment ID's \r\n      fetchEnrollmentDetailsByBatchId(element.batchId).then((jsondata) => {\r\n        let res = JSON.parse(jsondata.data)\r\n        tableData[id].trainees = res.length\r\n      })\r\n\r\n      getBatchDetailsByBatchIdandFunderId(4567,1234, \"Y\", this.state.funderType).then((jsondata) => {\r\n        let res = JSON.parse(jsondata.data)     \r\n        // console.log(\"response from database,\",res[0])\r\n        if (res[0].length > 0) {\r\n          tableData[id].id = res[0][0].id\r\n          tableData[id].isActive = res[0][0].isActive\r\n          tableData[id].fundingType = res[0][0].fundingType\r\n          tableData[id].remarks = res[0][0].remarks\r\n          tableData[id].mapped = true\r\n          // console.log( tableData[id])\r\n          this.state.mappedTableData.push({\r\n            \"BatchName\": tableData[id].BatchName,\r\n            \"funderName\": tableData[id].funderName,\r\n            \"startDate\": tableData[id].startDate,\r\n            \"endDate\": tableData[id].endDate,\r\n            \"trainees\": tableData[id].trainees,\r\n          })\r\n        }\r\n        else{\r\n\r\n          this.state.unmappedTableData.push({\r\n            \"BatchName\": tableData[id].BatchName,\r\n            \"funderName\": tableData[id].funderName,\r\n            \"startDate\": tableData[id].startDate,\r\n            \"endDate\": tableData[id].endDate,\r\n            \"trainees\": tableData[id].trainees,\r\n          })\r\n        } \r\n        // console.log(\"Final Data from unmaaped table\",this.state)\r\n        // console.log(\"Mapped tabale data\",this.state.mappedTableData)\r\n      })\r\n      // console.log(\"Final Data from unmaaped table\",this.state)\r\n      // console.log(\"Mapped tabale data\",this.state.mappedTableData)\r\n      this.setState({tableData:tableData})\r\n      // this.setState({tableData})\r\n    })\r\n    // console.log(\"Final Data from unmaaped table\",this.state)\r\n    // console.log(\"Mapped tabale data\",this.state.mappedTableData)\r\n  }\r\n\r\n\r\n  //save batch funder mapping \r\n  saveFunderMappingDetails(batchId, funderId, isActive, fundingType, createdBy, createdOn, remarks) {\r\n    alert(\"Hello alert\")\r\n    saveBatchFunderDetails(batchId, funderId, isActive, fundingType, createdBy, createdOn, remarks).then((jsondata) => {\r\n      let res = JSON.parse(jsondata.data)\r\n      console.log(res)\r\n    })\r\n  }\r\n\r\n  //update batch funder mapping \r\n  updateFunderMappingDetails(id, batchId, funderId, isActive, remarks, updatedOn, updatedBy, fundingType) {\r\n    updateBatchFunderDetails(id, batchId, funderId, isActive, remarks, updatedOn, updatedBy, fundingType).then((jsondata) => {\r\n      let res = JSON.parse(jsondata.data)\r\n      console.log(res)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ width: '100%' }}>\r\n        <Grid container>\r\n          <Grid item xs={12}> </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} >Regions</InputLabel>\r\n            <SingleSelect\r\n              name=\"Selectedregion\" id=\"Selectedregion\"\r\n              options={this.state.regions}\r\n              value={this.state.Selectedregion || ''}\r\n              key={this.state.Selectedregion || ''}\r\n              onChange={this.handleRegionsChange.bind(this, 'Selectedregion')}\r\n              // helperText={this.state.errors.centerId != undefined ? this.state.errors.centerId.label : ''}\r\n              error={this.state.errors.Selectedregion != undefined ? this.state.errors.centerId.value : ''}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={2}></Grid>\r\n\r\n\r\n          <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} >State</InputLabel>\r\n            <SingleSelect\r\n              name=\"Selectedstate\" id=\"Selectedstate\"\r\n              key={this.state.Selectedstate || ''}\r\n              options={this.state.statelist}\r\n              value={this.state.Selectedstate || ''}\r\n              onChange={this.handleStateChange.bind(this, 'Selectedstate')}\r\n              // helperText={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.label : ''}\r\n              error={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.value : ''}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <br />\r\n        <Grid container>\r\n          <Grid item xs={12}> </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} >Center Name</InputLabel>\r\n            <SingleSelect\r\n              name=\"selectedcenter\" id=\"centerId\"\r\n              options={this.state.centerlist}\r\n              value={this.state.centerId || ''}\r\n              onChange={this.handleCenterChange.bind(this, 'centerId')}\r\n              // helperText={this.state.errors.centerId != undefined ? this.state.errors.batchId.centerId : ''}\r\n              error={this.state.errors.centerId != undefined ? this.state.errors.centerId.value : ''}\r\n              key={this.state.centerId || ''}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={2}></Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} >Funding Partner</InputLabel>\r\n            <SingleSelect\r\n              name=\"selectedfunder\" id=\"funderId\"\r\n              options={this.state.funderlist}\r\n              value={this.state.funderId || ''}\r\n              onChange={this.handleFunderChange.bind(this, 'funderId')}\r\n              // helperText={this.state.errors.funderId != undefined ? this.state.errors.funderId.label : ''}\r\n              error={this.state.errors.funderId != undefined ? this.state.errors.funderId.value : ''}\r\n            // key={this.state.funderId || ''}\r\n            />\r\n          </Grid>\r\n\r\n        </Grid>\r\n        <br />\r\n        <br />\r\n        <InputLabel>Funding Type</InputLabel>\r\n        <br />\r\n        <div onChange={this.handleRadioChange.bind(this)}>\r\n          <input type=\"radio\" value=\"P\" name=\"funderType\" checked={this.state.funderType === \"P\"}/> Primary\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <input type=\"radio\" value=\"S\" name=\"funderType\" checked={this.state.funderType === \"S\"}/> Secondary\r\n        </div>\r\n        <br /><br /><br /><br /><br /><br /><br /><br />\r\n        \r\n        <MUIDataTable \r\n          title={\"Mapped Batches\"} \r\n          data={this.state.tableData} \r\n          columns={columns} \r\n          options={options} \r\n          checkboxSelection={this.state.saveFunderMappingDetails}\r\n        />\r\n        <br /><br /><br /><br /><br /><br />\r\n\r\n        <MUIDataTable\r\n          title={\"UnMapped Batches\"} \r\n          data={this.state.tableData} \r\n          columns={columns} \r\n          options={options} \r\n        />\r\n  \r\n    </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}