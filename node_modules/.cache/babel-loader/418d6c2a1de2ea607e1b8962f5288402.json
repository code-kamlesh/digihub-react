{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\StudentMigration.js\";\nimport React, { Component } from 'react';\nimport UserContext from '../components/GolbalContext';\nimport { SingleSelect } from \"react-select-material-ui\";\nimport { Checkbox, InputLabel, Input, Grid, Button } from '@material-ui/core';\nimport { updateCenterId, fetchAllStateDetails, fetchCenterByStateName, fetchStudentDataOfVirtualCenter, fetchAddressBaiedOnIdAndState, updateStudentData } from './../util/api';\nimport MUIDataTable from \"mui-datatables\";\nimport { forEach } from 'underscore';\nimport { serviceEndPoint } from './../util/serviceEndPoint';\nimport { isSessionValid, isTokenValid } from './../util/session.js';\nimport { regenerateToken } from './../util/validation';\nexport default class StudentMigration extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setStudentData = async () => {\n      await fetchStudentDataOfVirtualCenter(\"3049\").then(jsondata => {\n        let result = JSON.parse(jsondata.data);\n        let studentData = result.filter(key => key.creationChannel == \"SR-STRIVE\");\n        console.log(\"basic\", studentData);\n        this.setStudentAddressData(studentData);\n      });\n    };\n\n    this.setStudentAddressData = async studentData => {\n      var arr = [];\n      let addressData = [];\n\n      for (var i = 0; i < studentData.length; i++) {\n        // console.log(\"data\", studentData)\n        let dbUserId = studentData[i].dbUserId;\n        console.log(UserContext.roleid);\n\n        if (UserContext.roleid == 2) {\n          await fetchAddressBaiedOnIdAndState(dbUserId, \"R\", this.state.selectedstate).then(jsondata => {\n            let res = JSON.parse(jsondata.data);\n            console.log(res); // console.log(res[i].entityId)\n\n            addressData[i] = res;\n\n            if (addressData[i].length > 0 && addressData[i][0].entityId === studentData[i].dbUserId) {\n              arr.push({\n                \"engagementId\": studentData[i].engagementId,\n                \"firstName\": studentData[i].firstName,\n                \"dob\": studentData[i].dob,\n                \"PrimaryContactNumber\": studentData[i].primaryContactNumber,\n                \"PermCityName\": addressData[i][0].cityName,\n                \"PermPincode\": addressData[i][0].pincode,\n                \"State\": addressData[i][0].state\n              });\n            }\n          });\n        } else {\n          await fetchAddressBaiedOnIdAndState(dbUserId, \"R\", U).then(jsondata => {\n            let res = JSON.parse(jsondata.data);\n            console.log(res); // console.log(res[i].entityId)\n\n            addressData[i] = res;\n\n            if (addressData[i].length > 0 && addressData[i][0].entityId === studentData[i].dbUserId) {\n              arr.push({\n                \"engagementId\": studentData[i].engagementId,\n                \"firstName\": studentData[i].firstName,\n                \"dob\": studentData[i].dob,\n                \"PrimaryContactNumber\": studentData[i].primaryContactNumber,\n                \"PermCityName\": addressData[i][0].cityName,\n                \"PermPincode\": addressData[i][0].pincode,\n                \"State\": addressData[i][0].state\n              });\n            }\n          });\n        }\n      } // console.log(addressData)\n      // console.log(studentData)\n\n\n      this.setState({\n        studentInfo: arr\n      });\n    };\n\n    this.savingStudentdata = async () => {\n      var count = 0;\n\n      if (this.state.selectedCenterId === \"\") {\n        alert(\"Please select Center Name\");\n        return;\n      }\n\n      console.log(this.state.selectedIndex[0].dataIndex);\n\n      for (var i = 0; i < this.state.selectedIndex.length; i++) {\n        var data = this.state.studentInfo[this.state.selectedIndex[i].dataIndex];\n        console.log(\"final data\", data);\n        console.log(this.state.selectedCenterId, UserContext.userid, data.engagementId);\n        await updateCenterId(this.state.selectedCenterId, UserContext.userid, data.engagementId).then(jsondata => {\n          let res = JSON.parse(jsondata.data);\n          count += 1;\n        });\n      } //  this.updateCenterIdBaiesdOnEngagementId(updateStudentData);\n\n\n      if (count == this.state.selectedIndex.length) {\n        alert(\"Student Moved to Selected Center\");\n        this.setState({\n          studentInfo: [],\n          selectedIndex: []\n        });\n        this.setStudentData();\n      }\n    };\n\n    this.loadDataWithoutStateSelection();\n    console.log(window.location.pathname); //yields: \"/js\" (where snippets run)\n\n    console.log(window.location.href);\n    console.log(UserContext.roleid);\n    this.state = {\n      channelCreation: \"\",\n      statelist: [],\n      centerList: [],\n      Selectedstate: \"\",\n      selectedCenterId: \"\",\n      studentInfo: [],\n      selectedIndex: []\n    };\n    fetchAllStateDetails().then(jsondata => {\n      let res = JSON.parse(jsondata.data);\n      console.log(res);\n      res.forEach(element => {\n        this.state.statelist.push({\n          'value': element.name,\n          'label': element.name\n        });\n      });\n    });\n  } // loding data during redering\n\n\n  loadDataWithoutStateSelection() {\n    console.log(UserContext.centerState);\n\n    if (UserContext.roleid == 8) {\n      this.setStudentData();\n    }\n  } // Dropdown for state\n\n\n  handleStateChange(selectname, event) {\n    this.setState({\n      studentInfo: [],\n      centerList: [],\n      selectedCenterId: ''\n    });\n    const state = event;\n    this.setState({\n      selectedstate: state\n    });\n    this.setStudentData();\n    fetchCenterByStateName(event).then(jsondata => {\n      let result = JSON.parse(jsondata.data);\n      var center = result.filter(key => key.isActive == \"Y\"); // console.log(center)\n\n      center.forEach(element => {\n        this.state.centerList.push({\n          \"value\": element.id,\n          \"label\": element.name\n        });\n      });\n    });\n  } // center List handler\n\n\n  handleCenterChange(selectname, event) {\n    this.setState({\n      selectedCenterId: event\n    });\n  }\n\n  render() {\n    const columns = [{\n      label: 'Engagement Id',\n      name: 'engagementId',\n      options: {\n        sortDirection: 'desc'\n      },\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, // {label: 'Name', name: 'first_name',options : {    // not showing the value on fromt end\n    //   sortDirection : 'desc',display: false\n    // },headerStyle: {color:'#FF9800'}},\n    {\n      label: 'Name',\n      name: 'firstName',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Date Of Birth',\n      name: 'dob',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Contact Number',\n      name: 'PrimaryContactNumber',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'City',\n      name: 'PermCityName',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Pin code',\n      name: 'PermPincode',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'State',\n      name: 'State',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }];\n    const options = {\n      selectableRows: 'multiple',\n      filterType: \"dropdown\",\n      responsive: \"stacked\",\n      sortDirection: \"desc\",\n      disableToolbarSelect: true,\n      rowsPerPage: 15,\n      selectableRowsOnClick: true,\n      onRowsSelect: (curRowSelected, allRowsSelected) => {\n        console.log(\"---RowSelect\");\n        console.log(\"Row Selected: \", curRowSelected);\n        console.log(\"All Selected: \", allRowsSelected);\n        this.setState({\n          selectedIndex: allRowsSelected\n        }); // console.log(this.state.selectedIndex)\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 7\n      }\n    }, UserContext.roleName === \"Call center\" && /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 12\n      }\n    }, \"State\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"Selectedstate\",\n      id: \"Selectedstate\",\n      options: this.state.statelist,\n      value: this.state.Selectedstate || '',\n      onChange: this.handleStateChange.bind(this, 'Selectedstate'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 12\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 16\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 23\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 30\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MUIDataTable, {\n      title: \"Students\",\n      label: \"List of Students\",\n      data: this.state.studentInfo,\n      columns: columns,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }\n    }, \"Center\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"selectedcenter\",\n      id: \"centerId\",\n      options: this.state.centerList,\n      value: this.state.selectedcenterId || '',\n      onChange: this.handleCenterChange.bind(this, 'Selectedstate'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"large\",\n      disabled: this.state.selectedIndex.length <= 0,\n      onClick: () => this.savingStudentdata(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }\n    }, \"Moving to Center\"))));\n  }\n\n}","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/StudentMigration.js"],"names":["React","Component","UserContext","SingleSelect","Checkbox","InputLabel","Input","Grid","Button","updateCenterId","fetchAllStateDetails","fetchCenterByStateName","fetchStudentDataOfVirtualCenter","fetchAddressBaiedOnIdAndState","updateStudentData","MUIDataTable","forEach","serviceEndPoint","isSessionValid","isTokenValid","regenerateToken","StudentMigration","constructor","props","setStudentData","then","jsondata","result","JSON","parse","data","studentData","filter","key","creationChannel","console","log","setStudentAddressData","arr","addressData","i","length","dbUserId","roleid","state","selectedstate","res","entityId","push","engagementId","firstName","dob","primaryContactNumber","cityName","pincode","U","setState","studentInfo","savingStudentdata","count","selectedCenterId","alert","selectedIndex","dataIndex","userid","loadDataWithoutStateSelection","window","location","pathname","href","channelCreation","statelist","centerList","Selectedstate","element","name","centerState","handleStateChange","selectname","event","center","isActive","id","handleCenterChange","render","columns","label","options","sortDirection","headerStyle","color","selectableRows","filterType","responsive","disableToolbarSelect","rowsPerPage","selectableRowsOnClick","onRowsSelect","curRowSelected","allRowsSelected","width","roleName","bind","selectedcenterId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport UserContext from '../components/GolbalContext'\r\nimport { SingleSelect } from \"react-select-material-ui\";\r\nimport { Checkbox, InputLabel, Input, Grid, Button } from '@material-ui/core';\r\nimport { updateCenterId,fetchAllStateDetails, fetchCenterByStateName, fetchStudentDataOfVirtualCenter, fetchAddressBaiedOnIdAndState, updateStudentData } from './../util/api';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { forEach } from 'underscore';\r\nimport { serviceEndPoint } from './../util/serviceEndPoint';\r\nimport { isSessionValid, isTokenValid } from './../util/session.js';\r\nimport { regenerateToken } from './../util/validation';\r\n\r\n\r\nexport default class StudentMigration extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.loadDataWithoutStateSelection();\r\n    console.log(window.location.pathname); //yields: \"/js\" (where snippets run)\r\n    console.log(window.location.href)\r\n    console.log(UserContext.roleid)\r\n    this.state = {\r\n      channelCreation: \"\",\r\n      statelist: [],\r\n      centerList: [],\r\n      Selectedstate: \"\",\r\n      selectedCenterId: \"\",\r\n      studentInfo: [],\r\n      selectedIndex:[],\r\n    }\r\n    fetchAllStateDetails().then((jsondata) => {\r\n      let res = JSON.parse(jsondata.data)\r\n      console.log(res)\r\n      res.forEach(element => {\r\n        this.state.statelist.push({\r\n          'value': element.name,\r\n          'label': element.name,\r\n        })\r\n      });\r\n    })\r\n  }\r\n// loding data during redering\r\n  \r\n    loadDataWithoutStateSelection(){\r\n      console.log(UserContext.centerState)\r\n      if(UserContext.roleid==8){\r\n        this.setStudentData();\r\n      }\r\n    }\r\n  \r\n\r\n  // Dropdown for state\r\n  handleStateChange(selectname, event) {\r\n    this.setState({studentInfo:[],centerList:[], selectedCenterId:''})\r\n    const state = event\r\n    this.setState({ selectedstate: state })\r\n    this.setStudentData();\r\n    fetchCenterByStateName(event).then((jsondata) => {\r\n      let result = JSON.parse(jsondata.data)\r\n      var center = result.filter((key) => key.isActive == \"Y\")\r\n      // console.log(center)\r\n      center.forEach(element => {\r\n        this.state.centerList.push({\r\n          \"value\": element.id,\r\n          \"label\": element.name\r\n        })\r\n      })\r\n    })\r\n  }\r\n  // center List handler\r\n  handleCenterChange(selectname, event) {\r\n    this.setState({ selectedCenterId: event })\r\n  }\r\nsetStudentData = async()=>{ \r\n    await fetchStudentDataOfVirtualCenter(\"3049\").then((jsondata)=>{\r\n      let result = JSON.parse(jsondata.data)\r\n      let studentData = result.filter(key=>key.creationChannel==\"SR-STRIVE\")\r\n      console.log(\"basic\",studentData)\r\n      this.setStudentAddressData(studentData)\r\n    })\r\n  }\r\n  setStudentAddressData=async(studentData)=>{\r\n    var arr = []\r\n    let addressData=[]\r\n    for(var i=0;i<studentData.length;i++){\r\n      // console.log(\"data\", studentData)\r\n      let dbUserId = studentData[i].dbUserId\r\n      console.log(UserContext.roleid)\r\n      if(UserContext.roleid == 2){\r\n        await fetchAddressBaiedOnIdAndState(dbUserId,\"R\",this.state.selectedstate).then((jsondata)=>{\r\n          let res = JSON.parse(jsondata.data)\r\n          console.log(res)\r\n          // console.log(res[i].entityId)\r\n          addressData[i] = res;\r\n          \r\n          if(addressData[i].length>0 && addressData[i][0].entityId === studentData[i].dbUserId){\r\n            arr.push({\r\n             \"engagementId\":studentData[i].engagementId,\r\n             \"firstName\": studentData[i].firstName,\r\n             \"dob\":studentData[i].dob,\r\n             \"PrimaryContactNumber\":studentData[i].primaryContactNumber,\r\n             \"PermCityName\":addressData[i][0].cityName,\r\n             \"PermPincode\":addressData[i][0].pincode,\r\n             \"State\":addressData[i][0].state,\r\n           })\r\n          }\r\n      })\r\n      }\r\n      else{\r\n        await fetchAddressBaiedOnIdAndState(dbUserId,\"R\",U).then((jsondata)=>{\r\n          let res = JSON.parse(jsondata.data)\r\n          console.log(res)\r\n          // console.log(res[i].entityId)\r\n          addressData[i] = res;\r\n          \r\n          if(addressData[i].length>0 && addressData[i][0].entityId === studentData[i].dbUserId){\r\n            arr.push({\r\n             \"engagementId\":studentData[i].engagementId,\r\n             \"firstName\": studentData[i].firstName,\r\n             \"dob\":studentData[i].dob,\r\n             \"PrimaryContactNumber\":studentData[i].primaryContactNumber,\r\n             \"PermCityName\":addressData[i][0].cityName,\r\n             \"PermPincode\":addressData[i][0].pincode,\r\n             \"State\":addressData[i][0].state,\r\n           })\r\n          }\r\n      })\r\n      }\r\n    }\r\n    // console.log(addressData)\r\n    // console.log(studentData)\r\n    this.setState({studentInfo:arr})\r\n  }\r\n\r\n  savingStudentdata =async()=>{\r\n    var count = 0\r\n    if(this.state.selectedCenterId === \"\"){\r\n      alert(\"Please select Center Name\")\r\n      return;\r\n    }\r\n       \r\n    console.log(this.state.selectedIndex[0].dataIndex)\r\n    for(var i=0;i<this.state.selectedIndex.length;i++){\r\n      var data =this.state.studentInfo[this.state.selectedIndex[i].dataIndex]\r\n      console.log(\"final data\",data)\r\n      console.log(this.state.selectedCenterId,UserContext.userid,data.engagementId)\r\n        await  updateCenterId(this.state.selectedCenterId,UserContext.userid,data.engagementId).then((jsondata)=>{\r\n                let res = JSON.parse(jsondata.data)\r\n                count+=1;\r\n              })      \r\n    }\r\n  //  this.updateCenterIdBaiesdOnEngagementId(updateStudentData);\r\n    if(count == this.state.selectedIndex.length ){\r\n        alert(\"Student Moved to Selected Center\")\r\n        this.setState({studentInfo: [] , selectedIndex:[]})\r\n        this.setStudentData();\r\n      }\r\n  }\r\n \r\n  render() {\r\n    \r\n    const columns = [\r\n      {\r\n        label: 'Engagement Id', name: 'engagementId', options: {\r\n          sortDirection: 'desc'\r\n        }, headerStyle: { color: '#FF9800' }\r\n      },\r\n      // {label: 'Name', name: 'first_name',options : {    // not showing the value on fromt end\r\n      //   sortDirection : 'desc',display: false\r\n      // },headerStyle: {color:'#FF9800'}},\r\n      { label: 'Name', name: 'firstName', headerStyle: { color: '#FF9800' } },\r\n      { label: 'Date Of Birth', name: 'dob', headerStyle: { color: '#FF9800' } },\r\n      { label: 'Contact Number', name: 'PrimaryContactNumber', headerStyle: { color: '#FF9800' } },\r\n      { label: 'City', name: 'PermCityName', headerStyle: { color: '#FF9800' } },\r\n      { label: 'Pin code', name: 'PermPincode', headerStyle: { color: '#FF9800' } },\r\n      { label: 'State', name: 'State', headerStyle: { color: '#FF9800' } },\r\n      \r\n    ]\r\n    \r\n    const options = {\r\n    \r\n      selectableRows: 'multiple',\r\n    \r\n      filterType: \"dropdown\",\r\n      responsive: \"stacked\",\r\n      sortDirection: \"desc\",\r\n      disableToolbarSelect: true,\r\n      rowsPerPage: 15,\r\n      selectableRowsOnClick: true,\r\n          \r\n          onRowsSelect: (curRowSelected, allRowsSelected) => {\r\n            console.log(\"---RowSelect\")\r\n            console.log(\"Row Selected: \", curRowSelected);\r\n            console.log(\"All Selected: \", allRowsSelected);\r\n            this.setState({selectedIndex:allRowsSelected })\r\n            // console.log(this.state.selectedIndex)\r\n          }\r\n    };\r\n    return (\r\n     \r\n      <div style={{ width: '100%' }}>\r\n        \r\n        {UserContext.roleName === \"Call center\" &&\r\n         <Grid container>\r\n         <Grid item xs={12} sm={4}>\r\n           <InputLabel shrink={true} >State</InputLabel>\r\n           <SingleSelect\r\n             name=\"Selectedstate\" id=\"Selectedstate\"\r\n             options={this.state.statelist}\r\n             value={this.state.Selectedstate || ''}\r\n             onChange={this.handleStateChange.bind(this, 'Selectedstate')}\r\n           />\r\n         </Grid>\r\n       </Grid> }\r\n       \r\n        <br /> <br /> <br /> <br />\r\n        \r\n        <Grid>\r\n          <MUIDataTable title={\"Students\"} label={\"List of Students\"} data={this.state.studentInfo}\r\n            columns={columns} options={options}\r\n          />\r\n        </Grid>\r\n        < br/>\r\n      <Grid container>\r\n        <Grid item xs={12} sm={4}>\r\n          <InputLabel shrink={true} >Center</InputLabel> \r\n            <SingleSelect\r\n              name=\"selectedcenter\" id=\"centerId\"\r\n              options={this.state.centerList}\r\n              value={this.state.selectedcenterId || ''}\r\n              onChange={this.handleCenterChange.bind(this, 'Selectedstate')}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}></Grid>\r\n           <Grid item xs={12} sm={4}>\r\n            <Button variant=\"contained\" color=\"primary\" size=\"large\" disabled={this.state.selectedIndex.length<=0 }\r\n            onClick={()=>this.savingStudentdata()}>\r\n              Moving to Center\r\n           </Button>\r\n        </Grid>\r\n      </Grid>\r\n      </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}