{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\VirtualToPhysical.js\";\nimport React, { Component } from 'react';\nimport UserContext from '../components/GolbalContext';\nimport { SingleSelect } from \"react-select-material-ui\";\nimport { Checkbox, InputLabel, Input, Grid, Button } from '@material-ui/core';\nimport { fetchAllStateDetails, fetchStudentDetailsBaisedOnChannel, fetchVirtualData } from './../util/api';\nimport MUIDataTable from \"mui-datatables\";\nconst columns = [{\n  label: 'Engagement Id',\n  name: 'engagement_id',\n  options: {\n    sortDirection: 'desc'\n  },\n  headerStyle: {\n    color: '#FF9800'\n  }\n}, // {label: 'Name', name: 'first_name',options : {    // not showing the value on fromt end\n//   sortDirection : 'desc',display: false\n// },headerStyle: {color:'#FF9800'}},\n{\n  label: 'Name',\n  name: 'Name',\n  headerStyle: {\n    color: '#FF9800'\n  }\n}, {\n  label: 'Date Of Birth',\n  name: 'Dob',\n  headerStyle: {\n    color: '#FF9800'\n  }\n}, {\n  label: 'Contact Number',\n  name: 'PrimaryContactNumber',\n  headerStyle: {\n    color: '#FF9800'\n  }\n}, {\n  label: 'Address',\n  name: 'PermAddressLine1',\n  headerStyle: {\n    color: '#FF9800'\n  }\n}, {\n  label: 'City',\n  name: 'PermCityName',\n  headerStyle: {\n    color: '#FF9800'\n  }\n}, {\n  label: 'Pin code',\n  name: 'PermPincode',\n  headerStyle: {\n    color: '#FF9800'\n  }\n}, {\n  label: 'Action',\n  name: 'Action',\n  headerStyle: {\n    color: '#FF9800'\n  }\n}];\nconst options = {\n  selectableRows: 'single',\n  filterType: \"dropdown\",\n  responsive: \"stacked\",\n  sortDirection: \"desc\",\n  disableToolbarSelect: true,\n  rowsPerPage: 10 // selectableRowsOnClick: true,\n  //     rowsSelected : this.state.selectedIndex,\n  //     onRowsSelect: (allRows) => {\n  //         let rows = this.state.selectedIndex;\n  //         rows[0] = allRows[0].dataIndex;\n  //         this.setState({\n  //           rowsSelected : this.state.info[allRows[0].dataIndex],\n  //           selectedIndex : rows,\n  //           name:this.state.info[allRows[0].dataIndex].name\n  //         }) // this is the row in your data source       \n  //    },\n\n};\nexport default class VitualToPhysical extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      channelCreation: \"\",\n      statelist: [],\n      Selectedstate: \"\",\n      studentInfo: []\n    };\n    this.handleStateChange = this.handleStateChange.bind(this);\n    fetchAllStateDetails().then(jsondata => {\n      let res = JSON.parse(jsondata.data);\n      console.log(res);\n      res.forEach(element => {\n        this.state.statelist.push({\n          'value': element.name,\n          'label': element.name\n        });\n      });\n    }); // // Fetch student details baised on strive chaneel\n    // fetchStudentDetailsBaisedOnChannel(\"SR-STRIVE\").then((jsondata)=>{\n    //     let res = JSON.parse(jsondata.data)\n    //     console.log(jsondata)\n    //     // console.log(res)\n    // })\n  } // Dropdown for state\n\n\n  handleStateChange(selectname, event) {\n    const state = event;\n    this.state.Selectedstate = state;\n  } //Getting the info of the table data\n\n\n  getDetails() {\n    var virtualData = [];\n    fetchVirtualData(\"3049\", this.state.Selectedstate).then(jsondata => {\n      let res = JSON.parse(jsondata.data);\n      console.log(res[0]);\n\n      for (var i = 0; i < res.length; i++) {\n        var details = {\n          \"engagement_id\": res[i].EngagementId,\n          \"Name\": res[i].Name,\n          \"Dob\": res[i].Dob,\n          \"PrimaryContactNumber\": res[i].PrimaryContactNumber,\n          \"PermAddressLine1\": res[i].PermAddressLine1,\n          \"PermCityName\": res[i].PermCityName,\n          \"PermPincode\": res[i].PermPincode,\n          \"Action\": /*#__PURE__*/React.createElement(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: this.updateStudentdata(),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 30\n            }\n          }, \"Save\")\n        };\n        virtualData.push(details);\n      } // Saving data in array \n\n\n      this.setState({\n        studentInfo: virtualData\n      });\n    });\n  } // update student data\n\n\n  updateStudentdata() {}\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, \"State\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"Selectedstate\",\n      id: \"Selectedstate\" //   key={this.state.Selectedstate || ''}\n      ,\n      options: this.state.statelist,\n      value: this.state.Selectedstate || '',\n      onChange: this.handleStateChange.bind(this, 'Selectedstate') //   helperText={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.label : ''}\n      //   error={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.value : ''}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.getDetails.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, \"Get Details\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MUIDataTable, {\n      title: \"Students\",\n      label: \"List of Students\",\n      data: this.state.studentInfo,\n      columns: columns,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/VirtualToPhysical.js"],"names":["React","Component","UserContext","SingleSelect","Checkbox","InputLabel","Input","Grid","Button","fetchAllStateDetails","fetchStudentDetailsBaisedOnChannel","fetchVirtualData","MUIDataTable","columns","label","name","options","sortDirection","headerStyle","color","selectableRows","filterType","responsive","disableToolbarSelect","rowsPerPage","VitualToPhysical","constructor","props","state","channelCreation","statelist","Selectedstate","studentInfo","handleStateChange","bind","then","jsondata","res","JSON","parse","data","console","log","forEach","element","push","selectname","event","getDetails","virtualData","i","length","details","EngagementId","Name","Dob","PrimaryContactNumber","PermAddressLine1","PermCityName","PermPincode","updateStudentdata","setState","render","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport UserContext from '../components/GolbalContext'\r\nimport { SingleSelect } from \"react-select-material-ui\";\r\nimport { Checkbox, InputLabel, Input, Grid, Button } from '@material-ui/core';\r\nimport {fetchAllStateDetails,fetchStudentDetailsBaisedOnChannel,fetchVirtualData } from './../util/api';\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\n\r\nconst columns = [\r\n{label: 'Engagement Id', name: 'engagement_id',options : {\r\n  sortDirection : 'desc'\r\n},headerStyle: {color:'#FF9800'}},\r\n// {label: 'Name', name: 'first_name',options : {    // not showing the value on fromt end\r\n//   sortDirection : 'desc',display: false\r\n// },headerStyle: {color:'#FF9800'}},\r\n{label: 'Name', name: 'Name',headerStyle: {color:'#FF9800'}},\r\n{label: 'Date Of Birth', name: 'Dob',headerStyle: {color:'#FF9800'}},\r\n{label: 'Contact Number', name: 'PrimaryContactNumber',headerStyle: {color:'#FF9800'}},\r\n{label: 'Address', name: 'PermAddressLine1',headerStyle: {color:'#FF9800'}},\r\n{label: 'City', name: 'PermCityName',headerStyle: {color:'#FF9800'}},\r\n{label: 'Pin code', name: 'PermPincode',headerStyle: {color:'#FF9800'}},\r\n{label: 'Action', name: 'Action',headerStyle: {color:'#FF9800'}}\r\n]\r\n\r\nconst options = { \r\n    selectableRows : 'single',\r\n    filterType: \"dropdown\",\r\n    responsive: \"stacked\",\r\n    sortDirection: \"desc\",\r\n    disableToolbarSelect:true,\r\n    rowsPerPage:10,\r\n    // selectableRowsOnClick: true,\r\n//     rowsSelected : this.state.selectedIndex,\r\n//     onRowsSelect: (allRows) => {\r\n//         let rows = this.state.selectedIndex;\r\n//         rows[0] = allRows[0].dataIndex;\r\n//         this.setState({\r\n//           rowsSelected : this.state.info[allRows[0].dataIndex],\r\n//           selectedIndex : rows,\r\n//           name:this.state.info[allRows[0].dataIndex].name\r\n//         }) // this is the row in your data source       \r\n//    },\r\n  };\r\nexport default class VitualToPhysical extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n           channelCreation:\"\",\r\n           statelist:[],\r\n           Selectedstate:\"\",\r\n           studentInfo:[],\r\n\r\n          \r\n        }\r\n        this.handleStateChange= this.handleStateChange.bind(this);\r\n       fetchAllStateDetails().then((jsondata)=>{\r\n                let res = JSON.parse(jsondata.data)\r\n                console.log(res)\r\n                res.forEach(element => {\r\n                    this.state.statelist.push({\r\n                        'value':element.name,\r\n                        'label':element.name,\r\n                    })\r\n                });\r\n            })\r\n\r\n            // // Fetch student details baised on strive chaneel\r\n            // fetchStudentDetailsBaisedOnChannel(\"SR-STRIVE\").then((jsondata)=>{\r\n            //     let res = JSON.parse(jsondata.data)\r\n            //     console.log(jsondata)\r\n            //     // console.log(res)\r\n            // })\r\n        \r\n    }\r\n\r\n    // Dropdown for state\r\n    handleStateChange(selectname,event){\r\n        const state = event\r\n        this.state.Selectedstate = state;\r\n    }\r\n\r\n    //Getting the info of the table data\r\n    getDetails(){\r\n        var virtualData=[];\r\n        fetchVirtualData(\"3049\", this.state.Selectedstate).then((jsondata)=>{\r\n            let res = JSON.parse(jsondata.data)\r\n            console.log(res[0])\r\n            for(var i=0;i<res.length;i++){\r\n                var details = \r\n                {\r\n                    \"engagement_id\": res[i].EngagementId,\r\n                    \"Name\":res[i].Name,\r\n                    \"Dob\":res[i].Dob,\r\n                    \"PrimaryContactNumber\":res[i].PrimaryContactNumber,\r\n                    \"PermAddressLine1\":res[i].PermAddressLine1,\r\n                    \"PermCityName\":res[i].PermCityName,\r\n                    \"PermPincode\":res[i].PermPincode,\r\n                    \"Action\":<Button variant=\"contained\" color=\"primary\" onClick={this.updateStudentdata()}>Save</Button>\r\n                }\r\n                virtualData.push(details); \r\n            }\r\n            // Saving data in array \r\n            this.setState({\r\n                studentInfo: virtualData\r\n              });\r\n        })\r\n    }\r\n// update student data\r\n    updateStudentdata(){\r\n\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div style={{ width: '100%' }}>\r\n            <Grid container>\r\n            <Grid item xs={12}> </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n            <InputLabel shrink={true} >State</InputLabel>\r\n            <SingleSelect\r\n              name=\"Selectedstate\" id=\"Selectedstate\"\r\n            //   key={this.state.Selectedstate || ''}\r\n              options={this.state.statelist}\r\n              value={this.state.Selectedstate || ''}\r\n              onChange={this.handleStateChange.bind(this, 'Selectedstate')}\r\n            //   helperText={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.label : ''}\r\n            //   error={this.state.errors.Selectedstate != undefined ? this.state.errors.Selectedstate.value : ''}\r\n            />\r\n            </Grid>\r\n            <Grid item xs={12} sm={1}></Grid>\r\n            <Grid item xs={12} sm={4}>\r\n            <Button color=\"primary\" onClick={this.getDetails.bind(this)}>\r\n               Get Details\r\n             </Button>\r\n          </Grid>\r\n          </Grid>\r\n          <br /> <br />\r\n          <br /> \r\n            <Grid>\r\n            <MUIDataTable  title={\"Students\"} label={\"List of Students\"} data={this.state.studentInfo} \r\n            columns={columns} options={options}\r\n            />\r\n            </Grid>\r\n            </div>\r\n           \r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}