{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\components\\\\Navbars\\\\DashboardNavbarLinks.js\";\nimport React from \"react\";\nimport classNames from \"classnames\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Poppers from \"@material-ui/core/Popper\";\nimport Divider from \"@material-ui/core/Divider\"; // @material-ui/icons\n\nimport Person from \"@material-ui/icons/Person\";\nimport Notifications from \"@material-ui/icons/Notifications\";\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Search from \"@material-ui/icons/Search\"; // core components\n\nimport CustomInput from \"./../CustomInput/CustomInput.js\";\nimport Button from \"./../CustomButtons/Button.js\";\nimport styles from \"./headerLinksStyle.js\";\nimport { Link } from 'react-router-dom';\nimport UserContext from './../../components/GolbalContext';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Settings from \"./../../views/Settings.js\";\nimport { Grid } from '@material-ui/core';\nconst useStyles = makeStyles(styles);\nexport default function AdminNavbarLinks() {\n  const classes = useStyles();\n  const [openNotification, setOpenNotification] = React.useState(null);\n  const [openProfile, setOpenProfile] = React.useState(null);\n\n  const handleClickNotification = event => {\n    if (openNotification && openNotification.contains(event.target)) {\n      setOpenNotification(null);\n    } else {\n      setOpenNotification(event.currentTarget);\n    }\n  };\n\n  const handleCloseNotification = () => {\n    setOpenNotification(null);\n  };\n\n  const handleClickProfile = event => {\n    if (openProfile && openProfile.contains(event.target)) {\n      setOpenProfile(null);\n    } else {\n      setOpenProfile(event.currentTarget);\n    }\n  };\n\n  const handleCloseProfile = () => {\n    setOpenProfile(null);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: '#3f51b5',\n      backgroundColor: \"beige\",\n      fontSize: \"medium\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"blue\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 1\n    }\n  }, \"Program Name \"), \": \", UserContext.programName, \" - \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"blue\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 84\n    }\n  }, \"Center \"), \": \", UserContext.centerName, \" - \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"blue\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 160\n    }\n  }, \"Role\"), \" : \", UserContext.roleName), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.manager,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: window.innerWidth > 959 ? \"transparent\" : \"white\",\n    justIcon: window.innerWidth > 959,\n    simple: !(window.innerWidth > 959),\n    \"aria-owns\": openProfile ? \"profile-menu-list-grow\" : null,\n    \"aria-haspopup\": \"true\",\n    onClick: handleClickProfile,\n    className: classes.buttonLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Person, {\n    className: classes.icons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    implementation: \"css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.linkText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, \"Profile\"))), /*#__PURE__*/React.createElement(Poppers, {\n    open: Boolean(openProfile),\n    anchorEl: openProfile,\n    transition: true,\n    disablePortal: true,\n    className: classNames({\n      [classes.popperClose]: !openProfile\n    }) + \" \" + classes.popperNav,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, ({\n    TransitionProps,\n    placement\n  }) => /*#__PURE__*/React.createElement(Grow, Object.assign({}, TransitionProps, {\n    id: \"profile-menu-list-grow\",\n    style: {\n      transformOrigin: placement === \"bottom\" ? \"center top\" : \"center bottom\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ClickAwayListener, {\n    onClickAway: handleCloseProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MenuList, {\n    role: \"menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    component: Link,\n    to: \"/dashboard/userprofile\",\n    onClick: handleCloseProfile,\n    className: classes.dropdownItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 21\n    }\n  }, UserContext.firstName, \"  \", UserContext.lastName, \" - \", UserContext.centerName, /*#__PURE__*/React.createElement(EditIcon, {\n    fontSize: \"small\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(MenuItem, {\n    component: Link,\n    to: \"/dashboard/changepassword\",\n    onClick: handleCloseProfile,\n    className: classes.dropdownItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  }, \"Change Password\"), /*#__PURE__*/React.createElement(MenuItem, {\n    component: Link,\n    to: \"/dashboard/settings\",\n    onClick: handleCloseProfile,\n    className: classes.dropdownItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  }, \"Settings\"), /*#__PURE__*/React.createElement(Divider, {\n    light: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(MenuItem, {\n    component: Link,\n    to: {\n      pathname: \"/\",\n      state: {\n        logoutmsg: \"Logged Out\"\n      }\n    },\n    onClick: handleCloseProfile,\n    className: classes.dropdownItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 21\n    }\n  }, \"Logout\"))))))));\n}","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/components/Navbars/DashboardNavbarLinks.js"],"names":["React","classNames","makeStyles","MenuItem","MenuList","Grow","Paper","ClickAwayListener","Hidden","Poppers","Divider","Person","Notifications","Dashboard","Search","CustomInput","Button","styles","Link","UserContext","EditIcon","Settings","Grid","useStyles","AdminNavbarLinks","classes","openNotification","setOpenNotification","useState","openProfile","setOpenProfile","handleClickNotification","event","contains","target","currentTarget","handleCloseNotification","handleClickProfile","handleCloseProfile","color","backgroundColor","fontSize","programName","centerName","roleName","manager","window","innerWidth","buttonLink","icons","linkText","Boolean","popperClose","popperNav","TransitionProps","placement","transformOrigin","dropdownItem","firstName","lastName","pathname","state","logoutmsg"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Poppers from \"@material-ui/core/Popper\";\nimport Divider from \"@material-ui/core/Divider\";\n// @material-ui/icons\nimport Person from \"@material-ui/icons/Person\";\nimport Notifications from \"@material-ui/icons/Notifications\";\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Search from \"@material-ui/icons/Search\";\n\n// core components\nimport CustomInput from \"./../CustomInput/CustomInput.js\";\nimport Button from \"./../CustomButtons/Button.js\";\n\nimport styles from \"./headerLinksStyle.js\";\nimport {Link} from 'react-router-dom';\nimport UserContext from './../../components/GolbalContext'\nimport EditIcon from '@material-ui/icons/Edit';\nimport Settings from \"./../../views/Settings.js\"\nimport { Grid}  from '@material-ui/core';\n\nconst useStyles = makeStyles(styles);\n\nexport default function AdminNavbarLinks() {\n  const classes = useStyles();\n  const [openNotification, setOpenNotification] = React.useState(null);\n  const [openProfile, setOpenProfile] = React.useState(null);\n  const handleClickNotification = event => {\n    if (openNotification && openNotification.contains(event.target)) {\n      setOpenNotification(null);\n    } else {\n      setOpenNotification(event.currentTarget);\n    }\n  };\n  const handleCloseNotification = () => {\n    setOpenNotification(null);\n  };\n  const handleClickProfile = event => {\n    if (openProfile && openProfile.contains(event.target)) {\n      setOpenProfile(null);\n    } else {\n      setOpenProfile(event.currentTarget);\n    }\n  };\n  const handleCloseProfile = () => {\n    setOpenProfile(null);\n  };\n\n \n\n\n  return (\n    <div>\n<span style = {{color :  '#3f51b5', backgroundColor : \"beige\" , fontSize : \"medium\"}}>\n<span style = {{color : \"blue\"}}>Program Name </span>: {UserContext.programName} - <span style = {{color : \"blue\"}}>Center </span>: {UserContext.centerName} - <span style = {{color : \"blue\"}}>Role</span> : {UserContext.roleName}\n</span>\n               \n      {/* <div className={classes.manager}>\n        <Button\n          color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\n          justIcon={window.innerWidth > 959}\n          simple={!(window.innerWidth > 959)}\n          aria-owns={openNotification ? \"notification-menu-list-grow\" : null}\n          aria-haspopup=\"true\"\n          onClick={handleClickNotification}\n          className={classes.buttonLink}\n        >\n          <Notifications className={classes.icons} />\n          <span className={classes.notifications}>5</span>\n          <Hidden mdUp implementation=\"css\">\n            <p onClick={handleCloseNotification} className={classes.linkText}>\n              Notification\n            </p>\n          </Hidden>\n        </Button>\n        <Poppers\n          open={Boolean(openNotification)}\n          anchorEl={openNotification}\n          transition\n          disablePortal\n          className={\n            classNames({ [classes.popperClose]: !openNotification }) +\n            \" \" +\n            classes.popperNav\n          }\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              id=\"notification-menu-list-grow\"\n              style={{\n                transformOrigin:\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\"\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleCloseNotification}>\n                  <MenuList role=\"menu\">\n                    <MenuItem\n                      onClick={handleCloseNotification}\n                      className={classes.dropdownItem}\n                    >\n                      Mike John responded to your email\n                    </MenuItem>\n                    <MenuItem\n                      onClick={handleCloseNotification}\n                      className={classes.dropdownItem}\n                    >\n                      You have 5 new tasks\n                    </MenuItem>\n                    <MenuItem\n                      onClick={handleCloseNotification}\n                      className={classes.dropdownItem}\n                    >\n                      You{\"'\"}re now friend with Andrew\n                    </MenuItem>\n                    <MenuItem\n                      onClick={handleCloseNotification}\n                      className={classes.dropdownItem}\n                    >\n                      Another Notification\n                    </MenuItem>\n                    <MenuItem\n                      onClick={handleCloseNotification}\n                      className={classes.dropdownItem}\n                    >\n                      Another One\n                    </MenuItem>\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Poppers>\n      </div> */}\n      <div className={classes.manager}>\n        <Button\n          color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\n          justIcon={window.innerWidth > 959}\n          simple={!(window.innerWidth > 959)}\n          aria-owns={openProfile ? \"profile-menu-list-grow\" : null}\n          aria-haspopup=\"true\"\n          onClick={handleClickProfile}\n          className={classes.buttonLink}\n        >\n          <Person className={classes.icons} />\n          <Hidden mdUp implementation=\"css\">\n            <p className={classes.linkText}>Profile</p>\n          </Hidden>\n        </Button>\n        <Poppers\n          open={Boolean(openProfile)}\n          anchorEl={openProfile}\n          transition\n          disablePortal\n          className={\n            classNames({ [classes.popperClose]: !openProfile }) +\n            \" \" +\n            classes.popperNav\n          }\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              id=\"profile-menu-list-grow\"\n              style={{\n                transformOrigin:\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\"\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleCloseProfile}>\n                  <MenuList role=\"menu\">\n                    <MenuItem\n                      component={Link}\n                      to=\"/dashboard/userprofile\"          \n                      onClick={handleCloseProfile}\n                      className={classes.dropdownItem}\n                    >\n                      {UserContext.firstName}  {UserContext.lastName} - {UserContext.centerName}\n                      <EditIcon fontSize='small' color=\"primary\"/>\n                    </MenuItem>\n                    <MenuItem\n                      component={Link}\n                      to=\"/dashboard/changepassword\"          \n                      onClick={handleCloseProfile}\n                      className={classes.dropdownItem}\n                    >\n                      Change Password\n                    </MenuItem>\n                    <MenuItem\n                       component={Link}\n                       to=\"/dashboard/settings\"          \n                       onClick={handleCloseProfile}\n                       className={classes.dropdownItem}\n                    >\n                      Settings                    \n                    </MenuItem>\n                    <Divider light />\n                    <MenuItem\n                      component={Link}\n                      to={{pathname:\"/\", state: { logoutmsg: \"Logged Out\" }}}\n                      onClick={handleCloseProfile}\n                      className={classes.dropdownItem}\n                    >\n                      Logout\n                    </MenuItem>\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Poppers>\n      </div>\n    </div>\n  );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}