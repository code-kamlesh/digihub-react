{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\BeneficiaryList.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from \"react-dom\";\nimport MUIDataTable from \"mui-datatables\";\nimport Button from '@material-ui/core/Button';\nimport UserContext from '../components/GolbalContext';\nimport { regenerateToken, checkEligibleForShortlist } from './../util/validation';\nimport { isTokenValid } from './../util/session';\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Card from \"./../components/Card/Card.js\";\nimport GridContainer from \"./../components/Grid/GridContainer.js\";\nimport GridItem from \"./../components/Grid/GridItem.js\";\nimport { serviceEndPoint } from './../util/serviceEndPoint';\nimport { fetchStudentDataForList, captureStudentEngagementDetailsB } from '../util/api';\nimport AlertDialog from './../util/AlertDialog';\nconst alertDialogOptions = {\n  message: ''\n};\n\nclass BeneficiaryList extends Component {\n  constructor() {\n    super(); // this.checkToken();\n\n    this.handleClick = () => {\n      console.log(\"clicked on icon!\");\n    };\n\n    this.shortList = e => {\n      e.preventDefault();\n      this.setState({\n        alertDialogFlag: false\n      });\n      var dbUserId = this.state.rowsSelected.student_id;\n\n      if (dbUserId) {\n        //alert(checkEligibleForShortlist(dbUserId))\n        checkEligibleForShortlist(dbUserId).then(result => result == 'true' ? this.alertNotEligible() : captureStudentEngagementDetailsB(dbUserId, UserContext.centerId, UserContext.userid, this.state.rowsSelected.engagement_id).then(jsondata => {\n          alertDialogOptions.message = /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: \"green\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 34\n            }\n          }, this.state.name, \"  shortlisted successfully\");\n          this.setState({\n            alertDialogFlag: true\n          });\n          this.setState({\n            rowsSelected: { ...this.state.rowsSelected,\n              name: '',\n              student_id: '',\n              engagement_id: ''\n            }\n          });\n        }));\n      } else {\n        this.setState({\n          alertDialogFlag: false\n        }, () => {\n          alertDialogOptions.message = '';\n          alertDialogOptions.message = /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: \"red\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 32\n            }\n          }, \"Please select a  beneficiary\");\n          this.setState({\n            alertDialogFlag: true\n          });\n        });\n      }\n    };\n\n    this.state = {\n      selectedIndex: [],\n      rowsSelected: {\n        'dbUserId': '',\n        'engagementId': '',\n        'programId': ''\n      },\n      info: [],\n      roleid: UserContext.roleid,\n      roleName: UserContext.roleName,\n      name: '',\n      programId: UserContext.defaultProgramId\n    };\n    this.fetchStudentDetails(); // alert(UserContext.centerId);\n  }\n\n  componentDidCatch() {\n    window.location.pathname(\"/\");\n  }\n\n  fetchStudentDetails() {\n    let studentInfo = [];\n    fetchStudentDataForList(UserContext.roleid).then(jsondata => {\n      let studentDetails = JSON.parse(jsondata.data);\n\n      for (var i = 0; i < studentDetails.length; i++) {\n        var details = {\n          'student_id': studentDetails[i].dbUserId,\n          'engagement_id': studentDetails[i].engagementId,\n          'linked_engagement_id': studentDetails[i].linkedEngagementId,\n          'name': studentDetails[i].firstName + \" \" + studentDetails[i].lastName,\n          'primaryContactNumber': studentDetails[i].primaryContactNumber,\n          'status': studentDetails[i].status,\n          'dob': studentDetails[i].dob,\n          'action': /*#__PURE__*/React.createElement(Link, {\n            to: {\n              pathname: '/dashboard/updatebeneficiary',\n              state: {\n                dbUserId: studentDetails[i].dbUserId,\n                status: studentDetails[i].status,\n                engagementId: studentDetails[i].engagementId,\n                name: studentDetails[i].firstName + \" \" + studentDetails[i].lastName,\n                tab: 0,\n                status: studentDetails[i].status,\n                linkedEngagementId: studentDetails[i].linkedEngagementId\n              }\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 28\n            }\n          }, /*#__PURE__*/React.createElement(EditIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 22\n            }\n          }))\n        };\n        studentInfo.push(details);\n      }\n\n      this.setState({\n        info: studentInfo\n      });\n    });\n  }\n\n  checkToken() {\n    var currentDateTime = new Date();\n\n    if (UserContext.jwtTimeOut.getTime() < currentDateTime.getTime()) {\n      regenerateToken();\n    }\n  }\n\n  alertNotEligible() {\n    alertDialogOptions.message = /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 30\n      }\n    }, this.state.name, \"  already shortlisted for another program.\");\n    this.setState({\n      alertDialogFlag: true\n    });\n  }\n\n  render() {\n    // let action=<Link to=\"/dashboard/updatebeneficiary\"><EditIcon/></Link>\n    const columns = [{\n      label: 'Student Id',\n      name: 'student_id',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Engagement Id',\n      name: 'engagement_id',\n      options: {\n        sortDirection: 'desc'\n      },\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'linked Engagement Id',\n      name: 'linked_engagement_id',\n      options: {\n        sortDirection: 'desc',\n        display: false\n      },\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Name',\n      name: 'name',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Contact Number',\n      name: 'primaryContactNumber',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Date Of Birth',\n      name: 'dob',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Status',\n      name: 'status',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Action',\n      name: 'action',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }];\n    const options = {\n      selectableRows: 'single',\n      filterType: \"dropdown\",\n      responsive: \"stacked\",\n      sortDirection: \"desc\",\n      disableToolbarSelect: true,\n      rowsPerPage: 10,\n      selectableRowsOnClick: true,\n      // textLabels: {\n      //   body: {\n      //     noMatch: <span style={{color:\"blue\"}}>Please wait data is loading...</span>\n      //   }\n      // },\n      rowsSelected: this.state.selectedIndex,\n      onRowsSelect: allRows => {\n        let rows = this.state.selectedIndex;\n        rows[0] = allRows[0].dataIndex;\n        this.setState({\n          rowsSelected: this.state.info[allRows[0].dataIndex],\n          selectedIndex: rows,\n          name: this.state.info[allRows[0].dataIndex].name\n        }); // this is the row in your data source       \n      }\n    };\n\n    if (this.state.roleid == 3 && UserContext.roleid === 3) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/React.createElement(MUIDataTable, {\n        title: \"Shortlisted Student list\",\n        label: \"List of Students\",\n        data: this.state.info,\n        columns: columns,\n        options: options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(GridContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/React.createElement(GridItem, {\n        xs: 12,\n        sm: 6,\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"small\",\n        disabled: this.state.rowsSelected.engagement_id == null || this.state.rowsSelected.status != 'Shortlisted' ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        style: {\n          color: 'white'\n        } //to=\"/dashboard/addobeneficiary\" \n        ,\n        to: {\n          pathname: \"/dashboard/updatebeneficiary\",\n          state: {\n            tab: 12,\n            dbUserId: this.state.rowsSelected.student_id,\n            engagementId: this.state.rowsSelected.engagement_id,\n            name: this.state.name,\n            status: this.state.rowsSelected.status\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 17\n        }\n      }, \"  Business Case Evalution \"))))));\n    } else if (UserContext.roleid === 9 || UserContext.roleid === 8) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 2\n        }\n      }, /*#__PURE__*/React.createElement(MUIDataTable, {\n        title: \"Beneficiary list\",\n        label: \"List of Students\",\n        data: this.state.info,\n        columns: columns,\n        options: options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(GridContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }\n      }, UserContext.defaultProgramId === 1 && /*#__PURE__*/React.createElement(GridItem, {\n        xs: 12,\n        sm: 6,\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"small\",\n        disabled: this.state.rowsSelected.engagement_id == null || this.state.rowsSelected.status != 'Mobilised' ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        style: {\n          color: 'white'\n        },\n        to: {\n          pathname: \"/dashboard/updatebeneficiary\",\n          state: {\n            tab: 10,\n            status: this.state.rowsSelected.status,\n            dbUserId: this.state.rowsSelected.student_id,\n            engagementId: this.state.rowsSelected.engagement_id,\n            name: this.state.name\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 19\n        }\n      }, \"  Evaluate \")))), (UserContext.defaultProgramId != 9 || UserContext.roleid != 8) && /*#__PURE__*/React.createElement(GridItem, {\n        xs: 12,\n        sm: 6,\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"small\",\n        disabled: this.state.rowsSelected.engagement_id != null && (this.state.rowsSelected.status == 'Shortlisted' || this.state.rowsSelected.status == 'Enrolled') ? false : true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        style: {\n          color: 'white'\n        } //to=\"/dashboard/addobeneficiary\" \n        ,\n        to: {\n          pathname: \"/dashboard/updatebeneficiary\",\n          state: {\n            tab: 11,\n            status: this.state.rowsSelected.status,\n            dbUserId: this.state.rowsSelected.student_id,\n            engagementId: this.state.rowsSelected.engagement_id,\n            name: this.state.name,\n            status: this.state.rowsSelected.status\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 17\n        }\n      }, \"  Enroll \"))))));\n    } else if (UserContext.roleid == 4 && (UserContext.defaultProgramId == 6 || UserContext.defaultProgramId === 8)) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/React.createElement(MUIDataTable, {\n        title: \" Beneficiary Student list\",\n        data: this.state.info,\n        columns: columns,\n        options: options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(GridContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(GridItem, {\n        xs: 12,\n        sm: 6,\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"small\",\n        disabled: this.state.rowsSelected.engagement_id == null || this.state.rowsSelected.status != 'Mobilised' ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        style: {\n          color: 'white'\n        } //to=\"/dashboard/addobeneficiary\" \n        ,\n        to: {\n          pathname: \"/dashboard/updatebeneficiary\",\n          state: {\n            tab: 6,\n            status: this.state.rowsSelected.status,\n            dbUserId: this.state.rowsSelected.student_id,\n            engagementId: this.state.rowsSelected.engagement_id,\n            name: this.state.name\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 15\n        }\n      }, \"Capture Observations \")))), /*#__PURE__*/React.createElement(GridItem, {\n        xs: 12,\n        sm: 6,\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"small\",\n        disabled: this.state.rowsSelected.engagement_id == null || this.state.rowsSelected.status != 'Mobilised' ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        style: {\n          color: 'white'\n        },\n        to: {\n          pathname: \"/dashboard/updatebeneficiary\",\n          state: {\n            tab: 8,\n            status: this.state.rowsSelected.status,\n            dbUserId: this.state.rowsSelected.student_id,\n            engagementId: this.state.rowsSelected.engagement_id,\n            name: this.state.name\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 15\n        }\n      }, \"Capture Business Case Brief \")))), /*#__PURE__*/React.createElement(GridItem, {\n        xs: 12,\n        sm: 6,\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"small\",\n        disabled: this.state.rowsSelected.engagement_id == null || this.state.rowsSelected.status != 'Mobilised' ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        style: {\n          color: 'white'\n        },\n        to: {\n          pathname: \"/dashboard/updatebeneficiary\",\n          state: {\n            tab: 9,\n            status: this.state.rowsSelected.status,\n            dbUserId: this.state.rowsSelected.student_id,\n            engagementId: this.state.rowsSelected.engagement_id,\n            name: this.state.name\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 15\n        }\n      }, \"Recommend to Principal \")))), UserContext.defaultProgramId === 6 && /*#__PURE__*/React.createElement(GridItem, {\n        xs: 12,\n        sm: 6,\n        md: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"small\",\n        onClick: this.shortList,\n        disabled: this.state.rowsSelected.engagement_id != null && this.state.rowsSelected.status == 'Enrolled' ? false : true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }\n      }, \" Shortlist\")))), this.state.alertDialogFlag && /*#__PURE__*/React.createElement(AlertDialog, {\n        message: alertDialogOptions.message,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 35\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/React.createElement(MUIDataTable, {\n        label: \"List of Students\",\n        data: this.state.info,\n        columns: columns,\n        options: options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }\n      }));\n    }\n  }\n\n}\n\nexport default BeneficiaryList;","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/BeneficiaryList.js"],"names":["React","Component","ReactDOM","MUIDataTable","Button","UserContext","regenerateToken","checkEligibleForShortlist","isTokenValid","BrowserRouter","Router","Link","EditIcon","Card","GridContainer","GridItem","serviceEndPoint","fetchStudentDataForList","captureStudentEngagementDetailsB","AlertDialog","alertDialogOptions","message","BeneficiaryList","constructor","handleClick","console","log","shortList","e","preventDefault","setState","alertDialogFlag","dbUserId","state","rowsSelected","student_id","then","result","alertNotEligible","centerId","userid","engagement_id","jsondata","color","name","selectedIndex","info","roleid","roleName","programId","defaultProgramId","fetchStudentDetails","componentDidCatch","window","location","pathname","studentInfo","studentDetails","JSON","parse","data","i","length","details","engagementId","linkedEngagementId","firstName","lastName","primaryContactNumber","status","dob","tab","push","checkToken","currentDateTime","Date","jwtTimeOut","getTime","render","columns","label","headerStyle","options","sortDirection","display","selectableRows","filterType","responsive","disableToolbarSelect","rowsPerPage","selectableRowsOnClick","onRowsSelect","allRows","rows","dataIndex"],"mappings":"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","sourcesContent":["\r\n\r\nimport React, { Component } from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport Button from '@material-ui/core/Button';\r\nimport UserContext from '../components/GolbalContext';\r\nimport { regenerateToken,checkEligibleForShortlist} from './../util/validation';\r\nimport { isTokenValid } from './../util/session';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link,\r\n  \r\n} from 'react-router-dom';\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Card from \"./../components/Card/Card.js\";\r\nimport GridContainer from \"./../components/Grid/GridContainer.js\";\r\nimport GridItem from \"./../components/Grid/GridItem.js\";\r\nimport { serviceEndPoint } from './../util/serviceEndPoint';\r\nimport { fetchStudentDataForList,captureStudentEngagementDetailsB } from '../util/api';\r\nimport AlertDialog from './../util/AlertDialog';\r\nconst alertDialogOptions = {\r\n  message: ''\r\n}\r\nclass BeneficiaryList extends Component {\r\n  constructor() {\r\n    super();\r\n    \r\n     // this.checkToken();\r\n  \r\n    this.state = {selectedIndex : [] , rowsSelected : {'dbUserId' : '', 'engagementId' : '','programId':''},\r\n      info:[],roleid:UserContext.roleid,roleName:UserContext.roleName,name:'',programId:UserContext.defaultProgramId};\r\n    this.fetchStudentDetails();\r\n    \r\n   // alert(UserContext.centerId);\r\n    \r\n}\r\n\r\ncomponentDidCatch()\r\n{\r\n  window.location.pathname(\"/\");\r\n}\r\n  \r\n\r\n\r\nhandleClick = () => {\r\n  console.log(\"clicked on icon!\");\r\n}\r\n\r\nfetchStudentDetails() {\r\n    let studentInfo=[];\r\n    fetchStudentDataForList(UserContext.roleid).then((jsondata)=>{    \r\n        let  studentDetails = JSON.parse(jsondata.data);  \r\n              for(var i=0;i<studentDetails.length;i++){\r\n              var  details =\r\n              {    'student_id':studentDetails[i].dbUserId, \r\n                  'engagement_id':studentDetails[i].engagementId,\r\n                  'linked_engagement_id':studentDetails[i].linkedEngagementId,\r\n                  'name' :studentDetails[i].firstName+\" \"+studentDetails[i].lastName,\r\n                  'primaryContactNumber' :studentDetails[i].primaryContactNumber,\r\n                  'status':studentDetails[i].status,\r\n                  'dob':studentDetails[i].dob,\r\n                  'action':<Link to={{\r\n                    pathname: '/dashboard/updatebeneficiary',\r\n                    state: { dbUserId: studentDetails[i].dbUserId ,status : studentDetails[i].status ,  engagementId :  studentDetails[i].engagementId , name : studentDetails[i].firstName + \" \" + studentDetails[i].lastName, tab : 0, status : studentDetails[i].status,linkedEngagementId:studentDetails[i].linkedEngagementId}\r\n                  }}><EditIcon /></Link>\r\n              }; \r\n              studentInfo.push(details);    \r\n          }    \r\n          this.setState({\r\n              info: studentInfo\r\n            });\r\n       })\r\n       \r\n}\r\n\r\n  checkToken()\r\n{\r\n  var currentDateTime=new Date();\r\n    if(UserContext.jwtTimeOut.getTime() < currentDateTime.getTime()){\r\n      regenerateToken();\r\n\r\n    }\r\n\r\n}\r\n\r\nshortList = (e) => {\r\n  e.preventDefault();\r\n this.setState({alertDialogFlag: false });\r\n  var dbUserId=this.state.rowsSelected.student_id;\r\n  if(dbUserId){\r\n    //alert(checkEligibleForShortlist(dbUserId))\r\n    checkEligibleForShortlist(dbUserId).then(result => result == 'true' ? this.alertNotEligible() : captureStudentEngagementDetailsB(dbUserId,UserContext.centerId,UserContext.userid,this.state.rowsSelected.engagement_id).then((jsondata) => { \r\n      alertDialogOptions.message=<span style={{color:\"green\"}}>{this.state.name}  shortlisted successfully</span>;\r\n      this.setState({alertDialogFlag:true});     \r\n      this.setState({\r\n        rowsSelected: {\r\n          ...this.state.rowsSelected,\r\n          name: '',student_id:'',engagement_id:''\r\n        }\r\n});\r\n   }))\r\n  }else { \r\n   this.setState({alertDialogFlag: false },()=>{\r\n    alertDialogOptions.message='';\r\n    alertDialogOptions.message=<span style={{color:\"red\"}}>Please select a  beneficiary</span>;\r\n      this.setState({alertDialogFlag: true });\r\n\r\n   });\r\n \r\n \r\n     }    \r\n}\r\n\r\nalertNotEligible()\r\n{\r\n  alertDialogOptions.message=<span style={{color:\"red\"}}>{this.state.name}  already shortlisted for another program.</span>;\r\n  this.setState({alertDialogFlag:true});\r\n}  \r\n\r\n\r\n  render() {\r\n   // let action=<Link to=\"/dashboard/updatebeneficiary\"><EditIcon/></Link>\r\n    const columns = [{label: 'Student Id', name: 'student_id', headerStyle: {color:'#FF9800'}},\r\n    {label: 'Engagement Id', name: 'engagement_id',options : {\r\n      sortDirection : 'desc'\r\n    },headerStyle: {color:'#FF9800'}},\r\n    {label: 'linked Engagement Id', name: 'linked_engagement_id',options : {\r\n      sortDirection : 'desc',display: false\r\n    },headerStyle: {color:'#FF9800'}},\r\n    {label: 'Name', name: 'name',headerStyle: {color:'#FF9800'}},\r\n    {label: 'Contact Number', name: 'primaryContactNumber',headerStyle: {color:'#FF9800'}},\r\n    {label: 'Date Of Birth', name: 'dob',headerStyle: {color:'#FF9800'}},\r\n    {label: 'Status', name: 'status',headerStyle: {color:'#FF9800'}},\r\n    {label: 'Action', name: 'action',headerStyle: {color:'#FF9800'}}\r\n     \r\n   ]\r\n   \r\n    const options = {\r\n      \r\n      selectableRows : 'single',\r\n    \r\n      filterType: \"dropdown\",\r\n      responsive: \"stacked\",\r\n      sortDirection: \"desc\",\r\n      disableToolbarSelect:true,\r\n      rowsPerPage:10,\r\n      selectableRowsOnClick: true,\r\n     \r\n      // textLabels: {\r\n      //   body: {\r\n      //     noMatch: <span style={{color:\"blue\"}}>Please wait data is loading...</span>\r\n      //   }\r\n      // },\r\n      rowsSelected : this.state.selectedIndex,\r\n      onRowsSelect: (allRows) => {\r\n          let rows = this.state.selectedIndex;\r\n          rows[0] = allRows[0].dataIndex;\r\n          this.setState({\r\n            rowsSelected : this.state.info[allRows[0].dataIndex],\r\n            selectedIndex : rows,\r\n            name:this.state.info[allRows[0].dataIndex].name\r\n            \r\n          }) // this is the row in your data source       \r\n     },\r\n    };\r\n    if (this.state.roleid==3 && UserContext.roleid===3){\r\n    return ( \r\n\r\n<div>        \r\n        <MUIDataTable  title={\"Shortlisted Student list\"} label={\"List of Students\"} data={this.state.info} columns={columns} options={options}\r\n      />\r\n        \r\n<GridContainer>\r\n            \r\n    \r\n           \r\n    \r\n            <GridItem xs={12} sm={6} md={3}>\r\n              <Card>  \r\n                <Button variant=\"contained\" color=\"primary\"  size=\"small\" disabled={this.state.rowsSelected.engagement_id==null || this.state.rowsSelected.status !='Shortlisted'?true:false}>  \r\n                <Link style = {{color : 'white'}}\r\n                  //to=\"/dashboard/addobeneficiary\" \r\n                  to={{pathname:\"/dashboard/updatebeneficiary\", state: { tab:12,dbUserId:this.state.rowsSelected.student_id,engagementId:this.state.rowsSelected.engagement_id,name:this.state.name,status : this.state.rowsSelected.status}}}>  Business Case Evalution </Link>\r\n                </Button>\r\n              </Card>                   \r\n            </GridItem>\r\n          </GridContainer>\r\n    </div>\r\n    );\r\n   \r\n    }\r\n    else if (UserContext.roleid===9 || UserContext.roleid===8){\r\n      return(\r\n <div> \r\n\r\n            {/* <form> */}\r\n                <MUIDataTable title={\"Beneficiary list\"} label={\"List of Students\"} data={this.state.info} columns={columns} options={options}\r\n            />\r\n            \r\n            <GridContainer>\r\n            { \r\n            (UserContext.defaultProgramId===1) &&\r\n            <GridItem xs={12} sm={6} md={3}>\r\n              <Card>  \r\n                <Button variant=\"contained\" color=\"primary\" size=\"small\" disabled={this.state.rowsSelected.engagement_id==null || this.state.rowsSelected.status !='Mobilised'?true:false}>  \r\n                  <Link style = {{color : 'white'}} \r\n                  to={{pathname:\"/dashboard/updatebeneficiary\", state: { tab:10,status : this.state.rowsSelected.status , dbUserId:this.state.rowsSelected.student_id,engagementId:this.state.rowsSelected.engagement_id,name:this.state.name}}}>  Evaluate </Link>\r\n                </Button>\r\n              </Card>                   \r\n            </GridItem>\r\n            }\r\n            { \r\n            (UserContext.defaultProgramId!=9 || UserContext.roleid!=8) &&\r\n            <GridItem xs={12} sm={6} md={3}>\r\n              <Card>  \r\n                <Button variant=\"contained\" color=\"primary\" size=\"small\" disabled={this.state.rowsSelected.engagement_id!=null &&  (this.state.rowsSelected.status =='Shortlisted' || this.state.rowsSelected.status =='Enrolled')?false:true}>  \r\n                <Link style = {{color : 'white'}}\r\n                  //to=\"/dashboard/addobeneficiary\" \r\n                  to={{pathname:\"/dashboard/updatebeneficiary\", state: { tab:11,status : this.state.rowsSelected.status, dbUserId:this.state.rowsSelected.student_id,engagementId:this.state.rowsSelected.engagement_id,name:this.state.name,status : this.state.rowsSelected.status}}}>  Enroll </Link>\r\n                </Button>\r\n              </Card>                   \r\n            </GridItem>\r\n              }\r\n            {/* <GridItem xs={12} sm={6} md={3}>\r\n              <Card>  \r\n                <Button variant=\"contained\" color=\"primary\" size=\"small\" disabled={this.state.rowsSelected.engagement_id!=null &&  (this.state.rowsSelected.status =='Enrolled')?false:true}>  \r\n                <Link style = {{color : 'white'}}\r\n                  //to=\"/dashboard/addobeneficiary\" \r\n                  to={{pathname:\"/dashboard/updatebeneficiary\", state: { tab:14,status : this.state.rowsSelected.status, dbUserId:this.state.rowsSelected.student_id,engagementId:this.state.rowsSelected.engagement_id,name:this.state.name,status : this.state.rowsSelected.status}}}>  Placement </Link>\r\n                </Button>\r\n              </Card>                   \r\n            </GridItem> */}\r\n          </GridContainer>\r\n           {/* </form> */}\r\n       </div>        \r\n      );\r\n    }\r\n    else if (UserContext.roleid==4 && (UserContext.defaultProgramId ==6 || UserContext.defaultProgramId ===8)){\r\n      return(\r\n\r\n<div>\r\n\r\n        <MUIDataTable  title={\" Beneficiary Student list\"}  data={this.state.info} columns={columns} options={options}\r\n      />\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={6} md={3}>\r\n          <Card>  \r\n            <Button variant=\"contained\" color=\"primary\" size=\"small\" disabled={this.state.rowsSelected.engagement_id==null || this.state.rowsSelected.status !='Mobilised'?true:false}>  \r\n              <Link style = {{color : 'white'}} \r\n              //to=\"/dashboard/addobeneficiary\" \r\n              to={{pathname:\"/dashboard/updatebeneficiary\", state: { tab:6,status : this.state.rowsSelected.status, dbUserId:this.state.rowsSelected.student_id,engagementId:this.state.rowsSelected.engagement_id,name:this.state.name}}}> \r\n               Capture Observations </Link>\r\n            </Button>\r\n          </Card>                   \r\n        </GridItem>\r\n        <GridItem xs={12} sm={6} md={4}>\r\n          <Card>  \r\n            <Button variant=\"contained\" color=\"primary\" size=\"small\" disabled={this.state.rowsSelected.engagement_id==null || this.state.rowsSelected.status !='Mobilised'?true:false}>  \r\n              <Link style={{ color: 'white' }}\r\n                to={{pathname:\"/dashboard/updatebeneficiary\", state: { tab:8,status : this.state.rowsSelected.status,dbUserId:this.state.rowsSelected.student_id,engagementId : this.state.rowsSelected.engagement_id,name:this.state.name}}}> \r\n                 Capture Business Case Brief </Link>\r\n            </Button>\r\n          </Card>                   \r\n        </GridItem>\r\n        <GridItem xs={12} sm={6} md={3}>\r\n          <Card>  \r\n            <Button variant=\"contained\" color=\"primary\" size=\"small\" disabled={this.state.rowsSelected.engagement_id==null || this.state.rowsSelected.status !='Mobilised' ?true:false}>  \r\n              <Link style = {{color : 'white'}}\r\n                to={{pathname:\"/dashboard/updatebeneficiary\", state: { tab:9,status : this.state.rowsSelected.status , dbUserId:this.state.rowsSelected.student_id,engagementId:this.state.rowsSelected.engagement_id,name:this.state.name}}}> \r\n                 Recommend to Principal </Link>\r\n            </Button>\r\n          </Card>                   \r\n        </GridItem>\r\n          { \r\n        (UserContext.defaultProgramId===6) &&\r\n        <GridItem xs={12} sm={6} md={2}>\r\n          <Card>  \r\n          <Button variant=\"contained\" color=\"primary\" size=\"small\"\r\n            onClick={this.shortList}\r\n            disabled={this.state.rowsSelected.engagement_id!=null &&  (this.state.rowsSelected.status =='Enrolled')?false:true}> Shortlist</Button>\r\n          </Card>                   \r\n        </GridItem>\r\n        }\r\n      </GridContainer>\r\n      { \r\n  (this.state.alertDialogFlag) && <AlertDialog   message={alertDialogOptions.message}></AlertDialog>\r\n    }\r\n    </div>\r\n    );\r\n    }\r\n\r\n    else{\r\n      return(\r\n\r\n<div>\r\n            <MUIDataTable label={\"List of Students\"} data={this.state.info} columns={columns} options={options}\r\n        />\r\n        </div>\r\n      );\r\n }\r\n \r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default BeneficiaryList ;\r\n"]},"metadata":{},"sourceType":"module"}