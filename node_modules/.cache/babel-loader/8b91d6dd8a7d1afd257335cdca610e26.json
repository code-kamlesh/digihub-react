{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\PlacementDetails.js\";\nimport React, { Component } from 'react';\nimport { render } from \"react-dom\";\nimport './../App.css';\nimport './../assets/css/login-style.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { SingleSelect } from \"react-select-material-ui\";\nimport callMerge from 'material-ui/svg-icons/communication/call-merge';\nimport UserContext from '../components/GolbalContext';\nimport { FormControl, InputLabel, FormControlLabel, Input, Grid, RadioGroup, Radio, TextField } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport { isNotEmpty, isNotZero } from './../util/validation';\nimport { roleBasedReadonly, checkButton } from '../util/validation';\nimport AlertDialog from '../util/AlertDialog';\nimport Paper from '@material-ui/core/Paper';\nimport { savePlacementDetails, deleteDocumentById, fetchUserDocumentsByUserIdAndTypeOfDocument, fectAddressDetailsByAddressID, fetchAddressDetailsBasedOnPincode, fetchPlacementDetailsByEngagementId, fetchAllCenter, saveAddressDetails, uploadDocument, fetchEmployerDetails } from '../util/api';\nimport MUIDataTable from \"mui-datatables\";\nimport AddressForPlacement from \"./AddressForPlacement\";\nimport underscore from 'underscore';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { DropzoneArea } from 'material-ui-dropzone';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { serviceEndPoint } from '../util/serviceEndPoint';\nimport Checkbox from '@material-ui/core/Checkbox';\nconst alertDialogOptions = {\n  message: ''\n};\n\nclass PlacementDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const target = event.target;\n      let value = target.value;\n      const name = target.name;\n      this.setState({\n        placementData: { ...this.state.placementData\n        }\n      });\n    };\n\n    this.deleteDocument = basicDocId => {\n      deleteDocumentById(basicDocId);\n      this.getDocuments();\n    };\n\n    this.handleCheckboxChange = event => {\n      this.setState({\n        placementData: { ...this.state.placementData,\n          [event.target.name]: event.target.checked\n        }\n      });\n    };\n\n    this.mySubmitHandler = event => {\n      // alert(\"check\");\n      event.preventDefault();\n      this.state.disabled = true;\n      this.validate(\"interviewStatus\", this.state.placementData.interviewStatus);\n\n      if (this.state.errors.interviewStatus === '') {\n        if (this.state.placementData.interviewStatus === 'Placed' || this.state.placementData.interviewStatus === 'Offer Not Taken') {\n          this.validatePlacedAndOfferNotTaken(\"empId\", this.state.placementData.empId);\n          this.validatePlacedAndOfferNotTaken(\"domainName\", this.state.placementData.domainName);\n          this.validatePlacedAndOfferNotTaken(\"spocName\", this.state.placementData.spocName);\n          this.validatePlacedAndOfferNotTaken(\"designation\", this.state.placementData.designation);\n          this.validatePlacedAndOfferNotTaken(\"spocPhoneNumber\", this.state.placementData.spocPhoneNumber);\n          this.validatePlacedAndOfferNotTaken(\"annualSal\", this.state.placementData.annualSal);\n          this.validatePlacedAndOfferNotTaken(\"offerDate\", this.state.placementData.offerDate);\n          this.validatePlacedAndOfferNotTaken(\"joiningDate\", this.state.placementData.joiningDate);\n          this.validatePlacedAndOfferNotTaken(\"joined\", this.state.placementData.joined);\n          this.validateAddress(\"pincode\", this.state.address.pincode);\n          this.validateAddress(\"villageName\", this.state.address.villageName);\n          this.validateAddress(\"cityName\", this.state.address.cityName);\n          this.validateAddress(\"state\", this.state.address.state);\n          this.validateAddress(\"district\", this.state.address.district);\n          let errorsExist = true;\n          Object.values(this.state.errors).forEach(val => val.length > 0 && (errorsExist = false));\n\n          if (errorsExist) {\n            this.submitPlacementDetails();\n          }\n        } else if (this.state.placementData.interviewStatus === 'Not Placed') {\n          this.validateNotPlaced(\"reason\", this.state.placementData.reason);\n          let errorsExist = true;\n          Object.values(this.state.errors).forEach(val => val.length > 0 && (errorsExist = false));\n\n          if (errorsExist) {\n            this.submitPlacementDetails();\n          }\n        } else if (this.state.placementData.interviewStatus === 'Not Interested') {\n          this.validateNotInterested(\"reason\", this.state.placementData.reason);\n          let errorsExist = true;\n          Object.values(this.state.errors).forEach(val => val.length > 0 && (errorsExist = false));\n\n          if (errorsExist) {\n            this.submitPlacementDetails();\n          }\n        } else if (this.state.placementData.interviewStatus === 'Entrepreneurship') {\n          this.validateAddress(\"pincode\", this.state.address.pincode);\n          this.validateAddress(\"villageName\", this.state.address.villageName);\n          this.validateAddress(\"cityName\", this.state.address.cityName);\n          this.validateAddress(\"state\", this.state.address.state);\n          this.validateAddress(\"district\", this.state.address.district);\n          this.validateEntrepreneurship(\"noOfPeopleEmployed\", this.state.placementData.noOfPeopleEmployed);\n          let errorsExist = true;\n          Object.values(this.state.errors).forEach(val => val.length > 0 && (errorsExist = false));\n\n          if (errorsExist) {\n            this.submitPlacementDetails();\n          }\n        } else if (this.state.placementData.interviewStatus === 'Rejected') {\n          this.validateRejected(\"empId\", this.state.placementData.empId);\n          let errorsExist = true;\n          Object.values(this.state.errors).forEach(val => val.length > 0 && (errorsExist = false));\n\n          if (errorsExist) {\n            this.submitPlacementDetails();\n          }\n        } else {\n          this.submitPlacementDetails();\n        }\n      } // authentication response and redirect to error or dashbaord page\n\n\n      this.setState({\n        errors: this.state.errors\n      });\n\n      if (checkButton(this.state.errors)) {} else {\n        this.state.disabled = true;\n      }\n    };\n\n    this.validate = (name, value) => {\n      let errors = this.state.errors;\n\n      switch (name) {\n        case 'interviewStatus':\n          errors.interviewStatus = isNotEmpty(value);\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors\n      });\n    };\n\n    this.validateNotInterested = (name, value) => {\n      let errors = this.state.errors;\n\n      switch (name) {\n        case 'reason':\n          errors.reason = isNotEmpty(value);\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors\n      });\n    };\n\n    this.validateEntrepreneurship = (name, value) => {\n      let errors = this.state.errors;\n\n      switch (name) {\n        case 'noOfPeopleEmployed':\n          errors.noOfPeopleEmployed = isNotEmpty(value);\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors\n      });\n    };\n\n    this.validateNotPlaced = (name, value) => {\n      let errors = this.state.errors;\n\n      switch (name) {\n        case 'reason':\n          errors.reason = isNotEmpty(value);\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors\n      });\n    };\n\n    this.validateRejected = (name, value) => {\n      let errors = this.state.errors;\n\n      switch (name) {\n        case 'empId':\n          errors.empId = isNotZero(value);\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors\n      });\n    };\n\n    this.validatePlacedAndOfferNotTaken = (name, value) => {\n      let errors = this.state.errors;\n\n      switch (name) {\n        case 'empId':\n          errors.empId = isNotEmpty(value);\n          break;\n\n        case 'domainName':\n          errors.domainName = isNotEmpty(value);\n          break;\n\n        case 'spocName':\n          errors.spocName = isNotEmpty(value);\n          break;\n\n        case 'designation':\n          errors.designation = isNotEmpty(value);\n          break;\n\n        case 'spocPhoneNumber':\n          errors.spocPhoneNumber = isNotEmpty(value);\n          break;\n\n        case 'annualSal':\n          errors.annualSal = isNotEmpty(value);\n          break;\n\n        case 'offerDate':\n          errors.offerDate = isNotEmpty(value);\n          break;\n\n        case 'joiningDate':\n          errors.joiningDate = isNotEmpty(value);\n          break;\n\n        case 'joined':\n          errors.joined = isNotEmpty(value);\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors\n      });\n    };\n\n    this.validateAddress = (name, value) => {\n      let errors = this.state.errors;\n\n      switch (name) {\n        case 'pincode':\n          errors.pincode = isNotEmpty(value);\n          break;\n\n        case 'villageName':\n          errors.village = isNotEmpty(value);\n          break;\n\n        case 'cityName':\n          errors.cityName = isNotEmpty(value);\n          break;\n\n        case 'state':\n          errors.state = isNotEmpty(value);\n          break;\n\n        case 'district':\n          errors.district = isNotEmpty(value);\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors\n      });\n    };\n\n    this.downloadDocuments = value => {\n      let formData = new FormData();\n      formData.append('data', '{\"token\" : \"\", \"action\" : \"downloadDocument\", \"data\" : [{\"basicDocId\":' + value + '}]}');\n      fetch(serviceEndPoint.documentServiceEndPoint, {\n        method: 'post',\n        headers: {\n          'Authorization': 'Bearer ' + UserContext.token\n        },\n        body: formData\n      }).then(response => response.json()).then(jsondata => {\n        let jsonobjects = JSON.parse(jsondata.data);\n        var url = serviceEndPoint.downloadDocument + jsonobjects[0].documentPath + \"\";\n        window.open(url, \"_blank\");\n      });\n    };\n\n    this.uploadDocuments = e => {\n      e.preventDefault();\n      var levelOfDocument = \"G\";\n      let localThis = this;\n      let reader = new FileReader();\n      reader.readAsDataURL(this.state.file);\n\n      reader.onload = function () {\n        let document = reader.result;\n        localThis.setState({\n          alertDialogFlag: false\n        });\n        uploadDocument(localThis.state.dbUserId, localThis.state.engagementId, localThis.state.typeOfDocument, 'PD', localThis.state.typeOfDocument, document, \"\").then(res => {});\n      };\n    };\n\n    this.onFileChangeHandler = files => {\n      this.setState({\n        file: files[0]\n      });\n    };\n\n    this.state = {\n      engagementId: props.engagementId,\n      alertDialogFlag: false,\n      disabled: false,\n      flag: \"0\",\n      errors: {\n        joiningDate: '',\n        offerDate: '',\n        annualSal: '',\n        spocPhoneNumber: '',\n        designation: '',\n        pincode: '',\n        noOfPeopleEmployed: '',\n        spocName: ''\n      },\n      dbUserId: props.id,\n      info: [],\n      placementData: {\n        annualSal: '0',\n        empId: 0,\n        noOfPeopleEmployed: '0',\n        joined: '',\n        spocPhoneNumber: '',\n        spocName: '',\n        designation: '',\n        domainName: '',\n        addressId: \"0\",\n        createdBy: UserContext.userid,\n        updatedBy: UserContext.userid,\n        engagementId: props.engagementId,\n        dbUserId: props.id,\n        interviewDate: \"\",\n        interviewStatus: \"\",\n        interviewRemark: \"\",\n        offerDate: \"\",\n        joiningDate: \"\",\n        isActive: \"Y\",\n        isDocumentsUploaded: '',\n        reason: '',\n        isConsentProvided: '',\n        foodProvided: '',\n        accomodationProvided: ''\n      },\n      center: [],\n      centerData: [],\n      documents: [],\n      info: [{\n        \"createdBy\": UserContext.userid,\n        \"updatedBy\": UserContext.userid,\n        \"isActive\": \"Y\",\n        \"dbUserId\": props.id\n      }],\n      intStatus: [{\n        value: 'Placed',\n        label: 'Placed'\n      }, // { value: 'Offer Not Taken', label: 'Offer Not Taken'},\n      // { value: 'Not Placed', label: 'Not Placed' },\n      {\n        value: 'Not Interested',\n        label: 'Not Interested'\n      }, {\n        value: 'Entrepreneurship',\n        label: 'Entrepreneurship'\n      }, {\n        value: 'Self Employed',\n        label: 'Self Employed'\n      }, {\n        value: 'Rejected',\n        label: 'Rejected'\n      }],\n      offerNotTakenReason: [{\n        value: 'Low salary',\n        label: 'Low salary'\n      }, {\n        value: 'Migration',\n        label: 'Migration'\n      }, {\n        value: 'Family problem',\n        label: 'Family problem'\n      }, {\n        value: 'health issues',\n        label: 'health issues'\n      }, {\n        value: 'further studies',\n        label: 'further studies'\n      }, {\n        value: 'marriage',\n        label: 'marriage'\n      }],\n      notPlacedReasons: [{\n        value: 'Other',\n        label: 'Other'\n      }, {\n        value: 'Not Interested',\n        label: 'Not Interested'\n      }, {\n        value: 'Got other job',\n        label: 'Got other job'\n      }, {\n        value: 'Health Issues',\n        label: 'Health Issues'\n      }, {\n        value: 'Moved to other place',\n        label: 'Moved to other place'\n      }, {\n        value: 'Not Eligible',\n        label: 'Not Eligible'\n      }, {\n        value: 'Marriage',\n        label: 'Marriage'\n      }, {\n        value: 'Higher Education',\n        label: 'Higher Education'\n      }, {\n        value: 'Maternity',\n        label: 'Maternity'\n      }],\n      notInterestedReason: [{\n        value: 'family issue',\n        label: 'family issue'\n      }, {\n        value: 'medical problem',\n        label: 'medical problem'\n      }, {\n        value: 'higher studies',\n        label: 'higher studies'\n      }],\n      studStatus: [{\n        value: 'Inter',\n        label: 'Inter'\n      }, {\n        value: 'Joined',\n        label: 'Joined'\n      }],\n      domains: [{\n        value: 'BFSI',\n        label: 'BFSI'\n      }, {\n        value: 'Joined',\n        label: 'Joined'\n      }],\n      join: [{\n        value: 'Yes',\n        label: 'Yes'\n      }, {\n        value: 'No',\n        label: 'No'\n      }],\n      typeOfDocument: null,\n      file: null,\n      typeOfProofData: [{\n        value: 'AgeProof',\n        label: 'Age Proof'\n      }, {\n        value: 'ApplicationForm',\n        label: 'Application Form'\n      }, {\n        value: 'CasteCertificate',\n        label: 'Caste Certificate'\n      }, {\n        value: 'ContributionReceipt',\n        label: 'Contribution Receipt'\n      }, {\n        value: 'EducationProof',\n        label: 'Education Proof'\n      }, {\n        value: 'FirstDayPicture',\n        label: 'First Day Picture'\n      }, {\n        value: 'LastDayPicture',\n        label: 'Last Day Picture'\n      }, {\n        value: 'Medicalfitnesscertificate',\n        label: 'Medical fitness certificate'\n      }, {\n        value: 'PhotoProof',\n        label: 'Photo Proof'\n      }, {\n        value: 'StudentPicture',\n        label: 'Student Picture'\n      }, {\n        value: 'Studentsigned',\n        label: 'Student signed'\n      }],\n      typeOfDocumentData: [{\n        value: 'Offer Letter',\n        label: 'Offer Letter'\n      }, {\n        value: 'Joining Letter',\n        label: 'Joining Letter'\n      }, {\n        value: 'Pay Slip',\n        label: 'Pay Slip'\n      }, {\n        value: 'Bank Statement',\n        label: 'Bank Statement'\n      }, {\n        value: 'Email From Employer',\n        label: 'Email From Employer'\n      }, {\n        value: 'Workplace Picture',\n        label: 'Workplace Picture'\n      }, {\n        value: 'ID card',\n        label: 'ID card'\n      }, {\n        value: 'Letter from HR',\n        label: 'Letter from HR'\n      }],\n      address: {\n        entityId: props.engagementId,\n        createdBy: UserContext.userid,\n        'isActive': 'Y',\n        'type': 'PD',\n        'entityType': 'S',\n        pincode: \"\",\n        addressLine1: \"\",\n        addressLine2: \"\",\n        district: \"\",\n        state: \"\",\n        cityName: \"\",\n        villageName: \"\"\n      },\n      state: [],\n      district: [],\n      pincodes: [],\n      city: [],\n      village: [],\n      engagementId: props.engagementId\n    };\n    this.formData = {\n      state: [],\n      district: [],\n      pincodes: [],\n      city: [],\n      village: []\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.getCenterMasters();\n    this.getDocuments(); //alert(this.state.engagementId);\n\n    if (props.id != null && props.id != undefined) {\n      this.fetchPlacementdetailsFouUser(props.engagementId);\n    }\n  }\n\n  componentDidMount() {\n    roleBasedReadonly();\n  }\n\n  getDocuments() {\n    fetchUserDocumentsByUserIdAndTypeOfDocument(this.state.dbUserId, 'PD').then(jsondata => {\n      let jsonobjects = JSON.parse(jsondata.data);\n      this.setState({\n        documents: [...this.state.documents, ...jsonobjects]\n      });\n    });\n  }\n\n  handleEditChange(obj) {\n    this.setState({\n      placementData: obj\n    }, () => {\n      if (this.state.placementData.interviewStatus === 'Placed' || this.state.placementData.interviewStatus === 'Offer Not Taken' || this.state.placementData.interviewStatus === 'Entrepreneurship') {\n        this.getAddressDetailsByAddressID(this.state.placementData.addressId);\n      }\n    });\n  }\n\n  getAddressDetailsByAddressID(addressId) {\n    fectAddressDetailsByAddressID(addressId).then(jsondata => {\n      let addressDetails = JSON.parse(jsondata.data);\n      this.setState({\n        address: addressDetails[0]\n      }, () => {\n        this.getAddressdataBasedOnPin(this.state.address.pincode);\n      });\n    });\n  }\n\n  getAddressdataBasedOnPin(pincode) {\n    fetchAddressDetailsBasedOnPincode(pincode).then(jsondata => {\n      let jsonobjects = JSON.parse(jsondata.data);\n      let taluk = [];\n      let pincode = [];\n      let cityVillage = [];\n      let states = [];\n      let district = [];\n      this.formData.village.length = 0;\n      this.formData.pincodes.length = 0;\n      this.formData.city.length = 0;\n      this.formData.state.length = 0;\n      this.formData.district.length = 0;\n      jsonobjects.map(item => {\n        cityVillage.push({\n          label: item.cityVillage,\n          value: item.id\n        });\n      });\n      cityVillage = underscore.uniq(cityVillage, true, \"label\");\n      cityVillage.map(item => {\n        this.formData.village.push({\n          label: item.label,\n          value: item.label.toString()\n        });\n      });\n      this.setState({\n        village: this.formData.village\n      });\n      jsonobjects.map(item => {\n        taluk.push({\n          label: item.taluk,\n          value: item.id\n        });\n      });\n      taluk = underscore.uniq(taluk, true, \"label\");\n      taluk.map(item => {\n        this.formData.city.push({\n          label: item.label,\n          value: item.label.toString()\n        });\n      });\n      this.setState({\n        city: this.formData.city\n      });\n      jsonobjects.map(item => {\n        states.push({\n          label: item.state,\n          value: item.id\n        });\n      });\n      states = underscore.uniq(states, true, \"label\");\n      states.map(item => {\n        this.formData.state.push({\n          label: item.label,\n          value: item.value.toString()\n        });\n      });\n      this.setState({\n        state: this.formData.state\n      }, () => {\n        console.log(this.state.state);\n      });\n      jsonobjects.map(item => {\n        district.push({\n          label: item.district,\n          value: item.id\n        });\n      });\n      district = underscore.uniq(district, true, \"label\");\n      district.map(item => {\n        this.formData.district.push({\n          label: item.label,\n          value: item.value.toString()\n        });\n      });\n      this.setState({\n        district: this.formData.district\n      });\n    });\n  }\n\n  handleSelectChangeDoc(selectname, event) {\n    this.setState({\n      [selectname]: event\n    });\n  }\n\n  handlePlacementSelectChange(selectname, event) {\n    this.setState({\n      placementData: { ...this.state.placementData,\n        [selectname]: event\n      }\n    });\n    this.validate(selectname, event);\n  }\n\n  handleSelectChange(selectname, event) {\n    let value = 0;\n    let target = null;\n\n    try {\n      target = event.target;\n      value = target.value;\n    } catch (e) {\n      value = event;\n    }\n\n    this.setState({\n      \"disabled\": false\n    });\n    this.setState({\n      placementData: { ...this.state.placementData,\n        [selectname]: event\n      }\n    }); //   this.setState({\n    //     errors: {\n    //       ...this.state.errors,\n    //       [selectname] : {\n    //         'label' : \"\" , \n    //         'value' : false\n    //       }\n    //     }\n    // });\n\n    if (this.state.placementData.interviewStatus === 'Not Placed') {\n      this.validateNotPlaced(selectname, event);\n    } else if (this.state.placementData.interviewStatus === 'Not Interested') {\n      this.validateNotInterested(selectname, event);\n    } else if (this.state.placementData.interviewStatus === 'Placed' || this.state.placementData.interviewStatus === 'Offer Not Taken') {\n      this.validatePlacedAndOfferNotTaken(selectname, event);\n    } else if (this.state.placementData.interviewStatus === 'Rejected') {\n      this.validateRejected(selectname, event);\n    }\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    let value = target.value;\n    const name = target.name;\n    this.setState({\n      \"disabled\": false\n    }); //   this.setState({\n    //     errors: {\n    //       ...this.state.errors,\n    //       [name] : {\n    //         'label' : \"\" , \n    //         'value' : false\n    //       }\n    //     }\n    // });\n\n    this.setState({\n      placementData: { ...this.state.placementData,\n        [name]: value\n      }\n    });\n\n    if (this.state.placementData.interviewStatus === 'Entrepreneurship') {\n      this.validateEntrepreneurship(name, value);\n    } else if (this.state.placementData.interviewStatus === 'Placed' || this.state.placementData.interviewStatus === 'Offer Not Taken') {\n      this.validatePlacedAndOfferNotTaken(name, value);\n    }\n  }\n\n  fetchPlacementdetailsFouUser(engagementId) {\n    let placementInfo = [];\n    fetchPlacementDetailsByEngagementId(engagementId).then(jsondata => {\n      //alert(JSON.stringify(jsondata));\n      let placementDetailsOfUser = JSON.parse(jsondata.data);\n\n      for (var i = 0; i < placementDetailsOfUser.length; i++) {\n        var details = {\n          // 'employer_name':placementDetailsOfUser[i].employerName, \n          'interview_status': placementDetailsOfUser[i].interviewStatus,\n          'Reason': placementDetailsOfUser[i].reason,\n          'annual_sal': placementDetailsOfUser[i].annualSal,\n          'action': /*#__PURE__*/React.createElement(EditIcon, {\n            style: {\n              color: \"blue\"\n            },\n            onClick: this.handleEditChange.bind(this, placementDetailsOfUser[i]),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 21\n            }\n          })\n        };\n        placementInfo.push(details);\n      }\n\n      this.setState({\n        info: placementInfo\n      });\n    });\n  }\n\n  getCenterMasters(ids) {\n    fetchEmployerDetails('Active Partner', '%Placement Partner%').then(jsondata => {\n      // console.log(\"employer data ===> \",jsondata)\n      if (jsondata.appError == null) {\n        let jsonObjects = JSON.parse(jsondata.data);\n        jsonObjects.map(item => {\n          this.state.center.push({\n            label: item.accountName,\n            value: item.id\n          });\n        });\n      }\n\n      return true;\n    }).then(response => response); // fetchAllCenter().then((jsondata) => {\n    //   // console.log(jsondata);\n    //   if (jsondata.appError == null) {\n    //     let jsonobjects = JSON.parse(jsondata.data);\n    //     // alert(JSON.stringify(jsonobjects));\n    //     jsonobjects.map(item => {\n    //       this.state.center.push({ label: item.name, value: item.id })\n    //     })\n    //     // this.setState({centerData : jsonobjects});\n    //   }\n    //   return (true);\n    // }).then(response => response);\n  }\n\n  handleAddressInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      address: { ...this.state.address,\n        [name]: value\n      }\n    });\n    this.validate(name, value);\n  }\n\n  handleAddressSelectChange(selectname, event) {\n    this.setState({\n      address: { ...this.state.address,\n        [selectname]: event\n      }\n    });\n    this.validateAddress(selectname, event);\n  }\n\n  handleTypeOfProofSelectChange(selectname, event) {\n    let newVal = event;\n    let stateVal = this.state.documentType;\n    stateVal.indexOf(newVal) === -1 ? stateVal.push(newVal) : stateVal.length === 1 ? stateVal = [] : stateVal.splice(stateVal.indexOf(newVal), 1);\n    this.setState({\n      documentType: stateVal\n    });\n  }\n\n  getPincodeData(selectname, event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      address: { ...this.state.address,\n        [name]: value\n      }\n    });\n    this.validateAddress(name, value);\n\n    if (value.length == 6) {\n      fetchAddressDetailsBasedOnPincode(value).then(jsondata => {\n        let jsonobjects = JSON.parse(jsondata.data);\n        let taluk = [];\n        let pincode = [];\n        let cityVillage = [];\n        let states = [];\n        let district = [];\n        this.formData.village.length = 0;\n        this.formData.pincodes.length = 0;\n        this.formData.city.length = 0;\n        this.formData.state.length = 0;\n        this.formData.district.length = 0;\n        jsonobjects.map(item => {\n          cityVillage.push({\n            label: item.cityVillage,\n            value: item.id\n          });\n        });\n        cityVillage = underscore.uniq(cityVillage, true, \"label\");\n        cityVillage.map(item => {\n          this.formData.village.push({\n            label: item.label,\n            value: item.label.toString()\n          });\n        });\n        this.setState({\n          village: this.formData.village\n        });\n        jsonobjects.map(item => {\n          taluk.push({\n            label: item.taluk,\n            value: item.id\n          });\n        });\n        taluk = underscore.uniq(taluk, true, \"label\");\n        taluk.map(item => {\n          this.formData.city.push({\n            label: item.label,\n            value: item.label.toString()\n          });\n        });\n        this.setState({\n          city: this.formData.city\n        });\n        jsonobjects.map(item => {\n          states.push({\n            label: item.state,\n            value: item.id\n          });\n        });\n        states = underscore.uniq(states, true, \"label\");\n        states.map(item => {\n          this.formData.state.push({\n            label: item.label,\n            value: item.value.toString()\n          });\n        });\n        this.setState({\n          state: this.formData.state\n        }, () => {\n          console.log(this.state.state);\n        });\n        jsonobjects.map(item => {\n          district.push({\n            label: item.district,\n            value: item.id\n          });\n        });\n        district = underscore.uniq(district, true, \"label\");\n        district.map(item => {\n          this.formData.district.push({\n            label: item.label,\n            value: item.value.toString()\n          });\n        });\n        this.setState({\n          district: this.formData.district\n        });\n      });\n    }\n  }\n\n  submitPlacementDetails() {\n    if (this.state.placementData.interviewStatus === 'Placed' || this.state.placementData.interviewStatus === 'Offer Not Taken' || this.state.placementData.interviewStatus === 'Entrepreneurship') {\n      saveAddressDetails(JSON.stringify(this.state.address)).then(jsondata => {\n        let jsonobjects = JSON.parse(jsondata.data); //alert(jsonobjects[0].id);\n\n        this.setState({\n          placementData: { ...this.state.placementData,\n            'addressId': jsonobjects[0].id\n          }\n        }, () => {\n          this.saveAllDetails();\n        });\n        this.setState({\n          alertDialogFlag: false\n        });\n        alertDialogOptions.message = /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"green\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 766,\n            columnNumber: 38\n          }\n        }, \"Placement Details Saved Sucessfully\");\n        this.setState({\n          alertDialogFlag: true\n        });\n      });\n    } else {\n      this.saveAllDetails();\n    }\n  }\n\n  saveAllDetails() {\n    savePlacementDetails(this.state.placementData).then(jsondata => {\n      this.fetchPlacementdetailsFouUser(this.state.engagementId);\n\n      if (jsondata.appError == null) {\n        let jsonobjects = JSON.parse(jsondata.data); //alert(JSON.stringify(jsonobjects));   \n\n        console.log(jsonobjects);\n        this.setState({\n          alertDialogFlag: false\n        });\n        alertDialogOptions.message = /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"green\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 786,\n            columnNumber: 38\n          }\n        }, \"Placement Details Saved Sucessfully\");\n        this.setState({\n          alertDialogFlag: true\n        });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  }\n\n  render() {\n    const columns = [{\n      label: 'Interview Status',\n      name: 'interview_status',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Reason',\n      name: 'Reason',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Annual Salary',\n      name: 'annual_sal',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }, {\n      label: 'Action',\n      name: 'action',\n      headerStyle: {\n        color: '#FF9800'\n      }\n    }];\n    const options = {\n      filterType: \"dropdown\",\n      responsive: \"stacked\",\n      sortDirection: \"desc\",\n      selectableRows: 'single',\n      disableToolbarSelect: true,\n      rowsPerPage: 10,\n      selectableRowsOnClick: true\n    };\n    let button;\n    button = /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-end\",\n      id: \"btn\",\n      alignItems: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 819,\n        columnNumber: 14\n      }\n    }, \"  \", /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      type: \"submit\",\n      size: \"small\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 819,\n        columnNumber: 98\n      }\n    }, \"Save\"));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 825,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.mySubmitHandler,\n      method: \"post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 826,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      id: \"roleBasedDisable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 827,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 828,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"interviewStatus\",\n      id: \"interviewStatus\",\n      label: \"Interview Status\",\n      onChange: this.handlePlacementSelectChange.bind(this, 'interviewStatus'),\n      value: this.state.placementData.interviewStatus || '',\n      helperText: this.state.errors.interviewStatus,\n      error: this.state.errors.interviewStatus === '' ? false : true,\n      options: this.state.intStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 829,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: this.state.placementData.interviewStatus === \"Placed\" || this.state.placementData.interviewStatus === \"Offer Not Taken\" ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 837,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      id: \"hideData\",\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 839,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 840,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 843,\n        columnNumber: 17\n      }\n    }), this.state.placementData.interviewStatus === \"Offer Not Taken\" && /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 847,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"reason\",\n      id: \"reason\",\n      label: \"Reason\",\n      onChange: this.handleSelectChange.bind(this, 'reason'),\n      value: this.state.placementData.reason || '',\n      options: this.state.offerNotTakenReason,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 848,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 858,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"empId\",\n      id: \"empId\",\n      label: \"employerName\",\n      onChange: this.handleSelectChange.bind(this, 'empId'),\n      value: this.state.placementData.empId || '',\n      helperText: this.state.errors.empId,\n      error: this.state.errors.empId === '' ? false : true,\n      options: this.state.center,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 859,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 868,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"domainName\",\n      id: \"domainName\",\n      label: \"Domain\",\n      onChange: this.handleSelectChange.bind(this, 'domainName'),\n      value: this.state.placementData.domainName || '',\n      helperText: this.state.errors.domainName,\n      error: this.state.errors.domainName === '' ? false : true,\n      options: this.state.domains,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 869,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      id: \"interviewRemark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 877,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 878,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      name: \"spocName\",\n      id: \"spocName\",\n      label: \"supervisor/SPOC name employer\",\n      onChange: this.handleInputChange,\n      value: this.state.placementData.spocName || '',\n      helperText: this.state.errors.spocName,\n      error: this.state.errors.spocName === '' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 879,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      id: \"interviewRemark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 888,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 889,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      name: \"designation\",\n      id: \"designation\",\n      label: \"Designation\",\n      onChange: this.handleInputChange,\n      value: this.state.placementData.designation || '',\n      helperText: this.state.errors.designation,\n      error: this.state.errors.designation === '' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 890,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      id: \"interviewRemark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 899,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 900,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      name: \"spocPhoneNumber\",\n      id: \"spocPhoneNumber\",\n      label: \"SPOC phone NO.\",\n      onInput: e => {\n        e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 10);\n      },\n      onChange: this.handleInputChange,\n      value: this.state.placementData.spocPhoneNumber || '',\n      helperText: this.state.errors.spocPhoneNumber,\n      error: this.state.errors.spocPhoneNumber === '' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 901,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      id: \"annualSal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 951,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 952,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      name: \"annualSal\",\n      id: \"annualSal\",\n      label: \"Monthly Gross Salary\",\n      helperText: this.state.errors.annualSal,\n      error: this.state.errors.annualSal === '' ? false : true,\n      onChange: this.handleInputChange,\n      value: this.state.placementData.annualSal || '',\n      onInput: e => {\n        e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 6);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 953,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      id: \"offerDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 983,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"date\",\n      name: \"offerDate\",\n      id: \"offerDate\",\n      onChange: this.handleInputChange,\n      label: \"Offer Date\",\n      value: this.state.placementData.offerDate || '',\n      helperText: this.state.errors.offerDate,\n      error: this.state.errors.offerDate === '' ? false : true,\n      type: \"date\",\n      inputProps: {\n        max: new Date().toISOString().slice(0, 10)\n      },\n      InputLabelProps: {\n        shrink: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 984,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1010,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"joined\",\n      id: \"joined\",\n      label: \"Joined\",\n      onChange: this.handleSelectChange.bind(this, 'joined'),\n      value: this.state.placementData.joined || '',\n      options: this.state.join,\n      helperText: this.state.errors.joined,\n      error: this.state.errors.joined === '' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1011,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1022,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"accomodationProvided\",\n      id: \"accomodationProvided\",\n      label: \"Accomodation Provided\",\n      onChange: this.handleSelectChange.bind(this, 'accomodationProvided'),\n      value: this.state.placementData.accomodationProvided || '',\n      options: this.state.join,\n      helperText: this.state.errors.joined,\n      error: this.state.errors.joined === '' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1023,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1033,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"foodProvided\",\n      id: \"foodProvided\",\n      label: \"Food Provided\",\n      onChange: this.handleSelectChange.bind(this, 'foodProvided'),\n      value: this.state.placementData.foodProvided || '',\n      options: this.state.join,\n      helperText: this.state.errors.joined,\n      error: this.state.errors.joined === '' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1034,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1045,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1046,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      style: {\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1047,\n        columnNumber: 21\n      }\n    }, \"Job Location\"))), /*#__PURE__*/React.createElement(AddressForPlacement, {\n      pincodeName: \"pincode\",\n      pincodeId: \"pincode\",\n      pincodeOnChange: this.getPincodeData.bind(this, 'pincode'),\n      pincodeValue: this.state.address.pincode || '',\n      pincodeHelperText: this.state.errors.pincode,\n      pincodeError: this.state.errors.pincode == '' ? false : true,\n      villageName: \"villageName\",\n      villageId: \"villageName\",\n      villageInputValue: this.handleAddressSelectChange.bind(this, 'villageName'),\n      villageData: this.state.village,\n      villageValue: this.state.address.villageName || '',\n      villageHelperText: this.state.errors.village,\n      villageError: this.state.errors.village == '' ? false : true,\n      cityName: \"cityName\",\n      cityId: \"cityName\",\n      cityValue: this.state.address.cityName || '',\n      cityData: this.state.city,\n      cityInputValue: this.handleAddressSelectChange.bind(this, 'cityName'),\n      cityNameHelperText: this.state.errors.cityName,\n      cityNameError: this.state.errors.cityName == '' ? false : true,\n      stateName: \"state\",\n      stateId: \"state\",\n      stateData: this.state.state,\n      stateValue: this.state.address.state || '',\n      stateInputValue: this.handleAddressSelectChange.bind(this, 'state'),\n      stateHelperText: this.state.errors.state,\n      stateError: this.state.errors.state == '' ? false : true,\n      districtName: \"district\",\n      districtId: \"district\",\n      districtValue: this.state.address.district || '',\n      districtData: this.state.district,\n      districtInputValue: this.handleAddressSelectChange.bind(this, 'district'),\n      districtHelperText: this.state.errors.district,\n      districtError: this.state.errors.district == '' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1053,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1062,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        onChange: this.handleCheckboxChange,\n        name: \"isDocumentsUploaded\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1065,\n          columnNumber: 23\n        }\n      }),\n      label: \"I have uploaded appropriate Evidence\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1063,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        onChange: this.handleCheckboxChange,\n        name: \"isConsentProvided\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1076,\n          columnNumber: 23\n        }\n      }),\n      label: \"Have gone though the placement evidence and Authentic for both data and evidence\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1074,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1089,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"notPlaced\",\n      style: {\n        display: this.state.placementData.interviewStatus === \"Not Placed\" ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1096,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1097,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1098,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1099,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1102,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1103,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"reason\",\n      id: \"reason\",\n      label: \"Reason\",\n      onChange: this.handleSelectChange.bind(this, 'reason'),\n      value: this.state.placementData.reason || '',\n      options: this.state.notPlacedReasons,\n      helperText: this.state.errors.reason,\n      error: this.state.errors.reason === '' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1104,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"notInterested\",\n      style: {\n        display: this.state.placementData.interviewStatus === \"Not Interested\" ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1115,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1116,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1117,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1118,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1121,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1122,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"reason\",\n      id: \"reason\",\n      label: \"Reason\",\n      onChange: this.handleSelectChange.bind(this, 'reason'),\n      value: this.state.placementData.reason || '',\n      options: this.state.notInterestedReason,\n      helperText: this.state.errors.reason,\n      error: this.state.errors.reason === '' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1123,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1132,\n        columnNumber: 17\n      }\n    }, this.state.placementData.reason == \"family issue\" && /*#__PURE__*/React.createElement(FormControlLabel //incase only family issue\n    , {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        onChange: this.handleCheckboxChange,\n        name: \"isFamilyConsentProvided\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1137,\n          columnNumber: 27\n        }\n      }),\n      label: \"Spoken to parents/ guardian \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1134,\n        columnNumber: 78\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"entrepreneurship\",\n      style: {\n        display: this.state.placementData.interviewStatus === \"Entrepreneurship\" ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1151,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1152,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1153,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1154,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1157,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1159,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"domainName\",\n      id: \"domainName\",\n      label: \"Domain\",\n      onChange: this.handleSelectChange.bind(this, 'domainName'),\n      value: this.state.placementData.domainName || '',\n      options: this.state.domains,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1160,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      id: \"studentRemark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1165,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1166,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      name: \"noOfPeopleEmployed\",\n      id: \"noOfPeopleEmployed\",\n      label: \"No. of people employed\",\n      helperText: this.state.errors.noOfPeopleEmployed,\n      error: this.state.errors.noOfPeopleEmployed === '' ? false : true,\n      onChange: this.handleInputChange,\n      value: this.state.placementData.noOfPeopleEmployed || '',\n      onInput: e => {\n        e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 10);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1167,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1176,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1177,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      style: {\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1178,\n        columnNumber: 21\n      }\n    }, \"Job Location\"))), /*#__PURE__*/React.createElement(AddressForPlacement, {\n      pincodeName: \"pincode\",\n      pincodeId: \"pincode\",\n      pincodeOnChange: this.getPincodeData.bind(this, 'pincode'),\n      pincodeValue: this.state.address.pincode || '',\n      pincodeHelperText: this.state.errors.pincode,\n      pincodeError: this.state.errors.pincode == '' ? false : true,\n      villageName: \"villageName\",\n      villageId: \"villageName\",\n      villageInputValue: this.handleAddressSelectChange.bind(this, 'villageName'),\n      villageData: this.state.village,\n      villageValue: this.state.address.villageName || '',\n      villageHelperText: this.state.errors.village,\n      villageError: this.state.errors.village == '' ? false : true,\n      cityName: \"cityName\",\n      cityId: \"cityName\",\n      cityValue: this.state.address.cityName || '',\n      cityData: this.state.city,\n      cityInputValue: this.handleAddressSelectChange.bind(this, 'cityName'),\n      cityNameHelperText: this.state.errors.cityName,\n      cityNameError: this.state.errors.cityName == '' ? false : true,\n      stateName: \"stateName\",\n      stateId: \"stateName\",\n      stateData: this.state.state,\n      stateValue: this.state.address.state || '',\n      stateInputValue: this.handleAddressSelectChange.bind(this, 'state'),\n      stateHelperText: this.state.errors.state,\n      stateError: this.state.errors.state == '' ? false : true,\n      districtName: \"district\",\n      districtId: \"district\",\n      districtValue: this.state.address.district || '',\n      districtData: this.state.district,\n      districtInputValue: this.handleAddressSelectChange.bind(this, 'district'),\n      districtHelperText: this.state.errors.district,\n      districtError: this.state.errors.district == '' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1181,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1189,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        onChange: this.handleCheckboxChange,\n        name: \"isDocumentsUploaded\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1192,\n          columnNumber: 23\n        }\n      }),\n      label: \"I have uploaded appropriate Evidence\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1190,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1201,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"selfemployedform\",\n      style: {\n        display: this.state.placementData.interviewStatus === \"Self Employed\" ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1209,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: this.state.placementData.interviewStatus === \"Rejected\" ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1215,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      id: \"hideData\",\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1216,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1217,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1218,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1221,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1223,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"empId\",\n      id: \"empId\",\n      label: \"employerName\",\n      onChange: this.handleSelectChange.bind(this, 'empId'),\n      value: this.state.placementData.empId || '',\n      helperText: this.state.errors.empId,\n      error: this.state.errors.empId === '' ? false : true,\n      options: this.state.center,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1224,\n        columnNumber: 19\n      }\n    })))), button)), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.uploadDocuments,\n      method: \"post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1243,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      \"aria-label\": \"simple table\",\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1244,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1245,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1246,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        width: \"25%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1247,\n        columnNumber: 17\n      }\n    }, \"Type of Document\"), /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        width: \"20%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1249,\n        columnNumber: 17\n      }\n    }, \"Browse and Upload\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1252,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1253,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1254,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SingleSelect, {\n      isClearable: true,\n      name: \"typeOfDocument\",\n      id: \"typeOfDocument\",\n      options: this.state.typeOfDocumentData,\n      onChange: this.handleSelectChangeDoc.bind(this, 'typeOfDocument'),\n      value: this.state.typeOfDocument || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1256,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1264,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DropzoneArea, {\n      name: \"file\",\n      id: \"file\",\n      maxFileSize: 2000000,\n      filesLimit: 1,\n      showFileNames: true,\n      onChange: this.onFileChangeHandler // key={this.state.clearDropzoneArea}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1265,\n        columnNumber: 19\n      }\n    }))))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-end\",\n      alignItems: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1275,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"small\",\n      disabled: this.state.file == null || this.state.typeOfDocument == '' ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1276,\n        columnNumber: 13\n      }\n    }, \"Upload Document\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1284,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(MUIDataTable, {\n      id: \"dtb\",\n      title: \"List Of Placement Details\",\n      label: \"List of Placement Details \",\n      columns: columns,\n      data: this.state.info,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1285,\n        columnNumber: 9\n      }\n    }), this.state.documents != \"\" && /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1292,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      \"aria-label\": \"simple table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1293,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1294,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1295,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1296,\n        columnNumber: 19\n      }\n    }, \"Created On\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1297,\n        columnNumber: 19\n      }\n    }, \"Document Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1298,\n        columnNumber: 19\n      }\n    }, \"File Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1299,\n        columnNumber: 19\n      }\n    }, \"Download\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1300,\n        columnNumber: 19\n      }\n    }, \"Delete\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1303,\n        columnNumber: 15\n      }\n    }, this.state.documents.map(row => /*#__PURE__*/React.createElement(TableRow, {\n      key: row.basicDocId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1305,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1306,\n        columnNumber: 21\n      }\n    }, row.createdOn), /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1310,\n        columnNumber: 21\n      }\n    }, row.documentName), /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1313,\n        columnNumber: 21\n      }\n    }, row.documentPath.split(\"/\")[1]), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1316,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"small\",\n      name: \"download\",\n      id: \"download\",\n      onClick: this.downloadDocuments.bind(this, row.basicDocId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1317,\n        columnNumber: 23\n      }\n    }, \"Download\")), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1323,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"small\",\n      name: \"delete\",\n      id: \"delete\",\n      onClick: this.deleteDocument.bind(this, row.basicDocId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1324,\n        columnNumber: 23\n      }\n    }, \"Delete\"))))))), this.state.alertDialogFlag && /*#__PURE__*/React.createElement(AlertDialog, {\n      message: alertDialogOptions.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1340,\n        columnNumber: 43\n      }\n    }));\n  }\n\n}\n\nexport default PlacementDetails;","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/PlacementDetails.js"],"names":["React","Component","render","SingleSelect","callMerge","UserContext","FormControl","InputLabel","FormControlLabel","Input","Grid","RadioGroup","Radio","TextField","Button","isNotEmpty","isNotZero","roleBasedReadonly","checkButton","AlertDialog","Paper","savePlacementDetails","deleteDocumentById","fetchUserDocumentsByUserIdAndTypeOfDocument","fectAddressDetailsByAddressID","fetchAddressDetailsBasedOnPincode","fetchPlacementDetailsByEngagementId","fetchAllCenter","saveAddressDetails","uploadDocument","fetchEmployerDetails","MUIDataTable","AddressForPlacement","underscore","Table","TableBody","TableCell","TableHead","TableRow","DropzoneArea","EditIcon","serviceEndPoint","Checkbox","alertDialogOptions","message","PlacementDetails","constructor","props","handleChange","event","target","value","name","setState","placementData","state","deleteDocument","basicDocId","getDocuments","handleCheckboxChange","checked","mySubmitHandler","preventDefault","disabled","validate","interviewStatus","errors","validatePlacedAndOfferNotTaken","empId","domainName","spocName","designation","spocPhoneNumber","annualSal","offerDate","joiningDate","joined","validateAddress","address","pincode","villageName","cityName","district","errorsExist","Object","values","forEach","val","length","submitPlacementDetails","validateNotPlaced","reason","validateNotInterested","validateEntrepreneurship","noOfPeopleEmployed","validateRejected","village","downloadDocuments","formData","FormData","append","fetch","documentServiceEndPoint","method","headers","token","body","then","response","json","jsondata","jsonobjects","JSON","parse","data","url","downloadDocument","documentPath","window","open","uploadDocuments","e","levelOfDocument","localThis","reader","FileReader","readAsDataURL","file","onload","document","result","alertDialogFlag","dbUserId","engagementId","typeOfDocument","res","onFileChangeHandler","files","flag","id","info","addressId","createdBy","userid","updatedBy","interviewDate","interviewRemark","isActive","isDocumentsUploaded","isConsentProvided","foodProvided","accomodationProvided","center","centerData","documents","intStatus","label","offerNotTakenReason","notPlacedReasons","notInterestedReason","studStatus","domains","join","typeOfProofData","typeOfDocumentData","entityId","addressLine1","addressLine2","pincodes","city","handleInputChange","bind","getCenterMasters","undefined","fetchPlacementdetailsFouUser","componentDidMount","handleEditChange","obj","getAddressDetailsByAddressID","addressDetails","getAddressdataBasedOnPin","taluk","cityVillage","states","map","item","push","uniq","toString","console","log","handleSelectChangeDoc","selectname","handlePlacementSelectChange","handleSelectChange","placementInfo","placementDetailsOfUser","i","details","color","ids","appError","jsonObjects","accountName","handleAddressInputChange","handleAddressSelectChange","handleTypeOfProofSelectChange","newVal","stateVal","documentType","indexOf","splice","getPincodeData","stringify","saveAllDetails","columns","headerStyle","options","filterType","responsive","sortDirection","selectableRows","disableToolbarSelect","rowsPerPage","selectableRowsOnClick","button","width","display","Math","max","parseInt","slice","Date","toISOString","shrink","fontWeight","row","createdOn","documentName","split"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport { render } from \"react-dom\";\r\nimport './../App.css';\r\nimport './../assets/css/login-style.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { SingleSelect } from \"react-select-material-ui\";\r\nimport callMerge from 'material-ui/svg-icons/communication/call-merge';\r\nimport UserContext from '../components/GolbalContext'\r\nimport { FormControl, InputLabel, FormControlLabel, Input, Grid, RadioGroup, Radio, TextField } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport { isNotEmpty, isNotZero } from './../util/validation';\r\nimport { roleBasedReadonly, checkButton } from '../util/validation';\r\nimport AlertDialog from '../util/AlertDialog';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { savePlacementDetails, deleteDocumentById, fetchUserDocumentsByUserIdAndTypeOfDocument, fectAddressDetailsByAddressID, fetchAddressDetailsBasedOnPincode, fetchPlacementDetailsByEngagementId, fetchAllCenter, saveAddressDetails, uploadDocument, fetchEmployerDetails } from '../util/api';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport AddressForPlacement from \"./AddressForPlacement\";\r\nimport underscore from 'underscore';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { serviceEndPoint } from '../util/serviceEndPoint';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nconst alertDialogOptions = {\r\n  message: ''\r\n}\r\n\r\nclass PlacementDetails extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      engagementId: props.engagementId, alertDialogFlag: false, disabled: false, flag: \"0\", errors: { joiningDate: '', offerDate: '', annualSal: '', spocPhoneNumber: '', designation: '', pincode: '', noOfPeopleEmployed: '', spocName: '' }, dbUserId: props.id, info: [],\r\n      placementData: {\r\n        annualSal: '0', empId: 0, noOfPeopleEmployed: '0', joined: '', spocPhoneNumber: '', spocName: '', designation: '', domainName: '', addressId: \"0\", createdBy: UserContext.userid, updatedBy: UserContext.userid, engagementId: props.engagementId, dbUserId: props.id, interviewDate: \"\",\r\n        interviewStatus: \"\", interviewRemark: \"\", offerDate: \"\", joiningDate: \"\", isActive: \"Y\", isDocumentsUploaded: '', reason: '', isConsentProvided: '', foodProvided: '', accomodationProvided: ''\r\n      }, center: [], centerData: [], documents: [],\r\n      info: [{ \"createdBy\": UserContext.userid, \"updatedBy\": UserContext.userid, \"isActive\": \"Y\", \"dbUserId\": props.id }],\r\n      intStatus: [\r\n        { value: 'Placed', label: 'Placed' },\r\n        // { value: 'Offer Not Taken', label: 'Offer Not Taken'},\r\n        // { value: 'Not Placed', label: 'Not Placed' },\r\n        { value: 'Not Interested', label: 'Not Interested' },\r\n        { value: 'Entrepreneurship', label: 'Entrepreneurship' },\r\n        { value: 'Self Employed', label: 'Self Employed' },\r\n        { value: 'Rejected', label: 'Rejected' }\r\n      ],\r\n      offerNotTakenReason: [\r\n        { value: 'Low salary', label: 'Low salary' },\r\n        { value: 'Migration', label: 'Migration' },\r\n        { value: 'Family problem', label: 'Family problem' },\r\n        { value: 'health issues', label: 'health issues' },\r\n        { value: 'further studies', label: 'further studies' },\r\n        { value: 'marriage', label: 'marriage' }\r\n      ],\r\n      notPlacedReasons: [\r\n        { value: 'Other', label: 'Other' },\r\n        { value: 'Not Interested', label: 'Not Interested' },\r\n        { value: 'Got other job', label: 'Got other job' },\r\n        { value: 'Health Issues', label: 'Health Issues' },\r\n        { value: 'Moved to other place', label: 'Moved to other place' },\r\n        { value: 'Not Eligible', label: 'Not Eligible' },\r\n        { value: 'Marriage', label: 'Marriage' },\r\n        { value: 'Higher Education', label: 'Higher Education' },\r\n        { value: 'Maternity', label: 'Maternity' }\r\n      ],\r\n      notInterestedReason: [\r\n        { value: 'family issue', label: 'family issue' },\r\n        { value: 'medical problem', label: 'medical problem' },\r\n        { value: 'higher studies', label: 'higher studies' }\r\n      ],\r\n      studStatus: [\r\n        { value: 'Inter', label: 'Inter' },\r\n        { value: 'Joined', label: 'Joined' }\r\n\r\n      ],\r\n      domains: [\r\n        { value: 'BFSI', label: 'BFSI' },\r\n        { value: 'Joined', label: 'Joined' }\r\n\r\n      ],\r\n      join: [\r\n        { value: 'Yes', label: 'Yes' },\r\n        { value: 'No', label: 'No' }\r\n      ],\r\n      typeOfDocument: null, file: null,\r\n      typeOfProofData: [\r\n        { value: 'AgeProof', label: 'Age Proof' },\r\n        { value: 'ApplicationForm', label: 'Application Form' },\r\n        { value: 'CasteCertificate', label: 'Caste Certificate' },\r\n        { value: 'ContributionReceipt', label: 'Contribution Receipt' },\r\n        { value: 'EducationProof', label: 'Education Proof' },\r\n        { value: 'FirstDayPicture', label: 'First Day Picture' },\r\n        { value: 'LastDayPicture', label: 'Last Day Picture' },\r\n        { value: 'Medicalfitnesscertificate', label: 'Medical fitness certificate' },\r\n        { value: 'PhotoProof', label: 'Photo Proof' },\r\n        { value: 'StudentPicture', label: 'Student Picture' },\r\n        { value: 'Studentsigned', label: 'Student signed' }\r\n      ],\r\n      typeOfDocumentData: [\r\n        { value: 'Offer Letter', label: 'Offer Letter' },\r\n        { value: 'Joining Letter', label: 'Joining Letter' },\r\n        { value: 'Pay Slip', label: 'Pay Slip' },\r\n        { value: 'Bank Statement', label: 'Bank Statement' },\r\n        { value: 'Email From Employer', label: 'Email From Employer' },\r\n        { value: 'Workplace Picture', label: 'Workplace Picture' },\r\n        { value: 'ID card', label: 'ID card' },\r\n        { value: 'Letter from HR', label: 'Letter from HR' }\r\n\r\n      ],\r\n      address: { entityId: props.engagementId, createdBy: UserContext.userid, 'isActive': 'Y', 'type': 'PD', 'entityType': 'S', pincode: \"\", addressLine1: \"\", addressLine2: \"\", district: \"\", state: \"\", cityName: \"\", villageName: \"\" }, state: [], district: [], pincodes: [], city: [], village: [], engagementId: props.engagementId\r\n    };\r\n    this.formData = { state: [], district: [], pincodes: [], city: [], village: [] };\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.getCenterMasters();\r\n    this.getDocuments();\r\n    //alert(this.state.engagementId);\r\n    if (props.id != null && props.id != undefined) {\r\n\r\n      this.fetchPlacementdetailsFouUser(props.engagementId);\r\n    }\r\n\r\n\r\n  }\r\n  componentDidMount() {\r\n    roleBasedReadonly();\r\n  }\r\n\r\n\r\n\r\n  handleChange = (event) => {\r\n    const target = event.target;\r\n    let value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      placementData: {\r\n\r\n        ...this.state.placementData\r\n      }\r\n\r\n    });\r\n\r\n  };\r\n\r\n  getDocuments() {\r\n\r\n    fetchUserDocumentsByUserIdAndTypeOfDocument(this.state.dbUserId, 'PD').then((jsondata) => {\r\n      let jsonobjects = JSON.parse(jsondata.data);\r\n      this.setState({ documents: [...this.state.documents, ...jsonobjects] })\r\n    });\r\n\r\n  }\r\n  deleteDocument = (basicDocId) => {\r\n    deleteDocumentById(basicDocId);\r\n    this.getDocuments();\r\n  }\r\n\r\n  handleEditChange(obj) {\r\n    this.setState({\r\n      placementData: obj\r\n    }, () => {\r\n      if (this.state.placementData.interviewStatus === 'Placed'\r\n        || this.state.placementData.interviewStatus === 'Offer Not Taken'\r\n        || this.state.placementData.interviewStatus === 'Entrepreneurship') {\r\n        this.getAddressDetailsByAddressID(this.state.placementData.addressId)\r\n      }\r\n    });\r\n  }\r\n\r\n  getAddressDetailsByAddressID(addressId) {\r\n    fectAddressDetailsByAddressID(addressId).then((jsondata) => {\r\n      let addressDetails = JSON.parse(jsondata.data);\r\n      this.setState({\r\n        address: addressDetails[0]\r\n      }, () => { this.getAddressdataBasedOnPin(this.state.address.pincode) });\r\n    })\r\n  }\r\n\r\n  getAddressdataBasedOnPin(pincode) {\r\n    fetchAddressDetailsBasedOnPincode(pincode).then((jsondata) => {\r\n      let jsonobjects = JSON.parse(jsondata.data);\r\n      let taluk = [];\r\n      let pincode = [];\r\n      let cityVillage = [];\r\n      let states = [];\r\n      let district = [];\r\n\r\n      this.formData.village.length = 0;\r\n      this.formData.pincodes.length = 0;\r\n      this.formData.city.length = 0;\r\n      this.formData.state.length = 0;\r\n      this.formData.district.length = 0;\r\n\r\n      jsonobjects.map(item => { cityVillage.push({ label: item.cityVillage, value: item.id }) });\r\n      cityVillage = underscore.uniq(cityVillage, true, \"label\");\r\n      cityVillage.map(item => { this.formData.village.push({ label: item.label, value: (item.label).toString() }) });\r\n      this.setState({ village: this.formData.village });\r\n\r\n      jsonobjects.map(item => { taluk.push({ label: item.taluk, value: item.id }) });\r\n      taluk = underscore.uniq(taluk, true, \"label\");\r\n      taluk.map(item => { this.formData.city.push({ label: item.label, value: (item.label).toString() }) });\r\n      this.setState({ city: this.formData.city });\r\n\r\n\r\n\r\n      jsonobjects.map(item => { states.push({ label: item.state, value: item.id }) });\r\n      states = underscore.uniq(states, true, \"label\");\r\n      states.map(item => { this.formData.state.push({ label: item.label, value: (item.value).toString() }) });\r\n      this.setState({ state: this.formData.state }, () => { console.log(this.state.state) });\r\n\r\n      jsonobjects.map(item => { district.push({ label: item.district, value: item.id }) });\r\n      district = underscore.uniq(district, true, \"label\");\r\n      district.map(item => { this.formData.district.push({ label: item.label, value: (item.value).toString() }) });\r\n      this.setState({ district: this.formData.district });\r\n    })\r\n  }\r\n\r\n\r\n  handleSelectChangeDoc(selectname, event) {\r\n    this.setState({ [selectname]: event });\r\n  }\r\n\r\n  handlePlacementSelectChange(selectname, event) {\r\n    this.setState({\r\n      placementData: {\r\n        ...this.state.placementData,\r\n        [selectname]: event\r\n      }\r\n    });\r\n    this.validate(selectname, event);\r\n  }\r\n\r\n\r\n  handleSelectChange(selectname, event) {\r\n    let value = 0;\r\n    let target = null;\r\n    try {\r\n      target = event.target;\r\n      value = target.value;\r\n    }\r\n    catch (e) {\r\n      value = event;\r\n    }\r\n\r\n    this.setState({\r\n      \"disabled\": false\r\n    });\r\n\r\n    this.setState({\r\n      placementData: {\r\n        ...this.state.placementData,\r\n        [selectname]: event\r\n      }\r\n    })\r\n\r\n    //   this.setState({\r\n    //     errors: {\r\n    //       ...this.state.errors,\r\n    //       [selectname] : {\r\n    //         'label' : \"\" , \r\n    //         'value' : false\r\n    //       }\r\n    //     }\r\n    // });\r\n\r\n    if (this.state.placementData.interviewStatus === 'Not Placed') {\r\n      this.validateNotPlaced(selectname, event);\r\n    }\r\n\r\n    else if (this.state.placementData.interviewStatus === 'Not Interested') {\r\n      this.validateNotInterested(selectname, event);\r\n    }\r\n    else if (this.state.placementData.interviewStatus === 'Placed' || this.state.placementData.interviewStatus === 'Offer Not Taken') {\r\n      this.validatePlacedAndOfferNotTaken(selectname, event);\r\n    }\r\n\r\n    else if (this.state.placementData.interviewStatus === 'Rejected') {\r\n      this.validateRejected(selectname, event);\r\n    }\r\n\r\n\r\n  }\r\n  handleInputChange(event) {\r\n\r\n    const target = event.target;\r\n    let value = target.value;\r\n    const name = target.name;\r\n    this.setState({\r\n      \"disabled\": false\r\n    });\r\n\r\n    //   this.setState({\r\n    //     errors: {\r\n    //       ...this.state.errors,\r\n    //       [name] : {\r\n    //         'label' : \"\" , \r\n    //         'value' : false\r\n    //       }\r\n    //     }\r\n    // });\r\n\r\n    this.setState({\r\n      placementData: {\r\n        ...this.state.placementData,\r\n        [name]: value\r\n      }\r\n    });\r\n\r\n    if (this.state.placementData.interviewStatus === 'Entrepreneurship') {\r\n      this.validateEntrepreneurship(name, value);\r\n    }\r\n\r\n    else if (this.state.placementData.interviewStatus === 'Placed' || this.state.placementData.interviewStatus === 'Offer Not Taken') {\r\n      this.validatePlacedAndOfferNotTaken(name, value);\r\n    }\r\n\r\n  }\r\n\r\n  handleCheckboxChange = (event) => {\r\n    this.setState({\r\n      placementData: {\r\n        ...this.state.placementData,\r\n        [event.target.name]: event.target.checked\r\n      }\r\n    })\r\n  };\r\n\r\n\r\n\r\n  fetchPlacementdetailsFouUser(engagementId) {\r\n\r\n    let placementInfo = [];\r\n\r\n    fetchPlacementDetailsByEngagementId(engagementId).then((jsondata) => {\r\n      //alert(JSON.stringify(jsondata));\r\n      let placementDetailsOfUser = JSON.parse(jsondata.data);\r\n\r\n      for (var i = 0; i < placementDetailsOfUser.length; i++) {\r\n        var details =\r\n        {   // 'employer_name':placementDetailsOfUser[i].employerName, \r\n          'interview_status': placementDetailsOfUser[i].interviewStatus,\r\n          'Reason': placementDetailsOfUser[i].reason,\r\n          'annual_sal': placementDetailsOfUser[i].annualSal,\r\n          'action': <EditIcon style={{ color: \"blue\" }} onClick={this.handleEditChange.bind(this, placementDetailsOfUser[i])} />\r\n\r\n        };\r\n        placementInfo.push(details);\r\n      }\r\n      this.setState({\r\n        info: placementInfo\r\n      });\r\n    })\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  getCenterMasters(ids) {\r\n\r\n    fetchEmployerDetails('Active Partner', '%Placement Partner%').then((jsondata)=>{\r\n        // console.log(\"employer data ===> \",jsondata)\r\n        if ( jsondata.appError == null ) {\r\n            let jsonObjects = JSON.parse(jsondata.data);\r\n            jsonObjects.map(item => {\r\n                this.state.center.push({ label: item.accountName, value: item.id })\r\n            })\r\n        }\r\n        return (true);\r\n    }).then(response => response);\r\n\r\n    // fetchAllCenter().then((jsondata) => {\r\n    //   // console.log(jsondata);\r\n    //   if (jsondata.appError == null) {\r\n    //     let jsonobjects = JSON.parse(jsondata.data);\r\n    //     // alert(JSON.stringify(jsonobjects));\r\n    //     jsonobjects.map(item => {\r\n    //       this.state.center.push({ label: item.name, value: item.id })\r\n    //     })\r\n    //     // this.setState({centerData : jsonobjects});\r\n    //   }\r\n    //   return (true);\r\n    // }).then(response => response);\r\n\r\n  }\r\n\r\n\r\n  mySubmitHandler = (event) => {\r\n    // alert(\"check\");\r\n    event.preventDefault();\r\n    this.state.disabled = true;\r\n    this.validate(\"interviewStatus\", this.state.placementData.interviewStatus);\r\n\r\n    if (this.state.errors.interviewStatus === '') {\r\n\r\n      if (this.state.placementData.interviewStatus === 'Placed'\r\n        || this.state.placementData.interviewStatus === 'Offer Not Taken'\r\n      ) {\r\n        this.validatePlacedAndOfferNotTaken(\"empId\", this.state.placementData.empId);\r\n        this.validatePlacedAndOfferNotTaken(\"domainName\", this.state.placementData.domainName);\r\n        this.validatePlacedAndOfferNotTaken(\"spocName\", this.state.placementData.spocName);\r\n        this.validatePlacedAndOfferNotTaken(\"designation\", this.state.placementData.designation);\r\n        this.validatePlacedAndOfferNotTaken(\"spocPhoneNumber\", this.state.placementData.spocPhoneNumber);\r\n        this.validatePlacedAndOfferNotTaken(\"annualSal\", this.state.placementData.annualSal);\r\n        this.validatePlacedAndOfferNotTaken(\"offerDate\", this.state.placementData.offerDate);\r\n        this.validatePlacedAndOfferNotTaken(\"joiningDate\", this.state.placementData.joiningDate);\r\n        this.validatePlacedAndOfferNotTaken(\"joined\", this.state.placementData.joined);\r\n        this.validateAddress(\"pincode\", this.state.address.pincode);\r\n        this.validateAddress(\"villageName\", this.state.address.villageName);\r\n        this.validateAddress(\"cityName\", this.state.address.cityName);\r\n        this.validateAddress(\"state\", this.state.address.state);\r\n        this.validateAddress(\"district\", this.state.address.district);\r\n\r\n        let errorsExist = true;\r\n        Object.values(this.state.errors).forEach(\r\n          (val) => val.length > 0 && (errorsExist = false)\r\n        );\r\n        if (errorsExist) {\r\n          this.submitPlacementDetails();\r\n        }\r\n      }\r\n      else if (this.state.placementData.interviewStatus === 'Not Placed') {\r\n        this.validateNotPlaced(\"reason\", this.state.placementData.reason);\r\n\r\n        let errorsExist = true;\r\n        Object.values(this.state.errors).forEach(\r\n          (val) => val.length > 0 && (errorsExist = false)\r\n        );\r\n        if (errorsExist) {\r\n          this.submitPlacementDetails();\r\n        }\r\n\r\n\r\n      }\r\n      else if (this.state.placementData.interviewStatus === 'Not Interested') {\r\n        this.validateNotInterested(\"reason\", this.state.placementData.reason);\r\n        let errorsExist = true;\r\n        Object.values(this.state.errors).forEach(\r\n          (val) => val.length > 0 && (errorsExist = false));\r\n        if (errorsExist) {\r\n          this.submitPlacementDetails();\r\n        }\r\n      }\r\n\r\n      else if (this.state.placementData.interviewStatus === 'Entrepreneurship') {\r\n        this.validateAddress(\"pincode\", this.state.address.pincode);\r\n        this.validateAddress(\"villageName\", this.state.address.villageName);\r\n        this.validateAddress(\"cityName\", this.state.address.cityName);\r\n        this.validateAddress(\"state\", this.state.address.state);\r\n        this.validateAddress(\"district\", this.state.address.district);\r\n        this.validateEntrepreneurship(\"noOfPeopleEmployed\", this.state.placementData.noOfPeopleEmployed);\r\n        let errorsExist = true;\r\n        Object.values(this.state.errors).forEach(\r\n          (val) => val.length > 0 && (errorsExist = false));\r\n        if (errorsExist) {\r\n          this.submitPlacementDetails();\r\n        }\r\n      }\r\n\r\n      else if (this.state.placementData.interviewStatus === 'Rejected') {\r\n        this.validateRejected(\"empId\", this.state.placementData.empId);\r\n        let errorsExist = true;\r\n        Object.values(this.state.errors).forEach(\r\n          (val) => val.length > 0 && (errorsExist = false));\r\n        if (errorsExist) {\r\n          this.submitPlacementDetails();\r\n        }\r\n      }\r\n\r\n\r\n\r\n      else {\r\n        this.submitPlacementDetails();\r\n      }\r\n    }\r\n\r\n    // authentication response and redirect to error or dashbaord page\r\n    this.setState({\r\n      errors: this.state.errors,\r\n    });\r\n    if (checkButton(this.state.errors)) {\r\n\r\n\r\n\r\n    }\r\n    else {\r\n      this.state.disabled = true;\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  validate = (name, value) => {\r\n    let errors = this.state.errors;\r\n    switch (name) {\r\n      case 'interviewStatus': errors.interviewStatus = isNotEmpty(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors });\r\n  }\r\n\r\n\r\n\r\n  validateNotInterested = (name, value) => {\r\n    let errors = this.state.errors;\r\n    switch (name) {\r\n      case 'reason': errors.reason = isNotEmpty(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({ errors });\r\n  }\r\n\r\n\r\n  validateEntrepreneurship = (name, value) => {\r\n    let errors = this.state.errors;\r\n    switch (name) {\r\n      case 'noOfPeopleEmployed': errors.noOfPeopleEmployed = isNotEmpty(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({ errors });\r\n  }\r\n\r\n  validateNotPlaced = (name, value) => {\r\n    let errors = this.state.errors;\r\n    switch (name) {\r\n      case 'reason': errors.reason = isNotEmpty(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors });\r\n  }\r\n\r\n\r\n  validateRejected = (name, value) => {\r\n    let errors = this.state.errors;\r\n    switch (name) {\r\n      case 'empId': errors.empId = isNotZero(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({ errors });\r\n  }\r\n\r\n\r\n  validatePlacedAndOfferNotTaken = (name, value) => {\r\n    let errors = this.state.errors;\r\n    switch (name) {\r\n      case 'empId': errors.empId = isNotEmpty(value);\r\n        break;\r\n      case 'domainName': errors.domainName = isNotEmpty(value);\r\n        break;\r\n      case 'spocName': errors.spocName = isNotEmpty(value);\r\n        break;\r\n      case 'designation': errors.designation = isNotEmpty(value);\r\n        break;\r\n      case 'spocPhoneNumber': errors.spocPhoneNumber = isNotEmpty(value);\r\n        break;\r\n      case 'annualSal': errors.annualSal = isNotEmpty(value);\r\n        break;\r\n      case 'offerDate': errors.offerDate = isNotEmpty(value);\r\n        break;\r\n      case 'joiningDate': errors.joiningDate = isNotEmpty(value);\r\n        break;\r\n      case 'joined': errors.joined = isNotEmpty(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors });\r\n  }\r\n\r\n\r\n  validateAddress = (name, value) => {\r\n    let errors = this.state.errors;\r\n    switch (name) {\r\n      case 'pincode': errors.pincode = isNotEmpty(value);\r\n        break;\r\n      case 'villageName': errors.village = isNotEmpty(value);\r\n        break;\r\n      case 'cityName': errors.cityName = isNotEmpty(value);\r\n        break;\r\n      case 'state': errors.state = isNotEmpty(value);\r\n        break;\r\n      case 'district': errors.district = isNotEmpty(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ errors });\r\n  }\r\n\r\n\r\n  handleAddressInputChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    this.setState({\r\n      address: {\r\n        ...this.state.address,\r\n        [name]: value\r\n      }\r\n    })\r\n    this.validate(name, value);\r\n  }\r\n  handleAddressSelectChange(selectname, event) {\r\n    this.setState({\r\n      address: {\r\n        ...this.state.address,\r\n        [selectname]: event\r\n      }\r\n    })\r\n\r\n    this.validateAddress(selectname, event);\r\n  }\r\n\r\n  handleTypeOfProofSelectChange(selectname, event) {\r\n\r\n    let newVal = event;\r\n    let stateVal = this.state.documentType;\r\n\r\n    stateVal.indexOf(newVal) === -1\r\n      ? stateVal.push(newVal)\r\n      : stateVal.length === 1\r\n        ? (stateVal = [])\r\n        : stateVal.splice(stateVal.indexOf(newVal), 1)\r\n\r\n    this.setState({ documentType: stateVal });\r\n\r\n  }\r\n\r\n  downloadDocuments = (value) => {\r\n    let formData = new FormData();\r\n    formData.append('data', '{\"token\" : \"\", \"action\" : \"downloadDocument\", \"data\" : [{\"basicDocId\":' + value + '}]}');\r\n    fetch(serviceEndPoint.documentServiceEndPoint, {\r\n      method: 'post',\r\n      headers: {\r\n        'Authorization': 'Bearer ' + UserContext.token\r\n      },\r\n      body: formData\r\n    }).then(response => response.json()).then((jsondata) => {\r\n      let jsonobjects = JSON.parse(jsondata.data);\r\n      var url = serviceEndPoint.downloadDocument + jsonobjects[0].documentPath + \"\";\r\n      window.open(url, \"_blank\");\r\n\r\n\r\n    });\r\n  }\r\n\r\n  uploadDocuments = (e) => {\r\n    e.preventDefault();\r\n    var levelOfDocument = \"G\";\r\n\r\n    let localThis = this;\r\n\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(this.state.file);\r\n    reader.onload = function () {\r\n      let document = reader.result;\r\n\r\n      localThis.setState({ alertDialogFlag: false });\r\n      uploadDocument(localThis.state.dbUserId, localThis.state.engagementId, localThis.state.typeOfDocument, 'PD', localThis.state.typeOfDocument, document, \"\")\r\n\r\n        .then(res => {\r\n\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n  }\r\n\r\n  onFileChangeHandler = (files) => { this.setState({ file: files[0] }); }\r\n\r\n  getPincodeData(selectname, event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    this.setState({\r\n      address: {\r\n        ...this.state.address,\r\n        [name]: value\r\n      }\r\n    })\r\n    this.validateAddress(name, value);\r\n    if (value.length == 6) {\r\n\r\n      fetchAddressDetailsBasedOnPincode(value).then((jsondata) => {\r\n        let jsonobjects = JSON.parse(jsondata.data);\r\n        let taluk = [];\r\n        let pincode = [];\r\n        let cityVillage = [];\r\n        let states = [];\r\n        let district = [];\r\n\r\n        this.formData.village.length = 0;\r\n        this.formData.pincodes.length = 0;\r\n        this.formData.city.length = 0;\r\n        this.formData.state.length = 0;\r\n        this.formData.district.length = 0;\r\n\r\n        jsonobjects.map(item => { cityVillage.push({ label: item.cityVillage, value: item.id }) });\r\n        cityVillage = underscore.uniq(cityVillage, true, \"label\");\r\n        cityVillage.map(item => { this.formData.village.push({ label: item.label, value: (item.label).toString() }) });\r\n        this.setState({ village: this.formData.village });\r\n\r\n        jsonobjects.map(item => { taluk.push({ label: item.taluk, value: item.id }) });\r\n        taluk = underscore.uniq(taluk, true, \"label\");\r\n        taluk.map(item => { this.formData.city.push({ label: item.label, value: (item.label).toString() }) });\r\n        this.setState({ city: this.formData.city });\r\n\r\n\r\n\r\n        jsonobjects.map(item => { states.push({ label: item.state, value: item.id }) });\r\n        states = underscore.uniq(states, true, \"label\");\r\n        states.map(item => { this.formData.state.push({ label: item.label, value: (item.value).toString() }) });\r\n        this.setState({ state: this.formData.state }, () => { console.log(this.state.state) });\r\n\r\n        jsonobjects.map(item => { district.push({ label: item.district, value: item.id }) });\r\n        district = underscore.uniq(district, true, \"label\");\r\n        district.map(item => { this.formData.district.push({ label: item.label, value: (item.value).toString() }) });\r\n        this.setState({ district: this.formData.district });\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  submitPlacementDetails() {\r\n\r\n    if (this.state.placementData.interviewStatus === 'Placed' || this.state.placementData.interviewStatus === 'Offer Not Taken'\r\n      || this.state.placementData.interviewStatus === 'Entrepreneurship') {\r\n\r\n      saveAddressDetails(JSON.stringify(this.state.address)).then((jsondata) => {\r\n        let jsonobjects = JSON.parse(jsondata.data);\r\n        //alert(jsonobjects[0].id);\r\n        this.setState({\r\n          placementData: {\r\n            ...this.state.placementData,\r\n            'addressId': jsonobjects[0].id\r\n          }\r\n        }, () => { this.saveAllDetails() });\r\n        this.setState({ alertDialogFlag: false });\r\n        alertDialogOptions.message = <span style={{ color: \"green\" }}>Placement Details Saved Sucessfully</span>;\r\n        this.setState({ alertDialogFlag: true });\r\n      });\r\n\r\n    }\r\n    else {\r\n      this.saveAllDetails();\r\n    }\r\n\r\n\r\n  }\r\n  saveAllDetails() {\r\n\r\n    savePlacementDetails(this.state.placementData).then((jsondata) => {\r\n      this.fetchPlacementdetailsFouUser(this.state.engagementId);\r\n      if (jsondata.appError == null) {\r\n        let jsonobjects = JSON.parse(jsondata.data);\r\n        //alert(JSON.stringify(jsonobjects));   \r\n        console.log(jsonobjects);\r\n        this.setState({ alertDialogFlag: false });\r\n        alertDialogOptions.message = <span style={{ color: \"green\" }}>Placement Details Saved Sucessfully</span>;\r\n        this.setState({ alertDialogFlag: true });\r\n\r\n      } else {\r\n        console.log(\"error\");\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const columns = [\r\n      { label: 'Interview Status', name: 'interview_status', headerStyle: { color: '#FF9800' } },\r\n      { label: 'Reason', name: 'Reason', headerStyle: { color: '#FF9800' } },\r\n      { label: 'Annual Salary', name: 'annual_sal', headerStyle: { color: '#FF9800' } },\r\n      { label: 'Action', name: 'action', headerStyle: { color: '#FF9800' } }\r\n    ]\r\n\r\n    const options = {\r\n      filterType: \"dropdown\",\r\n      responsive: \"stacked\",\r\n      sortDirection: \"desc\",\r\n      selectableRows: 'single',\r\n      disableToolbarSelect: true,\r\n      rowsPerPage: 10,\r\n      selectableRowsOnClick: true,\r\n\r\n\r\n\r\n    };\r\n\r\n    let button;\r\n    button = <Grid container direction=\"row\" justify=\"flex-end\" id=\"btn\" alignItems=\"flex-end\">  <Button variant=\"contained\" type=\"submit\" size=\"small\" color=\"primary\" >\r\n      Save\r\n    </Button></Grid>\r\n\r\n\r\n    return (\r\n      <div style={{ width: '100%' }}>\r\n        <form onSubmit={this.mySubmitHandler} method=\"post\">\r\n          <fieldset id=\"roleBasedDisable\">\r\n            <Grid item xs={12} sm={3}>\r\n              <SingleSelect name=\"interviewStatus\" id=\"interviewStatus\" label=\"Interview Status\"\r\n                onChange={this.handlePlacementSelectChange.bind(this, 'interviewStatus')}\r\n                value={this.state.placementData.interviewStatus || ''}\r\n                helperText={this.state.errors.interviewStatus}\r\n                error={this.state.errors.interviewStatus === '' ? false : true}\r\n                options={this.state.intStatus}\r\n              />\r\n            </Grid>\r\n            <div style={{ display: (this.state.placementData.interviewStatus === \"Placed\" || this.state.placementData.interviewStatus === \"Offer Not Taken\" ? \"block\" : \"none\") }}>\r\n              <Grid id=\"hideData\" container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <FormControl>\r\n                  </FormControl>\r\n                </Grid>\r\n                <br></br>\r\n                \r\n                {\r\n                  (this.state.placementData.interviewStatus === \"Offer Not Taken\") &&\r\n                  <Grid item xs={12} sm={3}>\r\n                    <SingleSelect name=\"reason\" id=\"reason\" label=\"Reason\"\r\n                      onChange={this.handleSelectChange.bind(this, 'reason')}\r\n                      value={this.state.placementData.reason || ''}\r\n                      options={this.state.offerNotTakenReason}\r\n                    />\r\n                  </Grid>\r\n\r\n                }\r\n                \r\n\r\n                <Grid item xs={12} sm={3}>\r\n                  <SingleSelect name=\"empId\" id=\"empId\" label=\"employerName\"\r\n                    onChange={this.handleSelectChange.bind(this, 'empId')}\r\n                    value={this.state.placementData.empId || ''}\r\n                    helperText={this.state.errors.empId}\r\n                    error={this.state.errors.empId === '' ? false : true}\r\n                    options={this.state.center}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={3}>\r\n                  <SingleSelect name=\"domainName\" id=\"domainName\" label=\"Domain\"\r\n                    onChange={this.handleSelectChange.bind(this, 'domainName')}\r\n                    value={this.state.placementData.domainName || ''}\r\n                    helperText={this.state.errors.domainName}\r\n                    error={this.state.errors.domainName === '' ? false : true}\r\n                    options={this.state.domains} />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={3} id=\"interviewRemark\">\r\n                  <FormControl>\r\n                    <TextField type=\"text\" name=\"spocName\" id=\"spocName\"\r\n                      label=\"supervisor/SPOC name employer\"\r\n                      onChange={this.handleInputChange}\r\n                      value={this.state.placementData.spocName || ''}\r\n                      helperText={this.state.errors.spocName}\r\n                      error={this.state.errors.spocName === '' ? false : true}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} sm={3} id=\"interviewRemark\">\r\n                  <FormControl>\r\n                    <TextField type=\"text\" name=\"designation\" id=\"designation\"\r\n                      label=\"Designation\"\r\n                      onChange={this.handleInputChange}\r\n                      value={this.state.placementData.designation || ''}\r\n                      helperText={this.state.errors.designation}\r\n                      error={this.state.errors.designation === '' ? false : true}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} sm={3} id=\"interviewRemark\">\r\n                  <FormControl>\r\n                    <TextField type=\"text\" name=\"spocPhoneNumber\" id=\"spocPhoneNumber\"\r\n                      label=\"SPOC phone NO.\"\r\n                      onInput={(e) => {\r\n                        e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 10)\r\n                      }}\r\n                      onChange={this.handleInputChange}\r\n                      value={this.state.placementData.spocPhoneNumber || ''}\r\n                      helperText={this.state.errors.spocPhoneNumber}\r\n                      error={this.state.errors.spocPhoneNumber === '' ? false : true}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                {/* <Grid item xs={12} sm={3} id = \"interviewDate\">\r\n         <TextField id=\"date\" name = \"interviewDate\" id = \"interviewDate\" onChange={this.handleInputChange}\r\n         label=\"InterView Date\" value={this.state.placementData.interviewDate || ''}\r\n         helperText = {this.state.errors.placementData != undefined ? this.state.errors.placementData.label : '' } \r\n        error = {this.state.errors.placementData != undefined ? this.state.errors.placementData.value : '' }\r\n         type=\"date\"\r\n         inputProps={{ max: new Date().toISOString().slice(0,10)}}\r\n         InputLabelProps={{\r\n           shrink: true,\r\n         }} />\r\n     </Grid> */}\r\n\r\n                {/* <Grid item xs={12} sm={3} id=\"interviewRemark\">\r\n          <FormControl>\r\n            <TextField type=\"text\" name=\"interviewRemark\" id=\"interviewRemark\"\r\n            label = \"Interview Remark\"\r\n            helperText = {this.state.errors.interviewRemark != undefined ? this.state.errors.interviewRemark.label : '' } \r\n            error = {this.state.errors.interviewRemark != undefined ? this.state.errors.interviewRemark.value : '' }\r\n            onChange={this.handleInputChange} value={this.state.placementData.interviewRemark || ''} />\r\n          </FormControl>\r\n        </Grid>\r\n      */}\r\n\r\n                {/* <Grid item xs={12} sm={3} id=\"monthlyGrossSal\">\r\n       <FormControl>\r\n         <TextField type=\"text\" name=\"monthlyGrossSal\" id=\"monthlyGrossSal\"\r\n         label = \"Salary\"\r\n         helperText = {this.state.errors.monthlyGrossSal != undefined ? this.state.errors.monthlyGrossSal.label : '' } \r\n         error = {this.state.errors.monthlyGrossSal != undefined ? this.state.errors.monthlyGrossSal.value : '' }\r\n         onChange={this.handleInputChange} value={this.state.placementData.monthlyGrossSal || ''}\r\n         onInput = {(e) =>{\r\n          e.target.value = Math.max(0, parseInt(e.target.value) ).toString().slice(0,5)\r\n      }}\r\n         \r\n         />\r\n       </FormControl>\r\n     </Grid> */}\r\n\r\n                <Grid item xs={12} sm={3} id=\"annualSal\">\r\n                  <FormControl>\r\n                    <TextField type=\"text\" name=\"annualSal\" id=\"annualSal\"\r\n                      label=\"Monthly Gross Salary\"\r\n                      helperText={this.state.errors.annualSal}\r\n                      error={this.state.errors.annualSal === '' ? false : true}\r\n                      onChange={this.handleInputChange} value={this.state.placementData.annualSal || ''}\r\n                      onInput={(e) => {\r\n                        e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 6)\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                {/* <Grid item xs={12} sm={3}>\r\n     <SingleSelect  name=\"studentStatus\" id=\"studentStatus\" label=\"Student Status\"\r\n     onChange={this.handleSelectChange.bind(this, 'studentStatus')}\r\n                            value={this.state.placementData.studentStatus || ''}\r\n                            helperText = {this.state.errors.studentStatus != undefined ? this.state.errors.studentStatus.label : '' } \r\n                            error = {this.state.errors.studentStatus != undefined ? this.state.errors.studentStatus.value : '' }\r\n                            options={this.state.studStatus} \r\n                            /> \r\n     </Grid>\r\n      */}\r\n                {/* <Grid item xs={12} sm={3} id=\"studentRemark\">\r\n       <FormControl>\r\n         <TextField type=\"text\" name=\"studentRemark\" id=\"studentRemark\" label = \"Student Remark\"\r\n         helperText = {this.state.errors.studentRemark != undefined ? this.state.errors.studentRemark.label : '' } \r\n         error = {this.state.errors.studentRemark != undefined ? this.state.errors.studentRemark.value : '' }\r\n         onChange={this.handleInputChange} value={this.state.placementData.studentRemark || ''}  />\r\n       </FormControl>\r\n     </Grid> */}\r\n\r\n                <Grid item xs={12} sm={3} id=\"offerDate\">\r\n                  <TextField id=\"date\" name=\"offerDate\" id=\"offerDate\" onChange={this.handleInputChange}\r\n                    label=\"Offer Date\" value={this.state.placementData.offerDate || ''}\r\n                    helperText={this.state.errors.offerDate}\r\n                    error={this.state.errors.offerDate === '' ? false : true}\r\n                    type=\"date\"\r\n                    inputProps={{ max: new Date().toISOString().slice(0, 10) }}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }} />\r\n\r\n                </Grid>\r\n\r\n                {/*removing joining date as per sudhakar's review comments */}\r\n                {/* <Grid item xs={12} sm={3} id = \"joiningDate\">\r\n         <TextField id=\"date\" name = \"joiningDate\" id = \"joiningDate\" onChange={this.handleInputChange}\r\n         label=\"Joining Date\" value={this.state.placementData.joiningDate || ''}\r\n         helperText = {this.state.errors.joiningDate} \r\n         error = {this.state.errors.joiningDate ===''?false:true}\r\n         type=\"date\"\r\n         inputProps={{ max: new Date().toISOString().slice(0,10)}}\r\n         InputLabelProps={{\r\n           shrink: true,\r\n         }} />\r\n\r\n     </Grid> */}\r\n\r\n                <Grid item xs={12} sm={3}>\r\n                  <SingleSelect name=\"joined\" id=\"joined\" label=\"Joined\"\r\n                    onChange={this.handleSelectChange.bind(this, 'joined')}\r\n                    value={this.state.placementData.joined || ''}\r\n                    options={this.state.join}\r\n                    helperText={this.state.errors.joined}\r\n                    error={this.state.errors.joined === '' ? false : true}\r\n\r\n                  />\r\n\r\n                </Grid>\r\n                \r\n                <Grid item xs={12} sm={3}>\r\n                  <SingleSelect name=\"accomodationProvided\" id=\"accomodationProvided\" label=\"Accomodation Provided\"\r\n                    onChange={this.handleSelectChange.bind(this, 'accomodationProvided')}\r\n                    value={this.state.placementData.accomodationProvided || ''}\r\n                    options={this.state.join}\r\n                    helperText={this.state.errors.joined}\r\n                    error={this.state.errors.joined === '' ? false : true}\r\n\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={3}>\r\n                  <SingleSelect name=\"foodProvided\" id=\"foodProvided\" label=\"Food Provided\"\r\n                    onChange={this.handleSelectChange.bind(this, 'foodProvided')}\r\n                    value={this.state.placementData.foodProvided || ''}\r\n                    options={this.state.join}\r\n                    helperText={this.state.errors.joined}\r\n                    error={this.state.errors.joined === '' ? false : true}\r\n\r\n                  />\r\n                </Grid>\r\n\r\n\r\n                <Grid item xs={12}>\r\n                  <FormControl>\r\n                    <h6 style={{ fontWeight: 'bold' }}>Job Location</h6>\r\n                  </FormControl>\r\n\r\n\r\n                </Grid>\r\n\r\n                <AddressForPlacement\r\n\r\n                  pincodeName=\"pincode\" pincodeId=\"pincode\" pincodeOnChange={this.getPincodeData.bind(this, 'pincode')} pincodeValue={this.state.address.pincode || ''} pincodeHelperText={this.state.errors.pincode} pincodeError={this.state.errors.pincode == '' ? false : true}\r\n                  villageName=\"villageName\" villageId=\"villageName\" villageInputValue={this.handleAddressSelectChange.bind(this, 'villageName')} villageData={this.state.village} villageValue={this.state.address.villageName || ''} villageHelperText={this.state.errors.village} villageError={this.state.errors.village == '' ? false : true}\r\n                  cityName=\"cityName\" cityId=\"cityName\" cityValue={this.state.address.cityName || ''} cityData={this.state.city} cityInputValue={this.handleAddressSelectChange.bind(this, 'cityName')} cityNameHelperText={this.state.errors.cityName} cityNameError={this.state.errors.cityName == '' ? false : true}\r\n                  stateName=\"state\" stateId=\"state\" stateData={this.state.state} stateValue={this.state.address.state || ''} stateInputValue={this.handleAddressSelectChange.bind(this, 'state')} stateHelperText={this.state.errors.state} stateError={this.state.errors.state == '' ? false : true}\r\n                  districtName=\"district\" districtId=\"district\" districtValue={this.state.address.district || ''} districtData={this.state.district} districtInputValue={this.handleAddressSelectChange.bind(this, 'district')} districtHelperText={this.state.errors.district} districtError={this.state.errors.district == '' ? false : true}\r\n                />\r\n\r\n                <Grid item xs={12} sm={6} >\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        onChange={this.handleCheckboxChange}\r\n                        name=\"isDocumentsUploaded\"\r\n                        color=\"primary\"\r\n                      />\r\n                    }\r\n                    label=\"I have uploaded appropriate Evidence\"\r\n                  />\r\n\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        onChange={this.handleCheckboxChange}\r\n                        name=\"isConsentProvided\"\r\n                        color=\"primary\"\r\n                      />\r\n                    }\r\n                    label=\"Have gone though the placement evidence and Authentic for both data and evidence\"\r\n                  />\r\n\r\n\r\n                </Grid>\r\n\r\n\r\n                <br />\r\n\r\n\r\n              </Grid>\r\n\r\n            </div>\r\n\r\n            <div id=\"notPlaced\" style={{ display: (this.state.placementData.interviewStatus === \"Not Placed\" ? \"block\" : \"none\") }}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <FormControl>\r\n                  </FormControl>\r\n                </Grid>\r\n                <br></br>\r\n                <Grid item xs={12} sm={3}>\r\n                  <SingleSelect name=\"reason\" id=\"reason\" label=\"Reason\"\r\n                    onChange={this.handleSelectChange.bind(this, 'reason')}\r\n                    value={this.state.placementData.reason || ''}\r\n                    options={this.state.notPlacedReasons}\r\n                    helperText={this.state.errors.reason}\r\n                    error={this.state.errors.reason === '' ? false : true}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n\r\n            <div id=\"notInterested\" style={{ display: (this.state.placementData.interviewStatus === \"Not Interested\" ? \"block\" : \"none\") }}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <FormControl>\r\n                  </FormControl>\r\n                </Grid>\r\n                <br></br>\r\n                <Grid item xs={12} sm={3}>\r\n                  <SingleSelect name=\"reason\" id=\"reason\" label=\"Reason\"\r\n                    onChange={this.handleSelectChange.bind(this, 'reason')}\r\n                    value={this.state.placementData.reason || ''}\r\n                    options={this.state.notInterestedReason}\r\n                    helperText={this.state.errors.reason}\r\n                    error={this.state.errors.reason === '' ? false : true}\r\n                  />\r\n\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                  {\r\n                      (this.state.placementData.reason == \"family issue\") && <FormControlLabel\r\n                        //incase only family issue\r\n                        control={\r\n                          <Checkbox\r\n                            onChange={this.handleCheckboxChange}\r\n                            name=\"isFamilyConsentProvided\"\r\n                            color=\"primary\"\r\n                          />\r\n                        } \r\n                        label=\"Spoken to parents/ guardian \"\r\n                      />\r\n                  }\r\n                \r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n\r\n            <div id=\"entrepreneurship\" style={{ display: (this.state.placementData.interviewStatus === \"Entrepreneurship\" ? \"block\" : \"none\") }}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <FormControl>\r\n                  </FormControl>\r\n                </Grid>\r\n                <br></br>\r\n\r\n                <Grid item xs={12} sm={3}>\r\n                  <SingleSelect name=\"domainName\" id=\"domainName\" label=\"Domain\"\r\n                    onChange={this.handleSelectChange.bind(this, 'domainName')}\r\n                    value={this.state.placementData.domainName || ''}\r\n                    options={this.state.domains} />\r\n                </Grid>\r\n                <Grid item xs={12} sm={3} id=\"studentRemark\">\r\n                  <FormControl>\r\n                    <TextField type=\"text\" name=\"noOfPeopleEmployed\" id=\"noOfPeopleEmployed\" label=\"No. of people employed\"\r\n                      helperText={this.state.errors.noOfPeopleEmployed}\r\n                      error={this.state.errors.noOfPeopleEmployed === '' ? false : true}\r\n                      onChange={this.handleInputChange} value={this.state.placementData.noOfPeopleEmployed || ''}\r\n                      onInput={(e) => {\r\n                        e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 10)\r\n                      }} />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControl>\r\n                    <h6 style={{ fontWeight: 'bold' }}>Job Location</h6>\r\n                  </FormControl>\r\n                </Grid>\r\n                <AddressForPlacement\r\n                  pincodeName=\"pincode\" pincodeId=\"pincode\" pincodeOnChange={this.getPincodeData.bind(this, 'pincode')} pincodeValue={this.state.address.pincode || ''} pincodeHelperText={this.state.errors.pincode} pincodeError={this.state.errors.pincode == '' ? false : true}\r\n                  villageName=\"villageName\" villageId=\"villageName\" villageInputValue={this.handleAddressSelectChange.bind(this, 'villageName')} villageData={this.state.village} villageValue={this.state.address.villageName || ''} villageHelperText={this.state.errors.village} villageError={this.state.errors.village == '' ? false : true}\r\n                  cityName=\"cityName\" cityId=\"cityName\" cityValue={this.state.address.cityName || ''} cityData={this.state.city} cityInputValue={this.handleAddressSelectChange.bind(this, 'cityName')} cityNameHelperText={this.state.errors.cityName} cityNameError={this.state.errors.cityName == '' ? false : true}\r\n                  stateName=\"stateName\" stateId=\"stateName\" stateData={this.state.state} stateValue={this.state.address.state || ''} stateInputValue={this.handleAddressSelectChange.bind(this, 'state')} stateHelperText={this.state.errors.state} stateError={this.state.errors.state == '' ? false : true}\r\n                  districtName=\"district\" districtId=\"district\" districtValue={this.state.address.district || ''} districtData={this.state.district} districtInputValue={this.handleAddressSelectChange.bind(this, 'district')} districtHelperText={this.state.errors.district} districtError={this.state.errors.district == '' ? false : true}\r\n                />\r\n\r\n                <Grid item xs={12} sm={6} >\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        onChange={this.handleCheckboxChange}\r\n                        name=\"isDocumentsUploaded\"\r\n                        color=\"primary\"\r\n                      />\r\n                    }\r\n                    label=\"I have uploaded appropriate Evidence\"\r\n                  />\r\n                </Grid>\r\n                <br />\r\n\r\n\r\n              </Grid>\r\n\r\n\r\n            </div>\r\n\r\n            <div id=\"selfemployedform\" style={{ display: (this.state.placementData.interviewStatus === \"Self Employed\" ? \"block\" : \"none\") }}>\r\n\r\n            </div>\r\n\r\n\r\n\r\n            <div style={{ display: (this.state.placementData.interviewStatus === \"Rejected\" ? \"block\" : \"none\") }}>\r\n              <Grid id=\"hideData\" container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <FormControl>\r\n                  </FormControl>\r\n                </Grid>\r\n                <br></br>\r\n\r\n                <Grid item xs={12} sm={3}>\r\n                  <SingleSelect name=\"empId\" id=\"empId\" label=\"employerName\"\r\n                    onChange={this.handleSelectChange.bind(this, 'empId')}\r\n                    value={this.state.placementData.empId || ''}\r\n                    helperText={this.state.errors.empId}\r\n                    error={this.state.errors.empId === '' ? false : true}\r\n                    options={this.state.center}\r\n                  />\r\n\r\n                </Grid>\r\n\r\n              </Grid>\r\n\r\n            </div>\r\n\r\n\r\n\r\n            {button}\r\n          </fieldset>\r\n        </form>\r\n        <form onSubmit={this.uploadDocuments} method=\"post\">\r\n          <Table aria-label=\"simple table\" style={{ width: \"100%\" }}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell style={{ width: \"25%\" }}>Type of Document</TableCell>\r\n\r\n                <TableCell style={{ width: \"20%\" }}>Browse and Upload</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <TableRow >\r\n                <TableCell >\r\n\r\n                  <SingleSelect isClearable={true}\r\n                    name=\"typeOfDocument\" id=\"typeOfDocument\"\r\n                    options={this.state.typeOfDocumentData}\r\n                    onChange={this.handleSelectChangeDoc.bind(this, 'typeOfDocument')}\r\n                    value={this.state.typeOfDocument || ''}\r\n                  />\r\n                </TableCell>\r\n\r\n                <TableCell>\r\n                  <DropzoneArea\r\n                    name=\"file\" id=\"file\"\r\n                    maxFileSize={2000000} filesLimit={1} showFileNames={true}\r\n                    onChange={this.onFileChangeHandler}\r\n                  // key={this.state.clearDropzoneArea}\r\n                  />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n          <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"flex-end\">\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" size=\"small\"\r\n              disabled={this.state.file == null || this.state.typeOfDocument == '' ? true : false}\r\n            >Upload Document</Button>\r\n          </Grid>\r\n        </form>\r\n\r\n\r\n\r\n        <br></br>\r\n        <MUIDataTable id=\"dtb\" title={\"List Of Placement Details\"} label={\"List of Placement Details \"} columns={columns} data={this.state.info} options={options}\r\n        />\r\n\r\n\r\n        {\r\n          (this.state.documents != \"\") &&\r\n\r\n          <Paper>\r\n            <Table aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Created On</TableCell>\r\n                  <TableCell>Document Name</TableCell>\r\n                  <TableCell>File Name</TableCell>\r\n                  <TableCell >Download</TableCell>\r\n                  <TableCell >Delete</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {this.state.documents.map(row => (\r\n                  <TableRow key={row.basicDocId}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n\r\n                      {row.createdOn}\r\n                    </TableCell>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.documentName}\r\n                    </TableCell>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.documentPath.split(\"/\")[1]}\r\n                    </TableCell>\r\n                    <TableCell >\r\n                      <Button variant=\"contained\" color=\"primary\" size=\"small\" name=\"download\" id=\"download\"\r\n\r\n                        onClick={this.downloadDocuments.bind(this, row.basicDocId)}\r\n                      >Download</Button>\r\n                    </TableCell>\r\n\r\n                    <TableCell >\r\n                      <Button variant=\"contained\" color=\"primary\" size=\"small\" name=\"delete\" id=\"delete\"\r\n                        onClick={this.deleteDocument.bind(this, row.basicDocId)}\r\n                      >Delete</Button>\r\n                    </TableCell>\r\n\r\n\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </Paper>\r\n\r\n\r\n        }\r\n\r\n        {\r\n          (this.state.alertDialogFlag) && <AlertDialog message={alertDialogOptions.message}></AlertDialog>\r\n        }\r\n\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default PlacementDetails;"]},"metadata":{},"sourceType":"module"}