{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tata_Strive\\\\WebApplication\\\\digiHub\\\\trunk\\\\digiHubWeb\\\\src\\\\views\\\\Attendance.js\";\nimport React, { Component } from 'react';\nimport { Checkbox, FormControl, InputLabel, Input, Grid, TextField, Button } from '@material-ui/core';\nimport UserContext from '../components/GolbalContext';\nimport { saveAttendanceDetails, fetchAllStudentDataByEngagementId, fetchCentersDetails, fetchCentersOfUser, fetchRunningBatchDetails, fetchAttendanceDetailsByAttendanceDateAndBatchId, fetchEnrollmentDetailsByBatchId, fetchBatchDetailsByBatchId } from './../util/api';\nimport AlertDialog from './../util/AlertDialog';\nimport { SingleSelect } from \"react-select-material-ui\";\nconst alertDialogOptions = {\n  message: ''\n};\nexport default class Attendance extends Component {\n  constructor(props) {\n    super(props);\n\n    this.saveAttendaces = event => {\n      let studentData = [];\n      var batchId = this.state.batchId;\n      var attendanceDate = this.state.attendanceDate;\n      var attendanceDetails = [...this.state.attendanceDetails];\n      attendanceDetails.forEach(attendanceDetail => {\n        studentData.push({\n          attendanceMechanism: 'E',\n          createdBy: attendanceDetail.createdBy,\n          id: attendanceDetail.id,\n          batchId: batchId,\n          attendanceDate: attendanceDate,\n          name: attendanceDetail.name,\n          status: attendanceDetail.status,\n          engagementId: attendanceDetail.engagementId,\n          updatedBy: UserContext.userid\n        });\n      });\n      this.setState({\n        attendanceDetails: []\n      }, () => {\n        this.setState({\n          attendanceDetails: studentData\n        }, () => {\n          saveAttendanceDetails(JSON.stringify(this.state.attendanceDetails)).then(jsondata => {\n            this.setState({\n              alertDialogFlag: false\n            });\n            alertDialogOptions.message = \"Data Saved Sucessfully\";\n            this.setState({\n              alertDialogFlag: true\n            });\n            this.setState({\n              notSubmit: true\n            });\n          });\n        });\n      });\n    };\n\n    this.state = {\n      center: [],\n      batchId: \"\",\n      batchs: [],\n      attendanceDate: \"\",\n      attendanceDetails: [],\n      startDate: \"\",\n      endDate: \"\",\n      notSubmit: false\n    };\n    let centerId = [];\n    let currentComponent = this;\n    fetchCentersOfUser(UserContext.userid).then(jsondata => {\n      let userJsonObjects = JSON.parse(jsondata.data);\n      currentComponent.setState({\n        userScope: userJsonObjects\n      });\n      userJsonObjects.forEach(user => {\n        centerId.push({\n          \"id\": user.centerId\n        });\n      });\n    }).then(function (result) {\n      let centerDetails = [];\n      fetchCentersDetails(JSON.stringify(centerId)).then(jsondata => {\n        let centerObjects = JSON.parse(jsondata.data);\n        centerObjects.forEach(center => {\n          centerDetails.push({\n            label: center.name,\n            value: center.id\n          });\n        });\n        currentComponent.setState({\n          center: centerDetails\n        });\n      });\n    });\n  }\n\n  handleCenterChange(selectname, event) {\n    this.setState({\n      [selectname]: event\n    });\n    this.setState({\n      batchId: \"\"\n    });\n    this.setState({\n      attendanceDetails: []\n    });\n    fetchRunningBatchDetails(event).then(jsondata => {\n      let studentInfo = [];\n      let batchDetails = JSON.parse(jsondata.data);\n\n      for (var i = 0; i < batchDetails.length; i++) {\n        var details = {\n          'value': batchDetails[i].batchId,\n          'label': batchDetails[i].batchName\n        };\n        studentInfo.push(details);\n      }\n\n      this.setState({\n        batchs: studentInfo\n      });\n    });\n  }\n\n  handleBatchChange(selectname, event) {\n    this.setState({\n      [selectname]: event\n    });\n    fetchBatchDetailsByBatchId(event).then(jsondata => {\n      let batchObject = JSON.parse(jsondata.data);\n      var previousDate = new Date();\n      previousDate.setDate(previousDate.getDate() - 3);\n      var previousmonth = previousDate.getMonth() + 1;\n      var previousday = previousDate.getDate();\n      var previousyear = previousDate.getFullYear();\n      let startDate = previousyear + \"-\" + ('0' + previousmonth).slice(-2) + \"-\" + ('0' + previousday).slice(-2);\n      var currentDate = new Date();\n      var month = currentDate.getMonth() + 1;\n      var day = currentDate.getDate();\n      var year = currentDate.getFullYear();\n      let endDate = year + \"-\" + ('0' + month).slice(-2) + \"-\" + ('0' + day).slice(-2);\n      this.setState({\n        startDate: startDate\n      });\n      this.setState({\n        endDate: endDate\n      });\n    });\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n    this.setState({\n      notSubmit: false\n    });\n    let currentComponent = this;\n    fetchAttendanceDetailsByAttendanceDateAndBatchId(this.state.batchId, value).then(jsondata => {\n      let studentData = [];\n      let objects = JSON.parse(jsondata.data);\n\n      if (objects.length != 0) {\n        objects.forEach(object => {\n          let engagementIds = [];\n          engagementIds.push({\n            engagementId: object.engagementId\n          });\n          let status = object.status;\n          let engagementId = object.engagementId;\n          let id = object.id;\n          let attendanceDate = object.attendanceDate;\n          let batchId = object.batchId;\n          let createdBy = object.createdBy;\n          fetchAllStudentDataByEngagementId(JSON.stringify(engagementIds)).then(jsondata => {\n            let studentObjects = JSON.parse(jsondata.data);\n            studentData.push({\n              attendanceMechanism: 'E',\n              updatedBy: 0,\n              createdBy: createdBy,\n              batchId: batchId,\n              attendanceDate: attendanceDate,\n              id: id,\n              name: studentObjects[0].firstName + \"\" + studentObjects[0].lastName,\n              status: status,\n              engagementId: engagementId\n            });\n          }).then(function (result) {\n            currentComponent.setState({\n              attendanceDetails: []\n            }, () => {\n              currentComponent.setState({\n                attendanceDetails: studentData\n              });\n            });\n          });\n        });\n      } else {\n        fetchEnrollmentDetailsByBatchId(this.state.batchId).then(jsondata => {\n          let objects = JSON.parse(jsondata.data);\n          objects.forEach(object => {\n            let engagementIds = [];\n            engagementIds.push({\n              engagementId: object.engagementId\n            });\n            let status = object.status;\n            let engagementId = object.engagementId;\n            fetchAllStudentDataByEngagementId(JSON.stringify(engagementIds)).then(jsondata => {\n              let studentObjects = JSON.parse(jsondata.data);\n              studentData.push({\n                attendanceMechanism: 'E',\n                updatedBy: 0,\n                createdBy: UserContext.userid,\n                id: 0,\n                batchId: 0,\n                attendanceDate: \"\",\n                name: studentObjects[0].firstName + \"\" + studentObjects[0].lastName,\n                status: \"A\",\n                engagementId: engagementId\n              });\n            }).then(function (result) {\n              currentComponent.setState({\n                attendanceDetails: []\n              }, () => {\n                currentComponent.setState({\n                  attendanceDetails: studentData\n                });\n              });\n            });\n          });\n        });\n      }\n    });\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    var attendanceDetails = [...this.state.attendanceDetails];\n    var index = attendanceDetails.findIndex(obj => obj.engagementId == name);\n\n    if (attendanceDetails[index].status === \"P\") {\n      attendanceDetails[index].status = \"A\";\n      attendanceDetails[index].batchId = this.state.batchId;\n      attendanceDetails[index].attendanceDate = this.state.attendanceDate;\n    } else {\n      attendanceDetails[index].status = \"P\";\n      attendanceDetails[index].batchId = this.state.batchId;\n      attendanceDetails[index].attendanceDate = this.state.attendanceDate;\n    }\n\n    this.setState({\n      attendanceDetails\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }, \"Center Name\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"centerName\",\n      id: \"centerName\",\n      options: this.state.center,\n      onChange: this.handleCenterChange.bind(this, 'centerId'),\n      value: this.state.centerId || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      shrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }\n    }, \"Batch Name\"), /*#__PURE__*/React.createElement(SingleSelect, {\n      name: \"batchId\",\n      id: \"batchId\",\n      options: this.state.batchs,\n      onChange: this.handleBatchChange.bind(this, 'batchId'),\n      value: this.state.batchId || '',\n      key: this.state.batchId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"attendanceDate\",\n      name: \"attendanceDate\",\n      id: \"attendanceDate\",\n      label: \"Attendance Date\",\n      type: \"date\",\n      onChange: this.handleInputChange.bind(this),\n      inputProps: {\n        min: this.state.startDate.toString(),\n        max: this.state.endDate.toString()\n      },\n      InputLabelProps: {\n        shrink: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"table\", {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 5\n      }\n    }, \"Action\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 5\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 5\n      }\n    }, \"Engagement Id\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 5\n      }\n    }, \"Status\")), this.state.attendanceDetails.map(row => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      checked: row.status === \"P\" ? true : false,\n      onChange: this.handleChange.bind(this),\n      name: row.engagementId,\n      value: row.engagementId,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 5\n      }\n    }, row.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 5\n      }\n    }, row.engagementId), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 5\n      }\n    }, row.status)))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-end\",\n      alignItems: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      disabled: this.state.attendanceDetails.length == 0 ? true : this.state.notSubmit == true ? true : false,\n      variant: \"contained\",\n      size: \"small\",\n      color: \"primary\",\n      onClick: this.saveAttendaces,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 5\n      }\n    }, \"Save\")), this.state.alertDialogFlag && /*#__PURE__*/React.createElement(AlertDialog, {\n      message: alertDialogOptions.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 37\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["D:/Tata_Strive/WebApplication/digiHub/trunk/digiHubWeb/src/views/Attendance.js"],"names":["React","Component","Checkbox","FormControl","InputLabel","Input","Grid","TextField","Button","UserContext","saveAttendanceDetails","fetchAllStudentDataByEngagementId","fetchCentersDetails","fetchCentersOfUser","fetchRunningBatchDetails","fetchAttendanceDetailsByAttendanceDateAndBatchId","fetchEnrollmentDetailsByBatchId","fetchBatchDetailsByBatchId","AlertDialog","SingleSelect","alertDialogOptions","message","Attendance","constructor","props","saveAttendaces","event","studentData","batchId","state","attendanceDate","attendanceDetails","forEach","attendanceDetail","push","attendanceMechanism","createdBy","id","name","status","engagementId","updatedBy","userid","setState","JSON","stringify","then","jsondata","alertDialogFlag","notSubmit","center","batchs","startDate","endDate","centerId","currentComponent","userJsonObjects","parse","data","userScope","user","result","centerDetails","centerObjects","label","value","handleCenterChange","selectname","studentInfo","batchDetails","i","length","details","batchName","handleBatchChange","batchObject","previousDate","Date","setDate","getDate","previousmonth","getMonth","previousday","previousyear","getFullYear","slice","currentDate","month","day","year","handleInputChange","target","objects","object","engagementIds","studentObjects","firstName","lastName","handleChange","index","findIndex","obj","render","width","bind","min","toString","max","shrink","map","row"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Checkbox ,FormControl , InputLabel, Input, Grid , TextField,Button}  from '@material-ui/core';\r\nimport UserContext from '../components/GolbalContext'\r\nimport {saveAttendanceDetails,fetchAllStudentDataByEngagementId,fetchCentersDetails,fetchCentersOfUser,fetchRunningBatchDetails,fetchAttendanceDetailsByAttendanceDateAndBatchId,\r\n  fetchEnrollmentDetailsByBatchId,fetchBatchDetailsByBatchId} from './../util/api';\r\nimport AlertDialog from './../util/AlertDialog';\r\nimport { SingleSelect } from \"react-select-material-ui\";\r\nconst alertDialogOptions = {\r\n    message: ''\r\n  }\r\nexport default class Attendance extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {center: [],batchId:\"\",batchs:[],attendanceDate:\"\",attendanceDetails:[],\r\n                      startDate:\"\",endDate:\"\",notSubmit:false};\r\n        let centerId = [];\r\n    let currentComponent = this;\r\n    fetchCentersOfUser(UserContext.userid).then((jsondata) => {\r\n      let userJsonObjects = JSON.parse(jsondata.data);\r\n      currentComponent.setState({ userScope: userJsonObjects });\r\n      userJsonObjects.forEach(user => {\r\n        centerId.push({ \"id\": user.centerId });\r\n      })\r\n    }).then(function (result) {\r\n      let centerDetails = [];\r\n      fetchCentersDetails(JSON.stringify(centerId)).then((jsondata) => {\r\n        let centerObjects = JSON.parse(jsondata.data);\r\n        centerObjects.forEach(center => {\r\n          centerDetails.push({ label: center.name, value: center.id });\r\n        })\r\n        currentComponent.setState({ center: centerDetails });\r\n      });\r\n    })       \r\n    }\r\n    handleCenterChange(selectname, event) {\r\n      this.setState({[selectname]:event});\r\n      this.setState({batchId:\"\"});\r\n      this.setState({attendanceDetails: []});\r\n      fetchRunningBatchDetails(event).then((jsondata)=>{    \r\n          let studentInfo=[];\r\n        let  batchDetails = JSON.parse(jsondata.data);  \r\n              for(var i=0;i<batchDetails.length;i++){\r\n              var  details =\r\n              {    \r\n                'value':batchDetails[i].batchId,\r\n                'label':batchDetails[i].batchName            \r\n              }; \r\n              studentInfo.push(details);    \r\n          }    \r\n          this.setState({batchs: studentInfo });\r\n       }) \r\n    }\r\n    handleBatchChange(selectname,event) {\r\n        this.setState({[selectname]:event});\r\n        fetchBatchDetailsByBatchId(event).then((jsondata) => {\r\n          let batchObject = JSON.parse(jsondata.data);\r\n          var previousDate = new Date();\r\n          previousDate.setDate(previousDate.getDate()-3);\r\n\r\n          var  previousmonth = (previousDate .getMonth() + 1);\r\n          var  previousday = (previousDate .getDate());\r\n          var  previousyear = (previousDate .getFullYear());\r\n          let startDate= previousyear + \"-\" + ('0' + previousmonth).slice(-2) + \"-\" + ('0' + previousday).slice(-2);\r\n        \r\n\r\n         var currentDate = new Date();\r\n         var  month = (currentDate .getMonth() + 1);\r\n         var  day = (currentDate .getDate());\r\n         var year = (currentDate .getFullYear());\r\n         let endDate= year + \"-\" + ('0' + month).slice(-2) + \"-\" + ('0' + day).slice(-2);\r\n        \r\n\r\n          this.setState({startDate:startDate});\r\n          this.setState({endDate:endDate});\r\n        })\r\n    }\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        this.setState({[name]: value})\r\n        this.setState({notSubmit:false});\r\n        let currentComponent = this;\r\n       fetchAttendanceDetailsByAttendanceDateAndBatchId(this.state.batchId,value).then((jsondata) => {\r\n            let studentData =[];\r\n            let objects = JSON.parse(jsondata.data);\r\n          if(objects.length!=0){            \r\n            objects.forEach(object => {\r\n              let  engagementIds=[];\r\n              engagementIds.push({ engagementId: object.engagementId });\r\n              let  status=object.status;\r\n              let  engagementId=object.engagementId;\r\n              let  id=object.id;\r\n              let  attendanceDate=object.attendanceDate;\r\n              let  batchId=object.batchId;\r\n              let  createdBy=object.createdBy;\r\n              fetchAllStudentDataByEngagementId(JSON.stringify(engagementIds)).then((jsondata) => {\r\n                let studentObjects = JSON.parse(jsondata.data);\r\n                studentData.push({attendanceMechanism:'E',updatedBy:0,createdBy:createdBy,batchId: batchId,attendanceDate: attendanceDate,id: id, name: studentObjects[0].firstName+\"\"+studentObjects[0].lastName, status: status,engagementId:engagementId});\r\n              }).then(function(result){\r\n                currentComponent.setState({attendanceDetails: []},()=>{\r\n                    currentComponent.setState({attendanceDetails:studentData});\r\n                });\r\n              });\r\n              })\r\n            }\r\n              else {\r\n              fetchEnrollmentDetailsByBatchId(this.state.batchId).then((jsondata) => {\r\n                let objects = JSON.parse(jsondata.data);\r\n                objects.forEach(object => {\r\n                  let  engagementIds=[];\r\n                  engagementIds.push({ engagementId: object.engagementId });\r\n                  let  status=object.status;\r\n                  let  engagementId=object.engagementId;\r\n                  fetchAllStudentDataByEngagementId(JSON.stringify(engagementIds)).then((jsondata) => {\r\n                    let studentObjects = JSON.parse(jsondata.data);\r\n                    studentData.push({attendanceMechanism:'E',updatedBy:0,createdBy:UserContext.userid,id:0,batchId: 0,attendanceDate: \"\",name: studentObjects[0].firstName+\"\"+studentObjects[0].lastName, status:\"A\",engagementId:engagementId});\r\n                  }).then(function(result){\r\n                    currentComponent.setState({attendanceDetails: []},()=>{\r\n                        currentComponent.setState({attendanceDetails:studentData});\r\n                    });\r\n                  });\r\n                  })\r\n\r\n              })\r\n            }\r\n          });     \r\n      }\r\n\r\n      handleChange(event) {\r\n        const target = event.target;\r\n        const value =  target.value;\r\n        const name = target.name;\r\n        var attendanceDetails = [...this.state.attendanceDetails];\r\n        \r\n              var index = attendanceDetails.findIndex(obj => obj.engagementId == name);\r\n              if(attendanceDetails[index].status===\"P\"){\r\n               attendanceDetails[index].status =\"A\";\r\n               attendanceDetails[index].batchId =this.state.batchId;\r\n               attendanceDetails[index].attendanceDate =this.state.attendanceDate;\r\n             }\r\n     else {\r\n       attendanceDetails[index].status =\"P\";\r\n       attendanceDetails[index].batchId =this.state.batchId;\r\n       attendanceDetails[index].attendanceDate =this.state.attendanceDate;\r\n     }       \r\n             this.setState({attendanceDetails});\r\n     }\r\n\r\nsaveAttendaces = (event) => {\r\n  let studentData =[];\r\n  var batchId =this.state.batchId;\r\n  var attendanceDate =this.state.attendanceDate;\r\n  var attendanceDetails = [...this.state.attendanceDetails];\r\n  attendanceDetails.forEach(attendanceDetail => {\r\n    studentData.push({attendanceMechanism:'E',createdBy:attendanceDetail.createdBy,id:attendanceDetail.id,batchId: batchId,attendanceDate: attendanceDate,name:attendanceDetail.name, status:attendanceDetail.status,engagementId:attendanceDetail.engagementId,updatedBy:UserContext.userid});    \r\n  })\r\n  this.setState({attendanceDetails: []},()=>{\r\n    this.setState({attendanceDetails:studentData},()=>{\r\n      saveAttendanceDetails(JSON.stringify(this.state.attendanceDetails)).then((jsondata)=>{ \r\n        this.setState({alertDialogFlag:false});   \r\n        alertDialogOptions.message=\"Data Saved Sucessfully\";\r\n        this.setState({alertDialogFlag:true});\r\n        this.setState({notSubmit:true});\r\n     }) \r\n    });\r\n  });\r\n}\r\n\r\n\r\n  render(){\r\n  return(\r\n  <div style = {{ width : '100%' }}>\r\n      {/* <form  method=\"post\"> */}\r\n       <Grid container spacing={2}>\r\n      <Grid item xs={12}>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n                <InputLabel shrink={true} >Center Name</InputLabel>\r\n                <SingleSelect \r\n                  name=\"centerName\" id=\"centerName\"\r\n                  options={this.state.center}\r\n                  onChange={this.handleCenterChange.bind(this, 'centerId')}\r\n                  value={this.state.centerId || '' } />\r\n              </Grid>\r\n  \r\n          <Grid item xs={4}>\r\n          <InputLabel shrink={true} >Batch Name</InputLabel>\r\n            <SingleSelect \r\n                  name=\"batchId\" id=\"batchId\"\r\n                  options={this.state.batchs}\r\n                  onChange={this.handleBatchChange.bind(this, 'batchId')}\r\n                  value={this.state.batchId || '' } \r\n                  key={this.state.batchId}\r\n                  />\r\n          </Grid> \r\n          <Grid item xs={12} sm={3}>\r\n              <TextField id=\"attendanceDate\" name=\"attendanceDate\" id=\"attendanceDate\"\r\n                label=\"Attendance Date\"\r\n                type=\"date\"\r\n                onChange={this.handleInputChange.bind(this)}\r\n                inputProps={{\r\n                 min: this.state.startDate.toString(), max: this.state.endDate.toString()\r\n                }} \r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }} \r\n                />\r\n            </Grid>\r\n        </Grid>\r\n\r\n        <br/><br/>\r\n        <table style = {{ width : '100%' }}>\r\n  <tr>\r\n    <th>Action</th>\r\n    <th>Name</th>\r\n    <th>Engagement Id</th>\r\n    <th>Status</th>\r\n  </tr>\r\n\r\n  \r\n  {this.state.attendanceDetails.map(row => (\r\n    <tr>\r\n    <td><Checkbox\r\n            checked={row.status===\"P\"?true:false}\r\n            onChange={this.handleChange.bind(this)}\r\n            name={row.engagementId}\r\n            value={row.engagementId}\r\n            color=\"primary\"\r\n          /></td>\r\n    <td>{row.name}</td>\r\n    <td>{row.engagementId}</td>\r\n    <td>{row.status}</td>\r\n  </tr>\r\n))}\r\n</table>\r\n    <br/>    \r\n    <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"flex-end\">\r\n    <Button disabled={this.state.attendanceDetails.length==0?true:this.state.notSubmit==true?true:false} variant=\"contained\"  size=\"small\" color=\"primary\" onClick={this.saveAttendaces}>Save</Button> \r\n        </Grid>\r\n        \r\n          {/* </form> */}\r\n          { \r\n    (this.state.alertDialogFlag) && <AlertDialog   message={alertDialogOptions.message}></AlertDialog>\r\n      }\r\n          </div>\r\n\r\n          \r\n  )\r\n\r\n  }  \r\n  \r\n}"]},"metadata":{},"sourceType":"module"}